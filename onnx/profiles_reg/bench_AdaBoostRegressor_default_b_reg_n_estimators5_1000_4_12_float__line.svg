<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1622" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1605.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1605.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.12%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(219,110,8)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(207,113,25)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(214,70,14)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(231,44,5)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(226,203,46)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(214,66,19)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(206,199,17)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(221,115,28)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.12%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(245,178,49)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="10" y="516" width="1" height="15" fill="rgb(213,15,19)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="532" width="1" height="15" fill="rgb(224,42,6)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="548" width="1" height="15" fill="rgb(217,160,50)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="564" width="1" height="15" fill="rgb(235,14,30)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="580" width="1" height="15" fill="rgb(234,67,8)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="596" width="1" height="15" fill="rgb(227,215,38)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="612" width="1" height="15" fill="rgb(232,77,32)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.12%)</title><rect x="10" y="628" width="1" height="15" fill="rgb(214,226,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="644" width="1" height="15" fill="rgb(249,204,21)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="10" y="660" width="1" height="15" fill="rgb(241,4,1)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="676" width="1" height="15" fill="rgb(219,177,47)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="692" width="1" height="15" fill="rgb(225,109,17)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="708" width="1" height="15" fill="rgb(220,42,16)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="724" width="1" height="15" fill="rgb(209,200,52)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="740" width="1" height="15" fill="rgb(222,47,15)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="756" width="1" height="15" fill="rgb(228,80,37)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.12%)</title><rect x="10" y="772" width="1" height="15" fill="rgb(225,38,14)"/><text x="13.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="10" y="788" width="1" height="15" fill="rgb(206,221,47)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="804" width="1" height="15" fill="rgb(225,67,37)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="820" width="1" height="15" fill="rgb(212,38,6)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="836" width="1" height="15" fill="rgb(210,70,39)"/><text x="13.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="852" width="1" height="15" fill="rgb(213,39,54)"/><text x="13.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(239,105,38)"/><text x="13.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(213,147,29)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:26) (1 samples, 0.12%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(210,70,32)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(223,122,43)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(238,8,2)"/><text x="13.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(209,208,1)"/><text x="13.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(239,75,39)"/><text x="13.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(228,163,40)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py:1604) (1 samples, 0.12%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(225,221,50)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(240,184,7)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(233,32,20)"/><text x="13.00" y="1038.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.24%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(213,137,24)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.24%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(227,45,16)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(253,114,39)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(238,136,37)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(247,224,15)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(254,226,10)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(230,130,32)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(247,129,51)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.12%)</title><rect x="11" y="372" width="1" height="15" fill="rgb(236,59,43)"/><text x="14.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="11" y="388" width="1" height="15" fill="rgb(217,14,19)"/><text x="14.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="11" y="404" width="1" height="15" fill="rgb(207,190,42)"/><text x="14.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="11" y="420" width="1" height="15" fill="rgb(249,96,13)"/><text x="14.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="11" y="436" width="1" height="15" fill="rgb(228,144,30)"/><text x="14.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="11" y="452" width="1" height="15" fill="rgb(207,170,52)"/><text x="14.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="11" y="468" width="1" height="15" fill="rgb(210,27,47)"/><text x="14.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="11" y="484" width="1" height="15" fill="rgb(243,216,31)"/><text x="14.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:224) (1 samples, 0.12%)</title><rect x="11" y="500" width="1" height="15" fill="rgb(206,76,7)"/><text x="14.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:156) (1 samples, 0.12%)</title><rect x="11" y="516" width="1" height="15" fill="rgb(215,68,7)"/><text x="14.00" y="526.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py:74) (1 samples, 0.12%)</title><rect x="11" y="532" width="1" height="15" fill="rgb(247,221,6)"/><text x="14.00" y="542.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:1) (3 samples, 0.35%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(254,174,31)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(229,81,34)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(222,79,22)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(254,42,21)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(251,132,19)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(231,163,4)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.12%)</title><rect x="12" y="244" width="2" height="15" fill="rgb(225,97,32)"/><text x="15.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="12" y="260" width="2" height="15" fill="rgb(247,130,13)"/><text x="15.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="12" y="276" width="2" height="15" fill="rgb(205,18,22)"/><text x="15.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="12" y="292" width="2" height="15" fill="rgb(222,182,12)"/><text x="15.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="12" y="308" width="2" height="15" fill="rgb(239,1,9)"/><text x="15.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="12" y="324" width="2" height="15" fill="rgb(252,93,4)"/><text x="15.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.12%)</title><rect x="12" y="340" width="2" height="15" fill="rgb(244,99,16)"/><text x="15.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="12" y="356" width="2" height="15" fill="rgb(247,117,6)"/><text x="15.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="12" y="372" width="2" height="15" fill="rgb(217,65,15)"/><text x="15.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="12" y="388" width="2" height="15" fill="rgb(246,225,14)"/><text x="15.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="12" y="404" width="2" height="15" fill="rgb(229,161,17)"/><text x="15.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="12" y="420" width="2" height="15" fill="rgb(217,68,3)"/><text x="15.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:59) (1 samples, 0.12%)</title><rect x="12" y="436" width="2" height="15" fill="rgb(252,112,42)"/><text x="15.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="12" y="452" width="2" height="15" fill="rgb(236,177,30)"/><text x="15.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="12" y="468" width="2" height="15" fill="rgb(215,229,27)"/><text x="15.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="12" y="484" width="2" height="15" fill="rgb(225,102,0)"/><text x="15.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="12" y="500" width="2" height="15" fill="rgb(233,78,44)"/><text x="15.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="12" y="516" width="2" height="15" fill="rgb(232,76,17)"/><text x="15.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="12" y="532" width="2" height="15" fill="rgb(236,132,43)"/><text x="15.00" y="542.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.12%)</title><rect x="14" y="996" width="1" height="15" fill="rgb(216,229,47)"/><text x="17.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.12%)</title><rect x="14" y="1012" width="1" height="15" fill="rgb(232,159,30)"/><text x="17.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.12%)</title><rect x="14" y="1028" width="1" height="15" fill="rgb(216,172,51)"/><text x="17.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="14" y="1044" width="1" height="15" fill="rgb(213,35,47)"/><text x="17.00" y="1054.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.24%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(226,68,54)"/><text x="17.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.24%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(213,77,1)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.24%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(240,128,41)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.24%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(207,134,16)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.24%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(253,142,49)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.12%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(242,137,45)"/><text x="18.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.12%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(231,33,40)"/><text x="18.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.35%)</title><rect x="14" y="852" width="4" height="15" fill="rgb(205,189,37)"/><text x="17.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.35%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(228,79,12)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.35%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(206,191,3)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.35%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(210,13,20)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.12%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(234,46,33)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.12%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(234,188,32)"/><text x="19.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.12%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(222,153,36)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.12%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(233,33,23)"/><text x="19.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.12%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(211,73,1)"/><text x="19.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:214) (1 samples, 0.12%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(234,148,41)"/><text x="19.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="18" y="852" width="1" height="15" fill="rgb(252,27,5)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="18" y="868" width="1" height="15" fill="rgb(219,129,1)"/><text x="21.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.12%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(219,169,14)"/><text x="21.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2895) (1 samples, 0.12%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(235,93,53)"/><text x="21.00" y="910.50"></text></g><g><title>dirname (posixpath.py:158) (1 samples, 0.12%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(222,71,7)"/><text x="21.00" y="926.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.12%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(243,75,19)"/><text x="21.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.59%)</title><rect x="14" y="820" width="7" height="15" fill="rgb(250,131,14)"/><text x="17.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.59%)</title><rect x="14" y="836" width="7" height="15" fill="rgb(249,113,52)"/><text x="17.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.12%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(254,196,35)"/><text x="22.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(237,156,21)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.12%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(224,191,12)"/><text x="22.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.12%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(214,211,46)"/><text x="22.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.12%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(221,50,51)"/><text x="22.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.12%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(234,25,39)"/><text x="22.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.12%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(235,16,19)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.12%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(229,46,41)"/><text x="22.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.12%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(229,227,43)"/><text x="22.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.12%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(208,180,51)"/><text x="22.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(205,104,13)"/><text x="22.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:2) (6 samples, 0.71%)</title><rect x="14" y="148" width="8" height="15" fill="rgb(242,153,12)"/><text x="17.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="164" width="8" height="15" fill="rgb(240,92,30)"/><text x="17.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.71%)</title><rect x="14" y="180" width="8" height="15" fill="rgb(239,147,51)"/><text x="17.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="196" width="8" height="15" fill="rgb(247,209,51)"/><text x="17.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="212" width="8" height="15" fill="rgb(241,217,35)"/><text x="17.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.71%)</title><rect x="14" y="228" width="8" height="15" fill="rgb(233,170,31)"/><text x="17.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.71%)</title><rect x="14" y="244" width="8" height="15" fill="rgb(224,46,23)"/><text x="17.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.71%)</title><rect x="14" y="260" width="8" height="15" fill="rgb(226,46,25)"/><text x="17.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="276" width="8" height="15" fill="rgb(252,171,7)"/><text x="17.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 0.71%)</title><rect x="14" y="292" width="8" height="15" fill="rgb(221,161,48)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="308" width="8" height="15" fill="rgb(205,30,32)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.71%)</title><rect x="14" y="324" width="8" height="15" fill="rgb(214,81,53)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.71%)</title><rect x="14" y="340" width="8" height="15" fill="rgb(209,97,3)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.71%)</title><rect x="14" y="356" width="8" height="15" fill="rgb(219,174,24)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="372" width="8" height="15" fill="rgb(209,167,14)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 0.71%)</title><rect x="14" y="388" width="8" height="15" fill="rgb(220,82,24)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="404" width="8" height="15" fill="rgb(205,145,11)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.71%)</title><rect x="14" y="420" width="8" height="15" fill="rgb(225,6,52)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.71%)</title><rect x="14" y="436" width="8" height="15" fill="rgb(230,89,7)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.71%)</title><rect x="14" y="452" width="8" height="15" fill="rgb(242,204,11)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="468" width="8" height="15" fill="rgb(238,168,41)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 0.71%)</title><rect x="14" y="484" width="8" height="15" fill="rgb(223,213,37)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="500" width="8" height="15" fill="rgb(222,165,31)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.71%)</title><rect x="14" y="516" width="8" height="15" fill="rgb(222,146,16)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.71%)</title><rect x="14" y="532" width="8" height="15" fill="rgb(245,61,0)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.71%)</title><rect x="14" y="548" width="8" height="15" fill="rgb(224,148,42)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="564" width="8" height="15" fill="rgb(236,46,53)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 0.71%)</title><rect x="14" y="580" width="8" height="15" fill="rgb(252,213,46)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="596" width="8" height="15" fill="rgb(217,111,5)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.71%)</title><rect x="14" y="612" width="8" height="15" fill="rgb(222,86,36)"/><text x="17.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="628" width="8" height="15" fill="rgb(246,141,24)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="644" width="8" height="15" fill="rgb(247,175,22)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.71%)</title><rect x="14" y="660" width="8" height="15" fill="rgb(247,219,24)"/><text x="17.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.71%)</title><rect x="14" y="676" width="8" height="15" fill="rgb(243,113,21)"/><text x="17.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.71%)</title><rect x="14" y="692" width="8" height="15" fill="rgb(240,80,9)"/><text x="17.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="708" width="8" height="15" fill="rgb(236,204,54)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 0.71%)</title><rect x="14" y="724" width="8" height="15" fill="rgb(210,39,35)"/><text x="17.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="14" y="740" width="8" height="15" fill="rgb(240,58,7)"/><text x="17.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.71%)</title><rect x="14" y="756" width="8" height="15" fill="rgb(246,196,54)"/><text x="17.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.71%)</title><rect x="14" y="772" width="8" height="15" fill="rgb(217,210,40)"/><text x="17.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.71%)</title><rect x="14" y="788" width="8" height="15" fill="rgb(224,156,34)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="14" y="804" width="8" height="15" fill="rgb(213,99,44)"/><text x="17.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.12%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(249,33,10)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(244,195,41)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(222,0,48)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(205,122,15)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(228,63,51)"/><text x="24.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(218,202,36)"/><text x="24.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(233,64,5)"/><text x="24.00" y="926.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(247,94,39)"/><text x="24.00" y="942.50"></text></g><g><title>0x7fd1ccfcb11e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(211,182,46)"/><text x="24.00" y="958.50"></text></g><g><title>0x7fd1ccfca6db (libc-2.29.so) (1 samples, 0.12%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(213,83,34)"/><text x="24.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:4) (1 samples, 0.12%)</title><rect x="22" y="148" width="1" height="15" fill="rgb(241,181,35)"/><text x="25.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="164" width="1" height="15" fill="rgb(217,123,31)"/><text x="25.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="22" y="180" width="1" height="15" fill="rgb(234,70,15)"/><text x="25.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="196" width="1" height="15" fill="rgb(209,199,34)"/><text x="25.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="212" width="1" height="15" fill="rgb(226,139,8)"/><text x="25.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="228" width="1" height="15" fill="rgb(221,13,25)"/><text x="25.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="244" width="1" height="15" fill="rgb(216,194,27)"/><text x="25.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="260" width="1" height="15" fill="rgb(214,21,51)"/><text x="25.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="276" width="1" height="15" fill="rgb(246,22,2)"/><text x="25.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.12%)</title><rect x="22" y="292" width="1" height="15" fill="rgb(226,55,35)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="308" width="1" height="15" fill="rgb(240,196,5)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="324" width="1" height="15" fill="rgb(214,40,7)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="340" width="1" height="15" fill="rgb(230,193,0)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="356" width="1" height="15" fill="rgb(227,129,53)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="372" width="1" height="15" fill="rgb(247,154,21)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.12%)</title><rect x="22" y="388" width="1" height="15" fill="rgb(210,178,40)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="404" width="1" height="15" fill="rgb(227,50,23)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="420" width="1" height="15" fill="rgb(241,54,38)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="436" width="1" height="15" fill="rgb(227,160,27)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="452" width="1" height="15" fill="rgb(208,162,44)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="468" width="1" height="15" fill="rgb(243,18,51)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.12%)</title><rect x="22" y="484" width="1" height="15" fill="rgb(236,177,31)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="500" width="1" height="15" fill="rgb(218,71,44)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="516" width="1" height="15" fill="rgb(251,221,8)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="532" width="1" height="15" fill="rgb(242,178,27)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="548" width="1" height="15" fill="rgb(231,187,37)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="564" width="1" height="15" fill="rgb(231,183,35)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.12%)</title><rect x="22" y="580" width="1" height="15" fill="rgb(209,47,13)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="596" width="1" height="15" fill="rgb(212,1,7)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="612" width="1" height="15" fill="rgb(248,113,4)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="628" width="1" height="15" fill="rgb(229,24,49)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="644" width="1" height="15" fill="rgb(228,116,36)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="660" width="1" height="15" fill="rgb(214,69,54)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.12%)</title><rect x="22" y="676" width="1" height="15" fill="rgb(254,108,50)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="692" width="1" height="15" fill="rgb(213,57,14)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="708" width="1" height="15" fill="rgb(240,183,4)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="724" width="1" height="15" fill="rgb(250,50,20)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="740" width="1" height="15" fill="rgb(226,151,45)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="756" width="1" height="15" fill="rgb(214,210,45)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.12%)</title><rect x="22" y="772" width="1" height="15" fill="rgb(249,213,6)"/><text x="25.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="22" y="788" width="1" height="15" fill="rgb(216,225,15)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="804" width="1" height="15" fill="rgb(229,223,49)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="820" width="1" height="15" fill="rgb(231,99,2)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="836" width="1" height="15" fill="rgb(239,154,5)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="852" width="1" height="15" fill="rgb(231,56,17)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="868" width="1" height="15" fill="rgb(220,169,49)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="884" width="1" height="15" fill="rgb(215,1,51)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.12%)</title><rect x="22" y="900" width="1" height="15" fill="rgb(221,63,9)"/><text x="25.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="22" y="916" width="1" height="15" fill="rgb(214,110,36)"/><text x="25.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="932" width="1" height="15" fill="rgb(208,10,27)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="948" width="1" height="15" fill="rgb(221,154,36)"/><text x="25.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="964" width="1" height="15" fill="rgb(234,226,18)"/><text x="25.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="980" width="1" height="15" fill="rgb(233,67,35)"/><text x="25.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="22" y="996" width="1" height="15" fill="rgb(215,60,27)"/><text x="25.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="22" y="1012" width="1" height="15" fill="rgb(215,115,36)"/><text x="25.00" y="1022.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="22" y="1028" width="1" height="15" fill="rgb(234,102,38)"/><text x="25.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.12%)</title><rect x="23" y="484" width="2" height="15" fill="rgb(225,179,12)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="500" width="2" height="15" fill="rgb(232,74,12)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="516" width="2" height="15" fill="rgb(219,96,23)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="532" width="2" height="15" fill="rgb(251,178,11)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="548" width="2" height="15" fill="rgb(230,25,54)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="564" width="2" height="15" fill="rgb(221,217,18)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.12%)</title><rect x="23" y="580" width="2" height="15" fill="rgb(242,131,13)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="596" width="2" height="15" fill="rgb(230,140,5)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="612" width="2" height="15" fill="rgb(250,36,33)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="628" width="2" height="15" fill="rgb(220,160,46)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="644" width="2" height="15" fill="rgb(234,22,53)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="660" width="2" height="15" fill="rgb(232,159,45)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.12%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(250,98,44)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(221,73,40)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(229,65,3)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(212,207,4)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(246,90,36)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(225,144,43)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.12%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(218,35,43)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(244,125,24)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(242,135,45)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(206,172,43)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(229,176,3)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(228,31,30)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.12%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(242,126,36)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(238,177,46)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(253,181,17)"/><text x="26.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(212,119,22)"/><text x="26.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(226,185,10)"/><text x="26.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(252,55,6)"/><text x="26.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (1 samples, 0.12%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(246,6,12)"/><text x="26.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(243,113,16)"/><text x="26.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="996" width="2" height="15" fill="rgb(247,200,7)"/><text x="26.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1012" width="2" height="15" fill="rgb(214,27,24)"/><text x="26.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="1028" width="2" height="15" fill="rgb(226,128,46)"/><text x="26.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(231,54,10)"/><text x="26.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:32) (1 samples, 0.12%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(238,175,8)"/><text x="26.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(213,131,23)"/><text x="26.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1092" width="2" height="15" fill="rgb(219,116,34)"/><text x="26.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1108" width="2" height="15" fill="rgb(241,150,34)"/><text x="26.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="1124" width="2" height="15" fill="rgb(225,60,18)"/><text x="26.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="1140" width="2" height="15" fill="rgb(218,86,0)"/><text x="26.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py:30) (1 samples, 0.12%)</title><rect x="23" y="1156" width="2" height="15" fill="rgb(238,86,17)"/><text x="26.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1172" width="2" height="15" fill="rgb(221,196,16)"/><text x="26.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1188" width="2" height="15" fill="rgb(210,52,45)"/><text x="26.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1204" width="2" height="15" fill="rgb(220,11,9)"/><text x="26.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="1220" width="2" height="15" fill="rgb(233,143,10)"/><text x="26.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="1236" width="2" height="15" fill="rgb(226,88,15)"/><text x="26.00" y="1246.50"></text></g><g><title>&lt;module&gt; (chardet/chardistribution.py:34) (1 samples, 0.12%)</title><rect x="23" y="1252" width="2" height="15" fill="rgb(231,37,3)"/><text x="26.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1268" width="2" height="15" fill="rgb(251,162,38)"/><text x="26.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1284" width="2" height="15" fill="rgb(230,189,39)"/><text x="26.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1300" width="2" height="15" fill="rgb(228,167,36)"/><text x="26.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="23" y="1316" width="2" height="15" fill="rgb(212,49,44)"/><text x="26.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="23" y="1332" width="2" height="15" fill="rgb(232,180,35)"/><text x="26.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="23" y="1348" width="2" height="15" fill="rgb(212,183,4)"/><text x="26.00" y="1358.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.12%)</title><rect x="25" y="916" width="1" height="15" fill="rgb(250,33,52)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="25" y="932" width="1" height="15" fill="rgb(235,113,37)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="25" y="948" width="1" height="15" fill="rgb(227,112,15)"/><text x="28.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="25" y="964" width="1" height="15" fill="rgb(223,8,37)"/><text x="28.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="25" y="980" width="1" height="15" fill="rgb(215,148,8)"/><text x="28.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="25" y="996" width="1" height="15" fill="rgb(213,77,49)"/><text x="28.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="25" y="1012" width="1" height="15" fill="rgb(232,198,17)"/><text x="28.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="25" y="1028" width="1" height="15" fill="rgb(221,229,24)"/><text x="28.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="25" y="1044" width="1" height="15" fill="rgb(209,20,41)"/><text x="28.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.12%)</title><rect x="25" y="1060" width="1" height="15" fill="rgb(246,73,17)"/><text x="28.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="25" y="1076" width="1" height="15" fill="rgb(225,90,50)"/><text x="28.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="25" y="1092" width="1" height="15" fill="rgb(244,176,40)"/><text x="28.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="25" y="1108" width="1" height="15" fill="rgb(249,109,4)"/><text x="28.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="25" y="1124" width="1" height="15" fill="rgb(253,105,7)"/><text x="28.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="25" y="1140" width="1" height="15" fill="rgb(226,81,33)"/><text x="28.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (1 samples, 0.12%)</title><rect x="25" y="1156" width="1" height="15" fill="rgb(252,122,42)"/><text x="28.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="25" y="1172" width="1" height="15" fill="rgb(230,49,29)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="25" y="1188" width="1" height="15" fill="rgb(222,35,12)"/><text x="28.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="25" y="1204" width="1" height="15" fill="rgb(234,89,43)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="25" y="1220" width="1" height="15" fill="rgb(248,159,0)"/><text x="28.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="25" y="1236" width="1" height="15" fill="rgb(211,182,42)"/><text x="28.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="25" y="1252" width="1" height="15" fill="rgb(219,143,11)"/><text x="28.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="25" y="1268" width="1" height="15" fill="rgb(246,144,16)"/><text x="28.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:290) (1 samples, 0.12%)</title><rect x="25" y="1284" width="1" height="15" fill="rgb(232,40,37)"/><text x="28.00" y="1294.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="25" y="1300" width="1" height="15" fill="rgb(233,122,21)"/><text x="28.00" y="1310.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="25" y="1316" width="1" height="15" fill="rgb(223,131,18)"/><text x="28.00" y="1326.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="25" y="1332" width="1" height="15" fill="rgb(226,33,27)"/><text x="28.00" y="1342.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="25" y="1348" width="1" height="15" fill="rgb(207,65,23)"/><text x="28.00" y="1358.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="25" y="1364" width="1" height="15" fill="rgb(230,83,13)"/><text x="28.00" y="1374.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="25" y="1380" width="1" height="15" fill="rgb(232,89,43)"/><text x="28.00" y="1390.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="25" y="1396" width="1" height="15" fill="rgb(252,9,19)"/><text x="28.00" y="1406.50"></text></g><g><title>_parse (sre_parse.py:510) (1 samples, 0.12%)</title><rect x="25" y="1412" width="1" height="15" fill="rgb(239,197,4)"/><text x="28.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.35%)</title><rect x="23" y="244" width="5" height="15" fill="rgb(248,26,53)"/><text x="26.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="23" y="260" width="5" height="15" fill="rgb(209,155,30)"/><text x="26.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="23" y="276" width="5" height="15" fill="rgb(233,86,46)"/><text x="26.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="23" y="292" width="5" height="15" fill="rgb(220,27,50)"/><text x="26.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="23" y="308" width="5" height="15" fill="rgb(231,129,51)"/><text x="26.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="23" y="324" width="5" height="15" fill="rgb(238,71,21)"/><text x="26.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.35%)</title><rect x="23" y="340" width="5" height="15" fill="rgb(207,181,37)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="23" y="356" width="5" height="15" fill="rgb(234,17,44)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.35%)</title><rect x="23" y="372" width="5" height="15" fill="rgb(250,71,40)"/><text x="26.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="23" y="388" width="5" height="15" fill="rgb(205,132,16)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="23" y="404" width="5" height="15" fill="rgb(224,10,16)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="23" y="420" width="5" height="15" fill="rgb(226,56,36)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="23" y="436" width="5" height="15" fill="rgb(220,136,49)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="23" y="452" width="5" height="15" fill="rgb(223,70,35)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="23" y="468" width="5" height="15" fill="rgb(225,89,15)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.24%)</title><rect x="25" y="484" width="3" height="15" fill="rgb(210,151,54)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="25" y="500" width="3" height="15" fill="rgb(245,58,20)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="25" y="516" width="3" height="15" fill="rgb(247,200,5)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="25" y="532" width="3" height="15" fill="rgb(224,221,36)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="25" y="548" width="3" height="15" fill="rgb(208,76,28)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="25" y="564" width="3" height="15" fill="rgb(241,200,2)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.24%)</title><rect x="25" y="580" width="3" height="15" fill="rgb(235,170,24)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="25" y="596" width="3" height="15" fill="rgb(249,97,17)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.24%)</title><rect x="25" y="612" width="3" height="15" fill="rgb(229,174,25)"/><text x="28.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="25" y="628" width="3" height="15" fill="rgb(221,91,50)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="25" y="644" width="3" height="15" fill="rgb(220,176,46)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="25" y="660" width="3" height="15" fill="rgb(206,198,29)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="25" y="676" width="3" height="15" fill="rgb(208,40,51)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="25" y="692" width="3" height="15" fill="rgb(224,116,40)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="25" y="708" width="3" height="15" fill="rgb(236,11,16)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.24%)</title><rect x="25" y="724" width="3" height="15" fill="rgb(210,111,26)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="25" y="740" width="3" height="15" fill="rgb(241,66,34)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="25" y="756" width="3" height="15" fill="rgb(220,149,19)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="25" y="772" width="3" height="15" fill="rgb(212,192,40)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="25" y="788" width="3" height="15" fill="rgb(205,63,40)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="25" y="804" width="3" height="15" fill="rgb(217,71,12)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.24%)</title><rect x="25" y="820" width="3" height="15" fill="rgb(242,85,30)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="25" y="836" width="3" height="15" fill="rgb(240,139,14)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="25" y="852" width="3" height="15" fill="rgb(236,38,6)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(238,79,36)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(209,125,42)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(225,168,18)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:11) (1 samples, 0.12%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(250,84,39)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(226,4,54)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(225,17,2)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(247,118,48)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(244,182,33)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(223,11,50)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/file_tree_node.py:18) (1 samples, 0.12%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(237,23,30)"/><text x="29.00" y="1022.50"></text></g><g><title>FileTreeNode (pyquickhelper/filehelper/file_tree_node.py:65) (1 samples, 0.12%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(207,173,39)"/><text x="29.00" y="1038.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(208,6,50)"/><text x="29.00" y="1054.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(210,57,41)"/><text x="29.00" y="1070.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(228,70,10)"/><text x="29.00" y="1086.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(233,93,27)"/><text x="29.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(206,192,50)"/><text x="29.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(245,14,51)"/><text x="29.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(217,5,5)"/><text x="29.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py:516) (1 samples, 0.12%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(233,194,53)"/><text x="29.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.12%)</title><rect x="28" y="340" width="1" height="15" fill="rgb(208,23,54)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="28" y="356" width="1" height="15" fill="rgb(244,127,49)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="28" y="372" width="1" height="15" fill="rgb(220,45,10)"/><text x="31.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="28" y="388" width="1" height="15" fill="rgb(233,193,27)"/><text x="31.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="28" y="404" width="1" height="15" fill="rgb(237,162,45)"/><text x="31.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="28" y="420" width="1" height="15" fill="rgb(246,88,16)"/><text x="31.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.12%)</title><rect x="28" y="436" width="1" height="15" fill="rgb(232,27,44)"/><text x="31.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="28" y="452" width="1" height="15" fill="rgb(244,174,0)"/><text x="31.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="28" y="468" width="1" height="15" fill="rgb(245,78,13)"/><text x="31.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="28" y="484" width="1" height="15" fill="rgb(245,121,30)"/><text x="31.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="28" y="500" width="1" height="15" fill="rgb(253,110,49)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="28" y="516" width="1" height="15" fill="rgb(210,151,30)"/><text x="31.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.12%)</title><rect x="28" y="532" width="1" height="15" fill="rgb(237,39,13)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="28" y="548" width="1" height="15" fill="rgb(214,15,25)"/><text x="31.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="28" y="564" width="1" height="15" fill="rgb(225,217,2)"/><text x="31.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="28" y="580" width="1" height="15" fill="rgb(205,113,38)"/><text x="31.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="28" y="596" width="1" height="15" fill="rgb(241,197,46)"/><text x="31.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="28" y="612" width="1" height="15" fill="rgb(221,61,19)"/><text x="31.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (1 samples, 0.12%)</title><rect x="28" y="628" width="1" height="15" fill="rgb(209,94,23)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="28" y="644" width="1" height="15" fill="rgb(247,172,20)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="28" y="660" width="1" height="15" fill="rgb(228,89,46)"/><text x="31.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="28" y="676" width="1" height="15" fill="rgb(208,8,1)"/><text x="31.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="28" y="692" width="1" height="15" fill="rgb(234,187,42)"/><text x="31.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="28" y="708" width="1" height="15" fill="rgb(206,45,36)"/><text x="31.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py:72) (1 samples, 0.12%)</title><rect x="28" y="724" width="1" height="15" fill="rgb(249,58,54)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="28" y="740" width="1" height="15" fill="rgb(226,35,43)"/><text x="31.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="28" y="756" width="1" height="15" fill="rgb(220,82,12)"/><text x="31.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="28" y="772" width="1" height="15" fill="rgb(247,207,9)"/><text x="31.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="28" y="788" width="1" height="15" fill="rgb(222,54,16)"/><text x="31.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="28" y="804" width="1" height="15" fill="rgb(236,131,15)"/><text x="31.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="28" y="820" width="1" height="15" fill="rgb(210,224,3)"/><text x="31.00" y="830.50"></text></g><g><title>Float64Index (pandas/core/indexes/numeric.py:350) (1 samples, 0.12%)</title><rect x="29" y="1508" width="1" height="15" fill="rgb(229,174,52)"/><text x="32.00" y="1518.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="29" y="1524" width="1" height="15" fill="rgb(221,65,25)"/><text x="32.00" y="1534.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:4) (16 samples, 1.89%)</title><rect x="10" y="52" width="22" height="15" fill="rgb(233,159,46)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 1.89%)</title><rect x="10" y="68" width="22" height="15" fill="rgb(229,39,9)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 1.89%)</title><rect x="10" y="84" width="22" height="15" fill="rgb(254,148,38)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 1.89%)</title><rect x="10" y="100" width="22" height="15" fill="rgb(216,89,45)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 1.89%)</title><rect x="10" y="116" width="22" height="15" fill="rgb(221,141,45)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 1.89%)</title><rect x="10" y="132" width="22" height="15" fill="rgb(231,187,39)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:7) (6 samples, 0.71%)</title><rect x="23" y="148" width="9" height="15" fill="rgb(215,4,9)"/><text x="26.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.71%)</title><rect x="23" y="164" width="9" height="15" fill="rgb(247,132,3)"/><text x="26.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.71%)</title><rect x="23" y="180" width="9" height="15" fill="rgb(207,100,40)"/><text x="26.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.71%)</title><rect x="23" y="196" width="9" height="15" fill="rgb(232,52,22)"/><text x="26.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.71%)</title><rect x="23" y="212" width="9" height="15" fill="rgb(239,9,21)"/><text x="26.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.71%)</title><rect x="23" y="228" width="9" height="15" fill="rgb(238,158,41)"/><text x="26.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.35%)</title><rect x="28" y="244" width="4" height="15" fill="rgb(242,223,4)"/><text x="31.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="28" y="260" width="4" height="15" fill="rgb(241,15,1)"/><text x="31.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="28" y="276" width="4" height="15" fill="rgb(246,212,51)"/><text x="31.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="28" y="292" width="4" height="15" fill="rgb(241,198,54)"/><text x="31.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="28" y="308" width="4" height="15" fill="rgb(253,127,11)"/><text x="31.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="28" y="324" width="4" height="15" fill="rgb(213,69,26)"/><text x="31.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (2 samples, 0.24%)</title><rect x="29" y="340" width="3" height="15" fill="rgb(215,109,11)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="356" width="3" height="15" fill="rgb(231,133,19)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="372" width="3" height="15" fill="rgb(236,39,21)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="388" width="3" height="15" fill="rgb(241,112,38)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="404" width="3" height="15" fill="rgb(251,205,3)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="420" width="3" height="15" fill="rgb(206,216,34)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.24%)</title><rect x="29" y="436" width="3" height="15" fill="rgb(236,44,34)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="452" width="3" height="15" fill="rgb(213,226,1)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="468" width="3" height="15" fill="rgb(233,194,10)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="484" width="3" height="15" fill="rgb(220,97,31)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="500" width="3" height="15" fill="rgb(243,84,51)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="516" width="3" height="15" fill="rgb(247,198,15)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.24%)</title><rect x="29" y="532" width="3" height="15" fill="rgb(215,123,9)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="548" width="3" height="15" fill="rgb(217,195,1)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="564" width="3" height="15" fill="rgb(213,223,2)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="580" width="3" height="15" fill="rgb(206,18,29)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="596" width="3" height="15" fill="rgb(215,139,29)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="612" width="3" height="15" fill="rgb(208,139,29)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.24%)</title><rect x="29" y="628" width="3" height="15" fill="rgb(250,155,24)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="644" width="3" height="15" fill="rgb(238,159,6)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="660" width="3" height="15" fill="rgb(211,229,6)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="676" width="3" height="15" fill="rgb(254,69,8)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="692" width="3" height="15" fill="rgb(218,187,12)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="708" width="3" height="15" fill="rgb(220,213,6)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.24%)</title><rect x="29" y="724" width="3" height="15" fill="rgb(207,208,23)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="740" width="3" height="15" fill="rgb(225,203,1)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="756" width="3" height="15" fill="rgb(230,77,16)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="772" width="3" height="15" fill="rgb(231,4,30)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="788" width="3" height="15" fill="rgb(254,90,4)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="804" width="3" height="15" fill="rgb(235,135,27)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.24%)</title><rect x="29" y="820" width="3" height="15" fill="rgb(212,2,46)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(205,120,24)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(250,59,12)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(247,48,49)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(218,30,43)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(230,76,41)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.24%)</title><rect x="29" y="916" width="3" height="15" fill="rgb(207,65,31)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="932" width="3" height="15" fill="rgb(242,30,0)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="948" width="3" height="15" fill="rgb(247,4,52)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="964" width="3" height="15" fill="rgb(235,200,22)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="980" width="3" height="15" fill="rgb(251,131,0)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="996" width="3" height="15" fill="rgb(237,97,36)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.24%)</title><rect x="29" y="1012" width="3" height="15" fill="rgb(209,61,0)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="1028" width="3" height="15" fill="rgb(252,150,35)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="1044" width="3" height="15" fill="rgb(241,92,28)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="1060" width="3" height="15" fill="rgb(225,64,17)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="1076" width="3" height="15" fill="rgb(217,21,12)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="1092" width="3" height="15" fill="rgb(244,55,24)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (2 samples, 0.24%)</title><rect x="29" y="1108" width="3" height="15" fill="rgb(237,79,25)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="1124" width="3" height="15" fill="rgb(209,144,54)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="1140" width="3" height="15" fill="rgb(205,110,16)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="1156" width="3" height="15" fill="rgb(214,141,44)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="1172" width="3" height="15" fill="rgb(207,36,49)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="1188" width="3" height="15" fill="rgb(243,168,27)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (2 samples, 0.24%)</title><rect x="29" y="1204" width="3" height="15" fill="rgb(226,144,22)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="1220" width="3" height="15" fill="rgb(248,184,12)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="1236" width="3" height="15" fill="rgb(215,136,16)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="1252" width="3" height="15" fill="rgb(246,60,15)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="1268" width="3" height="15" fill="rgb(250,224,53)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="1284" width="3" height="15" fill="rgb(230,173,51)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:15) (2 samples, 0.24%)</title><rect x="29" y="1300" width="3" height="15" fill="rgb(209,156,14)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="1316" width="3" height="15" fill="rgb(231,106,47)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="1332" width="3" height="15" fill="rgb(246,11,6)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="1348" width="3" height="15" fill="rgb(212,194,12)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="1364" width="3" height="15" fill="rgb(216,68,18)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="1380" width="3" height="15" fill="rgb(236,211,24)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py:40) (2 samples, 0.24%)</title><rect x="29" y="1396" width="3" height="15" fill="rgb(228,63,26)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="29" y="1412" width="3" height="15" fill="rgb(216,167,37)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="29" y="1428" width="3" height="15" fill="rgb(253,229,30)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="29" y="1444" width="3" height="15" fill="rgb(226,105,12)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="29" y="1460" width="3" height="15" fill="rgb(212,132,22)"/><text x="32.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="29" y="1476" width="3" height="15" fill="rgb(233,47,53)"/><text x="32.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/numeric.py:349) (2 samples, 0.24%)</title><rect x="29" y="1492" width="3" height="15" fill="rgb(224,78,16)"/><text x="32.00" y="1502.50"></text></g><g><title>Float64Index (pandas/core/indexes/numeric.py:467) (1 samples, 0.12%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(210,168,37)"/><text x="33.00" y="1518.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.12%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(225,54,12)"/><text x="33.00" y="1534.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.12%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(247,198,1)"/><text x="33.00" y="1550.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.12%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(254,201,53)"/><text x="33.00" y="1566.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(247,54,15)"/><text x="33.00" y="1582.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:383) (1 samples, 0.12%)</title><rect x="32" y="132" width="1" height="15" fill="rgb(215,160,41)"/><text x="35.00" y="142.50"></text></g><g><title>dirname (posixpath.py:157) (1 samples, 0.12%)</title><rect x="32" y="148" width="1" height="15" fill="rgb(236,12,13)"/><text x="35.00" y="158.50"></text></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.12%)</title><rect x="32" y="164" width="1" height="15" fill="rgb(218,107,2)"/><text x="35.00" y="174.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (2 samples, 0.24%)</title><rect x="32" y="100" width="3" height="15" fill="rgb(210,128,32)"/><text x="35.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (2 samples, 0.24%)</title><rect x="32" y="116" width="3" height="15" fill="rgb(245,138,8)"/><text x="35.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.12%)</title><rect x="33" y="132" width="2" height="15" fill="rgb(251,36,21)"/><text x="36.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:233) (1 samples, 0.12%)</title><rect x="33" y="148" width="2" height="15" fill="rgb(237,0,30)"/><text x="36.00" y="158.50"></text></g><g><title>join (posixpath.py:86) (1 samples, 0.12%)</title><rect x="33" y="164" width="2" height="15" fill="rgb(222,169,16)"/><text x="36.00" y="174.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.12%)</title><rect x="33" y="180" width="2" height="15" fill="rgb(235,35,3)"/><text x="36.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:40) (3 samples, 0.35%)</title><rect x="32" y="52" width="4" height="15" fill="rgb(245,73,29)"/><text x="35.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:11) (3 samples, 0.35%)</title><rect x="32" y="68" width="4" height="15" fill="rgb(210,38,53)"/><text x="35.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:39) (3 samples, 0.35%)</title><rect x="32" y="84" width="4" height="15" fill="rgb(239,43,11)"/><text x="35.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.12%)</title><rect x="35" y="100" width="1" height="15" fill="rgb(208,54,11)"/><text x="38.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:994) (1 samples, 0.12%)</title><rect x="35" y="116" width="1" height="15" fill="rgb(226,172,33)"/><text x="38.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (1 samples, 0.12%)</title><rect x="35" y="132" width="1" height="15" fill="rgb(206,0,1)"/><text x="38.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:1039) (1 samples, 0.12%)</title><rect x="35" y="148" width="1" height="15" fill="rgb(217,189,43)"/><text x="38.00" y="158.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.12%)</title><rect x="35" y="164" width="1" height="15" fill="rgb(235,55,37)"/><text x="38.00" y="174.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:74) (1 samples, 0.12%)</title><rect x="35" y="180" width="1" height="15" fill="rgb(226,81,39)"/><text x="38.00" y="190.50"></text></g><g><title>0x7fd1bf8b6544 (?) (1 samples, 0.12%)</title><rect x="35" y="196" width="1" height="15" fill="rgb(238,195,4)"/><text x="38.00" y="206.50"></text></g><g><title>0x7fd1bf8b33ec (?) (1 samples, 0.12%)</title><rect x="35" y="212" width="1" height="15" fill="rgb(236,107,35)"/><text x="38.00" y="222.50"></text></g><g><title>arraydescr_name_get (descriptor.c:1928) (1 samples, 0.12%)</title><rect x="35" y="228" width="1" height="15" fill="rgb(221,166,52)"/><text x="38.00" y="238.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:322) (1 samples, 0.12%)</title><rect x="35" y="244" width="1" height="15" fill="rgb(252,131,17)"/><text x="38.00" y="254.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (1 samples, 0.12%)</title><rect x="37" y="148" width="2" height="15" fill="rgb(232,167,20)"/><text x="40.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="37" y="164" width="2" height="15" fill="rgb(246,13,16)"/><text x="40.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.12%)</title><rect x="39" y="180" width="1" height="15" fill="rgb(246,116,4)"/><text x="42.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.12%)</title><rect x="40" y="180" width="2" height="15" fill="rgb(217,167,1)"/><text x="43.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.12%)</title><rect x="42" y="180" width="1" height="15" fill="rgb(207,78,25)"/><text x="45.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.12%)</title><rect x="42" y="196" width="1" height="15" fill="rgb(209,200,39)"/><text x="45.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.12%)</title><rect x="42" y="212" width="1" height="15" fill="rgb(245,109,10)"/><text x="45.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.12%)</title><rect x="43" y="180" width="1" height="15" fill="rgb(244,17,46)"/><text x="46.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.24%)</title><rect x="44" y="180" width="3" height="15" fill="rgb(222,51,42)"/><text x="47.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.24%)</title><rect x="44" y="196" width="3" height="15" fill="rgb(250,206,40)"/><text x="47.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.12%)</title><rect x="46" y="212" width="1" height="15" fill="rgb(223,106,52)"/><text x="49.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="47" y="196" width="2" height="15" fill="rgb(223,134,25)"/><text x="50.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.12%)</title><rect x="49" y="196" width="1" height="15" fill="rgb(227,20,19)"/><text x="52.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.12%)</title><rect x="50" y="196" width="1" height="15" fill="rgb(247,7,22)"/><text x="53.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.12%)</title><rect x="51" y="196" width="2" height="15" fill="rgb(207,187,10)"/><text x="54.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.24%)</title><rect x="53" y="196" width="3" height="15" fill="rgb(235,58,22)"/><text x="56.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.24%)</title><rect x="53" y="212" width="3" height="15" fill="rgb(223,86,46)"/><text x="56.00" y="222.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (13 samples, 1.54%)</title><rect x="39" y="148" width="18" height="15" fill="rgb(226,23,24)"/><text x="42.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (13 samples, 1.54%)</title><rect x="39" y="164" width="18" height="15" fill="rgb(215,35,27)"/><text x="42.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 0.83%)</title><rect x="47" y="180" width="10" height="15" fill="rgb(223,134,11)"/><text x="50.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.12%)</title><rect x="56" y="196" width="1" height="15" fill="rgb(242,153,5)"/><text x="59.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.12%)</title><rect x="63" y="212" width="1" height="15" fill="rgb(249,184,37)"/><text x="66.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.12%)</title><rect x="64" y="212" width="1" height="15" fill="rgb(250,202,23)"/><text x="67.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="67" y="228" width="1" height="15" fill="rgb(243,179,23)"/><text x="70.00" y="238.50"></text></g><g><title>0x7fd1ccfe91ea (libc-2.29.so) (1 samples, 0.12%)</title><rect x="74" y="244" width="1" height="15" fill="rgb(231,182,23)"/><text x="77.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.35%)</title><rect x="75" y="244" width="4" height="15" fill="rgb(208,187,1)"/><text x="78.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (14 samples, 1.65%)</title><rect x="63" y="196" width="19" height="15" fill="rgb(219,126,54)"/><text x="66.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 1.42%)</title><rect x="65" y="212" width="17" height="15" fill="rgb(209,117,44)"/><text x="68.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 1.18%)</title><rect x="68" y="228" width="14" height="15" fill="rgb(227,227,21)"/><text x="71.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.24%)</title><rect x="79" y="244" width="3" height="15" fill="rgb(219,87,22)"/><text x="82.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.12%)</title><rect x="82" y="228" width="1" height="15" fill="rgb(231,112,23)"/><text x="85.00" y="238.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.12%)</title><rect x="82" y="244" width="1" height="15" fill="rgb(236,144,3)"/><text x="85.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.12%)</title><rect x="83" y="228" width="2" height="15" fill="rgb(230,212,10)"/><text x="86.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.12%)</title><rect x="89" y="244" width="1" height="15" fill="rgb(211,127,38)"/><text x="92.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 0.35%)</title><rect x="90" y="244" width="5" height="15" fill="rgb(221,66,38)"/><text x="93.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.12%)</title><rect x="95" y="244" width="1" height="15" fill="rgb(205,132,36)"/><text x="98.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.12%)</title><rect x="96" y="244" width="1" height="15" fill="rgb(219,129,16)"/><text x="99.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (10 samples, 1.18%)</title><rect x="85" y="228" width="14" height="15" fill="rgb(233,70,54)"/><text x="88.00" y="238.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.12%)</title><rect x="97" y="244" width="2" height="15" fill="rgb(211,173,5)"/><text x="100.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.35%)</title><rect x="99" y="228" width="4" height="15" fill="rgb(248,18,26)"/><text x="102.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.35%)</title><rect x="99" y="244" width="4" height="15" fill="rgb(208,194,37)"/><text x="102.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.24%)</title><rect x="100" y="260" width="3" height="15" fill="rgb(248,173,24)"/><text x="103.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.24%)</title><rect x="103" y="228" width="3" height="15" fill="rgb(227,142,4)"/><text x="106.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.12%)</title><rect x="107" y="260" width="2" height="15" fill="rgb(232,77,34)"/><text x="110.00" y="270.50"></text></g><g><title>0x7fd1ccfdee50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="107" y="276" width="2" height="15" fill="rgb(239,86,22)"/><text x="110.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.35%)</title><rect x="106" y="228" width="4" height="15" fill="rgb(227,206,49)"/><text x="109.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.24%)</title><rect x="107" y="244" width="3" height="15" fill="rgb(243,215,10)"/><text x="110.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1697) (1 samples, 0.12%)</title><rect x="109" y="260" width="1" height="15" fill="rgb(232,191,47)"/><text x="112.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.12%)</title><rect x="109" y="276" width="1" height="15" fill="rgb(252,218,31)"/><text x="112.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.24%)</title><rect x="110" y="228" width="3" height="15" fill="rgb(225,33,16)"/><text x="113.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.24%)</title><rect x="110" y="244" width="3" height="15" fill="rgb(226,65,6)"/><text x="113.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.12%)</title><rect x="113" y="228" width="1" height="15" fill="rgb(217,73,14)"/><text x="116.00" y="238.50"></text></g><g><title>0x7fd1cd0a6dd1 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="117" y="260" width="1" height="15" fill="rgb(233,126,16)"/><text x="120.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.12%)</title><rect x="118" y="260" width="2" height="15" fill="rgb(206,61,5)"/><text x="121.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 0.59%)</title><rect x="114" y="244" width="7" height="15" fill="rgb(254,2,10)"/><text x="117.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.12%)</title><rect x="120" y="260" width="1" height="15" fill="rgb(238,175,8)"/><text x="123.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 0.83%)</title><rect x="114" y="228" width="10" height="15" fill="rgb(206,102,25)"/><text x="117.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.24%)</title><rect x="121" y="244" width="3" height="15" fill="rgb(210,48,52)"/><text x="124.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.12%)</title><rect x="122" y="260" width="2" height="15" fill="rgb(244,95,51)"/><text x="125.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="124" y="244" width="1" height="15" fill="rgb(216,5,35)"/><text x="127.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.12%)</title><rect x="125" y="244" width="2" height="15" fill="rgb(249,85,42)"/><text x="128.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (38 samples, 4.49%)</title><rect x="82" y="196" width="53" height="15" fill="rgb(220,117,22)"/><text x="85.00" y="206.50">predi..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (38 samples, 4.49%)</title><rect x="82" y="212" width="53" height="15" fill="rgb(240,62,33)"/><text x="85.00" y="222.50">_vali..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (8 samples, 0.95%)</title><rect x="124" y="228" width="11" height="15" fill="rgb(219,191,4)"/><text x="127.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 0.71%)</title><rect x="127" y="244" width="8" height="15" fill="rgb(219,196,10)"/><text x="130.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 0.47%)</title><rect x="129" y="260" width="6" height="15" fill="rgb(253,87,39)"/><text x="132.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.24%)</title><rect x="132" y="276" width="3" height="15" fill="rgb(228,63,44)"/><text x="135.00" y="286.50"></text></g><g><title>0x7fd1a6a1a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="135" y="260" width="1" height="15" fill="rgb(218,219,45)"/><text x="138.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.12%)</title><rect x="135" y="276" width="1" height="15" fill="rgb(227,213,13)"/><text x="138.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.12%)</title><rect x="135" y="292" width="1" height="15" fill="rgb(210,66,51)"/><text x="138.00" y="302.50"></text></g><g><title>0x7fd1a69f410c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="136" y="308" width="2" height="15" fill="rgb(245,158,3)"/><text x="139.00" y="318.50"></text></g><g><title>0x7fd1a6a1a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="136" y="260" width="5" height="15" fill="rgb(242,71,38)"/><text x="139.00" y="270.50"></text></g><g><title>0x7fd1a69fed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="136" y="276" width="5" height="15" fill="rgb(217,117,37)"/><text x="139.00" y="286.50"></text></g><g><title>0x7fd1a69fe666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="136" y="292" width="5" height="15" fill="rgb(240,187,38)"/><text x="139.00" y="302.50"></text></g><g><title>0x7fd1a69f42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="138" y="308" width="3" height="15" fill="rgb(238,227,51)"/><text x="141.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.12%)</title><rect x="139" y="324" width="2" height="15" fill="rgb(225,207,33)"/><text x="142.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.12%)</title><rect x="139" y="340" width="2" height="15" fill="rgb(243,203,50)"/><text x="142.00" y="350.50"></text></g><g><title>0x7fd1a6a1a456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="141" y="260" width="2" height="15" fill="rgb(239,37,52)"/><text x="144.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.12%)</title><rect x="145" y="276" width="1" height="15" fill="rgb(238,215,53)"/><text x="148.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.12%)</title><rect x="145" y="292" width="1" height="15" fill="rgb(254,111,2)"/><text x="148.00" y="302.50"></text></g><g><title>0x7fd1a6a1a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="143" y="260" width="6" height="15" fill="rgb(212,205,22)"/><text x="146.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.24%)</title><rect x="146" y="276" width="3" height="15" fill="rgb(239,157,40)"/><text x="149.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.24%)</title><rect x="146" y="292" width="3" height="15" fill="rgb(229,219,37)"/><text x="149.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.24%)</title><rect x="146" y="308" width="3" height="15" fill="rgb(208,39,30)"/><text x="149.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (2 samples, 0.24%)</title><rect x="146" y="324" width="3" height="15" fill="rgb(211,152,35)"/><text x="149.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (2 samples, 0.24%)</title><rect x="146" y="340" width="3" height="15" fill="rgb(240,190,52)"/><text x="149.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="148" y="356" width="1" height="15" fill="rgb(210,120,42)"/><text x="151.00" y="366.50"></text></g><g><title>0x7fd1a6a1a684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="149" y="260" width="1" height="15" fill="rgb(235,126,33)"/><text x="152.00" y="270.50"></text></g><g><title>0x7fd1a6a1a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="150" y="260" width="3" height="15" fill="rgb(211,210,22)"/><text x="153.00" y="270.50"></text></g><g><title>0x7fd1a6a1a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="153" y="260" width="2" height="15" fill="rgb(231,12,18)"/><text x="156.00" y="270.50"></text></g><g><title>0x7fd1a6a1a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="155" y="260" width="4" height="15" fill="rgb(243,121,51)"/><text x="158.00" y="270.50"></text></g><g><title>0x7fd1a6a1a6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="159" y="260" width="1" height="15" fill="rgb(235,21,6)"/><text x="162.00" y="270.50"></text></g><g><title>0x7fd1a6a1a6d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="160" y="260" width="2" height="15" fill="rgb(244,76,28)"/><text x="163.00" y="270.50"></text></g><g><title>0x7fd1a6a1b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 2.36%)</title><rect x="135" y="244" width="28" height="15" fill="rgb(251,102,6)"/><text x="138.00" y="254.50">0..</text></g><g><title>0x7fd1a6a1a6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="162" y="260" width="1" height="15" fill="rgb(210,159,39)"/><text x="165.00" y="270.50"></text></g><g><title>0x7fd1a6a0bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 2.48%)</title><rect x="135" y="228" width="29" height="15" fill="rgb(210,87,5)"/><text x="138.00" y="238.50">0x..</text></g><g><title>0x7fd1a6a1b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="163" y="244" width="1" height="15" fill="rgb(207,181,36)"/><text x="166.00" y="254.50"></text></g><g><title>0x7fd1a69f02f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="163" y="260" width="1" height="15" fill="rgb(218,86,39)"/><text x="166.00" y="270.50"></text></g><g><title>0x7fd1a69ef4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="163" y="276" width="1" height="15" fill="rgb(217,143,12)"/><text x="166.00" y="286.50"></text></g><g><title>0x7fd1a6a0bff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="164" y="228" width="2" height="15" fill="rgb(242,76,4)"/><text x="167.00" y="238.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.12%)</title><rect x="166" y="244" width="1" height="15" fill="rgb(234,4,50)"/><text x="169.00" y="254.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3950) (1 samples, 0.12%)</title><rect x="167" y="276" width="2" height="15" fill="rgb(227,190,28)"/><text x="170.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.12%)</title><rect x="169" y="276" width="1" height="15" fill="rgb(227,128,24)"/><text x="172.00" y="286.50"></text></g><g><title>0x7fd1a6a0c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="166" y="228" width="5" height="15" fill="rgb(236,69,17)"/><text x="169.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.35%)</title><rect x="167" y="244" width="4" height="15" fill="rgb(239,88,7)"/><text x="170.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.35%)</title><rect x="167" y="260" width="4" height="15" fill="rgb(227,58,11)"/><text x="170.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.12%)</title><rect x="170" y="276" width="1" height="15" fill="rgb(206,123,6)"/><text x="173.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="170" y="292" width="1" height="15" fill="rgb(235,2,28)"/><text x="173.00" y="302.50"></text></g><g><title>0x7fd1a6a0c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="171" y="228" width="2" height="15" fill="rgb(227,94,46)"/><text x="174.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (29 samples, 3.43%)</title><rect x="135" y="196" width="40" height="15" fill="rgb(248,100,54)"/><text x="138.00" y="206.50">pre..</text></g><g><title>0x7fd1a6a0cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 3.43%)</title><rect x="135" y="212" width="40" height="15" fill="rgb(213,192,44)"/><text x="138.00" y="222.50">0x7..</text></g><g><title>0x7fd1a6a0c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="173" y="228" width="2" height="15" fill="rgb(221,171,18)"/><text x="176.00" y="238.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.12%)</title><rect x="174" y="244" width="1" height="15" fill="rgb(250,215,38)"/><text x="177.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.12%)</title><rect x="175" y="196" width="2" height="15" fill="rgb(241,42,48)"/><text x="178.00" y="206.50"></text></g><g><title>get_view_from_index (mapping.c:958) (1 samples, 0.12%)</title><rect x="177" y="228" width="1" height="15" fill="rgb(219,186,13)"/><text x="180.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (84 samples, 9.93%)</title><rect x="63" y="180" width="117" height="15" fill="rgb(209,120,45)"/><text x="66.00" y="190.50">&lt;listcomp&gt; (sk..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.24%)</title><rect x="177" y="196" width="3" height="15" fill="rgb(221,35,10)"/><text x="180.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.24%)</title><rect x="177" y="212" width="3" height="15" fill="rgb(221,204,33)"/><text x="180.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.12%)</title><rect x="178" y="228" width="2" height="15" fill="rgb(208,178,38)"/><text x="181.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.12%)</title><rect x="178" y="244" width="2" height="15" fill="rgb(237,72,28)"/><text x="181.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.12%)</title><rect x="178" y="260" width="2" height="15" fill="rgb(211,6,33)"/><text x="181.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.12%)</title><rect x="178" y="276" width="2" height="15" fill="rgb(205,78,20)"/><text x="181.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.12%)</title><rect x="180" y="212" width="1" height="15" fill="rgb(225,50,44)"/><text x="183.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.12%)</title><rect x="180" y="228" width="1" height="15" fill="rgb(210,0,10)"/><text x="183.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.12%)</title><rect x="180" y="244" width="1" height="15" fill="rgb(216,203,44)"/><text x="183.00" y="254.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:478) (1 samples, 0.12%)</title><rect x="180" y="260" width="1" height="15" fill="rgb(226,92,48)"/><text x="183.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.12%)</title><rect x="181" y="212" width="1" height="15" fill="rgb(247,67,40)"/><text x="184.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.12%)</title><rect x="181" y="228" width="1" height="15" fill="rgb(244,98,31)"/><text x="184.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.12%)</title><rect x="181" y="244" width="1" height="15" fill="rgb(248,181,28)"/><text x="184.00" y="254.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.12%)</title><rect x="182" y="292" width="2" height="15" fill="rgb(252,81,41)"/><text x="185.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="182" y="308" width="2" height="15" fill="rgb(210,56,0)"/><text x="185.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.12%)</title><rect x="184" y="292" width="1" height="15" fill="rgb(254,77,32)"/><text x="187.00" y="302.50"></text></g><g><title>0x7fd1ccfe8d96 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="184" y="308" width="1" height="15" fill="rgb(242,116,27)"/><text x="187.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (93 samples, 10.99%)</title><rect x="57" y="164" width="130" height="15" fill="rgb(241,166,46)"/><text x="60.00" y="174.50">_get_median_pred..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (5 samples, 0.59%)</title><rect x="180" y="180" width="7" height="15" fill="rgb(234,172,21)"/><text x="183.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (5 samples, 0.59%)</title><rect x="180" y="196" width="7" height="15" fill="rgb(212,158,19)"/><text x="183.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (3 samples, 0.35%)</title><rect x="182" y="212" width="5" height="15" fill="rgb(210,106,6)"/><text x="185.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (3 samples, 0.35%)</title><rect x="182" y="228" width="5" height="15" fill="rgb(233,144,24)"/><text x="185.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:546) (3 samples, 0.35%)</title><rect x="182" y="244" width="5" height="15" fill="rgb(247,69,7)"/><text x="185.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c:467) (3 samples, 0.35%)</title><rect x="182" y="260" width="5" height="15" fill="rgb(217,42,52)"/><text x="185.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.35%)</title><rect x="182" y="276" width="5" height="15" fill="rgb(216,105,31)"/><text x="185.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.12%)</title><rect x="185" y="292" width="2" height="15" fill="rgb(250,130,26)"/><text x="188.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.12%)</title><rect x="185" y="308" width="2" height="15" fill="rgb(209,66,7)"/><text x="188.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1360) (1 samples, 0.12%)</title><rect x="188" y="244" width="1" height="15" fill="rgb(224,128,2)"/><text x="191.00" y="254.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:317) (1 samples, 0.12%)</title><rect x="189" y="308" width="2" height="15" fill="rgb(220,191,40)"/><text x="192.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1048) (2 samples, 0.24%)</title><rect x="189" y="276" width="3" height="15" fill="rgb(235,38,44)"/><text x="192.00" y="286.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src:1915) (2 samples, 0.24%)</title><rect x="189" y="292" width="3" height="15" fill="rgb(235,127,9)"/><text x="192.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:331) (1 samples, 0.12%)</title><rect x="191" y="308" width="1" height="15" fill="rgb(250,0,37)"/><text x="194.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.12%)</title><rect x="192" y="276" width="2" height="15" fill="rgb(209,6,16)"/><text x="195.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:217) (2 samples, 0.24%)</title><rect x="194" y="292" width="2" height="15" fill="rgb(230,106,16)"/><text x="197.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (4 samples, 0.47%)</title><rect x="194" y="276" width="5" height="15" fill="rgb(241,91,41)"/><text x="197.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (2 samples, 0.24%)</title><rect x="196" y="292" width="3" height="15" fill="rgb(250,141,3)"/><text x="199.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (1 samples, 0.12%)</title><rect x="198" y="308" width="1" height="15" fill="rgb(211,179,34)"/><text x="201.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (2 samples, 0.24%)</title><rect x="199" y="276" width="3" height="15" fill="rgb(214,150,48)"/><text x="202.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (12 samples, 1.42%)</title><rect x="187" y="164" width="16" height="15" fill="rgb(212,94,47)"/><text x="190.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (11 samples, 1.30%)</title><rect x="188" y="180" width="15" height="15" fill="rgb(251,138,2)"/><text x="191.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 1.30%)</title><rect x="188" y="196" width="15" height="15" fill="rgb(237,226,45)"/><text x="191.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (11 samples, 1.30%)</title><rect x="188" y="212" width="15" height="15" fill="rgb(242,110,13)"/><text x="191.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 1.30%)</title><rect x="188" y="228" width="15" height="15" fill="rgb(210,222,7)"/><text x="191.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (10 samples, 1.18%)</title><rect x="189" y="244" width="14" height="15" fill="rgb(234,206,51)"/><text x="192.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (10 samples, 1.18%)</title><rect x="189" y="260" width="14" height="15" fill="rgb(231,188,20)"/><text x="192.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1105) (1 samples, 0.12%)</title><rect x="202" y="276" width="1" height="15" fill="rgb(226,177,32)"/><text x="205.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="202" y="292" width="1" height="15" fill="rgb(213,197,4)"/><text x="205.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.12%)</title><rect x="203" y="180" width="2" height="15" fill="rgb(248,99,20)"/><text x="206.00" y="190.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="203" y="196" width="2" height="15" fill="rgb(222,181,46)"/><text x="206.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1521) (4 samples, 0.47%)</title><rect x="205" y="180" width="5" height="15" fill="rgb(223,81,20)"/><text x="208.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1439) (4 samples, 0.47%)</title><rect x="205" y="196" width="5" height="15" fill="rgb(208,51,37)"/><text x="208.00" y="206.50"></text></g><g><title>PyArray_CumSum (calculation.c:562) (1 samples, 0.12%)</title><rect x="215" y="276" width="1" height="15" fill="rgb(211,38,34)"/><text x="218.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3002) (1 samples, 0.12%)</title><rect x="215" y="292" width="1" height="15" fill="rgb(249,108,20)"/><text x="218.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4416) (1 samples, 0.12%)</title><rect x="216" y="324" width="1" height="15" fill="rgb(230,110,33)"/><text x="219.00" y="334.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (6 samples, 0.71%)</title><rect x="210" y="180" width="9" height="15" fill="rgb(215,20,12)"/><text x="213.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (6 samples, 0.71%)</title><rect x="210" y="196" width="9" height="15" fill="rgb(249,36,10)"/><text x="213.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.71%)</title><rect x="210" y="212" width="9" height="15" fill="rgb(210,166,46)"/><text x="213.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (6 samples, 0.71%)</title><rect x="210" y="228" width="9" height="15" fill="rgb(221,11,28)"/><text x="213.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.35%)</title><rect x="215" y="244" width="4" height="15" fill="rgb(243,23,33)"/><text x="218.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (3 samples, 0.35%)</title><rect x="215" y="260" width="4" height="15" fill="rgb(238,115,49)"/><text x="218.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (2 samples, 0.24%)</title><rect x="216" y="276" width="3" height="15" fill="rgb(218,34,15)"/><text x="219.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (2 samples, 0.24%)</title><rect x="216" y="292" width="3" height="15" fill="rgb(207,67,4)"/><text x="219.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (2 samples, 0.24%)</title><rect x="216" y="308" width="3" height="15" fill="rgb(226,77,54)"/><text x="219.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (1 samples, 0.12%)</title><rect x="217" y="324" width="2" height="15" fill="rgb(212,35,37)"/><text x="220.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3931) (1 samples, 0.12%)</title><rect x="217" y="340" width="2" height="15" fill="rgb(236,75,25)"/><text x="220.00" y="350.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.12%)</title><rect x="220" y="244" width="2" height="15" fill="rgb(252,121,23)"/><text x="223.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.12%)</title><rect x="222" y="292" width="1" height="15" fill="rgb(231,12,24)"/><text x="225.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.12%)</title><rect x="222" y="308" width="1" height="15" fill="rgb(243,70,4)"/><text x="225.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.12%)</title><rect x="222" y="324" width="1" height="15" fill="rgb(254,107,41)"/><text x="225.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.12%)</title><rect x="222" y="340" width="1" height="15" fill="rgb(238,186,10)"/><text x="225.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.12%)</title><rect x="222" y="356" width="1" height="15" fill="rgb(223,193,31)"/><text x="225.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.12%)</title><rect x="223" y="308" width="1" height="15" fill="rgb(216,49,9)"/><text x="226.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.12%)</title><rect x="223" y="324" width="1" height="15" fill="rgb(248,139,36)"/><text x="226.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.12%)</title><rect x="223" y="340" width="1" height="15" fill="rgb(226,204,37)"/><text x="226.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:77) (1 samples, 0.12%)</title><rect x="223" y="356" width="1" height="15" fill="rgb(213,132,41)"/><text x="226.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.12%)</title><rect x="224" y="340" width="2" height="15" fill="rgb(220,43,14)"/><text x="227.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (6 samples, 0.71%)</title><rect x="219" y="180" width="8" height="15" fill="rgb(235,78,52)"/><text x="222.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (6 samples, 0.71%)</title><rect x="219" y="196" width="8" height="15" fill="rgb(231,136,43)"/><text x="222.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.71%)</title><rect x="219" y="212" width="8" height="15" fill="rgb(237,205,35)"/><text x="222.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (5 samples, 0.59%)</title><rect x="220" y="228" width="7" height="15" fill="rgb(208,15,30)"/><text x="223.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 0.47%)</title><rect x="222" y="244" width="5" height="15" fill="rgb(227,122,3)"/><text x="225.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.47%)</title><rect x="222" y="260" width="5" height="15" fill="rgb(208,134,24)"/><text x="225.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.47%)</title><rect x="222" y="276" width="5" height="15" fill="rgb(231,193,53)"/><text x="225.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.35%)</title><rect x="223" y="292" width="4" height="15" fill="rgb(229,152,11)"/><text x="226.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.24%)</title><rect x="224" y="308" width="3" height="15" fill="rgb(209,6,23)"/><text x="227.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.24%)</title><rect x="224" y="324" width="3" height="15" fill="rgb(219,160,8)"/><text x="227.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.12%)</title><rect x="226" y="340" width="1" height="15" fill="rgb(213,190,15)"/><text x="229.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.12%)</title><rect x="226" y="356" width="1" height="15" fill="rgb(237,123,7)"/><text x="229.00" y="366.50"></text></g><g><title>isclose (numpy/core/numeric.py:2260) (1 samples, 0.12%)</title><rect x="228" y="228" width="2" height="15" fill="rgb(233,78,41)"/><text x="231.00" y="238.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.12%)</title><rect x="228" y="244" width="2" height="15" fill="rgb(240,82,30)"/><text x="231.00" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (1 samples, 0.12%)</title><rect x="230" y="228" width="1" height="15" fill="rgb(209,173,53)"/><text x="233.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="230" y="244" width="1" height="15" fill="rgb(253,169,6)"/><text x="233.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="230" y="260" width="1" height="15" fill="rgb(240,83,18)"/><text x="233.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.12%)</title><rect x="230" y="276" width="1" height="15" fill="rgb(231,201,14)"/><text x="233.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.12%)</title><rect x="230" y="292" width="1" height="15" fill="rgb(237,228,39)"/><text x="233.00" y="302.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src:1809) (1 samples, 0.12%)</title><rect x="230" y="308" width="1" height="15" fill="rgb(245,99,17)"/><text x="233.00" y="318.50"></text></g><g><title>run_isfinite_simd_DOUBLE (simd.inc.src:325) (1 samples, 0.12%)</title><rect x="230" y="324" width="1" height="15" fill="rgb(235,156,19)"/><text x="233.00" y="334.50"></text></g><g><title>sse2_isfinite_DOUBLE (simd.inc.src:865) (1 samples, 0.12%)</title><rect x="230" y="340" width="1" height="15" fill="rgb(220,215,3)"/><text x="233.00" y="350.50"></text></g><g><title>_mm_andnot_pd (emmintrin.h:321) (1 samples, 0.12%)</title><rect x="230" y="356" width="1" height="15" fill="rgb(254,158,50)"/><text x="233.00" y="366.50"></text></g><g><title>isclose (numpy/core/numeric.py:2270) (1 samples, 0.12%)</title><rect x="231" y="228" width="2" height="15" fill="rgb(252,184,5)"/><text x="234.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="231" y="244" width="2" height="15" fill="rgb(238,207,28)"/><text x="234.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.12%)</title><rect x="231" y="260" width="2" height="15" fill="rgb(249,163,9)"/><text x="234.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.12%)</title><rect x="231" y="276" width="2" height="15" fill="rgb(207,215,41)"/><text x="234.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.12%)</title><rect x="234" y="260" width="1" height="15" fill="rgb(249,81,34)"/><text x="237.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (1 samples, 0.12%)</title><rect x="234" y="276" width="1" height="15" fill="rgb(216,31,33)"/><text x="237.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:253) (1 samples, 0.12%)</title><rect x="235" y="260" width="2" height="15" fill="rgb(245,122,23)"/><text x="238.00" y="270.50"></text></g><g><title>is_default_array_function (arrayfunction_override.c:142) (1 samples, 0.12%)</title><rect x="235" y="276" width="2" height="15" fill="rgb(232,201,39)"/><text x="238.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.12%)</title><rect x="237" y="292" width="1" height="15" fill="rgb(242,41,50)"/><text x="240.00" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (6 samples, 0.71%)</title><rect x="233" y="228" width="8" height="15" fill="rgb(208,4,3)"/><text x="236.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (5 samples, 0.59%)</title><rect x="234" y="244" width="7" height="15" fill="rgb(214,3,6)"/><text x="237.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.35%)</title><rect x="237" y="260" width="4" height="15" fill="rgb(221,22,46)"/><text x="240.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (3 samples, 0.35%)</title><rect x="237" y="276" width="4" height="15" fill="rgb(234,228,40)"/><text x="240.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.24%)</title><rect x="238" y="292" width="3" height="15" fill="rgb(223,54,49)"/><text x="241.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.12%)</title><rect x="240" y="308" width="1" height="15" fill="rgb(241,161,25)"/><text x="243.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.12%)</title><rect x="240" y="324" width="1" height="15" fill="rgb(252,94,52)"/><text x="243.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.12%)</title><rect x="240" y="340" width="1" height="15" fill="rgb(245,128,19)"/><text x="243.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.12%)</title><rect x="240" y="356" width="1" height="15" fill="rgb(247,201,49)"/><text x="243.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.12%)</title><rect x="240" y="372" width="1" height="15" fill="rgb(246,145,31)"/><text x="243.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.12%)</title><rect x="240" y="388" width="1" height="15" fill="rgb(230,107,53)"/><text x="243.00" y="398.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (1 samples, 0.12%)</title><rect x="241" y="292" width="1" height="15" fill="rgb(251,120,49)"/><text x="244.00" y="302.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (2 samples, 0.24%)</title><rect x="241" y="276" width="3" height="15" fill="rgb(232,52,20)"/><text x="244.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:184) (1 samples, 0.12%)</title><rect x="242" y="292" width="2" height="15" fill="rgb(221,46,0)"/><text x="245.00" y="302.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (3 samples, 0.35%)</title><rect x="241" y="244" width="4" height="15" fill="rgb(215,32,9)"/><text x="244.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (3 samples, 0.35%)</title><rect x="241" y="260" width="4" height="15" fill="rgb(216,38,12)"/><text x="244.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.12%)</title><rect x="244" y="276" width="1" height="15" fill="rgb(242,40,13)"/><text x="247.00" y="286.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.12%)</title><rect x="245" y="260" width="2" height="15" fill="rgb(207,72,50)"/><text x="248.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="247" y="292" width="1" height="15" fill="rgb(206,122,44)"/><text x="250.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.12%)</title><rect x="247" y="308" width="1" height="15" fill="rgb(219,90,34)"/><text x="250.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.12%)</title><rect x="247" y="324" width="1" height="15" fill="rgb(242,7,22)"/><text x="250.00" y="334.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.12%)</title><rect x="247" y="340" width="1" height="15" fill="rgb(242,92,52)"/><text x="250.00" y="350.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.24%)</title><rect x="247" y="260" width="2" height="15" fill="rgb(224,137,4)"/><text x="250.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="247" y="276" width="2" height="15" fill="rgb(242,191,17)"/><text x="250.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="248" y="292" width="1" height="15" fill="rgb(244,167,38)"/><text x="251.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.12%)</title><rect x="248" y="308" width="1" height="15" fill="rgb(219,21,40)"/><text x="251.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.12%)</title><rect x="248" y="324" width="1" height="15" fill="rgb(212,156,52)"/><text x="251.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.12%)</title><rect x="249" y="276" width="2" height="15" fill="rgb(247,213,52)"/><text x="252.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.12%)</title><rect x="249" y="292" width="2" height="15" fill="rgb(245,116,45)"/><text x="252.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.12%)</title><rect x="249" y="308" width="2" height="15" fill="rgb(247,189,15)"/><text x="252.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.12%)</title><rect x="249" y="324" width="2" height="15" fill="rgb(246,42,46)"/><text x="252.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.12%)</title><rect x="249" y="340" width="2" height="15" fill="rgb(252,49,49)"/><text x="252.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.12%)</title><rect x="249" y="356" width="2" height="15" fill="rgb(228,78,22)"/><text x="252.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.12%)</title><rect x="251" y="292" width="1" height="15" fill="rgb(207,57,28)"/><text x="254.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.12%)</title><rect x="251" y="308" width="1" height="15" fill="rgb(223,180,15)"/><text x="254.00" y="318.50"></text></g><g><title>_find_array_method (ufunc_object.c:195) (1 samples, 0.12%)</title><rect x="251" y="324" width="1" height="15" fill="rgb(226,51,11)"/><text x="254.00" y="334.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.35%)</title><rect x="249" y="260" width="5" height="15" fill="rgb(248,194,19)"/><text x="252.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="251" y="276" width="3" height="15" fill="rgb(210,110,39)"/><text x="254.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="252" y="292" width="2" height="15" fill="rgb(233,49,50)"/><text x="255.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.12%)</title><rect x="252" y="308" width="2" height="15" fill="rgb(243,49,39)"/><text x="255.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.12%)</title><rect x="252" y="324" width="2" height="15" fill="rgb(229,100,2)"/><text x="255.00" y="334.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.12%)</title><rect x="252" y="340" width="2" height="15" fill="rgb(229,8,44)"/><text x="255.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.12%)</title><rect x="252" y="356" width="2" height="15" fill="rgb(246,187,39)"/><text x="255.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="254" y="292" width="1" height="15" fill="rgb(244,17,13)"/><text x="257.00" y="302.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.12%)</title><rect x="254" y="308" width="1" height="15" fill="rgb(217,205,37)"/><text x="257.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.12%)</title><rect x="254" y="324" width="1" height="15" fill="rgb(250,227,46)"/><text x="257.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.12%)</title><rect x="254" y="340" width="1" height="15" fill="rgb(246,94,24)"/><text x="257.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.12%)</title><rect x="254" y="356" width="1" height="15" fill="rgb(243,56,47)"/><text x="257.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.12%)</title><rect x="254" y="372" width="1" height="15" fill="rgb(254,227,39)"/><text x="257.00" y="382.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (38 samples, 4.49%)</title><rect x="203" y="164" width="53" height="15" fill="rgb(251,87,0)"/><text x="206.00" y="174.50">_get_..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (21 samples, 2.48%)</title><rect x="227" y="180" width="29" height="15" fill="rgb(215,23,7)"/><text x="230.00" y="190.50">st..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (21 samples, 2.48%)</title><rect x="227" y="196" width="29" height="15" fill="rgb(251,184,11)"/><text x="230.00" y="206.50">is..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 2.36%)</title><rect x="228" y="212" width="28" height="15" fill="rgb(221,92,11)"/><text x="231.00" y="222.50">a..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (11 samples, 1.30%)</title><rect x="241" y="228" width="15" height="15" fill="rgb(251,23,26)"/><text x="244.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (8 samples, 0.95%)</title><rect x="245" y="244" width="11" height="15" fill="rgb(209,35,40)"/><text x="248.00" y="254.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.24%)</title><rect x="254" y="260" width="2" height="15" fill="rgb(234,73,9)"/><text x="257.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="254" y="276" width="2" height="15" fill="rgb(251,174,3)"/><text x="257.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="255" y="292" width="1" height="15" fill="rgb(245,100,2)"/><text x="258.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.12%)</title><rect x="255" y="308" width="1" height="15" fill="rgb(210,110,35)"/><text x="258.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.12%)</title><rect x="255" y="324" width="1" height="15" fill="rgb(240,74,1)"/><text x="258.00" y="334.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.12%)</title><rect x="255" y="340" width="1" height="15" fill="rgb(249,213,42)"/><text x="258.00" y="350.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.12%)</title><rect x="255" y="356" width="1" height="15" fill="rgb(206,168,41)"/><text x="258.00" y="366.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.12%)</title><rect x="255" y="372" width="1" height="15" fill="rgb(213,154,43)"/><text x="258.00" y="382.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.12%)</title><rect x="255" y="388" width="1" height="15" fill="rgb(209,11,15)"/><text x="258.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:479) (1 samples, 0.12%)</title><rect x="256" y="180" width="2" height="15" fill="rgb(243,67,26)"/><text x="259.00" y="190.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.12%)</title><rect x="258" y="180" width="1" height="15" fill="rgb(243,22,44)"/><text x="261.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="258" y="196" width="1" height="15" fill="rgb(207,34,16)"/><text x="261.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.12%)</title><rect x="258" y="212" width="1" height="15" fill="rgb(221,134,53)"/><text x="261.00" y="222.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.12%)</title><rect x="258" y="228" width="1" height="15" fill="rgb(232,72,5)"/><text x="261.00" y="238.50"></text></g><g><title>_extract_pyvals (extobj.c:197) (1 samples, 0.12%)</title><rect x="258" y="244" width="1" height="15" fill="rgb(219,95,6)"/><text x="261.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.24%)</title><rect x="259" y="244" width="3" height="15" fill="rgb(230,88,51)"/><text x="262.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.24%)</title><rect x="259" y="260" width="3" height="15" fill="rgb(218,134,2)"/><text x="262.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.24%)</title><rect x="259" y="276" width="3" height="15" fill="rgb(242,96,24)"/><text x="262.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.24%)</title><rect x="259" y="292" width="3" height="15" fill="rgb(211,133,50)"/><text x="262.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.24%)</title><rect x="259" y="308" width="3" height="15" fill="rgb(239,72,2)"/><text x="262.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.12%)</title><rect x="262" y="244" width="1" height="15" fill="rgb(251,135,39)"/><text x="265.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:302) (1 samples, 0.12%)</title><rect x="262" y="260" width="1" height="15" fill="rgb(213,21,16)"/><text x="265.00" y="270.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (6 samples, 0.71%)</title><rect x="256" y="164" width="9" height="15" fill="rgb(250,166,53)"/><text x="259.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (4 samples, 0.47%)</title><rect x="259" y="180" width="6" height="15" fill="rgb(214,225,46)"/><text x="262.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.47%)</title><rect x="259" y="196" width="6" height="15" fill="rgb(249,162,2)"/><text x="262.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.47%)</title><rect x="259" y="212" width="6" height="15" fill="rgb(222,192,2)"/><text x="262.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.47%)</title><rect x="259" y="228" width="6" height="15" fill="rgb(210,34,36)"/><text x="262.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.12%)</title><rect x="263" y="244" width="2" height="15" fill="rgb(236,44,15)"/><text x="266.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.12%)</title><rect x="263" y="260" width="2" height="15" fill="rgb(232,83,43)"/><text x="266.00" y="270.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.12%)</title><rect x="265" y="180" width="1" height="15" fill="rgb(253,151,10)"/><text x="268.00" y="190.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (2 samples, 0.24%)</title><rect x="265" y="164" width="3" height="15" fill="rgb(229,164,11)"/><text x="268.00" y="174.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.12%)</title><rect x="266" y="180" width="2" height="15" fill="rgb(217,216,1)"/><text x="269.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.12%)</title><rect x="266" y="196" width="2" height="15" fill="rgb(243,24,27)"/><text x="269.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="266" y="212" width="2" height="15" fill="rgb(231,200,11)"/><text x="269.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.12%)</title><rect x="266" y="228" width="2" height="15" fill="rgb(217,34,16)"/><text x="269.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.12%)</title><rect x="266" y="244" width="2" height="15" fill="rgb(251,71,25)"/><text x="269.00" y="254.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.12%)</title><rect x="266" y="260" width="2" height="15" fill="rgb(228,136,26)"/><text x="269.00" y="270.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.12%)</title><rect x="266" y="276" width="2" height="15" fill="rgb(222,128,40)"/><text x="269.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.12%)</title><rect x="268" y="180" width="1" height="15" fill="rgb(216,227,41)"/><text x="271.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.12%)</title><rect x="268" y="196" width="1" height="15" fill="rgb(247,111,49)"/><text x="271.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.12%)</title><rect x="268" y="212" width="1" height="15" fill="rgb(236,129,33)"/><text x="271.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.12%)</title><rect x="269" y="180" width="1" height="15" fill="rgb(253,157,16)"/><text x="272.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.12%)</title><rect x="269" y="196" width="1" height="15" fill="rgb(246,59,22)"/><text x="272.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.12%)</title><rect x="270" y="180" width="2" height="15" fill="rgb(229,214,10)"/><text x="273.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3451) (1 samples, 0.12%)</title><rect x="270" y="196" width="2" height="15" fill="rgb(234,89,38)"/><text x="273.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="270" y="212" width="2" height="15" fill="rgb(237,164,14)"/><text x="273.00" y="222.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="270" y="228" width="2" height="15" fill="rgb(215,64,34)"/><text x="273.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="270" y="244" width="2" height="15" fill="rgb(241,177,7)"/><text x="273.00" y="254.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="270" y="260" width="2" height="15" fill="rgb(251,64,46)"/><text x="273.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="270" y="276" width="2" height="15" fill="rgb(209,207,28)"/><text x="273.00" y="286.50"></text></g><g><title>0x7fd1ccfca6f1 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="270" y="292" width="2" height="15" fill="rgb(246,90,4)"/><text x="273.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="272" y="180" width="1" height="15" fill="rgb(244,68,8)"/><text x="275.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.12%)</title><rect x="272" y="196" width="1" height="15" fill="rgb(206,108,38)"/><text x="275.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (5 samples, 0.59%)</title><rect x="268" y="164" width="7" height="15" fill="rgb(249,19,22)"/><text x="271.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.12%)</title><rect x="273" y="180" width="2" height="15" fill="rgb(226,10,5)"/><text x="276.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1506) (1 samples, 0.12%)</title><rect x="273" y="196" width="2" height="15" fill="rgb(219,101,26)"/><text x="276.00" y="206.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.12%)</title><rect x="273" y="212" width="2" height="15" fill="rgb(210,40,25)"/><text x="276.00" y="222.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.12%)</title><rect x="273" y="228" width="2" height="15" fill="rgb(252,123,13)"/><text x="276.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.12%)</title><rect x="276" y="180" width="1" height="15" fill="rgb(218,69,27)"/><text x="279.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.12%)</title><rect x="276" y="196" width="1" height="15" fill="rgb(229,28,19)"/><text x="279.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.12%)</title><rect x="276" y="212" width="1" height="15" fill="rgb(230,90,38)"/><text x="279.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="276" y="228" width="1" height="15" fill="rgb(212,196,31)"/><text x="279.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.12%)</title><rect x="276" y="244" width="1" height="15" fill="rgb(217,33,5)"/><text x="279.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.12%)</title><rect x="276" y="260" width="1" height="15" fill="rgb(230,76,15)"/><text x="279.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (173 samples, 20.45%)</title><rect x="37" y="132" width="242" height="15" fill="rgb(219,131,27)"/><text x="40.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (159 samples, 18.79%)</title><rect x="57" y="148" width="222" height="15" fill="rgb(214,177,43)"/><text x="60.00" y="158.50">predict (sklearn/ensemble/_we..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (3 samples, 0.35%)</title><rect x="275" y="164" width="4" height="15" fill="rgb(236,192,13)"/><text x="278.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.12%)</title><rect x="277" y="180" width="2" height="15" fill="rgb(235,183,37)"/><text x="280.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1517) (1 samples, 0.12%)</title><rect x="277" y="196" width="2" height="15" fill="rgb(249,163,40)"/><text x="280.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:54) (175 samples, 20.69%)</title><rect x="36" y="52" width="244" height="15" fill="rgb(247,211,32)"/><text x="39.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegresso..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:53) (175 samples, 20.69%)</title><rect x="36" y="68" width="244" height="15" fill="rgb(218,161,19)"/><text x="39.00" y="78.50">profile_skl (bench_AdaBoostRegre..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:37) (175 samples, 20.69%)</title><rect x="36" y="84" width="244" height="15" fill="rgb(238,175,19)"/><text x="39.00" y="94.50">setup_profile (bench_AdaBoostReg..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:31) (175 samples, 20.69%)</title><rect x="36" y="100" width="244" height="15" fill="rgb(229,2,7)"/><text x="39.00" y="110.50">profile (bench_AdaBoostRegressor..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (175 samples, 20.69%)</title><rect x="36" y="116" width="244" height="15" fill="rgb(244,8,42)"/><text x="39.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.12%)</title><rect x="279" y="132" width="1" height="15" fill="rgb(240,40,6)"/><text x="282.00" y="142.50"></text></g><g><title>0x7fd1cd0a6e98 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="279" y="148" width="1" height="15" fill="rgb(207,75,10)"/><text x="282.00" y="158.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:36) (1 samples, 0.12%)</title><rect x="280" y="84" width="1" height="15" fill="rgb(252,19,6)"/><text x="283.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.12%)</title><rect x="280" y="100" width="1" height="15" fill="rgb(241,70,1)"/><text x="283.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.12%)</title><rect x="280" y="116" width="1" height="15" fill="rgb(249,102,17)"/><text x="283.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.12%)</title><rect x="280" y="132" width="1" height="15" fill="rgb(205,95,50)"/><text x="283.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.12%)</title><rect x="280" y="148" width="1" height="15" fill="rgb(224,13,46)"/><text x="283.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.12%)</title><rect x="280" y="164" width="1" height="15" fill="rgb(235,38,25)"/><text x="283.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.12%)</title><rect x="280" y="180" width="1" height="15" fill="rgb(250,209,4)"/><text x="283.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.12%)</title><rect x="280" y="196" width="1" height="15" fill="rgb(209,145,10)"/><text x="283.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="212" width="1" height="15" fill="rgb(215,180,17)"/><text x="283.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="228" width="1" height="15" fill="rgb(239,22,1)"/><text x="283.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="244" width="1" height="15" fill="rgb(233,139,52)"/><text x="283.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="260" width="1" height="15" fill="rgb(251,210,17)"/><text x="283.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="276" width="1" height="15" fill="rgb(242,93,24)"/><text x="283.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.12%)</title><rect x="280" y="292" width="1" height="15" fill="rgb(244,177,5)"/><text x="283.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="308" width="1" height="15" fill="rgb(236,60,47)"/><text x="283.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="324" width="1" height="15" fill="rgb(213,228,11)"/><text x="283.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="340" width="1" height="15" fill="rgb(211,35,21)"/><text x="283.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="356" width="1" height="15" fill="rgb(233,18,43)"/><text x="283.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="372" width="1" height="15" fill="rgb(217,33,19)"/><text x="283.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:8) (1 samples, 0.12%)</title><rect x="280" y="388" width="1" height="15" fill="rgb(243,109,5)"/><text x="283.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="404" width="1" height="15" fill="rgb(212,204,9)"/><text x="283.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="420" width="1" height="15" fill="rgb(227,111,43)"/><text x="283.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="436" width="1" height="15" fill="rgb(210,182,54)"/><text x="283.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="452" width="1" height="15" fill="rgb(219,107,28)"/><text x="283.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="468" width="1" height="15" fill="rgb(253,31,43)"/><text x="283.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py:25) (1 samples, 0.12%)</title><rect x="280" y="484" width="1" height="15" fill="rgb(225,163,52)"/><text x="283.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py:13) (1 samples, 0.12%)</title><rect x="280" y="500" width="1" height="15" fill="rgb(243,65,11)"/><text x="283.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="280" y="516" width="1" height="15" fill="rgb(206,39,19)"/><text x="283.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="280" y="532" width="1" height="15" fill="rgb(225,86,38)"/><text x="283.00" y="542.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="280" y="548" width="1" height="15" fill="rgb(252,219,17)"/><text x="283.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="280" y="564" width="1" height="15" fill="rgb(232,27,8)"/><text x="283.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="280" y="580" width="1" height="15" fill="rgb(250,224,12)"/><text x="283.00" y="590.50"></text></g><g><title>0x7fd1ccfca085 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="280" y="596" width="1" height="15" fill="rgb(229,186,3)"/><text x="283.00" y="606.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.12%)</title><rect x="284" y="164" width="2" height="15" fill="rgb(230,89,48)"/><text x="287.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.35%)</title><rect x="287" y="180" width="4" height="15" fill="rgb(242,118,26)"/><text x="290.00" y="190.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:191) (1 samples, 0.12%)</title><rect x="298" y="260" width="2" height="15" fill="rgb(225,191,5)"/><text x="301.00" y="270.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:196) (1 samples, 0.12%)</title><rect x="300" y="260" width="1" height="15" fill="rgb(252,199,46)"/><text x="303.00" y="270.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (2 samples, 0.24%)</title><rect x="301" y="260" width="3" height="15" fill="rgb(242,111,53)"/><text x="304.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:112) (2 samples, 0.24%)</title><rect x="304" y="260" width="3" height="15" fill="rgb(231,114,25)"/><text x="307.00" y="270.50"></text></g><g><title>PyArray_ToList (convert.c:120) (7 samples, 0.83%)</title><rect x="298" y="228" width="10" height="15" fill="rgb(214,216,22)"/><text x="301.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (7 samples, 0.83%)</title><rect x="298" y="244" width="10" height="15" fill="rgb(235,49,25)"/><text x="301.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.12%)</title><rect x="307" y="260" width="1" height="15" fill="rgb(225,207,45)"/><text x="310.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (8 samples, 0.95%)</title><rect x="298" y="212" width="11" height="15" fill="rgb(244,180,41)"/><text x="301.00" y="222.50"></text></g><g><title>array_ravel (methods.c:2443) (1 samples, 0.12%)</title><rect x="308" y="228" width="1" height="15" fill="rgb(216,169,25)"/><text x="311.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c:906) (1 samples, 0.12%)</title><rect x="308" y="244" width="1" height="15" fill="rgb(231,40,38)"/><text x="311.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.12%)</title><rect x="308" y="260" width="1" height="15" fill="rgb(246,178,38)"/><text x="311.00" y="270.50"></text></g><g><title>_fix_unknown_dimension (shape.c:504) (1 samples, 0.12%)</title><rect x="308" y="276" width="1" height="15" fill="rgb(243,127,12)"/><text x="311.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:40) (1 samples, 0.12%)</title><rect x="309" y="212" width="2" height="15" fill="rgb(253,69,10)"/><text x="312.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.12%)</title><rect x="311" y="276" width="1" height="15" fill="rgb(213,229,46)"/><text x="314.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.12%)</title><rect x="312" y="276" width="2" height="15" fill="rgb(249,108,7)"/><text x="315.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1668) (1 samples, 0.12%)</title><rect x="314" y="276" width="1" height="15" fill="rgb(228,7,2)"/><text x="317.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (1 samples, 0.12%)</title><rect x="315" y="308" width="1" height="15" fill="rgb(222,48,22)"/><text x="318.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (1 samples, 0.12%)</title><rect x="318" y="324" width="1" height="15" fill="rgb(228,135,49)"/><text x="321.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (6 samples, 0.71%)</title><rect x="319" y="324" width="9" height="15" fill="rgb(250,226,12)"/><text x="322.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (3 samples, 0.35%)</title><rect x="328" y="324" width="4" height="15" fill="rgb(215,160,3)"/><text x="331.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (7 samples, 0.83%)</title><rect x="332" y="340" width="9" height="15" fill="rgb(252,1,14)"/><text x="335.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (1 samples, 0.12%)</title><rect x="341" y="340" width="2" height="15" fill="rgb(229,222,17)"/><text x="344.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (3 samples, 0.35%)</title><rect x="343" y="340" width="4" height="15" fill="rgb(205,179,48)"/><text x="346.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (13 samples, 1.54%)</title><rect x="332" y="324" width="18" height="15" fill="rgb(223,78,23)"/><text x="335.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (2 samples, 0.24%)</title><rect x="347" y="340" width="3" height="15" fill="rgb(228,93,49)"/><text x="350.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4428) (1 samples, 0.12%)</title><rect x="348" y="356" width="2" height="15" fill="rgb(239,105,49)"/><text x="351.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (3 samples, 0.35%)</title><rect x="350" y="340" width="4" height="15" fill="rgb(210,56,23)"/><text x="353.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.12%)</title><rect x="354" y="340" width="1" height="15" fill="rgb(251,146,7)"/><text x="357.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.12%)</title><rect x="354" y="356" width="1" height="15" fill="rgb(222,57,9)"/><text x="357.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (5 samples, 0.59%)</title><rect x="350" y="324" width="7" height="15" fill="rgb(254,55,37)"/><text x="353.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1386) (1 samples, 0.12%)</title><rect x="355" y="340" width="2" height="15" fill="rgb(246,118,44)"/><text x="358.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (1 samples, 0.12%)</title><rect x="357" y="324" width="1" height="15" fill="rgb(249,19,4)"/><text x="360.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (33 samples, 3.90%)</title><rect x="315" y="276" width="46" height="15" fill="rgb(248,1,24)"/><text x="318.00" y="286.50">PyAr..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (33 samples, 3.90%)</title><rect x="315" y="292" width="46" height="15" fill="rgb(212,159,15)"/><text x="318.00" y="302.50">PyAr..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (32 samples, 3.78%)</title><rect x="316" y="308" width="45" height="15" fill="rgb(206,171,50)"/><text x="319.00" y="318.50">PyAr..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:537) (2 samples, 0.24%)</title><rect x="358" y="324" width="3" height="15" fill="rgb(219,89,42)"/><text x="361.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:883) (2 samples, 0.24%)</title><rect x="361" y="292" width="3" height="15" fill="rgb(223,64,41)"/><text x="364.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:668) (2 samples, 0.24%)</title><rect x="364" y="308" width="3" height="15" fill="rgb(225,34,47)"/><text x="367.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:679) (2 samples, 0.24%)</title><rect x="367" y="308" width="2" height="15" fill="rgb(209,140,28)"/><text x="370.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (2 samples, 0.24%)</title><rect x="369" y="308" width="3" height="15" fill="rgb(227,168,53)"/><text x="372.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:699) (6 samples, 0.71%)</title><rect x="372" y="308" width="9" height="15" fill="rgb(246,14,28)"/><text x="375.00" y="318.50"></text></g><g><title>0x7fd1cc1eb3f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="379" y="324" width="2" height="15" fill="rgb(214,99,40)"/><text x="382.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:703) (10 samples, 1.18%)</title><rect x="381" y="308" width="13" height="15" fill="rgb(216,68,29)"/><text x="384.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (63 samples, 7.45%)</title><rect x="311" y="260" width="88" height="15" fill="rgb(226,86,28)"/><text x="314.00" y="270.50">PyArray_Fr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (27 samples, 3.19%)</title><rect x="361" y="276" width="38" height="15" fill="rgb(220,145,6)"/><text x="364.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c:884) (25 samples, 2.96%)</title><rect x="364" y="292" width="35" height="15" fill="rgb(232,79,29)"/><text x="367.00" y="302.50">di..</text></g><g><title>discover_dimensions (ctors.c:912) (3 samples, 0.35%)</title><rect x="394" y="308" width="5" height="15" fill="rgb(229,57,22)"/><text x="397.00" y="318.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (5 samples, 0.59%)</title><rect x="399" y="292" width="7" height="15" fill="rgb(251,58,4)"/><text x="402.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:537) (1 samples, 0.12%)</title><rect x="406" y="292" width="1" height="15" fill="rgb(206,15,7)"/><text x="409.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:549) (1 samples, 0.12%)</title><rect x="407" y="292" width="1" height="15" fill="rgb(226,215,29)"/><text x="410.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (4 samples, 0.47%)</title><rect x="411" y="324" width="6" height="15" fill="rgb(236,138,45)"/><text x="414.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:117) (1 samples, 0.12%)</title><rect x="418" y="340" width="2" height="15" fill="rgb(232,55,44)"/><text x="421.00" y="350.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (6 samples, 0.71%)</title><rect x="420" y="340" width="8" height="15" fill="rgb(234,91,26)"/><text x="423.00" y="350.50"></text></g><g><title>0x7fd1cc1ea740 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="427" y="356" width="1" height="15" fill="rgb(247,221,26)"/><text x="430.00" y="366.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (12 samples, 1.42%)</title><rect x="417" y="324" width="17" height="15" fill="rgb(212,30,47)"/><text x="420.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (4 samples, 0.47%)</title><rect x="428" y="340" width="6" height="15" fill="rgb(219,113,10)"/><text x="431.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (2 samples, 0.24%)</title><rect x="434" y="324" width="2" height="15" fill="rgb(231,137,47)"/><text x="437.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (1 samples, 0.12%)</title><rect x="436" y="324" width="2" height="15" fill="rgb(215,47,3)"/><text x="439.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (95 samples, 11.23%)</title><rect x="311" y="228" width="132" height="15" fill="rgb(219,134,43)"/><text x="314.00" y="238.50">array_subscript ..</text></g><g><title>prepare_index (mapping.c:516) (95 samples, 11.23%)</title><rect x="311" y="244" width="132" height="15" fill="rgb(253,17,45)"/><text x="314.00" y="254.50">prepare_index (m..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (32 samples, 3.78%)</title><rect x="399" y="260" width="44" height="15" fill="rgb(218,187,53)"/><text x="402.00" y="270.50">PyAr..</text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (32 samples, 3.78%)</title><rect x="399" y="276" width="44" height="15" fill="rgb(210,152,18)"/><text x="402.00" y="286.50">PyAr..</text></g><g><title>setArrayFromSequence (ctors.c:550) (25 samples, 2.96%)</title><rect x="408" y="292" width="35" height="15" fill="rgb(247,224,38)"/><text x="411.00" y="302.50">se..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (25 samples, 2.96%)</title><rect x="408" y="308" width="35" height="15" fill="rgb(222,76,45)"/><text x="411.00" y="318.50">Py..</text></g><g><title>LONG_setitem (arraytypes.c.src:242) (4 samples, 0.47%)</title><rect x="438" y="324" width="5" height="15" fill="rgb(250,132,36)"/><text x="441.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2813) (1 samples, 0.12%)</title><rect x="443" y="244" width="2" height="15" fill="rgb(244,192,36)"/><text x="446.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.24%)</title><rect x="443" y="228" width="3" height="15" fill="rgb(246,79,30)"/><text x="446.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.12%)</title><rect x="445" y="244" width="1" height="15" fill="rgb(241,223,0)"/><text x="448.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.12%)</title><rect x="445" y="260" width="1" height="15" fill="rgb(241,35,48)"/><text x="448.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.12%)</title><rect x="445" y="276" width="1" height="15" fill="rgb(227,111,26)"/><text x="448.00" y="286.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1360) (1 samples, 0.12%)</title><rect x="445" y="292" width="1" height="15" fill="rgb(217,162,24)"/><text x="448.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1572) (1 samples, 0.12%)</title><rect x="446" y="244" width="1" height="15" fill="rgb(241,7,43)"/><text x="449.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.12%)</title><rect x="446" y="260" width="1" height="15" fill="rgb(208,0,13)"/><text x="449.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.24%)</title><rect x="446" y="228" width="3" height="15" fill="rgb(215,204,49)"/><text x="449.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="447" y="244" width="2" height="15" fill="rgb(226,23,3)"/><text x="450.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1684) (1 samples, 0.12%)</title><rect x="449" y="228" width="1" height="15" fill="rgb(214,207,42)"/><text x="452.00" y="238.50"></text></g><g><title>PyArray_MapIterSwapAxes (mapping.c:140) (1 samples, 0.12%)</title><rect x="449" y="244" width="1" height="15" fill="rgb(222,212,44)"/><text x="452.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c:694) (1 samples, 0.12%)</title><rect x="449" y="260" width="1" height="15" fill="rgb(242,122,7)"/><text x="452.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (101 samples, 11.94%)</title><rect x="311" y="212" width="141" height="15" fill="rgb(236,226,44)"/><text x="314.00" y="222.50">_run (mlprodict/o..</text></g><g><title>array_subscript (mapping.c:1712) (1 samples, 0.12%)</title><rect x="450" y="228" width="2" height="15" fill="rgb(211,132,47)"/><text x="453.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (2 samples, 0.24%)</title><rect x="452" y="212" width="2" height="15" fill="rgb(207,72,23)"/><text x="455.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.12%)</title><rect x="453" y="228" width="1" height="15" fill="rgb(235,175,31)"/><text x="456.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.12%)</title><rect x="453" y="244" width="1" height="15" fill="rgb(243,63,26)"/><text x="456.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:223) (1 samples, 0.12%)</title><rect x="453" y="260" width="1" height="15" fill="rgb(212,44,54)"/><text x="456.00" y="270.50"></text></g><g><title>PyArray_View (convert.c:597) (1 samples, 0.12%)</title><rect x="453" y="276" width="1" height="15" fill="rgb(240,3,54)"/><text x="456.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1015) (1 samples, 0.12%)</title><rect x="453" y="292" width="1" height="15" fill="rgb(249,132,35)"/><text x="456.00" y="302.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (1 samples, 0.12%)</title><rect x="454" y="292" width="2" height="15" fill="rgb(233,73,12)"/><text x="457.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.24%)</title><rect x="454" y="212" width="3" height="15" fill="rgb(207,21,17)"/><text x="457.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.24%)</title><rect x="454" y="228" width="3" height="15" fill="rgb(227,58,7)"/><text x="457.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.24%)</title><rect x="454" y="244" width="3" height="15" fill="rgb(231,210,36)"/><text x="457.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.24%)</title><rect x="454" y="260" width="3" height="15" fill="rgb(251,114,26)"/><text x="457.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.24%)</title><rect x="454" y="276" width="3" height="15" fill="rgb(218,223,4)"/><text x="457.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.12%)</title><rect x="456" y="292" width="1" height="15" fill="rgb(221,35,25)"/><text x="459.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:22) (1 samples, 0.12%)</title><rect x="457" y="212" width="2" height="15" fill="rgb(214,74,34)"/><text x="460.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.12%)</title><rect x="459" y="228" width="1" height="15" fill="rgb(252,73,7)"/><text x="462.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:555) (1 samples, 0.12%)</title><rect x="459" y="244" width="1" height="15" fill="rgb(209,178,36)"/><text x="462.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:34) (2 samples, 0.24%)</title><rect x="459" y="212" width="2" height="15" fill="rgb(240,67,47)"/><text x="462.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1546) (1 samples, 0.12%)</title><rect x="460" y="228" width="1" height="15" fill="rgb(239,143,20)"/><text x="463.00" y="238.50"></text></g><g><title>get_item_pointer (mapping.c:895) (1 samples, 0.12%)</title><rect x="460" y="244" width="1" height="15" fill="rgb(237,171,7)"/><text x="463.00" y="254.50"></text></g><g><title>PyArray_STRIDE (ndarraytypes.h:1516) (1 samples, 0.12%)</title><rect x="460" y="260" width="1" height="15" fill="rgb(248,222,30)"/><text x="463.00" y="270.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:5) (1 samples, 0.12%)</title><rect x="461" y="228" width="2" height="15" fill="rgb(241,63,34)"/><text x="464.00" y="238.50"></text></g><g><title>array_cumsum (methods.c:2228) (2 samples, 0.24%)</title><rect x="463" y="292" width="3" height="15" fill="rgb(224,78,9)"/><text x="466.00" y="302.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.12%)</title><rect x="464" y="308" width="2" height="15" fill="rgb(223,213,16)"/><text x="467.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.12%)</title><rect x="464" y="324" width="2" height="15" fill="rgb(242,109,21)"/><text x="467.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.12%)</title><rect x="464" y="340" width="2" height="15" fill="rgb(233,166,0)"/><text x="467.00" y="350.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.12%)</title><rect x="466" y="388" width="1" height="15" fill="rgb(254,96,33)"/><text x="469.00" y="398.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:245) (1 samples, 0.12%)</title><rect x="466" y="404" width="1" height="15" fill="rgb(211,130,10)"/><text x="469.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (6 samples, 0.71%)</title><rect x="461" y="212" width="9" height="15" fill="rgb(219,135,15)"/><text x="464.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.59%)</title><rect x="463" y="228" width="7" height="15" fill="rgb(231,15,44)"/><text x="466.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.59%)</title><rect x="463" y="244" width="7" height="15" fill="rgb(253,92,25)"/><text x="466.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (5 samples, 0.59%)</title><rect x="463" y="260" width="7" height="15" fill="rgb(226,87,10)"/><text x="466.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.59%)</title><rect x="463" y="276" width="7" height="15" fill="rgb(248,174,9)"/><text x="466.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (3 samples, 0.35%)</title><rect x="466" y="292" width="4" height="15" fill="rgb(233,78,50)"/><text x="469.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (3 samples, 0.35%)</title><rect x="466" y="308" width="4" height="15" fill="rgb(220,32,47)"/><text x="469.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 0.35%)</title><rect x="466" y="324" width="4" height="15" fill="rgb(247,151,14)"/><text x="469.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (3 samples, 0.35%)</title><rect x="466" y="340" width="4" height="15" fill="rgb(210,31,12)"/><text x="469.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (3 samples, 0.35%)</title><rect x="466" y="356" width="4" height="15" fill="rgb(241,167,38)"/><text x="469.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (3 samples, 0.35%)</title><rect x="466" y="372" width="4" height="15" fill="rgb(242,11,25)"/><text x="469.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1756) (2 samples, 0.24%)</title><rect x="467" y="388" width="3" height="15" fill="rgb(221,59,19)"/><text x="470.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (4 samples, 0.47%)</title><rect x="470" y="212" width="5" height="15" fill="rgb(237,8,45)"/><text x="473.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (2 samples, 0.24%)</title><rect x="473" y="228" width="2" height="15" fill="rgb(230,149,5)"/><text x="476.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.24%)</title><rect x="473" y="244" width="2" height="15" fill="rgb(225,44,1)"/><text x="476.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (2 samples, 0.24%)</title><rect x="473" y="260" width="2" height="15" fill="rgb(224,208,48)"/><text x="476.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.12%)</title><rect x="474" y="276" width="1" height="15" fill="rgb(224,149,44)"/><text x="477.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.12%)</title><rect x="475" y="276" width="2" height="15" fill="rgb(252,228,25)"/><text x="478.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (2 samples, 0.24%)</title><rect x="475" y="212" width="3" height="15" fill="rgb(231,148,16)"/><text x="478.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (2 samples, 0.24%)</title><rect x="475" y="228" width="3" height="15" fill="rgb(207,144,5)"/><text x="478.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.24%)</title><rect x="475" y="244" width="3" height="15" fill="rgb(215,89,20)"/><text x="478.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (2 samples, 0.24%)</title><rect x="475" y="260" width="3" height="15" fill="rgb(218,225,25)"/><text x="478.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.12%)</title><rect x="477" y="276" width="1" height="15" fill="rgb(218,222,13)"/><text x="480.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.12%)</title><rect x="478" y="244" width="2" height="15" fill="rgb(220,93,40)"/><text x="481.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (1 samples, 0.12%)</title><rect x="478" y="260" width="2" height="15" fill="rgb(246,149,51)"/><text x="481.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (1 samples, 0.12%)</title><rect x="478" y="276" width="2" height="15" fill="rgb(232,34,43)"/><text x="481.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (1 samples, 0.12%)</title><rect x="478" y="292" width="2" height="15" fill="rgb(254,102,47)"/><text x="481.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:937) (1 samples, 0.12%)</title><rect x="478" y="308" width="2" height="15" fill="rgb(221,37,38)"/><text x="481.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="478" y="324" width="2" height="15" fill="rgb(230,49,4)"/><text x="481.00" y="334.50"></text></g><g><title>0x7fd1ccfb9ab0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="478" y="340" width="2" height="15" fill="rgb(238,99,49)"/><text x="481.00" y="350.50"></text></g><g><title>0x7fd1ccfada0f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="478" y="356" width="2" height="15" fill="rgb(207,37,33)"/><text x="481.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.12%)</title><rect x="481" y="372" width="1" height="15" fill="rgb(249,196,27)"/><text x="484.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src:133) (1 samples, 0.12%)</title><rect x="482" y="388" width="2" height="15" fill="rgb(232,176,52)"/><text x="485.00" y="398.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.24%)</title><rect x="482" y="372" width="3" height="15" fill="rgb(249,0,0)"/><text x="485.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src:169) (1 samples, 0.12%)</title><rect x="484" y="388" width="1" height="15" fill="rgb(243,147,21)"/><text x="487.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (4 samples, 0.47%)</title><rect x="481" y="308" width="6" height="15" fill="rgb(235,94,0)"/><text x="484.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2150) (4 samples, 0.47%)</title><rect x="481" y="324" width="6" height="15" fill="rgb(223,25,51)"/><text x="484.00" y="334.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (4 samples, 0.47%)</title><rect x="481" y="340" width="6" height="15" fill="rgb(247,81,5)"/><text x="484.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 0.47%)</title><rect x="481" y="356" width="6" height="15" fill="rgb(213,190,46)"/><text x="484.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.12%)</title><rect x="485" y="372" width="2" height="15" fill="rgb(250,33,5)"/><text x="488.00" y="382.50"></text></g><g><title>PyArray_Choose (item_selection.c:786) (2 samples, 0.24%)</title><rect x="487" y="308" width="2" height="15" fill="rgb(226,63,25)"/><text x="490.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (16 samples, 1.89%)</title><rect x="478" y="212" width="22" height="15" fill="rgb(244,143,22)"/><text x="481.00" y="222.50">_..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (16 samples, 1.89%)</title><rect x="478" y="228" width="22" height="15" fill="rgb(224,34,43)"/><text x="481.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (15 samples, 1.77%)</title><rect x="480" y="244" width="20" height="15" fill="rgb(251,183,28)"/><text x="483.00" y="254.50"></text></g><g><title>choose (numpy/core/fromnumeric.py:432) (15 samples, 1.77%)</title><rect x="480" y="260" width="20" height="15" fill="rgb(218,90,27)"/><text x="483.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (15 samples, 1.77%)</title><rect x="480" y="276" width="20" height="15" fill="rgb(215,157,35)"/><text x="483.00" y="286.50"></text></g><g><title>array_choose (methods.c:1224) (14 samples, 1.65%)</title><rect x="481" y="292" width="19" height="15" fill="rgb(206,27,1)"/><text x="484.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:788) (8 samples, 0.95%)</title><rect x="489" y="308" width="11" height="15" fill="rgb(227,106,6)"/><text x="492.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (3 samples, 0.35%)</title><rect x="500" y="212" width="5" height="15" fill="rgb(227,109,30)"/><text x="503.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (2 samples, 0.24%)</title><rect x="502" y="228" width="3" height="15" fill="rgb(225,66,34)"/><text x="505.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="503" y="244" width="2" height="15" fill="rgb(238,223,22)"/><text x="506.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.12%)</title><rect x="505" y="212" width="1" height="15" fill="rgb(237,35,27)"/><text x="508.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.12%)</title><rect x="505" y="228" width="1" height="15" fill="rgb(241,136,31)"/><text x="508.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.12%)</title><rect x="505" y="244" width="1" height="15" fill="rgb(243,67,52)"/><text x="508.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.12%)</title><rect x="505" y="260" width="1" height="15" fill="rgb(241,79,43)"/><text x="508.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.12%)</title><rect x="505" y="276" width="1" height="15" fill="rgb(207,158,8)"/><text x="508.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="505" y="292" width="1" height="15" fill="rgb(218,4,47)"/><text x="508.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="505" y="308" width="1" height="15" fill="rgb(243,22,52)"/><text x="508.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="507" y="244" width="2" height="15" fill="rgb(240,211,7)"/><text x="510.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.12%)</title><rect x="507" y="260" width="2" height="15" fill="rgb(223,147,52)"/><text x="510.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.12%)</title><rect x="509" y="244" width="1" height="15" fill="rgb(206,168,54)"/><text x="512.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.12%)</title><rect x="509" y="260" width="1" height="15" fill="rgb(216,0,20)"/><text x="512.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.12%)</title><rect x="509" y="276" width="1" height="15" fill="rgb(228,88,54)"/><text x="512.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.12%)</title><rect x="509" y="292" width="1" height="15" fill="rgb(242,171,33)"/><text x="512.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.12%)</title><rect x="509" y="308" width="1" height="15" fill="rgb(242,220,3)"/><text x="512.00" y="318.50"></text></g><g><title>0x7fd1ccfc8b16 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="509" y="324" width="1" height="15" fill="rgb(217,94,28)"/><text x="512.00" y="334.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (1 samples, 0.12%)</title><rect x="513" y="356" width="1" height="15" fill="rgb(238,13,52)"/><text x="516.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.12%)</title><rect x="514" y="356" width="2" height="15" fill="rgb(250,195,26)"/><text x="517.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1076) (1 samples, 0.12%)</title><rect x="516" y="356" width="1" height="15" fill="rgb(220,191,6)"/><text x="519.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:330) (1 samples, 0.12%)</title><rect x="517" y="372" width="2" height="15" fill="rgb(221,149,49)"/><text x="520.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (2 samples, 0.24%)</title><rect x="517" y="356" width="3" height="15" fill="rgb(252,156,42)"/><text x="520.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:332) (1 samples, 0.12%)</title><rect x="519" y="372" width="1" height="15" fill="rgb(250,178,14)"/><text x="522.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.12%)</title><rect x="519" y="388" width="1" height="15" fill="rgb(215,14,10)"/><text x="522.00" y="398.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (8 samples, 0.95%)</title><rect x="512" y="260" width="11" height="15" fill="rgb(215,10,36)"/><text x="515.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 0.95%)</title><rect x="512" y="276" width="11" height="15" fill="rgb(217,82,20)"/><text x="515.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (8 samples, 0.95%)</title><rect x="512" y="292" width="11" height="15" fill="rgb(244,95,45)"/><text x="515.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (7 samples, 0.83%)</title><rect x="513" y="308" width="10" height="15" fill="rgb(233,74,33)"/><text x="516.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (7 samples, 0.83%)</title><rect x="513" y="324" width="10" height="15" fill="rgb(225,82,43)"/><text x="516.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (7 samples, 0.83%)</title><rect x="513" y="340" width="10" height="15" fill="rgb(251,91,48)"/><text x="516.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (2 samples, 0.24%)</title><rect x="520" y="356" width="3" height="15" fill="rgb(221,171,14)"/><text x="523.00" y="366.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:34) (10 samples, 1.18%)</title><rect x="510" y="244" width="14" height="15" fill="rgb(239,64,32)"/><text x="513.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="523" y="260" width="1" height="15" fill="rgb(239,87,48)"/><text x="526.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="523" y="276" width="1" height="15" fill="rgb(233,51,7)"/><text x="526.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.12%)</title><rect x="523" y="292" width="1" height="15" fill="rgb(235,147,25)"/><text x="526.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="523" y="308" width="1" height="15" fill="rgb(225,128,44)"/><text x="526.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="523" y="324" width="1" height="15" fill="rgb(217,94,24)"/><text x="526.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="523" y="340" width="1" height="15" fill="rgb(240,19,5)"/><text x="526.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="523" y="356" width="1" height="15" fill="rgb(228,109,2)"/><text x="526.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="523" y="372" width="1" height="15" fill="rgb(231,229,13)"/><text x="526.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="523" y="388" width="1" height="15" fill="rgb(254,171,47)"/><text x="526.00" y="398.50"></text></g><g><title>0x7fd1ccfc9cdd (libc-2.29.so) (1 samples, 0.12%)</title><rect x="523" y="404" width="1" height="15" fill="rgb(211,54,33)"/><text x="526.00" y="414.50"></text></g><g><title>aquicksort_float (quicksort.c.src:175) (1 samples, 0.12%)</title><rect x="527" y="372" width="1" height="15" fill="rgb(219,66,31)"/><text x="530.00" y="382.50"></text></g><g><title>npy_get_msb (npy_sort.h.src:15) (1 samples, 0.12%)</title><rect x="527" y="388" width="1" height="15" fill="rgb(236,208,49)"/><text x="530.00" y="398.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (3 samples, 0.35%)</title><rect x="528" y="372" width="5" height="15" fill="rgb(227,64,9)"/><text x="531.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (2 samples, 0.24%)</title><rect x="530" y="388" width="3" height="15" fill="rgb(243,13,8)"/><text x="533.00" y="398.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (6 samples, 0.71%)</title><rect x="526" y="356" width="8" height="15" fill="rgb(226,31,15)"/><text x="529.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:237) (1 samples, 0.12%)</title><rect x="533" y="372" width="1" height="15" fill="rgb(222,99,42)"/><text x="536.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.06%)</title><rect x="524" y="276" width="13" height="15" fill="rgb(242,120,18)"/><text x="527.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (9 samples, 1.06%)</title><rect x="524" y="292" width="13" height="15" fill="rgb(247,69,3)"/><text x="527.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (8 samples, 0.95%)</title><rect x="526" y="308" width="11" height="15" fill="rgb(244,67,18)"/><text x="529.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (8 samples, 0.95%)</title><rect x="526" y="324" width="11" height="15" fill="rgb(222,154,54)"/><text x="529.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (8 samples, 0.95%)</title><rect x="526" y="340" width="11" height="15" fill="rgb(235,180,9)"/><text x="529.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (2 samples, 0.24%)</title><rect x="534" y="356" width="3" height="15" fill="rgb(238,53,33)"/><text x="537.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (10 samples, 1.18%)</title><rect x="524" y="260" width="14" height="15" fill="rgb(216,96,29)"/><text x="527.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:318) (1 samples, 0.12%)</title><rect x="537" y="276" width="1" height="15" fill="rgb(228,1,30)"/><text x="540.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.12%)</title><rect x="538" y="260" width="2" height="15" fill="rgb(231,11,47)"/><text x="541.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.12%)</title><rect x="538" y="276" width="2" height="15" fill="rgb(217,187,50)"/><text x="541.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.12%)</title><rect x="538" y="292" width="2" height="15" fill="rgb(239,174,17)"/><text x="541.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.12%)</title><rect x="538" y="308" width="2" height="15" fill="rgb(234,229,4)"/><text x="541.00" y="318.50"></text></g><g><title>0x7fd1ccfc8909 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="538" y="324" width="2" height="15" fill="rgb(251,166,12)"/><text x="541.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.12%)</title><rect x="540" y="276" width="1" height="15" fill="rgb(251,81,24)"/><text x="543.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="540" y="292" width="1" height="15" fill="rgb(229,178,19)"/><text x="543.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2662) (1 samples, 0.12%)</title><rect x="541" y="276" width="1" height="15" fill="rgb(219,96,37)"/><text x="544.00" y="286.50"></text></g><g><title>mapiter_fill_info (mapping.c:2386) (1 samples, 0.12%)</title><rect x="541" y="292" width="1" height="15" fill="rgb(214,20,0)"/><text x="544.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:454) (1 samples, 0.12%)</title><rect x="542" y="308" width="2" height="15" fill="rgb(227,59,15)"/><text x="545.00" y="318.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.24%)</title><rect x="542" y="276" width="3" height="15" fill="rgb(229,19,13)"/><text x="545.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.24%)</title><rect x="542" y="292" width="3" height="15" fill="rgb(222,168,50)"/><text x="545.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.12%)</title><rect x="544" y="308" width="1" height="15" fill="rgb(219,188,4)"/><text x="547.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3260) (1 samples, 0.12%)</title><rect x="544" y="324" width="1" height="15" fill="rgb(238,70,19)"/><text x="547.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.12%)</title><rect x="545" y="340" width="1" height="15" fill="rgb(247,104,22)"/><text x="548.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (8 samples, 0.95%)</title><rect x="540" y="260" width="11" height="15" fill="rgb(246,99,21)"/><text x="543.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (4 samples, 0.47%)</title><rect x="545" y="276" width="6" height="15" fill="rgb(210,158,5)"/><text x="548.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (4 samples, 0.47%)</title><rect x="545" y="292" width="6" height="15" fill="rgb(237,141,34)"/><text x="548.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (4 samples, 0.47%)</title><rect x="545" y="308" width="6" height="15" fill="rgb(250,201,53)"/><text x="548.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.47%)</title><rect x="545" y="324" width="6" height="15" fill="rgb(243,58,20)"/><text x="548.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.35%)</title><rect x="546" y="340" width="5" height="15" fill="rgb(228,173,9)"/><text x="549.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (3 samples, 0.35%)</title><rect x="546" y="356" width="5" height="15" fill="rgb(242,146,29)"/><text x="549.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2516) (1 samples, 0.12%)</title><rect x="551" y="276" width="1" height="15" fill="rgb(238,29,24)"/><text x="554.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.12%)</title><rect x="552" y="292" width="1" height="15" fill="rgb(234,105,2)"/><text x="555.00" y="302.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (3 samples, 0.35%)</title><rect x="552" y="276" width="4" height="15" fill="rgb(240,125,24)"/><text x="555.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (2 samples, 0.24%)</title><rect x="553" y="292" width="3" height="15" fill="rgb(244,223,39)"/><text x="556.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (6 samples, 0.71%)</title><rect x="551" y="260" width="8" height="15" fill="rgb(214,53,18)"/><text x="554.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2521) (2 samples, 0.24%)</title><rect x="556" y="276" width="3" height="15" fill="rgb(219,88,36)"/><text x="559.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1517) (1 samples, 0.12%)</title><rect x="559" y="276" width="1" height="15" fill="rgb(232,114,31)"/><text x="562.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.12%)</title><rect x="560" y="276" width="2" height="15" fill="rgb(223,84,1)"/><text x="563.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (4 samples, 0.47%)</title><rect x="562" y="276" width="5" height="15" fill="rgb(209,227,16)"/><text x="565.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.12%)</title><rect x="567" y="276" width="2" height="15" fill="rgb(230,127,42)"/><text x="570.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.12%)</title><rect x="569" y="276" width="1" height="15" fill="rgb(224,76,21)"/><text x="572.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (2 samples, 0.24%)</title><rect x="570" y="276" width="3" height="15" fill="rgb(243,66,26)"/><text x="573.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.12%)</title><rect x="573" y="276" width="1" height="15" fill="rgb(232,223,29)"/><text x="576.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1676) (12 samples, 1.42%)</title><rect x="559" y="260" width="17" height="15" fill="rgb(208,156,0)"/><text x="562.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="574" y="276" width="2" height="15" fill="rgb(233,212,25)"/><text x="577.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.12%)</title><rect x="576" y="276" width="1" height="15" fill="rgb(241,77,7)"/><text x="579.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2029) (1 samples, 0.12%)</title><rect x="576" y="292" width="1" height="15" fill="rgb(228,143,4)"/><text x="579.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="576" y="260" width="3" height="15" fill="rgb(215,152,20)"/><text x="579.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="577" y="276" width="2" height="15" fill="rgb(235,98,41)"/><text x="580.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.12%)</title><rect x="577" y="292" width="2" height="15" fill="rgb(246,205,46)"/><text x="580.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.12%)</title><rect x="577" y="308" width="2" height="15" fill="rgb(232,152,52)"/><text x="580.00" y="318.50"></text></g><g><title>FLOAT_negative (loops.c.src:1999) (1 samples, 0.12%)</title><rect x="577" y="324" width="2" height="15" fill="rgb(216,109,14)"/><text x="580.00" y="334.50"></text></g><g><title>run_unary_simd_negative_FLOAT (simd.inc.src:195) (1 samples, 0.12%)</title><rect x="577" y="340" width="2" height="15" fill="rgb(247,105,26)"/><text x="580.00" y="350.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src:1057) (1 samples, 0.12%)</title><rect x="577" y="356" width="2" height="15" fill="rgb(215,14,3)"/><text x="580.00" y="366.50"></text></g><g><title>_mm_xor_ps (xmmintrin.h:231) (1 samples, 0.12%)</title><rect x="577" y="372" width="2" height="15" fill="rgb(250,90,22)"/><text x="580.00" y="382.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (40 samples, 4.73%)</title><rect x="524" y="244" width="56" height="15" fill="rgb(218,83,20)"/><text x="527.00" y="254.50">topk_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.12%)</title><rect x="579" y="260" width="1" height="15" fill="rgb(207,160,53)"/><text x="582.00" y="270.50"></text></g><g><title>0x7fd1ccfe9120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="580" y="260" width="1" height="15" fill="rgb(215,117,33)"/><text x="583.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.12%)</title><rect x="581" y="276" width="2" height="15" fill="rgb(236,165,37)"/><text x="584.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.12%)</title><rect x="581" y="292" width="2" height="15" fill="rgb(235,11,23)"/><text x="584.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.12%)</title><rect x="581" y="308" width="2" height="15" fill="rgb(224,100,10)"/><text x="584.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2305) (1 samples, 0.12%)</title><rect x="581" y="324" width="2" height="15" fill="rgb(229,70,43)"/><text x="584.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.12%)</title><rect x="583" y="340" width="1" height="15" fill="rgb(244,28,11)"/><text x="586.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.12%)</title><rect x="584" y="340" width="2" height="15" fill="rgb(254,187,29)"/><text x="587.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (4 samples, 0.47%)</title><rect x="581" y="260" width="6" height="15" fill="rgb(214,39,47)"/><text x="584.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (3 samples, 0.35%)</title><rect x="583" y="276" width="4" height="15" fill="rgb(224,161,24)"/><text x="586.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (3 samples, 0.35%)</title><rect x="583" y="292" width="4" height="15" fill="rgb(212,125,54)"/><text x="586.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (3 samples, 0.35%)</title><rect x="583" y="308" width="4" height="15" fill="rgb(247,214,1)"/><text x="586.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.35%)</title><rect x="583" y="324" width="4" height="15" fill="rgb(226,16,9)"/><text x="586.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="586" y="340" width="1" height="15" fill="rgb(222,113,3)"/><text x="589.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.12%)</title><rect x="586" y="356" width="1" height="15" fill="rgb(247,162,15)"/><text x="589.00" y="366.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.12%)</title><rect x="587" y="292" width="1" height="15" fill="rgb(218,24,14)"/><text x="590.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.24%)</title><rect x="587" y="260" width="3" height="15" fill="rgb(251,194,41)"/><text x="590.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (2 samples, 0.24%)</title><rect x="587" y="276" width="3" height="15" fill="rgb(230,43,19)"/><text x="590.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.12%)</title><rect x="588" y="292" width="2" height="15" fill="rgb(247,131,47)"/><text x="591.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.12%)</title><rect x="590" y="276" width="1" height="15" fill="rgb(225,109,9)"/><text x="593.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.12%)</title><rect x="591" y="276" width="2" height="15" fill="rgb(221,165,12)"/><text x="594.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.12%)</title><rect x="593" y="276" width="1" height="15" fill="rgb(251,87,24)"/><text x="596.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (217 samples, 25.65%)</title><rect x="293" y="196" width="302" height="15" fill="rgb(220,141,7)"/><text x="296.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:118)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (64 samples, 7.57%)</title><rect x="506" y="212" width="89" height="15" fill="rgb(214,32,46)"/><text x="509.00" y="222.50">_run (mlpr..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (64 samples, 7.57%)</title><rect x="506" y="228" width="89" height="15" fill="rgb(212,127,16)"/><text x="509.00" y="238.50">_common_ru..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (11 samples, 1.30%)</title><rect x="580" y="244" width="15" height="15" fill="rgb(247,33,27)"/><text x="583.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (4 samples, 0.47%)</title><rect x="590" y="260" width="5" height="15" fill="rgb(243,67,39)"/><text x="593.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.12%)</title><rect x="594" y="276" width="1" height="15" fill="rgb(234,189,9)"/><text x="597.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.12%)</title><rect x="595" y="292" width="2" height="15" fill="rgb(221,211,17)"/><text x="598.00" y="302.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (2 samples, 0.24%)</title><rect x="595" y="260" width="3" height="15" fill="rgb(253,107,39)"/><text x="598.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (2 samples, 0.24%)</title><rect x="595" y="276" width="3" height="15" fill="rgb(209,129,27)"/><text x="598.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="597" y="292" width="1" height="15" fill="rgb(253,125,37)"/><text x="600.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (1 samples, 0.12%)</title><rect x="597" y="308" width="1" height="15" fill="rgb(211,98,11)"/><text x="600.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.12%)</title><rect x="597" y="324" width="1" height="15" fill="rgb(244,74,8)"/><text x="600.00" y="334.50"></text></g><g><title>array_argmin (methods.c:317) (1 samples, 0.12%)</title><rect x="597" y="340" width="1" height="15" fill="rgb(213,156,9)"/><text x="600.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c:247) (1 samples, 0.12%)</title><rect x="597" y="356" width="1" height="15" fill="rgb(214,212,19)"/><text x="600.00" y="366.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src:3187) (1 samples, 0.12%)</title><rect x="597" y="372" width="1" height="15" fill="rgb(231,14,51)"/><text x="600.00" y="382.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (1 samples, 0.12%)</title><rect x="598" y="260" width="2" height="15" fill="rgb(207,210,19)"/><text x="601.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="598" y="276" width="2" height="15" fill="rgb(249,107,42)"/><text x="601.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="598" y="292" width="2" height="15" fill="rgb(253,106,54)"/><text x="601.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.12%)</title><rect x="598" y="308" width="2" height="15" fill="rgb(213,112,51)"/><text x="601.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.12%)</title><rect x="598" y="324" width="2" height="15" fill="rgb(227,11,16)"/><text x="601.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (4 samples, 0.47%)</title><rect x="595" y="196" width="6" height="15" fill="rgb(227,108,5)"/><text x="598.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (4 samples, 0.47%)</title><rect x="595" y="212" width="6" height="15" fill="rgb(247,76,5)"/><text x="598.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (4 samples, 0.47%)</title><rect x="595" y="228" width="6" height="15" fill="rgb(240,31,52)"/><text x="598.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (4 samples, 0.47%)</title><rect x="595" y="244" width="6" height="15" fill="rgb(206,70,37)"/><text x="598.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:16) (1 samples, 0.12%)</title><rect x="600" y="260" width="1" height="15" fill="rgb(225,142,37)"/><text x="603.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.12%)</title><rect x="600" y="276" width="1" height="15" fill="rgb(222,4,41)"/><text x="603.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.12%)</title><rect x="600" y="292" width="1" height="15" fill="rgb(225,167,37)"/><text x="603.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.12%)</title><rect x="600" y="308" width="1" height="15" fill="rgb(254,69,24)"/><text x="603.00" y="318.50"></text></g><g><title>0x7fd18da6154f (?) (1 samples, 0.12%)</title><rect x="601" y="244" width="1" height="15" fill="rgb(249,166,32)"/><text x="604.00" y="254.50"></text></g><g><title>0x7fd18da6765e (?) (1 samples, 0.12%)</title><rect x="601" y="260" width="1" height="15" fill="rgb(238,6,27)"/><text x="604.00" y="270.50"></text></g><g><title>0x7fd18da6750f (?) (1 samples, 0.12%)</title><rect x="601" y="276" width="1" height="15" fill="rgb(250,90,6)"/><text x="604.00" y="286.50"></text></g><g><title>0x7fd18da6dd6c (?) (1 samples, 0.12%)</title><rect x="601" y="292" width="1" height="15" fill="rgb(245,198,15)"/><text x="604.00" y="302.50"></text></g><g><title>0x7fd196fceab9 (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="601" y="308" width="1" height="15" fill="rgb(247,72,30)"/><text x="604.00" y="318.50"></text></g><g><title>0x7fd196fcfeab (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="601" y="324" width="1" height="15" fill="rgb(208,118,20)"/><text x="604.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.12%)</title><rect x="602" y="276" width="2" height="15" fill="rgb(243,140,45)"/><text x="605.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.12%)</title><rect x="602" y="292" width="2" height="15" fill="rgb(221,199,8)"/><text x="605.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.12%)</title><rect x="602" y="308" width="2" height="15" fill="rgb(234,51,31)"/><text x="605.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.12%)</title><rect x="602" y="324" width="2" height="15" fill="rgb(220,177,34)"/><text x="605.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.12%)</title><rect x="602" y="340" width="2" height="15" fill="rgb(254,148,30)"/><text x="605.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.12%)</title><rect x="602" y="356" width="2" height="15" fill="rgb(220,151,48)"/><text x="605.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.12%)</title><rect x="602" y="372" width="2" height="15" fill="rgb(245,54,23)"/><text x="605.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.12%)</title><rect x="602" y="388" width="2" height="15" fill="rgb(205,78,13)"/><text x="605.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.12%)</title><rect x="602" y="404" width="2" height="15" fill="rgb(247,61,4)"/><text x="605.00" y="414.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h:924) (1 samples, 0.12%)</title><rect x="604" y="340" width="1" height="15" fill="rgb(231,30,38)"/><text x="607.00" y="350.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::raw_array_t (numpy.h:943) (1 samples, 0.12%)</title><rect x="604" y="356" width="1" height="15" fill="rgb(235,76,52)"/><text x="607.00" y="366.50"></text></g><g><title>pybind11::dtype::of&lt;float&gt; (numpy.h:479) (1 samples, 0.12%)</title><rect x="604" y="372" width="1" height="15" fill="rgb(247,84,7)"/><text x="607.00" y="382.50"></text></g><g><title>pybind11::detail::npy_format_descriptor&lt;float, void&gt;::dtype (numpy.h:1046) (1 samples, 0.12%)</title><rect x="604" y="388" width="1" height="15" fill="rgb(251,23,22)"/><text x="607.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.12%)</title><rect x="604" y="404" width="1" height="15" fill="rgb(252,88,9)"/><text x="607.00" y="414.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (2 samples, 0.24%)</title><rect x="604" y="276" width="2" height="15" fill="rgb(222,187,46)"/><text x="607.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (2 samples, 0.24%)</title><rect x="604" y="292" width="2" height="15" fill="rgb(213,22,48)"/><text x="607.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (2 samples, 0.24%)</title><rect x="604" y="308" width="2" height="15" fill="rgb(243,70,37)"/><text x="607.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (2 samples, 0.24%)</title><rect x="604" y="324" width="2" height="15" fill="rgb(228,117,48)"/><text x="607.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.12%)</title><rect x="605" y="340" width="1" height="15" fill="rgb(214,38,3)"/><text x="608.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.12%)</title><rect x="605" y="356" width="1" height="15" fill="rgb(236,185,52)"/><text x="608.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.12%)</title><rect x="605" y="372" width="1" height="15" fill="rgb(231,200,52)"/><text x="608.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.12%)</title><rect x="605" y="388" width="1" height="15" fill="rgb(205,163,36)"/><text x="608.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.12%)</title><rect x="605" y="404" width="1" height="15" fill="rgb(210,130,5)"/><text x="608.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="605" y="420" width="1" height="15" fill="rgb(249,146,26)"/><text x="608.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.12%)</title><rect x="605" y="436" width="1" height="15" fill="rgb(210,177,37)"/><text x="608.00" y="446.50"></text></g><g><title>0x7fd196fcfea9 (libgomp.so.1.0.0) (8 samples, 0.95%)</title><rect x="606" y="484" width="12" height="15" fill="rgb(234,182,53)"/><text x="609.00" y="494.50"></text></g><g><title>0x7fd196fcfeab (libgomp.so.1.0.0) (14 samples, 1.65%)</title><rect x="618" y="484" width="19" height="15" fill="rgb(213,15,39)"/><text x="621.00" y="494.50"></text></g><g><title>0x7fd196fceab9 (libgomp.so.1.0.0) (34 samples, 4.02%)</title><rect x="606" y="468" width="48" height="15" fill="rgb(224,125,5)"/><text x="609.00" y="478.50">0x7f..</text></g><g><title>0x7fd196fcfead (libgomp.so.1.0.0) (12 samples, 1.42%)</title><rect x="637" y="484" width="17" height="15" fill="rgb(209,140,45)"/><text x="640.00" y="494.50"></text></g><g><title>0x7fd196fcfcfb (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="654" y="500" width="1" height="15" fill="rgb(243,199,11)"/><text x="657.00" y="510.50"></text></g><g><title>0x7fd196fcfcfd (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="655" y="500" width="2" height="15" fill="rgb(222,74,50)"/><text x="658.00" y="510.50"></text></g><g><title>0x7fd196fcddaa (libgomp.so.1.0.0) (3 samples, 0.35%)</title><rect x="654" y="484" width="4" height="15" fill="rgb(209,141,53)"/><text x="657.00" y="494.50"></text></g><g><title>0x7fd196fcfd6d (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="657" y="500" width="1" height="15" fill="rgb(231,145,32)"/><text x="660.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (42 samples, 4.96%)</title><rect x="601" y="196" width="58" height="15" fill="rgb(222,151,14)"/><text x="604.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (42 samples, 4.96%)</title><rect x="601" y="212" width="58" height="15" fill="rgb(253,7,16)"/><text x="604.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (42 samples, 4.96%)</title><rect x="601" y="228" width="58" height="15" fill="rgb(236,28,36)"/><text x="604.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (41 samples, 4.85%)</title><rect x="602" y="244" width="57" height="15" fill="rgb(228,132,4)"/><text x="605.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (41 samples, 4.85%)</title><rect x="602" y="260" width="57" height="15" fill="rgb(219,90,24)"/><text x="605.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (38 samples, 4.49%)</title><rect x="606" y="276" width="53" height="15" fill="rgb(252,103,25)"/><text x="609.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (38 samples, 4.49%)</title><rect x="606" y="292" width="53" height="15" fill="rgb(252,150,37)"/><text x="609.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (38 samples, 4.49%)</title><rect x="606" y="308" width="53" height="15" fill="rgb(231,48,12)"/><text x="609.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (38 samples, 4.49%)</title><rect x="606" y="324" width="53" height="15" fill="rgb(231,168,18)"/><text x="609.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (38 samples, 4.49%)</title><rect x="606" y="340" width="53" height="15" fill="rgb(225,23,44)"/><text x="609.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (38 samples, 4.49%)</title><rect x="606" y="356" width="53" height="15" fill="rgb(242,32,24)"/><text x="609.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (38 samples, 4.49%)</title><rect x="606" y="372" width="53" height="15" fill="rgb(234,127,38)"/><text x="609.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (38 samples, 4.49%)</title><rect x="606" y="388" width="53" height="15" fill="rgb(234,41,2)"/><text x="609.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (38 samples, 4.49%)</title><rect x="606" y="404" width="53" height="15" fill="rgb(208,167,11)"/><text x="609.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (38 samples, 4.49%)</title><rect x="606" y="420" width="53" height="15" fill="rgb(215,39,54)"/><text x="609.00" y="430.50">Runti..</text></g><g><title>pybind11::array::size (numpy.h:619) (38 samples, 4.49%)</title><rect x="606" y="436" width="53" height="15" fill="rgb(250,47,41)"/><text x="609.00" y="446.50">pybin..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (38 samples, 4.49%)</title><rect x="606" y="452" width="53" height="15" fill="rgb(244,147,54)"/><text x="609.00" y="462.50">std::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.47%)</title><rect x="654" y="468" width="5" height="15" fill="rgb(235,140,37)"/><text x="657.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:377) (1 samples, 0.12%)</title><rect x="658" y="484" width="1" height="15" fill="rgb(217,43,3)"/><text x="661.00" y="494.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.12%)</title><rect x="661" y="308" width="1" height="15" fill="rgb(242,115,14)"/><text x="664.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.24%)</title><rect x="661" y="276" width="3" height="15" fill="rgb(243,148,44)"/><text x="664.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.24%)</title><rect x="661" y="292" width="3" height="15" fill="rgb(217,2,53)"/><text x="664.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.12%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(252,88,35)"/><text x="665.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (4 samples, 0.47%)</title><rect x="659" y="196" width="6" height="15" fill="rgb(205,220,4)"/><text x="662.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (4 samples, 0.47%)</title><rect x="659" y="212" width="6" height="15" fill="rgb(242,169,5)"/><text x="662.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.35%)</title><rect x="661" y="228" width="4" height="15" fill="rgb(246,156,5)"/><text x="664.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.35%)</title><rect x="661" y="244" width="4" height="15" fill="rgb(228,196,53)"/><text x="664.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.35%)</title><rect x="661" y="260" width="4" height="15" fill="rgb(246,1,54)"/><text x="664.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.12%)</title><rect x="664" y="276" width="1" height="15" fill="rgb(253,218,49)"/><text x="667.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.12%)</title><rect x="664" y="292" width="1" height="15" fill="rgb(206,147,0)"/><text x="667.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="664" y="308" width="1" height="15" fill="rgb(220,184,34)"/><text x="667.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="664" y="324" width="1" height="15" fill="rgb(214,118,54)"/><text x="667.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.12%)</title><rect x="664" y="340" width="1" height="15" fill="rgb(248,8,18)"/><text x="667.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.12%)</title><rect x="665" y="308" width="1" height="15" fill="rgb(237,84,41)"/><text x="668.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2296) (1 samples, 0.12%)</title><rect x="665" y="324" width="1" height="15" fill="rgb(217,7,42)"/><text x="668.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (270 samples, 31.91%)</title><rect x="291" y="180" width="377" height="15" fill="rgb(215,148,26)"/><text x="294.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (2 samples, 0.24%)</title><rect x="665" y="196" width="3" height="15" fill="rgb(252,113,8)"/><text x="668.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.24%)</title><rect x="665" y="212" width="3" height="15" fill="rgb(245,207,49)"/><text x="668.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (2 samples, 0.24%)</title><rect x="665" y="228" width="3" height="15" fill="rgb(215,130,20)"/><text x="668.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="665" y="244" width="3" height="15" fill="rgb(231,169,20)"/><text x="668.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="665" y="260" width="3" height="15" fill="rgb(238,135,44)"/><text x="668.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.24%)</title><rect x="665" y="276" width="3" height="15" fill="rgb(244,52,3)"/><text x="668.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.24%)</title><rect x="665" y="292" width="3" height="15" fill="rgb(248,2,15)"/><text x="668.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="666" y="308" width="2" height="15" fill="rgb(209,57,20)"/><text x="669.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2780) (1 samples, 0.12%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(253,140,44)"/><text x="669.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.12%)</title><rect x="668" y="180" width="1" height="15" fill="rgb(232,59,30)"/><text x="671.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (279 samples, 32.98%)</title><rect x="281" y="132" width="390" height="15" fill="rgb(205,65,6)"/><text x="284.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:3..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (279 samples, 32.98%)</title><rect x="281" y="148" width="390" height="15" fill="rgb(214,24,20)"/><text x="284.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (276 samples, 32.62%)</title><rect x="286" y="164" width="385" height="15" fill="rgb(246,63,6)"/><text x="289.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.12%)</title><rect x="669" y="180" width="2" height="15" fill="rgb(238,188,19)"/><text x="672.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:61) (281 samples, 33.22%)</title><rect x="280" y="52" width="392" height="15" fill="rgb(218,41,26)"/><text x="283.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_est..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:60) (281 samples, 33.22%)</title><rect x="280" y="68" width="392" height="15" fill="rgb(210,148,47)"/><text x="283.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:37) (280 samples, 33.10%)</title><rect x="281" y="84" width="391" height="15" fill="rgb(235,132,18)"/><text x="284.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:31) (280 samples, 33.10%)</title><rect x="281" y="100" width="391" height="15" fill="rgb(215,206,49)"/><text x="284.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_esti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (280 samples, 33.10%)</title><rect x="281" y="116" width="391" height="15" fill="rgb(249,214,29)"/><text x="284.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.12%)</title><rect x="671" y="132" width="1" height="15" fill="rgb(253,127,20)"/><text x="674.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.12%)</title><rect x="675" y="148" width="1" height="15" fill="rgb(219,192,36)"/><text x="678.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.24%)</title><rect x="676" y="196" width="3" height="15" fill="rgb(239,7,49)"/><text x="679.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.12%)</title><rect x="678" y="212" width="1" height="15" fill="rgb(237,134,21)"/><text x="681.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="678" y="228" width="1" height="15" fill="rgb(212,204,20)"/><text x="681.00" y="238.50"></text></g><g><title>0x7fd18cfce1a0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="678" y="244" width="1" height="15" fill="rgb(221,117,34)"/><text x="681.00" y="254.50"></text></g><g><title>0x7fd18d006ff9 (?) (1 samples, 0.12%)</title><rect x="679" y="212" width="1" height="15" fill="rgb(252,28,27)"/><text x="682.00" y="222.50"></text></g><g><title>0x7fd18d001ef6 (?) (1 samples, 0.12%)</title><rect x="679" y="228" width="1" height="15" fill="rgb(225,196,15)"/><text x="682.00" y="238.50"></text></g><g><title>0x7fd18cff6962 (?) (1 samples, 0.12%)</title><rect x="679" y="244" width="1" height="15" fill="rgb(214,132,25)"/><text x="682.00" y="254.50"></text></g><g><title>0x7fd18d02a7a7 (?) (1 samples, 0.12%)</title><rect x="679" y="260" width="1" height="15" fill="rgb(232,70,22)"/><text x="682.00" y="270.50"></text></g><g><title>0x7fd18d02a379 (?) (1 samples, 0.12%)</title><rect x="679" y="276" width="1" height="15" fill="rgb(239,150,8)"/><text x="682.00" y="286.50"></text></g><g><title>0x7fd18d4888b8 (?) (1 samples, 0.12%)</title><rect x="679" y="292" width="1" height="15" fill="rgb(235,59,26)"/><text x="682.00" y="302.50"></text></g><g><title>0x7fd18d486c7f (?) (1 samples, 0.12%)</title><rect x="679" y="308" width="1" height="15" fill="rgb(207,176,37)"/><text x="682.00" y="318.50"></text></g><g><title>0x7fd18d49999c (?) (1 samples, 0.12%)</title><rect x="679" y="324" width="1" height="15" fill="rgb(244,41,28)"/><text x="682.00" y="334.50"></text></g><g><title>0x7fd18d1c0dc2 (?) (1 samples, 0.12%)</title><rect x="679" y="340" width="1" height="15" fill="rgb(218,136,34)"/><text x="682.00" y="350.50"></text></g><g><title>0x7fd18d1c03e2 (?) (1 samples, 0.12%)</title><rect x="679" y="356" width="1" height="15" fill="rgb(215,98,38)"/><text x="682.00" y="366.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="685" y="356" width="4" height="15" fill="rgb(216,151,23)"/><text x="688.00" y="366.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.83%)</title><rect x="680" y="340" width="10" height="15" fill="rgb(251,185,20)"/><text x="683.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="689" y="356" width="1" height="15" fill="rgb(241,221,27)"/><text x="692.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="690" y="340" width="2" height="15" fill="rgb(206,42,49)"/><text x="693.00" y="350.50"></text></g><g><title>0x7fd1ccfe8d97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="372" width="2" height="15" fill="rgb(208,172,21)"/><text x="697.00" y="382.50"></text></g><g><title>0x7fd1ccfe8dbf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="696" y="372" width="1" height="15" fill="rgb(230,163,5)"/><text x="699.00" y="382.50"></text></g><g><title>0x7fd1ccfe8dc3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="697" y="372" width="2" height="15" fill="rgb(247,206,40)"/><text x="700.00" y="382.50"></text></g><g><title>0x7fd1ccfe8dc9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="699" y="372" width="1" height="15" fill="rgb(241,14,1)"/><text x="702.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.83%)</title><rect x="692" y="340" width="9" height="15" fill="rgb(220,61,36)"/><text x="695.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.83%)</title><rect x="692" y="356" width="9" height="15" fill="rgb(247,207,36)"/><text x="695.00" y="366.50"></text></g><g><title>0x7fd1ccfe8dcb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="700" y="372" width="1" height="15" fill="rgb(219,101,23)"/><text x="703.00" y="382.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.95%)</title><rect x="701" y="356" width="11" height="15" fill="rgb(221,121,39)"/><text x="704.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.06%)</title><rect x="701" y="340" width="13" height="15" fill="rgb(240,55,0)"/><text x="704.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="712" y="356" width="2" height="15" fill="rgb(247,161,30)"/><text x="715.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="712" y="372" width="2" height="15" fill="rgb(221,86,51)"/><text x="715.00" y="382.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="714" y="340" width="4" height="15" fill="rgb(236,226,1)"/><text x="717.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="717" y="356" width="1" height="15" fill="rgb(233,17,44)"/><text x="720.00" y="366.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="718" y="340" width="6" height="15" fill="rgb(240,187,51)"/><text x="721.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="718" y="356" width="6" height="15" fill="rgb(250,172,49)"/><text x="721.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="722" y="372" width="2" height="15" fill="rgb(221,178,53)"/><text x="725.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="724" y="372" width="4" height="15" fill="rgb(216,54,35)"/><text x="727.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="724" y="340" width="5" height="15" fill="rgb(211,121,34)"/><text x="727.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="724" y="356" width="5" height="15" fill="rgb(243,181,40)"/><text x="727.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="372" width="1" height="15" fill="rgb(237,192,22)"/><text x="731.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="388" width="1" height="15" fill="rgb(251,222,1)"/><text x="731.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="404" width="1" height="15" fill="rgb(222,212,22)"/><text x="731.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="420" width="1" height="15" fill="rgb(232,89,8)"/><text x="731.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="436" width="1" height="15" fill="rgb(229,104,44)"/><text x="731.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="452" width="1" height="15" fill="rgb(218,137,24)"/><text x="731.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="468" width="1" height="15" fill="rgb(224,144,48)"/><text x="731.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="484" width="1" height="15" fill="rgb(214,160,51)"/><text x="731.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="500" width="1" height="15" fill="rgb(229,100,5)"/><text x="731.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="728" y="516" width="1" height="15" fill="rgb(254,56,0)"/><text x="731.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="728" y="532" width="1" height="15" fill="rgb(239,206,12)"/><text x="731.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="728" y="548" width="1" height="15" fill="rgb(218,175,9)"/><text x="731.00" y="558.50"></text></g><g><title>0x7fd18cfce0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="765" y="388" width="2" height="15" fill="rgb(211,188,30)"/><text x="768.00" y="398.50"></text></g><g><title>0x7fd1bca957a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="767" y="388" width="1" height="15" fill="rgb(205,85,35)"/><text x="770.00" y="398.50"></text></g><g><title>0x7fd1ccfc8bdc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="768" y="388" width="2" height="15" fill="rgb(210,194,2)"/><text x="771.00" y="398.50"></text></g><g><title>0x7fd1cd19ae7e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="770" y="388" width="1" height="15" fill="rgb(245,24,46)"/><text x="773.00" y="398.50"></text></g><g><title>0x7fd1cd19ae91 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="771" y="388" width="1" height="15" fill="rgb(246,16,42)"/><text x="774.00" y="398.50"></text></g><g><title>0x7fd1cd19aee6 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="772" y="388" width="2" height="15" fill="rgb(249,87,12)"/><text x="775.00" y="398.50"></text></g><g><title>0x7fd1cd19aeee (libm-2.29.so) (1 samples, 0.12%)</title><rect x="774" y="388" width="1" height="15" fill="rgb(250,120,27)"/><text x="777.00" y="398.50"></text></g><g><title>0x7fd1cd19aef6 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="775" y="388" width="2" height="15" fill="rgb(237,28,40)"/><text x="778.00" y="398.50"></text></g><g><title>0x7fd1cd19aefa (libm-2.29.so) (3 samples, 0.35%)</title><rect x="777" y="388" width="4" height="15" fill="rgb(241,108,6)"/><text x="780.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="781" y="388" width="1" height="15" fill="rgb(242,128,42)"/><text x="784.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="782" y="388" width="3" height="15" fill="rgb(212,227,36)"/><text x="785.00" y="398.50"></text></g><g><title>0x7fd1ccfc8906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="788" y="404" width="1" height="15" fill="rgb(238,104,46)"/><text x="791.00" y="414.50"></text></g><g><title>0x7fd1ccfc8961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="789" y="404" width="2" height="15" fill="rgb(226,101,35)"/><text x="792.00" y="414.50"></text></g><g><title>0x7fd1ccfc896a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="791" y="404" width="1" height="15" fill="rgb(229,97,3)"/><text x="794.00" y="414.50"></text></g><g><title>0x7fd1ccfc8971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="792" y="404" width="1" height="15" fill="rgb(238,34,47)"/><text x="795.00" y="414.50"></text></g><g><title>0x7fd1ccfc8bdc (libc-2.29.so) (5 samples, 0.59%)</title><rect x="793" y="404" width="7" height="15" fill="rgb(236,69,26)"/><text x="796.00" y="414.50"></text></g><g><title>0x7fd1ccfc8be0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="800" y="404" width="2" height="15" fill="rgb(247,99,45)"/><text x="803.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.35%)</title><rect x="802" y="404" width="4" height="15" fill="rgb(244,36,29)"/><text x="805.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 7.21%)</title><rect x="729" y="340" width="85" height="15" fill="rgb(217,175,9)"/><text x="732.00" y="350.50">onnxruntim..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 7.21%)</title><rect x="729" y="356" width="85" height="15" fill="rgb(246,72,13)"/><text x="732.00" y="366.50">onnxruntim..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 7.21%)</title><rect x="729" y="372" width="85" height="15" fill="rgb(254,219,17)"/><text x="732.00" y="382.50">onnxruntim..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 2.48%)</title><rect x="785" y="388" width="29" height="15" fill="rgb(252,134,47)"/><text x="788.00" y="398.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.71%)</title><rect x="806" y="404" width="8" height="15" fill="rgb(208,42,49)"/><text x="809.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.71%)</title><rect x="806" y="420" width="8" height="15" fill="rgb(241,32,42)"/><text x="809.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.59%)</title><rect x="814" y="340" width="7" height="15" fill="rgb(218,165,41)"/><text x="817.00" y="350.50"></text></g><g><title>0x7fd18cfce0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="859" y="356" width="1" height="15" fill="rgb(214,220,37)"/><text x="862.00" y="366.50"></text></g><g><title>0x7fd1bca957a0 (libstdc++.so.6.0.28) (3 samples, 0.35%)</title><rect x="860" y="356" width="5" height="15" fill="rgb(239,30,12)"/><text x="863.00" y="366.50"></text></g><g><title>0x7fd1ccfc8906 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="865" y="356" width="2" height="15" fill="rgb(220,211,25)"/><text x="868.00" y="366.50"></text></g><g><title>0x7fd1ccfc890e (libc-2.29.so) (3 samples, 0.35%)</title><rect x="867" y="356" width="4" height="15" fill="rgb(245,122,52)"/><text x="870.00" y="366.50"></text></g><g><title>0x7fd1ccfc891e (libc-2.29.so) (2 samples, 0.24%)</title><rect x="871" y="356" width="3" height="15" fill="rgb(208,0,32)"/><text x="874.00" y="366.50"></text></g><g><title>0x7fd1ccfc8929 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="874" y="356" width="3" height="15" fill="rgb(209,74,29)"/><text x="877.00" y="366.50"></text></g><g><title>0x7fd1ccfc8961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="877" y="356" width="1" height="15" fill="rgb(248,184,53)"/><text x="880.00" y="366.50"></text></g><g><title>0x7fd1ccfc8965 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="878" y="356" width="3" height="15" fill="rgb(245,137,25)"/><text x="881.00" y="366.50"></text></g><g><title>0x7fd1ccfc896a (libc-2.29.so) (2 samples, 0.24%)</title><rect x="881" y="356" width="3" height="15" fill="rgb(253,204,9)"/><text x="884.00" y="366.50"></text></g><g><title>0x7fd1ccfc897c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="884" y="356" width="1" height="15" fill="rgb(217,3,5)"/><text x="887.00" y="366.50"></text></g><g><title>0x7fd1ccfc8991 (libc-2.29.so) (6 samples, 0.71%)</title><rect x="885" y="356" width="9" height="15" fill="rgb(225,149,24)"/><text x="888.00" y="366.50"></text></g><g><title>0x7fd1ccfc8998 (libc-2.29.so) (3 samples, 0.35%)</title><rect x="894" y="356" width="4" height="15" fill="rgb(237,119,48)"/><text x="897.00" y="366.50"></text></g><g><title>0x7fd1ccfc8a41 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="898" y="356" width="3" height="15" fill="rgb(223,226,17)"/><text x="901.00" y="366.50"></text></g><g><title>0x7fd1ccfc8bc0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="901" y="356" width="1" height="15" fill="rgb(206,80,44)"/><text x="904.00" y="366.50"></text></g><g><title>0x7fd1ccfe9120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="902" y="356" width="2" height="15" fill="rgb(220,149,35)"/><text x="905.00" y="366.50"></text></g><g><title>0x7fd1ccfe912b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="904" y="356" width="1" height="15" fill="rgb(225,50,15)"/><text x="907.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.59%)</title><rect x="905" y="356" width="7" height="15" fill="rgb(249,54,16)"/><text x="908.00" y="366.50"></text></g><g><title>0x7fd18cfcd930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1019" y="388" width="2" height="15" fill="rgb(234,63,11)"/><text x="1022.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.83%)</title><rect x="1021" y="388" width="9" height="15" fill="rgb(222,116,6)"/><text x="1024.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.83%)</title><rect x="1021" y="404" width="9" height="15" fill="rgb(221,32,49)"/><text x="1024.00" y="414.50"></text></g><g><title>0x7fd1ccfe9120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1050" y="420" width="1" height="15" fill="rgb(218,9,15)"/><text x="1053.00" y="430.50"></text></g><g><title>0x7fd1ccfe912f (libc-2.29.so) (2 samples, 0.24%)</title><rect x="1051" y="420" width="3" height="15" fill="rgb(242,75,32)"/><text x="1054.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.77%)</title><rect x="1046" y="404" width="21" height="15" fill="rgb(235,204,3)"/><text x="1049.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.06%)</title><rect x="1054" y="420" width="13" height="15" fill="rgb(221,32,30)"/><text x="1057.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.71%)</title><rect x="1058" y="436" width="9" height="15" fill="rgb(218,218,20)"/><text x="1061.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (153 samples, 18.09%)</title><rect x="912" y="356" width="213" height="15" fill="rgb(241,213,42)"/><text x="915.00" y="366.50">onnxruntime::ml::TreeEnsembl..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (84 samples, 9.93%)</title><rect x="1008" y="372" width="117" height="15" fill="rgb(247,33,52)"/><text x="1011.00" y="382.50">std::_Hashtabl..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 8.04%)</title><rect x="1030" y="388" width="95" height="15" fill="rgb(230,8,35)"/><text x="1033.00" y="398.50">std::_Hasht..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (42 samples, 4.96%)</title><rect x="1067" y="404" width="58" height="15" fill="rgb(231,61,10)"/><text x="1070.00" y="414.50">std::_..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (13 samples, 1.54%)</title><rect x="1107" y="420" width="18" height="15" fill="rgb(249,221,0)"/><text x="1110.00" y="430.50"></text></g><g><title>0x7fd1ccfe8dbf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1130" y="372" width="1" height="15" fill="rgb(245,52,39)"/><text x="1133.00" y="382.50"></text></g><g><title>0x7fd1ccfe8dc9 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="1131" y="372" width="3" height="15" fill="rgb(254,96,38)"/><text x="1134.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.83%)</title><rect x="1125" y="356" width="10" height="15" fill="rgb(226,123,38)"/><text x="1128.00" y="366.50"></text></g><g><title>0x7fd1ccfe8dcb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1134" y="372" width="1" height="15" fill="rgb(233,27,3)"/><text x="1137.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.47%)</title><rect x="1135" y="356" width="6" height="15" fill="rgb(211,115,3)"/><text x="1138.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.89%)</title><rect x="1141" y="356" width="22" height="15" fill="rgb(222,10,3)"/><text x="1144.00" y="366.50">s..</text></g><g><title>all (846 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(228,73,22)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:68) (371 samples, 43.85%)</title><rect x="672" y="52" width="518" height="15" fill="rgb(252,15,47)"/><text x="675.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:67) (371 samples, 43.85%)</title><rect x="672" y="68" width="518" height="15" fill="rgb(213,156,4)"/><text x="675.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:37) (371 samples, 43.85%)</title><rect x="672" y="84" width="518" height="15" fill="rgb(205,222,3)"/><text x="675.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py:31) (371 samples, 43.85%)</title><rect x="672" y="100" width="518" height="15" fill="rgb(219,107,21)"/><text x="675.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (369 samples, 43.62%)</title><rect x="675" y="116" width="515" height="15" fill="rgb(246,151,22)"/><text x="678.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (369 samples, 43.62%)</title><rect x="675" y="132" width="515" height="15" fill="rgb(235,147,48)"/><text x="678.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (368 samples, 43.50%)</title><rect x="676" y="148" width="514" height="15" fill="rgb(217,58,4)"/><text x="679.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (368 samples, 43.50%)</title><rect x="676" y="164" width="514" height="15" fill="rgb(227,178,39)"/><text x="679.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (368 samples, 43.50%)</title><rect x="676" y="180" width="514" height="15" fill="rgb(205,97,45)"/><text x="679.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (366 samples, 43.26%)</title><rect x="679" y="196" width="511" height="15" fill="rgb(227,11,50)"/><text x="682.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="212" width="510" height="15" fill="rgb(215,76,25)"/><text x="683.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="228" width="510" height="15" fill="rgb(227,105,52)"/><text x="683.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObject..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="244" width="510" height="15" fill="rgb(209,220,3)"/><text x="683.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="260" width="510" height="15" fill="rgb(215,79,32)"/><text x="683.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="276" width="510" height="15" fill="rgb(242,120,30)"/><text x="683.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="292" width="510" height="15" fill="rgb(243,16,49)"/><text x="683.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind1..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="308" width="510" height="15" fill="rgb(205,203,24)"/><text x="683.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (365 samples, 43.14%)</title><rect x="680" y="324" width="510" height="15" fill="rgb(241,89,30)"/><text x="683.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (264 samples, 31.21%)</title><rect x="821" y="340" width="369" height="15" fill="rgb(206,23,14)"/><text x="824.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Com..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.25%)</title><rect x="1163" y="356" width="27" height="15" fill="rgb(224,46,7)"/><text x="1166.00" y="366.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.30%)</title><rect x="1174" y="372" width="16" height="15" fill="rgb(249,59,6)"/><text x="1177.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.06%)</title><rect x="1177" y="388" width="13" height="15" fill="rgb(217,67,3)"/><text x="1180.00" y="398.50"></text></g></g></svg>