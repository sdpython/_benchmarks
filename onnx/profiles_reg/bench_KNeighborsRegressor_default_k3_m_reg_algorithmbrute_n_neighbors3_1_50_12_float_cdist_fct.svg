<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1766" onload="init(evt)" viewBox="0 0 1200 1766" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1766" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1749.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1749.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="900" width="6" height="15" fill="rgb(237,131,29)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="916" width="6" height="15" fill="rgb(213,174,2)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="15" y="932" width="6" height="15" fill="rgb(239,110,7)"/><text x="18.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="15" y="948" width="6" height="15" fill="rgb(231,54,0)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="15" y="964" width="6" height="15" fill="rgb(228,225,20)"/><text x="18.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.48%)</title><rect x="15" y="980" width="6" height="15" fill="rgb(205,21,12)"/><text x="18.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.48%)</title><rect x="15" y="996" width="6" height="15" fill="rgb(246,126,50)"/><text x="18.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.48%)</title><rect x="15" y="1012" width="6" height="15" fill="rgb(213,48,1)"/><text x="18.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.44%)</title><rect x="10" y="836" width="16" height="15" fill="rgb(245,153,22)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.44%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(239,127,1)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.44%)</title><rect x="10" y="868" width="16" height="15" fill="rgb(230,113,4)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.44%)</title><rect x="10" y="884" width="16" height="15" fill="rgb(231,66,19)"/><text x="13.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="900" width="5" height="15" fill="rgb(242,138,14)"/><text x="24.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="916" width="5" height="15" fill="rgb(213,87,20)"/><text x="24.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="932" width="5" height="15" fill="rgb(219,32,36)"/><text x="24.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.48%)</title><rect x="21" y="948" width="5" height="15" fill="rgb(222,103,29)"/><text x="24.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.48%)</title><rect x="21" y="964" width="5" height="15" fill="rgb(242,69,50)"/><text x="24.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.48%)</title><rect x="21" y="980" width="5" height="15" fill="rgb(246,197,22)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.48%)</title><rect x="26" y="916" width="6" height="15" fill="rgb(215,86,25)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="932" width="6" height="15" fill="rgb(216,76,52)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="948" width="6" height="15" fill="rgb(244,96,15)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="964" width="6" height="15" fill="rgb(241,2,11)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="26" y="980" width="6" height="15" fill="rgb(239,2,31)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="996" width="6" height="15" fill="rgb(242,122,29)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.48%)</title><rect x="26" y="1012" width="6" height="15" fill="rgb(230,195,47)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1028" width="6" height="15" fill="rgb(216,135,9)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1044" width="6" height="15" fill="rgb(245,193,41)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1060" width="6" height="15" fill="rgb(245,103,26)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="26" y="1076" width="6" height="15" fill="rgb(237,118,21)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1092" width="6" height="15" fill="rgb(254,39,24)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.48%)</title><rect x="26" y="1108" width="6" height="15" fill="rgb(205,123,47)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1124" width="6" height="15" fill="rgb(234,34,14)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1140" width="6" height="15" fill="rgb(229,129,6)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1156" width="6" height="15" fill="rgb(229,42,46)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="26" y="1172" width="6" height="15" fill="rgb(248,197,25)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1188" width="6" height="15" fill="rgb(211,227,13)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.48%)</title><rect x="26" y="1204" width="6" height="15" fill="rgb(251,57,1)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1220" width="6" height="15" fill="rgb(239,156,24)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1236" width="6" height="15" fill="rgb(246,135,14)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1252" width="6" height="15" fill="rgb(221,24,49)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="26" y="1268" width="6" height="15" fill="rgb(239,155,19)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1284" width="6" height="15" fill="rgb(230,76,28)"/><text x="29.00" y="1294.50"></text></g><g><title>&lt;module&gt; (email/_parseaddr.py) (1 samples, 0.48%)</title><rect x="26" y="1300" width="6" height="15" fill="rgb(235,108,16)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1316" width="6" height="15" fill="rgb(221,228,33)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1332" width="6" height="15" fill="rgb(223,182,20)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1348" width="6" height="15" fill="rgb(223,176,49)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="26" y="1364" width="6" height="15" fill="rgb(227,95,7)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="26" y="1380" width="6" height="15" fill="rgb(244,219,16)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (calendar.py) (1 samples, 0.48%)</title><rect x="26" y="1396" width="6" height="15" fill="rgb(235,3,46)"/><text x="29.00" y="1406.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 2.39%)</title><rect x="10" y="292" width="28" height="15" fill="rgb(211,25,24)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="308" width="28" height="15" fill="rgb(219,174,6)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="324" width="28" height="15" fill="rgb(251,186,38)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="340" width="28" height="15" fill="rgb(214,43,44)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.39%)</title><rect x="10" y="356" width="28" height="15" fill="rgb(211,117,29)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="372" width="28" height="15" fill="rgb(223,143,54)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 2.39%)</title><rect x="10" y="388" width="28" height="15" fill="rgb(247,179,1)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="404" width="28" height="15" fill="rgb(240,127,22)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="420" width="28" height="15" fill="rgb(235,206,4)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="436" width="28" height="15" fill="rgb(249,91,51)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.39%)</title><rect x="10" y="452" width="28" height="15" fill="rgb(233,4,49)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="468" width="28" height="15" fill="rgb(229,41,51)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 2.39%)</title><rect x="10" y="484" width="28" height="15" fill="rgb(242,144,5)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="500" width="28" height="15" fill="rgb(252,58,54)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="516" width="28" height="15" fill="rgb(212,57,21)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="532" width="28" height="15" fill="rgb(211,33,0)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.39%)</title><rect x="10" y="548" width="28" height="15" fill="rgb(215,151,51)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="564" width="28" height="15" fill="rgb(241,176,30)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 2.39%)</title><rect x="10" y="580" width="28" height="15" fill="rgb(221,61,46)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="596" width="28" height="15" fill="rgb(211,185,39)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="612" width="28" height="15" fill="rgb(229,102,54)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="628" width="28" height="15" fill="rgb(226,146,22)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="644" width="28" height="15" fill="rgb(223,182,21)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="660" width="28" height="15" fill="rgb(222,204,1)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="676" width="28" height="15" fill="rgb(232,145,28)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.39%)</title><rect x="10" y="692" width="28" height="15" fill="rgb(245,191,19)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="708" width="28" height="15" fill="rgb(212,58,27)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 2.39%)</title><rect x="10" y="724" width="28" height="15" fill="rgb(239,13,20)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="740" width="28" height="15" fill="rgb(225,147,26)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="756" width="28" height="15" fill="rgb(230,1,2)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="772" width="28" height="15" fill="rgb(236,62,44)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.39%)</title><rect x="10" y="788" width="28" height="15" fill="rgb(225,53,9)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.39%)</title><rect x="10" y="804" width="28" height="15" fill="rgb(234,200,31)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 2.39%)</title><rect x="10" y="820" width="28" height="15" fill="rgb(251,72,47)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="26" y="836" width="12" height="15" fill="rgb(228,190,42)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="26" y="852" width="12" height="15" fill="rgb(228,57,3)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="26" y="868" width="12" height="15" fill="rgb(245,24,30)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="26" y="884" width="12" height="15" fill="rgb(229,40,40)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="26" y="900" width="12" height="15" fill="rgb(236,134,35)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.48%)</title><rect x="32" y="916" width="6" height="15" fill="rgb(205,120,41)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="932" width="6" height="15" fill="rgb(244,0,13)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="948" width="6" height="15" fill="rgb(244,51,16)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="964" width="6" height="15" fill="rgb(215,18,49)"/><text x="35.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="980" width="6" height="15" fill="rgb(242,64,51)"/><text x="35.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.48%)</title><rect x="32" y="996" width="6" height="15" fill="rgb(208,68,2)"/><text x="35.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1012" width="6" height="15" fill="rgb(219,65,6)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1028" width="6" height="15" fill="rgb(249,167,33)"/><text x="35.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="32" y="1044" width="6" height="15" fill="rgb(245,212,18)"/><text x="35.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="32" y="1060" width="6" height="15" fill="rgb(206,84,4)"/><text x="35.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="32" y="1076" width="6" height="15" fill="rgb(219,182,27)"/><text x="35.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="32" y="1092" width="6" height="15" fill="rgb(239,36,54)"/><text x="35.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="628" width="5" height="15" fill="rgb(216,82,1)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="644" width="5" height="15" fill="rgb(208,129,14)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="660" width="5" height="15" fill="rgb(243,207,30)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="676" width="5" height="15" fill="rgb(222,121,44)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="38" y="692" width="5" height="15" fill="rgb(253,127,27)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="708" width="5" height="15" fill="rgb(232,151,38)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.48%)</title><rect x="38" y="724" width="5" height="15" fill="rgb(247,20,7)"/><text x="41.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="740" width="5" height="15" fill="rgb(216,204,29)"/><text x="41.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="756" width="5" height="15" fill="rgb(241,19,51)"/><text x="41.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="772" width="5" height="15" fill="rgb(236,157,36)"/><text x="41.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="788" width="5" height="15" fill="rgb(249,13,4)"/><text x="41.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="804" width="5" height="15" fill="rgb(241,156,23)"/><text x="41.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="38" y="820" width="5" height="15" fill="rgb(223,76,8)"/><text x="41.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="836" width="5" height="15" fill="rgb(250,6,3)"/><text x="41.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.48%)</title><rect x="38" y="852" width="5" height="15" fill="rgb(206,37,36)"/><text x="41.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="868" width="5" height="15" fill="rgb(215,12,40)"/><text x="41.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="884" width="5" height="15" fill="rgb(230,146,49)"/><text x="41.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="900" width="5" height="15" fill="rgb(223,137,11)"/><text x="41.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="38" y="916" width="5" height="15" fill="rgb(236,216,43)"/><text x="41.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="932" width="5" height="15" fill="rgb(222,130,28)"/><text x="41.00" y="942.50"></text></g><g><title>&lt;module&gt; (distutils/util.py) (1 samples, 0.48%)</title><rect x="38" y="948" width="5" height="15" fill="rgb(228,179,50)"/><text x="41.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="964" width="5" height="15" fill="rgb(210,96,45)"/><text x="41.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="980" width="5" height="15" fill="rgb(226,37,36)"/><text x="41.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="996" width="5" height="15" fill="rgb(220,99,27)"/><text x="41.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="38" y="1012" width="5" height="15" fill="rgb(211,177,21)"/><text x="41.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="1028" width="5" height="15" fill="rgb(213,184,0)"/><text x="41.00" y="1038.50"></text></g><g><title>&lt;module&gt; (distutils/spawn.py) (1 samples, 0.48%)</title><rect x="38" y="1044" width="5" height="15" fill="rgb(232,94,1)"/><text x="41.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="1060" width="5" height="15" fill="rgb(247,116,11)"/><text x="41.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="1076" width="5" height="15" fill="rgb(222,11,7)"/><text x="41.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="1092" width="5" height="15" fill="rgb(248,174,0)"/><text x="41.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="1108" width="5" height="15" fill="rgb(221,220,17)"/><text x="41.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="38" y="1124" width="5" height="15" fill="rgb(249,157,25)"/><text x="41.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="38" y="1140" width="5" height="15" fill="rgb(241,208,34)"/><text x="41.00" y="1150.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="38" y="1156" width="5" height="15" fill="rgb(218,116,13)"/><text x="41.00" y="1166.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="38" y="1172" width="5" height="15" fill="rgb(241,188,28)"/><text x="41.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="43" y="916" width="6" height="15" fill="rgb(221,156,9)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="43" y="932" width="6" height="15" fill="rgb(223,107,20)"/><text x="46.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="43" y="948" width="6" height="15" fill="rgb(212,26,46)"/><text x="46.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="43" y="964" width="6" height="15" fill="rgb(206,83,14)"/><text x="46.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="43" y="980" width="6" height="15" fill="rgb(238,146,4)"/><text x="46.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.48%)</title><rect x="43" y="996" width="6" height="15" fill="rgb(229,29,7)"/><text x="46.00" y="1006.50"></text></g><g><title>rv_sample (scipy/stats/_distn_infrastructure.py) (1 samples, 0.48%)</title><rect x="43" y="1012" width="6" height="15" fill="rgb(253,31,12)"/><text x="46.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="10" y="196" width="45" height="15" fill="rgb(228,165,37)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="10" y="212" width="45" height="15" fill="rgb(240,218,50)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="10" y="228" width="45" height="15" fill="rgb(225,102,26)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="10" y="244" width="45" height="15" fill="rgb(235,126,51)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.83%)</title><rect x="10" y="260" width="45" height="15" fill="rgb(253,161,49)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="10" y="276" width="45" height="15" fill="rgb(211,3,8)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 1.44%)</title><rect x="38" y="292" width="17" height="15" fill="rgb(247,90,48)"/><text x="41.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="308" width="17" height="15" fill="rgb(226,116,27)"/><text x="41.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="324" width="17" height="15" fill="rgb(206,142,4)"/><text x="41.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="340" width="17" height="15" fill="rgb(230,58,38)"/><text x="41.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.44%)</title><rect x="38" y="356" width="17" height="15" fill="rgb(246,123,46)"/><text x="41.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="372" width="17" height="15" fill="rgb(232,196,31)"/><text x="41.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 1.44%)</title><rect x="38" y="388" width="17" height="15" fill="rgb(221,129,5)"/><text x="41.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="404" width="17" height="15" fill="rgb(205,168,50)"/><text x="41.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="420" width="17" height="15" fill="rgb(244,88,33)"/><text x="41.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="436" width="17" height="15" fill="rgb(209,79,10)"/><text x="41.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.44%)</title><rect x="38" y="452" width="17" height="15" fill="rgb(225,131,23)"/><text x="41.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="468" width="17" height="15" fill="rgb(237,16,9)"/><text x="41.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 1.44%)</title><rect x="38" y="484" width="17" height="15" fill="rgb(252,9,11)"/><text x="41.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="500" width="17" height="15" fill="rgb(229,130,30)"/><text x="41.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="516" width="17" height="15" fill="rgb(233,43,14)"/><text x="41.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="532" width="17" height="15" fill="rgb(245,47,48)"/><text x="41.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.44%)</title><rect x="38" y="548" width="17" height="15" fill="rgb(208,91,28)"/><text x="41.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="564" width="17" height="15" fill="rgb(248,200,35)"/><text x="41.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 1.44%)</title><rect x="38" y="580" width="17" height="15" fill="rgb(229,133,11)"/><text x="41.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="596" width="17" height="15" fill="rgb(239,136,5)"/><text x="41.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="38" y="612" width="17" height="15" fill="rgb(207,31,24)"/><text x="41.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="628" width="12" height="15" fill="rgb(205,166,29)"/><text x="46.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="43" y="644" width="12" height="15" fill="rgb(230,25,37)"/><text x="46.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="660" width="12" height="15" fill="rgb(245,72,35)"/><text x="46.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.96%)</title><rect x="43" y="676" width="12" height="15" fill="rgb(243,127,32)"/><text x="46.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="692" width="12" height="15" fill="rgb(250,45,51)"/><text x="46.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="708" width="12" height="15" fill="rgb(209,83,36)"/><text x="46.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="724" width="12" height="15" fill="rgb(223,159,29)"/><text x="46.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="43" y="740" width="12" height="15" fill="rgb(208,144,51)"/><text x="46.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="756" width="12" height="15" fill="rgb(223,129,19)"/><text x="46.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.96%)</title><rect x="43" y="772" width="12" height="15" fill="rgb(229,40,35)"/><text x="46.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="788" width="12" height="15" fill="rgb(233,90,14)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="804" width="12" height="15" fill="rgb(248,226,25)"/><text x="46.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="820" width="12" height="15" fill="rgb(219,196,36)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="836" width="12" height="15" fill="rgb(234,35,26)"/><text x="46.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="852" width="12" height="15" fill="rgb(212,83,38)"/><text x="46.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="43" y="868" width="12" height="15" fill="rgb(237,19,14)"/><text x="46.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="43" y="884" width="12" height="15" fill="rgb(248,39,8)"/><text x="46.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.96%)</title><rect x="43" y="900" width="12" height="15" fill="rgb(206,48,25)"/><text x="46.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="49" y="916" width="6" height="15" fill="rgb(236,137,49)"/><text x="52.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="49" y="932" width="6" height="15" fill="rgb(244,189,27)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="49" y="948" width="6" height="15" fill="rgb(226,206,0)"/><text x="52.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="49" y="964" width="6" height="15" fill="rgb(239,188,15)"/><text x="52.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="49" y="980" width="6" height="15" fill="rgb(239,50,32)"/><text x="52.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="49" y="996" width="6" height="15" fill="rgb(237,13,8)"/><text x="52.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="49" y="1012" width="6" height="15" fill="rgb(216,22,16)"/><text x="52.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.48%)</title><rect x="49" y="1028" width="6" height="15" fill="rgb(228,211,52)"/><text x="52.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.48%)</title><rect x="49" y="1044" width="6" height="15" fill="rgb(206,110,12)"/><text x="52.00" y="1054.50"></text></g><g><title>__init__ (numpy/lib/function_base.py) (1 samples, 0.48%)</title><rect x="49" y="1060" width="6" height="15" fill="rgb(222,41,26)"/><text x="52.00" y="1070.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="55" y="532" width="5" height="15" fill="rgb(254,193,5)"/><text x="58.00" y="542.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="60" y="1300" width="6" height="15" fill="rgb(243,67,39)"/><text x="63.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="660" width="12" height="15" fill="rgb(235,186,36)"/><text x="63.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.96%)</title><rect x="60" y="676" width="12" height="15" fill="rgb(207,50,45)"/><text x="63.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="692" width="12" height="15" fill="rgb(206,53,2)"/><text x="63.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="708" width="12" height="15" fill="rgb(238,177,10)"/><text x="63.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="724" width="12" height="15" fill="rgb(241,182,16)"/><text x="63.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="60" y="740" width="12" height="15" fill="rgb(223,147,8)"/><text x="63.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="756" width="12" height="15" fill="rgb(219,120,15)"/><text x="63.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.96%)</title><rect x="60" y="772" width="12" height="15" fill="rgb(248,185,23)"/><text x="63.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="788" width="12" height="15" fill="rgb(251,91,24)"/><text x="63.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="804" width="12" height="15" fill="rgb(241,195,4)"/><text x="63.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="820" width="12" height="15" fill="rgb(243,83,5)"/><text x="63.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="60" y="836" width="12" height="15" fill="rgb(224,83,0)"/><text x="63.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="852" width="12" height="15" fill="rgb(211,196,35)"/><text x="63.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.96%)</title><rect x="60" y="868" width="12" height="15" fill="rgb(221,45,50)"/><text x="63.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="884" width="12" height="15" fill="rgb(251,70,2)"/><text x="63.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="900" width="12" height="15" fill="rgb(226,104,33)"/><text x="63.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="916" width="12" height="15" fill="rgb(210,171,27)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="932" width="12" height="15" fill="rgb(224,195,6)"/><text x="63.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="948" width="12" height="15" fill="rgb(252,147,34)"/><text x="63.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="964" width="12" height="15" fill="rgb(254,181,44)"/><text x="63.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="60" y="980" width="12" height="15" fill="rgb(220,156,43)"/><text x="63.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="996" width="12" height="15" fill="rgb(224,176,31)"/><text x="63.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.96%)</title><rect x="60" y="1012" width="12" height="15" fill="rgb(252,31,42)"/><text x="63.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1028" width="12" height="15" fill="rgb(234,3,48)"/><text x="63.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1044" width="12" height="15" fill="rgb(238,227,35)"/><text x="63.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1060" width="12" height="15" fill="rgb(211,97,0)"/><text x="63.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="60" y="1076" width="12" height="15" fill="rgb(246,190,20)"/><text x="63.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1092" width="12" height="15" fill="rgb(248,195,45)"/><text x="63.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.96%)</title><rect x="60" y="1108" width="12" height="15" fill="rgb(215,132,12)"/><text x="63.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1124" width="12" height="15" fill="rgb(233,167,20)"/><text x="63.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1140" width="12" height="15" fill="rgb(251,190,6)"/><text x="63.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1156" width="12" height="15" fill="rgb(228,148,28)"/><text x="63.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1172" width="12" height="15" fill="rgb(232,37,5)"/><text x="63.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1188" width="12" height="15" fill="rgb(219,225,24)"/><text x="63.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="60" y="1204" width="12" height="15" fill="rgb(251,61,9)"/><text x="63.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1220" width="12" height="15" fill="rgb(214,75,6)"/><text x="63.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.96%)</title><rect x="60" y="1236" width="12" height="15" fill="rgb(213,32,29)"/><text x="63.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1252" width="12" height="15" fill="rgb(223,158,18)"/><text x="63.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1268" width="12" height="15" fill="rgb(221,210,36)"/><text x="63.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="60" y="1284" width="12" height="15" fill="rgb(205,41,19)"/><text x="63.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1300" width="6" height="15" fill="rgb(238,131,23)"/><text x="69.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1316" width="6" height="15" fill="rgb(212,63,43)"/><text x="69.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="66" y="1332" width="6" height="15" fill="rgb(251,73,7)"/><text x="69.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1348" width="6" height="15" fill="rgb(254,101,49)"/><text x="69.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.48%)</title><rect x="66" y="1364" width="6" height="15" fill="rgb(241,67,30)"/><text x="69.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1380" width="6" height="15" fill="rgb(219,196,13)"/><text x="69.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1396" width="6" height="15" fill="rgb(240,227,12)"/><text x="69.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1412" width="6" height="15" fill="rgb(210,68,24)"/><text x="69.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="66" y="1428" width="6" height="15" fill="rgb(224,201,29)"/><text x="69.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1444" width="6" height="15" fill="rgb(217,220,13)"/><text x="69.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.48%)</title><rect x="66" y="1460" width="6" height="15" fill="rgb(215,92,35)"/><text x="69.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1476" width="6" height="15" fill="rgb(232,47,54)"/><text x="69.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1492" width="6" height="15" fill="rgb(221,81,54)"/><text x="69.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1508" width="6" height="15" fill="rgb(222,141,32)"/><text x="69.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="66" y="1524" width="6" height="15" fill="rgb(228,219,13)"/><text x="69.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1540" width="6" height="15" fill="rgb(245,111,39)"/><text x="69.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.48%)</title><rect x="66" y="1556" width="6" height="15" fill="rgb(236,44,2)"/><text x="69.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.48%)</title><rect x="66" y="1572" width="6" height="15" fill="rgb(237,110,14)"/><text x="69.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1588" width="6" height="15" fill="rgb(208,173,3)"/><text x="69.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1604" width="6" height="15" fill="rgb(231,102,8)"/><text x="69.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1620" width="6" height="15" fill="rgb(251,141,51)"/><text x="69.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="66" y="1636" width="6" height="15" fill="rgb(215,32,40)"/><text x="69.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1652" width="6" height="15" fill="rgb(233,185,46)"/><text x="69.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.48%)</title><rect x="66" y="1668" width="6" height="15" fill="rgb(236,41,2)"/><text x="69.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.48%)</title><rect x="66" y="1684" width="6" height="15" fill="rgb(211,37,14)"/><text x="69.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1700" width="6" height="15" fill="rgb(236,12,46)"/><text x="69.00" y="1710.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="66" y="1716" width="6" height="15" fill="rgb(241,191,9)"/><text x="69.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.91%)</title><rect x="55" y="484" width="22" height="15" fill="rgb(234,38,12)"/><text x="58.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.91%)</title><rect x="55" y="500" width="22" height="15" fill="rgb(240,223,24)"/><text x="58.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.91%)</title><rect x="55" y="516" width="22" height="15" fill="rgb(226,209,0)"/><text x="58.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="60" y="532" width="17" height="15" fill="rgb(224,203,27)"/><text x="63.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.44%)</title><rect x="60" y="548" width="17" height="15" fill="rgb(206,144,19)"/><text x="63.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="60" y="564" width="17" height="15" fill="rgb(220,73,27)"/><text x="63.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.44%)</title><rect x="60" y="580" width="17" height="15" fill="rgb(234,86,5)"/><text x="63.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="60" y="596" width="17" height="15" fill="rgb(208,164,1)"/><text x="63.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="60" y="612" width="17" height="15" fill="rgb(248,107,51)"/><text x="63.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.44%)</title><rect x="60" y="628" width="17" height="15" fill="rgb(218,52,31)"/><text x="63.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.44%)</title><rect x="60" y="644" width="17" height="15" fill="rgb(250,14,5)"/><text x="63.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="72" y="660" width="5" height="15" fill="rgb(249,14,47)"/><text x="75.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="72" y="676" width="5" height="15" fill="rgb(230,55,24)"/><text x="75.00" y="686.50"></text></g><g><title>_make_min_count_stat_function (pandas/core/generic.py) (1 samples, 0.48%)</title><rect x="77" y="1044" width="6" height="15" fill="rgb(213,176,25)"/><text x="80.00" y="1054.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.48%)</title><rect x="77" y="1060" width="6" height="15" fill="rgb(214,139,35)"/><text x="80.00" y="1070.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.48%)</title><rect x="77" y="1076" width="6" height="15" fill="rgb(206,215,29)"/><text x="80.00" y="1086.50"></text></g><g><title>0x7fbb8ba7b700 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="77" y="1092" width="6" height="15" fill="rgb(251,36,17)"/><text x="80.00" y="1102.50"></text></g><g><title>0x7fbb8ba78ab9 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="77" y="1108" width="6" height="15" fill="rgb(218,77,31)"/><text x="80.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 2.87%)</title><rect x="55" y="340" width="34" height="15" fill="rgb(247,18,4)"/><text x="58.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.87%)</title><rect x="55" y="356" width="34" height="15" fill="rgb(206,40,7)"/><text x="58.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.87%)</title><rect x="55" y="372" width="34" height="15" fill="rgb(244,46,38)"/><text x="58.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.87%)</title><rect x="55" y="388" width="34" height="15" fill="rgb(210,148,17)"/><text x="58.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.87%)</title><rect x="55" y="404" width="34" height="15" fill="rgb(223,77,34)"/><text x="58.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.87%)</title><rect x="55" y="420" width="34" height="15" fill="rgb(232,99,20)"/><text x="58.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.87%)</title><rect x="55" y="436" width="34" height="15" fill="rgb(221,129,51)"/><text x="58.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.87%)</title><rect x="55" y="452" width="34" height="15" fill="rgb(246,221,33)"/><text x="58.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.87%)</title><rect x="55" y="468" width="34" height="15" fill="rgb(243,10,53)"/><text x="58.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="484" width="12" height="15" fill="rgb(247,1,44)"/><text x="80.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="77" y="500" width="12" height="15" fill="rgb(230,166,28)"/><text x="80.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="516" width="12" height="15" fill="rgb(233,23,19)"/><text x="80.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.96%)</title><rect x="77" y="532" width="12" height="15" fill="rgb(245,19,22)"/><text x="80.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="548" width="12" height="15" fill="rgb(227,144,23)"/><text x="80.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="564" width="12" height="15" fill="rgb(220,56,14)"/><text x="80.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="580" width="12" height="15" fill="rgb(211,178,48)"/><text x="80.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="77" y="596" width="12" height="15" fill="rgb(237,68,8)"/><text x="80.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="612" width="12" height="15" fill="rgb(207,126,25)"/><text x="80.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.96%)</title><rect x="77" y="628" width="12" height="15" fill="rgb(235,99,46)"/><text x="80.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="644" width="12" height="15" fill="rgb(247,154,13)"/><text x="80.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="660" width="12" height="15" fill="rgb(228,58,18)"/><text x="80.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="676" width="12" height="15" fill="rgb(207,1,36)"/><text x="80.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="77" y="692" width="12" height="15" fill="rgb(228,146,49)"/><text x="80.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="708" width="12" height="15" fill="rgb(209,197,45)"/><text x="80.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.96%)</title><rect x="77" y="724" width="12" height="15" fill="rgb(237,78,52)"/><text x="80.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="740" width="12" height="15" fill="rgb(245,174,15)"/><text x="80.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="756" width="12" height="15" fill="rgb(252,186,47)"/><text x="80.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="772" width="12" height="15" fill="rgb(244,73,11)"/><text x="80.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="77" y="788" width="12" height="15" fill="rgb(217,2,35)"/><text x="80.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="804" width="12" height="15" fill="rgb(230,11,44)"/><text x="80.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.96%)</title><rect x="77" y="820" width="12" height="15" fill="rgb(249,188,30)"/><text x="80.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="836" width="12" height="15" fill="rgb(215,174,53)"/><text x="80.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="852" width="12" height="15" fill="rgb(244,128,0)"/><text x="80.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="868" width="12" height="15" fill="rgb(231,224,3)"/><text x="80.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="77" y="884" width="12" height="15" fill="rgb(208,21,42)"/><text x="80.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="900" width="12" height="15" fill="rgb(221,204,10)"/><text x="80.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.96%)</title><rect x="77" y="916" width="12" height="15" fill="rgb(217,58,25)"/><text x="80.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="932" width="12" height="15" fill="rgb(235,207,53)"/><text x="80.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="948" width="12" height="15" fill="rgb(239,206,39)"/><text x="80.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="964" width="12" height="15" fill="rgb(219,227,28)"/><text x="80.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="77" y="980" width="12" height="15" fill="rgb(209,168,30)"/><text x="80.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="77" y="996" width="12" height="15" fill="rgb(251,146,12)"/><text x="80.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.96%)</title><rect x="77" y="1012" width="12" height="15" fill="rgb(246,40,49)"/><text x="80.00" y="1022.50"></text></g><g><title>_add_numeric_operations (pandas/core/generic.py) (2 samples, 0.96%)</title><rect x="77" y="1028" width="12" height="15" fill="rgb(230,176,4)"/><text x="80.00" y="1038.50"></text></g><g><title>_make_stat_function (pandas/core/generic.py) (1 samples, 0.48%)</title><rect x="83" y="1044" width="6" height="15" fill="rgb(206,89,17)"/><text x="86.00" y="1054.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.48%)</title><rect x="83" y="1060" width="6" height="15" fill="rgb(244,96,49)"/><text x="86.00" y="1070.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.48%)</title><rect x="83" y="1076" width="6" height="15" fill="rgb(222,30,25)"/><text x="86.00" y="1086.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.48%)</title><rect x="83" y="1092" width="6" height="15" fill="rgb(208,208,47)"/><text x="86.00" y="1102.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.48%)</title><rect x="83" y="1108" width="6" height="15" fill="rgb(209,132,39)"/><text x="86.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.48%)</title><rect x="83" y="1124" width="6" height="15" fill="rgb(236,151,49)"/><text x="86.00" y="1134.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="89" y="532" width="5" height="15" fill="rgb(205,168,38)"/><text x="92.00" y="542.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="89" y="548" width="5" height="15" fill="rgb(227,18,36)"/><text x="92.00" y="558.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="89" y="564" width="5" height="15" fill="rgb(218,186,39)"/><text x="92.00" y="574.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="89" y="580" width="5" height="15" fill="rgb(219,58,14)"/><text x="92.00" y="590.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="89" y="596" width="5" height="15" fill="rgb(236,214,42)"/><text x="92.00" y="606.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 3.83%)</title><rect x="55" y="244" width="45" height="15" fill="rgb(252,60,38)"/><text x="58.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="55" y="260" width="45" height="15" fill="rgb(224,156,48)"/><text x="58.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="55" y="276" width="45" height="15" fill="rgb(208,122,52)"/><text x="58.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="55" y="292" width="45" height="15" fill="rgb(239,201,18)"/><text x="58.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.83%)</title><rect x="55" y="308" width="45" height="15" fill="rgb(207,190,31)"/><text x="58.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.83%)</title><rect x="55" y="324" width="45" height="15" fill="rgb(236,190,5)"/><text x="58.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.96%)</title><rect x="89" y="340" width="11" height="15" fill="rgb(228,160,7)"/><text x="92.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="356" width="11" height="15" fill="rgb(228,224,44)"/><text x="92.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="372" width="11" height="15" fill="rgb(218,41,3)"/><text x="92.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="388" width="11" height="15" fill="rgb(227,117,40)"/><text x="92.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="404" width="11" height="15" fill="rgb(229,149,39)"/><text x="92.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="420" width="11" height="15" fill="rgb(226,198,49)"/><text x="92.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="436" width="11" height="15" fill="rgb(220,106,30)"/><text x="92.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.96%)</title><rect x="89" y="452" width="11" height="15" fill="rgb(243,37,13)"/><text x="92.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="468" width="11" height="15" fill="rgb(213,149,48)"/><text x="92.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.96%)</title><rect x="89" y="484" width="11" height="15" fill="rgb(234,10,0)"/><text x="92.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="500" width="11" height="15" fill="rgb(241,4,20)"/><text x="92.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="89" y="516" width="11" height="15" fill="rgb(232,141,4)"/><text x="92.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="532" width="6" height="15" fill="rgb(251,35,40)"/><text x="97.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="548" width="6" height="15" fill="rgb(237,184,28)"/><text x="97.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="564" width="6" height="15" fill="rgb(248,226,46)"/><text x="97.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.48%)</title><rect x="94" y="580" width="6" height="15" fill="rgb(231,65,11)"/><text x="97.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="596" width="6" height="15" fill="rgb(234,205,35)"/><text x="97.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="612" width="6" height="15" fill="rgb(216,1,31)"/><text x="97.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="628" width="6" height="15" fill="rgb(253,221,32)"/><text x="97.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="644" width="6" height="15" fill="rgb(246,229,34)"/><text x="97.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="660" width="6" height="15" fill="rgb(232,130,54)"/><text x="97.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="676" width="6" height="15" fill="rgb(227,192,24)"/><text x="97.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="692" width="6" height="15" fill="rgb(209,158,18)"/><text x="97.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="708" width="6" height="15" fill="rgb(253,84,12)"/><text x="97.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.48%)</title><rect x="94" y="724" width="6" height="15" fill="rgb(224,67,7)"/><text x="97.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="740" width="6" height="15" fill="rgb(239,142,3)"/><text x="97.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="756" width="6" height="15" fill="rgb(234,130,48)"/><text x="97.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="772" width="6" height="15" fill="rgb(237,132,38)"/><text x="97.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="788" width="6" height="15" fill="rgb(235,195,6)"/><text x="97.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="804" width="6" height="15" fill="rgb(220,156,1)"/><text x="97.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.48%)</title><rect x="94" y="820" width="6" height="15" fill="rgb(246,92,29)"/><text x="97.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="836" width="6" height="15" fill="rgb(235,175,12)"/><text x="97.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="852" width="6" height="15" fill="rgb(229,104,34)"/><text x="97.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="868" width="6" height="15" fill="rgb(232,68,4)"/><text x="97.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="884" width="6" height="15" fill="rgb(240,57,12)"/><text x="97.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="900" width="6" height="15" fill="rgb(227,117,40)"/><text x="97.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.48%)</title><rect x="94" y="916" width="6" height="15" fill="rgb(232,194,28)"/><text x="97.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="932" width="6" height="15" fill="rgb(212,140,10)"/><text x="97.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="948" width="6" height="15" fill="rgb(222,115,27)"/><text x="97.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="964" width="6" height="15" fill="rgb(213,31,7)"/><text x="97.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="980" width="6" height="15" fill="rgb(229,143,26)"/><text x="97.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="996" width="6" height="15" fill="rgb(221,223,12)"/><text x="97.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1012" width="6" height="15" fill="rgb(238,140,14)"/><text x="97.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="1028" width="6" height="15" fill="rgb(229,185,33)"/><text x="97.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1044" width="6" height="15" fill="rgb(232,24,10)"/><text x="97.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.48%)</title><rect x="94" y="1060" width="6" height="15" fill="rgb(219,18,9)"/><text x="97.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1076" width="6" height="15" fill="rgb(235,159,2)"/><text x="97.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1092" width="6" height="15" fill="rgb(253,218,26)"/><text x="97.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1108" width="6" height="15" fill="rgb(241,167,3)"/><text x="97.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="1124" width="6" height="15" fill="rgb(206,59,23)"/><text x="97.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1140" width="6" height="15" fill="rgb(212,134,47)"/><text x="97.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.48%)</title><rect x="94" y="1156" width="6" height="15" fill="rgb(230,24,22)"/><text x="97.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1172" width="6" height="15" fill="rgb(206,144,40)"/><text x="97.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1188" width="6" height="15" fill="rgb(238,197,39)"/><text x="97.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="94" y="1204" width="6" height="15" fill="rgb(218,105,16)"/><text x="97.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="1220" width="6" height="15" fill="rgb(236,51,29)"/><text x="97.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="1236" width="6" height="15" fill="rgb(243,56,41)"/><text x="97.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="94" y="1252" width="6" height="15" fill="rgb(239,190,35)"/><text x="97.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 8.13%)</title><rect x="10" y="68" width="95" height="15" fill="rgb(221,154,1)"/><text x="13.00" y="78.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 8.13%)</title><rect x="10" y="84" width="95" height="15" fill="rgb(228,117,2)"/><text x="13.00" y="94.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 8.13%)</title><rect x="10" y="100" width="95" height="15" fill="rgb(223,5,43)"/><text x="13.00" y="110.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 8.13%)</title><rect x="10" y="116" width="95" height="15" fill="rgb(246,64,51)"/><text x="13.00" y="126.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 8.13%)</title><rect x="10" y="132" width="95" height="15" fill="rgb(208,15,54)"/><text x="13.00" y="142.50">_call_with_..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py) (17 samples, 8.13%)</title><rect x="10" y="148" width="95" height="15" fill="rgb(205,202,48)"/><text x="13.00" y="158.50">&lt;module&gt; (p..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 8.13%)</title><rect x="10" y="164" width="95" height="15" fill="rgb(211,93,25)"/><text x="13.00" y="174.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 8.13%)</title><rect x="10" y="180" width="95" height="15" fill="rgb(238,112,11)"/><text x="13.00" y="190.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.31%)</title><rect x="55" y="196" width="50" height="15" fill="rgb(217,132,33)"/><text x="58.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.31%)</title><rect x="55" y="212" width="50" height="15" fill="rgb(223,121,36)"/><text x="58.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.31%)</title><rect x="55" y="228" width="50" height="15" fill="rgb(206,96,16)"/><text x="58.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.48%)</title><rect x="100" y="244" width="5" height="15" fill="rgb(251,85,48)"/><text x="103.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="260" width="5" height="15" fill="rgb(240,69,2)"/><text x="103.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="276" width="5" height="15" fill="rgb(239,29,50)"/><text x="103.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="292" width="5" height="15" fill="rgb(243,224,8)"/><text x="103.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="308" width="5" height="15" fill="rgb(220,40,27)"/><text x="103.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="324" width="5" height="15" fill="rgb(237,208,17)"/><text x="103.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="100" y="340" width="5" height="15" fill="rgb(231,11,52)"/><text x="103.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="356" width="5" height="15" fill="rgb(241,200,23)"/><text x="103.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py) (1 samples, 0.48%)</title><rect x="100" y="372" width="5" height="15" fill="rgb(230,94,17)"/><text x="103.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="388" width="5" height="15" fill="rgb(243,5,17)"/><text x="103.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="404" width="5" height="15" fill="rgb(241,95,20)"/><text x="103.00" y="414.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="100" y="420" width="5" height="15" fill="rgb(213,83,10)"/><text x="103.00" y="430.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="100" y="436" width="5" height="15" fill="rgb(254,54,20)"/><text x="103.00" y="446.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="100" y="452" width="5" height="15" fill="rgb(222,211,4)"/><text x="103.00" y="462.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="100" y="468" width="5" height="15" fill="rgb(220,114,14)"/><text x="103.00" y="478.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="100" y="484" width="5" height="15" fill="rgb(251,66,43)"/><text x="103.00" y="494.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (1 samples, 0.48%)</title><rect x="105" y="100" width="6" height="15" fill="rgb(227,192,19)"/><text x="108.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.48%)</title><rect x="105" y="116" width="6" height="15" fill="rgb(209,86,3)"/><text x="108.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.48%)</title><rect x="105" y="132" width="6" height="15" fill="rgb(238,92,21)"/><text x="108.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py) (1 samples, 0.48%)</title><rect x="105" y="148" width="6" height="15" fill="rgb(216,173,48)"/><text x="108.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (1 samples, 0.48%)</title><rect x="105" y="164" width="6" height="15" fill="rgb(225,136,0)"/><text x="108.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (1 samples, 0.48%)</title><rect x="105" y="180" width="6" height="15" fill="rgb(223,216,34)"/><text x="108.00" y="190.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (1 samples, 0.48%)</title><rect x="105" y="196" width="6" height="15" fill="rgb(212,176,41)"/><text x="108.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (1 samples, 0.48%)</title><rect x="105" y="212" width="6" height="15" fill="rgb(229,40,13)"/><text x="108.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.48%)</title><rect x="105" y="228" width="6" height="15" fill="rgb(228,177,16)"/><text x="108.00" y="238.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (2 samples, 0.96%)</title><rect x="105" y="68" width="12" height="15" fill="rgb(225,170,43)"/><text x="108.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (2 samples, 0.96%)</title><rect x="105" y="84" width="12" height="15" fill="rgb(230,184,40)"/><text x="108.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.48%)</title><rect x="111" y="100" width="6" height="15" fill="rgb(235,60,40)"/><text x="114.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.48%)</title><rect x="111" y="116" width="6" height="15" fill="rgb(215,132,34)"/><text x="114.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.48%)</title><rect x="111" y="132" width="6" height="15" fill="rgb(227,227,32)"/><text x="114.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="111" y="148" width="6" height="15" fill="rgb(251,2,40)"/><text x="114.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="111" y="164" width="6" height="15" fill="rgb(214,194,5)"/><text x="114.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.48%)</title><rect x="111" y="180" width="6" height="15" fill="rgb(241,164,53)"/><text x="114.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="111" y="196" width="6" height="15" fill="rgb(226,116,1)"/><text x="114.00" y="206.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="111" y="212" width="6" height="15" fill="rgb(251,48,31)"/><text x="114.00" y="222.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.48%)</title><rect x="111" y="228" width="6" height="15" fill="rgb(251,5,18)"/><text x="114.00" y="238.50"></text></g><g><title>0x7fbb4baacff9 (?) (1 samples, 0.48%)</title><rect x="122" y="212" width="6" height="15" fill="rgb(220,71,34)"/><text x="125.00" y="222.50"></text></g><g><title>0x7fbb4baa7ef6 (?) (1 samples, 0.48%)</title><rect x="122" y="228" width="6" height="15" fill="rgb(246,77,14)"/><text x="125.00" y="238.50"></text></g><g><title>0x7fbb4ba9c962 (?) (1 samples, 0.48%)</title><rect x="122" y="244" width="6" height="15" fill="rgb(214,205,22)"/><text x="125.00" y="254.50"></text></g><g><title>0x7fbb4bad07a7 (?) (1 samples, 0.48%)</title><rect x="122" y="260" width="6" height="15" fill="rgb(227,196,37)"/><text x="125.00" y="270.50"></text></g><g><title>0x7fbb4bad0379 (?) (1 samples, 0.48%)</title><rect x="122" y="276" width="6" height="15" fill="rgb(211,97,5)"/><text x="125.00" y="286.50"></text></g><g><title>0x7fbb4bf2e8b8 (?) (1 samples, 0.48%)</title><rect x="122" y="292" width="6" height="15" fill="rgb(223,76,29)"/><text x="125.00" y="302.50"></text></g><g><title>0x7fbb4bf2cc7f (?) (1 samples, 0.48%)</title><rect x="122" y="308" width="6" height="15" fill="rgb(216,221,46)"/><text x="125.00" y="318.50"></text></g><g><title>0x7fbb4bf3f2e5 (?) (1 samples, 0.48%)</title><rect x="122" y="324" width="6" height="15" fill="rgb(215,173,46)"/><text x="125.00" y="334.50"></text></g><g><title>0x7fbb4bee773d (?) (1 samples, 0.48%)</title><rect x="122" y="340" width="6" height="15" fill="rgb(242,226,5)"/><text x="125.00" y="350.50"></text></g><g><title>0x7fbb4bede620 (?) (1 samples, 0.48%)</title><rect x="122" y="356" width="6" height="15" fill="rgb(242,5,8)"/><text x="125.00" y="366.50"></text></g><g><title>0x7fbb4bf2ae0a (?) (1 samples, 0.48%)</title><rect x="122" y="372" width="6" height="15" fill="rgb(206,104,45)"/><text x="125.00" y="382.50"></text></g><g><title>0x7fbb4bf0d1c6 (?) (1 samples, 0.48%)</title><rect x="122" y="388" width="6" height="15" fill="rgb(251,92,51)"/><text x="125.00" y="398.50"></text></g><g><title>0x7fbb8ba886a2 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="122" y="404" width="6" height="15" fill="rgb(218,207,16)"/><text x="125.00" y="414.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="128" y="292" width="6" height="15" fill="rgb(246,157,33)"/><text x="131.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="128" y="308" width="6" height="15" fill="rgb(208,59,16)"/><text x="131.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.48%)</title><rect x="128" y="324" width="6" height="15" fill="rgb(251,159,18)"/><text x="131.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.48%)</title><rect x="128" y="340" width="6" height="15" fill="rgb(243,216,51)"/><text x="131.00" y="350.50"></text></g><g><title>0x7fbb8ba7b00a (libc-2.29.so) (1 samples, 0.48%)</title><rect x="128" y="356" width="6" height="15" fill="rgb(224,109,2)"/><text x="131.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="134" y="340" width="5" height="15" fill="rgb(227,180,34)"/><text x="137.00" y="350.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="134" y="356" width="5" height="15" fill="rgb(237,142,13)"/><text x="137.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.44%)</title><rect x="128" y="260" width="17" height="15" fill="rgb(242,171,35)"/><text x="131.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.44%)</title><rect x="128" y="276" width="17" height="15" fill="rgb(252,96,38)"/><text x="131.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.96%)</title><rect x="134" y="292" width="11" height="15" fill="rgb(222,64,7)"/><text x="137.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.96%)</title><rect x="134" y="308" width="11" height="15" fill="rgb(232,32,19)"/><text x="137.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.96%)</title><rect x="134" y="324" width="11" height="15" fill="rgb(220,111,25)"/><text x="137.00" y="334.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="139" y="340" width="6" height="15" fill="rgb(240,109,47)"/><text x="142.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="139" y="356" width="6" height="15" fill="rgb(233,199,35)"/><text x="142.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.48%)</title><rect x="139" y="372" width="6" height="15" fill="rgb(250,31,30)"/><text x="142.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.48%)</title><rect x="139" y="388" width="6" height="15" fill="rgb(215,229,36)"/><text x="142.00" y="398.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="145" y="260" width="6" height="15" fill="rgb(252,101,9)"/><text x="148.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="145" y="276" width="6" height="15" fill="rgb(223,209,2)"/><text x="148.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.48%)</title><rect x="145" y="292" width="6" height="15" fill="rgb(232,58,22)"/><text x="148.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.39%)</title><rect x="128" y="244" width="28" height="15" fill="rgb(233,186,47)"/><text x="131.00" y="254.50">o..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="151" y="260" width="5" height="15" fill="rgb(231,224,30)"/><text x="154.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="151" y="276" width="5" height="15" fill="rgb(241,73,45)"/><text x="154.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="151" y="292" width="5" height="15" fill="rgb(246,5,38)"/><text x="154.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="151" y="308" width="5" height="15" fill="rgb(207,22,15)"/><text x="154.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="151" y="324" width="5" height="15" fill="rgb(246,37,26)"/><text x="154.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="151" y="340" width="5" height="15" fill="rgb(254,52,38)"/><text x="154.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="151" y="356" width="5" height="15" fill="rgb(223,86,21)"/><text x="154.00" y="366.50"></text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (8 samples, 3.83%)</title><rect x="117" y="68" width="45" height="15" fill="rgb(246,67,17)"/><text x="120.00" y="78.50">prof..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (8 samples, 3.83%)</title><rect x="117" y="84" width="45" height="15" fill="rgb(237,144,48)"/><text x="120.00" y="94.50">setu..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (8 samples, 3.83%)</title><rect x="117" y="100" width="45" height="15" fill="rgb(213,220,6)"/><text x="120.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.83%)</title><rect x="117" y="116" width="45" height="15" fill="rgb(242,198,16)"/><text x="120.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.83%)</title><rect x="117" y="132" width="45" height="15" fill="rgb(231,229,45)"/><text x="120.00" y="142.50">&lt;lam..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (8 samples, 3.83%)</title><rect x="117" y="148" width="45" height="15" fill="rgb(238,150,19)"/><text x="120.00" y="158.50">run ..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (8 samples, 3.83%)</title><rect x="117" y="164" width="45" height="15" fill="rgb(234,128,49)"/><text x="120.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (8 samples, 3.83%)</title><rect x="117" y="180" width="45" height="15" fill="rgb(220,59,32)"/><text x="120.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py) (8 samples, 3.83%)</title><rect x="117" y="196" width="45" height="15" fill="rgb(226,88,7)"/><text x="120.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.87%)</title><rect x="128" y="212" width="34" height="15" fill="rgb(229,158,47)"/><text x="131.00" y="222.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.87%)</title><rect x="128" y="228" width="34" height="15" fill="rgb(216,102,47)"/><text x="131.00" y="238.50">vo..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.48%)</title><rect x="156" y="244" width="6" height="15" fill="rgb(233,139,9)"/><text x="159.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.48%)</title><rect x="297" y="244" width="6" height="15" fill="rgb(235,45,32)"/><text x="300.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.48%)</title><rect x="297" y="260" width="6" height="15" fill="rgb(211,25,7)"/><text x="300.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.48%)</title><rect x="297" y="276" width="6" height="15" fill="rgb(252,101,27)"/><text x="300.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.48%)</title><rect x="297" y="292" width="6" height="15" fill="rgb(227,68,38)"/><text x="300.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (6 samples, 2.87%)</title><rect x="275" y="212" width="34" height="15" fill="rgb(224,199,19)"/><text x="278.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (2 samples, 0.96%)</title><rect x="297" y="228" width="12" height="15" fill="rgb(243,73,27)"/><text x="300.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.48%)</title><rect x="303" y="244" width="6" height="15" fill="rgb(210,136,24)"/><text x="306.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.48%)</title><rect x="303" y="260" width="6" height="15" fill="rgb(236,11,31)"/><text x="306.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.48%)</title><rect x="303" y="276" width="6" height="15" fill="rgb(210,211,48)"/><text x="306.00" y="286.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.48%)</title><rect x="320" y="244" width="6" height="15" fill="rgb(234,221,13)"/><text x="323.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.48%)</title><rect x="320" y="260" width="6" height="15" fill="rgb(211,34,20)"/><text x="323.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.48%)</title><rect x="320" y="276" width="6" height="15" fill="rgb(235,98,6)"/><text x="323.00" y="286.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src) (4 samples, 1.91%)</title><rect x="309" y="228" width="22" height="15" fill="rgb(217,60,7)"/><text x="312.00" y="238.50">g..</text></g><g><title>array_astype (methods.c) (1 samples, 0.48%)</title><rect x="326" y="244" width="5" height="15" fill="rgb(238,106,25)"/><text x="329.00" y="254.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.48%)</title><rect x="326" y="260" width="5" height="15" fill="rgb(247,72,5)"/><text x="329.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.48%)</title><rect x="343" y="340" width="5" height="15" fill="rgb(213,194,54)"/><text x="346.00" y="350.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.48%)</title><rect x="343" y="356" width="5" height="15" fill="rgb(233,8,5)"/><text x="346.00" y="366.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.48%)</title><rect x="343" y="372" width="5" height="15" fill="rgb(252,166,13)"/><text x="346.00" y="382.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.48%)</title><rect x="343" y="388" width="5" height="15" fill="rgb(242,32,7)"/><text x="346.00" y="398.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.48%)</title><rect x="343" y="404" width="5" height="15" fill="rgb(209,84,40)"/><text x="346.00" y="414.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.96%)</title><rect x="343" y="324" width="11" height="15" fill="rgb(236,21,3)"/><text x="346.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.48%)</title><rect x="348" y="340" width="6" height="15" fill="rgb(243,216,27)"/><text x="351.00" y="350.50"></text></g><g><title>PyArray_FromInterface (ctors.c) (1 samples, 0.48%)</title><rect x="348" y="356" width="6" height="15" fill="rgb(206,100,21)"/><text x="351.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.48%)</title><rect x="354" y="324" width="6" height="15" fill="rgb(220,24,34)"/><text x="357.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.48%)</title><rect x="354" y="340" width="6" height="15" fill="rgb(244,112,12)"/><text x="357.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.48%)</title><rect x="354" y="356" width="6" height="15" fill="rgb(237,169,30)"/><text x="357.00" y="366.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.48%)</title><rect x="354" y="372" width="6" height="15" fill="rgb(242,159,21)"/><text x="357.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.48%)</title><rect x="354" y="388" width="6" height="15" fill="rgb(229,192,30)"/><text x="357.00" y="398.50"></text></g><g><title>_aligned_strided_to_strided_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.48%)</title><rect x="354" y="404" width="6" height="15" fill="rgb(222,19,48)"/><text x="357.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py) (11 samples, 5.26%)</title><rect x="309" y="212" width="62" height="15" fill="rgb(250,48,44)"/><text x="312.00" y="222.50">_run (..</text></g><g><title>prod (&lt;__array_function__ internals&gt;) (7 samples, 3.35%)</title><rect x="331" y="228" width="40" height="15" fill="rgb(238,116,7)"/><text x="334.00" y="238.50">pro..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 3.35%)</title><rect x="331" y="244" width="40" height="15" fill="rgb(250,80,42)"/><text x="334.00" y="254.50">arr..</text></g><g><title>prod (numpy/core/fromnumeric.py) (6 samples, 2.87%)</title><rect x="337" y="260" width="34" height="15" fill="rgb(223,158,49)"/><text x="340.00" y="270.50">pr..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (6 samples, 2.87%)</title><rect x="337" y="276" width="34" height="15" fill="rgb(249,74,1)"/><text x="340.00" y="286.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 2.87%)</title><rect x="337" y="292" width="34" height="15" fill="rgb(211,71,30)"/><text x="340.00" y="302.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 2.87%)</title><rect x="337" y="308" width="34" height="15" fill="rgb(239,25,6)"/><text x="340.00" y="318.50">Py..</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.96%)</title><rect x="360" y="324" width="11" height="15" fill="rgb(232,157,43)"/><text x="363.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.96%)</title><rect x="360" y="340" width="11" height="15" fill="rgb(225,170,40)"/><text x="363.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.96%)</title><rect x="360" y="356" width="11" height="15" fill="rgb(211,13,39)"/><text x="363.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.48%)</title><rect x="371" y="212" width="5" height="15" fill="rgb(226,85,28)"/><text x="374.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.48%)</title><rect x="371" y="228" width="5" height="15" fill="rgb(209,29,48)"/><text x="374.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.48%)</title><rect x="371" y="244" width="5" height="15" fill="rgb(234,47,37)"/><text x="374.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.48%)</title><rect x="371" y="260" width="5" height="15" fill="rgb(222,18,10)"/><text x="374.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.48%)</title><rect x="405" y="356" width="5" height="15" fill="rgb(253,24,0)"/><text x="408.00" y="366.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (4 samples, 1.91%)</title><rect x="393" y="260" width="23" height="15" fill="rgb(206,163,6)"/><text x="396.00" y="270.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.44%)</title><rect x="399" y="276" width="17" height="15" fill="rgb(212,84,2)"/><text x="402.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (3 samples, 1.44%)</title><rect x="399" y="292" width="17" height="15" fill="rgb(226,19,11)"/><text x="402.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.44%)</title><rect x="399" y="308" width="17" height="15" fill="rgb(205,223,18)"/><text x="402.00" y="318.50"></text></g><g><title>array_argpartition (methods.c) (2 samples, 0.96%)</title><rect x="405" y="324" width="11" height="15" fill="rgb(225,226,40)"/><text x="408.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (2 samples, 0.96%)</title><rect x="405" y="340" width="11" height="15" fill="rgb(226,227,38)"/><text x="408.00" y="350.50"></text></g><g><title>partition_prep_kth_array (item_selection.c) (1 samples, 0.48%)</title><rect x="410" y="356" width="6" height="15" fill="rgb(207,189,18)"/><text x="413.00" y="366.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.48%)</title><rect x="410" y="372" width="6" height="15" fill="rgb(238,229,10)"/><text x="413.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.48%)</title><rect x="410" y="388" width="6" height="15" fill="rgb(229,138,43)"/><text x="413.00" y="398.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.48%)</title><rect x="410" y="404" width="6" height="15" fill="rgb(212,119,29)"/><text x="413.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.48%)</title><rect x="410" y="420" width="6" height="15" fill="rgb(218,209,54)"/><text x="413.00" y="430.50"></text></g><g><title>0x7fbb8ba9a12b (libc-2.29.so) (1 samples, 0.48%)</title><rect x="410" y="436" width="6" height="15" fill="rgb(215,77,26)"/><text x="413.00" y="446.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (1 samples, 0.48%)</title><rect x="416" y="276" width="6" height="15" fill="rgb(215,171,19)"/><text x="419.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.48%)</title><rect x="416" y="292" width="6" height="15" fill="rgb(222,164,41)"/><text x="419.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.48%)</title><rect x="422" y="276" width="5" height="15" fill="rgb(244,181,23)"/><text x="425.00" y="286.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.48%)</title><rect x="422" y="292" width="5" height="15" fill="rgb(229,117,16)"/><text x="425.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (10 samples, 4.78%)</title><rect x="376" y="212" width="57" height="15" fill="rgb(245,141,39)"/><text x="379.00" y="222.50">_run (..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 4.31%)</title><rect x="382" y="228" width="51" height="15" fill="rgb(211,17,53)"/><text x="385.00" y="238.50">_comm..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 4.31%)</title><rect x="382" y="244" width="51" height="15" fill="rgb(232,164,40)"/><text x="385.00" y="254.50">topk_..</text></g><g><title>array_subscript (mapping.c) (3 samples, 1.44%)</title><rect x="416" y="260" width="17" height="15" fill="rgb(219,97,7)"/><text x="419.00" y="270.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.48%)</title><rect x="427" y="276" width="6" height="15" fill="rgb(209,7,33)"/><text x="430.00" y="286.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.48%)</title><rect x="433" y="212" width="6" height="15" fill="rgb(222,199,35)"/><text x="436.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.48%)</title><rect x="433" y="228" width="6" height="15" fill="rgb(231,100,53)"/><text x="436.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.48%)</title><rect x="433" y="244" width="6" height="15" fill="rgb(243,39,16)"/><text x="436.00" y="254.50"></text></g><g><title>0x7fbb68c9f8ec (?) (1 samples, 0.48%)</title><rect x="461" y="260" width="6" height="15" fill="rgb(225,176,50)"/><text x="464.00" y="270.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py) (1 samples, 0.48%)</title><rect x="467" y="260" width="5" height="15" fill="rgb(241,23,8)"/><text x="470.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.48%)</title><rect x="472" y="260" width="6" height="15" fill="rgb(222,201,37)"/><text x="475.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.48%)</title><rect x="472" y="276" width="6" height="15" fill="rgb(233,194,7)"/><text x="475.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py) (8 samples, 3.83%)</title><rect x="439" y="228" width="45" height="15" fill="rgb(210,71,0)"/><text x="442.00" y="238.50">_run..</text></g><g><title>cdist (scipy/spatial/distance.py) (7 samples, 3.35%)</title><rect x="444" y="244" width="40" height="15" fill="rgb(252,195,21)"/><text x="447.00" y="254.50">cdi..</text></g><g><title>callable (scipy/_lib/six.py) (1 samples, 0.48%)</title><rect x="478" y="260" width="6" height="15" fill="rgb(248,23,44)"/><text x="481.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (scipy/_lib/six.py) (1 samples, 0.48%)</title><rect x="478" y="276" width="6" height="15" fill="rgb(224,193,0)"/><text x="481.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.48%)</title><rect x="501" y="340" width="5" height="15" fill="rgb(232,2,46)"/><text x="504.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.48%)</title><rect x="501" y="356" width="5" height="15" fill="rgb(254,148,41)"/><text x="504.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.48%)</title><rect x="501" y="372" width="5" height="15" fill="rgb(240,24,33)"/><text x="504.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.96%)</title><rect x="501" y="308" width="11" height="15" fill="rgb(249,71,7)"/><text x="504.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.96%)</title><rect x="501" y="324" width="11" height="15" fill="rgb(226,112,38)"/><text x="504.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.48%)</title><rect x="506" y="340" width="6" height="15" fill="rgb(232,95,36)"/><text x="509.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.48%)</title><rect x="512" y="324" width="6" height="15" fill="rgb(214,218,42)"/><text x="515.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.48%)</title><rect x="512" y="340" width="6" height="15" fill="rgb(239,170,28)"/><text x="515.00" y="350.50"></text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (64 samples, 30.62%)</title><rect x="162" y="68" width="361" height="15" fill="rgb(226,131,29)"/><text x="165.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (64 samples, 30.62%)</title><rect x="162" y="84" width="361" height="15" fill="rgb(254,24,19)"/><text x="165.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (64 samples, 30.62%)</title><rect x="162" y="100" width="361" height="15" fill="rgb(236,61,4)"/><text x="165.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (63 samples, 30.14%)</title><rect x="168" y="116" width="355" height="15" fill="rgb(230,23,33)"/><text x="171.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (63 samples, 30.14%)</title><rect x="168" y="132" width="355" height="15" fill="rgb(248,87,49)"/><text x="171.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (63 samples, 30.14%)</title><rect x="168" y="148" width="355" height="15" fill="rgb(221,39,3)"/><text x="171.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (61 samples, 29.19%)</title><rect x="179" y="164" width="344" height="15" fill="rgb(217,189,21)"/><text x="182.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (59 samples, 28.23%)</title><rect x="190" y="180" width="333" height="15" fill="rgb(210,162,27)"/><text x="193.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 21.53%)</title><rect x="269" y="196" width="254" height="15" fill="rgb(213,203,12)"/><text x="272.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (15 samples, 7.18%)</title><rect x="439" y="212" width="84" height="15" fill="rgb(240,181,6)"/><text x="442.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py) (7 samples, 3.35%)</title><rect x="484" y="228" width="39" height="15" fill="rgb(219,158,2)"/><text x="487.00" y="238.50">_ru..</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (7 samples, 3.35%)</title><rect x="484" y="244" width="39" height="15" fill="rgb(218,97,23)"/><text x="487.00" y="254.50">mea..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.91%)</title><rect x="501" y="260" width="22" height="15" fill="rgb(220,85,16)"/><text x="504.00" y="270.50">a..</text></g><g><title>mean (numpy/core/fromnumeric.py) (4 samples, 1.91%)</title><rect x="501" y="276" width="22" height="15" fill="rgb(252,152,23)"/><text x="504.00" y="286.50">m..</text></g><g><title>_mean (numpy/core/_methods.py) (4 samples, 1.91%)</title><rect x="501" y="292" width="22" height="15" fill="rgb(254,35,47)"/><text x="504.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.96%)</title><rect x="512" y="308" width="11" height="15" fill="rgb(250,107,46)"/><text x="515.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.48%)</title><rect x="518" y="324" width="5" height="15" fill="rgb(209,61,49)"/><text x="521.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.48%)</title><rect x="518" y="340" width="5" height="15" fill="rgb(215,73,45)"/><text x="521.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.48%)</title><rect x="518" y="356" width="5" height="15" fill="rgb(215,14,43)"/><text x="521.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.48%)</title><rect x="518" y="372" width="5" height="15" fill="rgb(235,138,29)"/><text x="521.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.48%)</title><rect x="518" y="388" width="5" height="15" fill="rgb(240,145,35)"/><text x="521.00" y="398.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.48%)</title><rect x="518" y="404" width="5" height="15" fill="rgb(217,61,22)"/><text x="521.00" y="414.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.48%)</title><rect x="523" y="164" width="6" height="15" fill="rgb(210,145,47)"/><text x="526.00" y="174.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.48%)</title><rect x="523" y="180" width="6" height="15" fill="rgb(213,143,24)"/><text x="526.00" y="190.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.48%)</title><rect x="529" y="164" width="6" height="15" fill="rgb(209,204,26)"/><text x="532.00" y="174.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.48%)</title><rect x="529" y="180" width="6" height="15" fill="rgb(213,165,24)"/><text x="532.00" y="190.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.48%)</title><rect x="529" y="196" width="6" height="15" fill="rgb(209,102,54)"/><text x="532.00" y="206.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.48%)</title><rect x="529" y="212" width="6" height="15" fill="rgb(222,225,1)"/><text x="532.00" y="222.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.48%)</title><rect x="529" y="228" width="6" height="15" fill="rgb(205,223,11)"/><text x="532.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.48%)</title><rect x="557" y="180" width="6" height="15" fill="rgb(240,79,18)"/><text x="560.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.96%)</title><rect x="563" y="180" width="11" height="15" fill="rgb(231,137,19)"/><text x="566.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="563" y="196" width="11" height="15" fill="rgb(234,215,22)"/><text x="566.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.96%)</title><rect x="574" y="180" width="11" height="15" fill="rgb(232,217,39)"/><text x="577.00" y="190.50"></text></g><g><title>array_ndim_get (getset.c) (1 samples, 0.48%)</title><rect x="585" y="180" width="6" height="15" fill="rgb(217,41,4)"/><text x="588.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (11 samples, 5.26%)</title><rect x="535" y="164" width="62" height="15" fill="rgb(222,188,7)"/><text x="538.00" y="174.50">check_..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.48%)</title><rect x="591" y="180" width="6" height="15" fill="rgb(248,141,21)"/><text x="594.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.48%)</title><rect x="591" y="196" width="6" height="15" fill="rgb(222,206,21)"/><text x="594.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.48%)</title><rect x="614" y="196" width="5" height="15" fill="rgb(205,4,50)"/><text x="617.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.48%)</title><rect x="619" y="196" width="6" height="15" fill="rgb(220,141,18)"/><text x="622.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.48%)</title><rect x="619" y="212" width="6" height="15" fill="rgb(231,168,37)"/><text x="622.00" y="222.50"></text></g><g><title>0x7fbb8ba8f730 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="619" y="228" width="6" height="15" fill="rgb(251,116,4)"/><text x="622.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (5 samples, 2.39%)</title><rect x="608" y="180" width="28" height="15" fill="rgb(223,15,19)"/><text x="611.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.96%)</title><rect x="625" y="196" width="11" height="15" fill="rgb(243,42,31)"/><text x="628.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.96%)</title><rect x="625" y="212" width="11" height="15" fill="rgb(219,228,41)"/><text x="628.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 1.91%)</title><rect x="636" y="180" width="23" height="15" fill="rgb(240,144,13)"/><text x="639.00" y="190.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.96%)</title><rect x="647" y="196" width="12" height="15" fill="rgb(228,196,37)"/><text x="650.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.48%)</title><rect x="653" y="212" width="6" height="15" fill="rgb(205,218,24)"/><text x="656.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (2 samples, 0.96%)</title><rect x="659" y="180" width="11" height="15" fill="rgb(245,46,3)"/><text x="662.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (2 samples, 0.96%)</title><rect x="659" y="196" width="11" height="15" fill="rgb(230,30,17)"/><text x="662.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.48%)</title><rect x="664" y="212" width="6" height="15" fill="rgb(240,220,27)"/><text x="667.00" y="222.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (6 samples, 2.87%)</title><rect x="676" y="196" width="34" height="15" fill="rgb(217,22,17)"/><text x="679.00" y="206.50">_c..</text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (5 samples, 2.39%)</title><rect x="681" y="212" width="29" height="15" fill="rgb(215,222,36)"/><text x="684.00" y="222.50">&lt;g..</text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 2.39%)</title><rect x="681" y="228" width="29" height="15" fill="rgb(248,23,33)"/><text x="684.00" y="238.50">_n..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (1 samples, 0.48%)</title><rect x="732" y="292" width="6" height="15" fill="rgb(242,53,24)"/><text x="735.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.48%)</title><rect x="732" y="308" width="6" height="15" fill="rgb(214,203,5)"/><text x="735.00" y="318.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.48%)</title><rect x="732" y="324" width="6" height="15" fill="rgb(205,45,33)"/><text x="735.00" y="334.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.48%)</title><rect x="732" y="340" width="6" height="15" fill="rgb(254,15,45)"/><text x="735.00" y="350.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.48%)</title><rect x="732" y="356" width="6" height="15" fill="rgb(231,137,2)"/><text x="735.00" y="366.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (6 samples, 2.87%)</title><rect x="710" y="212" width="33" height="15" fill="rgb(225,212,11)"/><text x="713.00" y="222.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.87%)</title><rect x="710" y="228" width="33" height="15" fill="rgb(252,189,23)"/><text x="713.00" y="238.50">ar..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (6 samples, 2.87%)</title><rect x="710" y="244" width="33" height="15" fill="rgb(206,187,6)"/><text x="713.00" y="254.50">ar..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.91%)</title><rect x="721" y="260" width="22" height="15" fill="rgb(244,194,31)"/><text x="724.00" y="270.50">_..</text></g><g><title>array_argpartition (methods.c) (2 samples, 0.96%)</title><rect x="732" y="276" width="11" height="15" fill="rgb(216,115,39)"/><text x="735.00" y="286.50"></text></g><g><title>PyArray_SelectkindConverter (conversion_utils.c) (1 samples, 0.48%)</title><rect x="738" y="292" width="5" height="15" fill="rgb(207,167,24)"/><text x="741.00" y="302.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.48%)</title><rect x="743" y="212" width="6" height="15" fill="rgb(223,0,12)"/><text x="746.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.48%)</title><rect x="743" y="228" width="6" height="15" fill="rgb(242,57,38)"/><text x="746.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.48%)</title><rect x="743" y="244" width="6" height="15" fill="rgb(235,198,10)"/><text x="746.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.48%)</title><rect x="743" y="260" width="6" height="15" fill="rgb(254,206,9)"/><text x="746.00" y="270.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.48%)</title><rect x="749" y="244" width="6" height="15" fill="rgb(249,201,20)"/><text x="752.00" y="254.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (9 samples, 4.31%)</title><rect x="710" y="196" width="50" height="15" fill="rgb(205,66,27)"/><text x="713.00" y="206.50">_knei..</text></g><g><title>array_subscript (mapping.c) (2 samples, 0.96%)</title><rect x="749" y="212" width="11" height="15" fill="rgb(219,6,5)"/><text x="752.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.96%)</title><rect x="749" y="228" width="11" height="15" fill="rgb(245,125,13)"/><text x="752.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.48%)</title><rect x="755" y="244" width="5" height="15" fill="rgb(212,91,17)"/><text x="758.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.96%)</title><rect x="760" y="196" width="12" height="15" fill="rgb(217,36,29)"/><text x="763.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.96%)</title><rect x="760" y="212" width="12" height="15" fill="rgb(239,130,42)"/><text x="763.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.48%)</title><rect x="766" y="228" width="6" height="15" fill="rgb(221,59,10)"/><text x="769.00" y="238.50"></text></g><g><title>_return_float_dtype (sklearn/metrics/pairwise.py) (1 samples, 0.48%)</title><rect x="794" y="228" width="6" height="15" fill="rgb(240,159,54)"/><text x="797.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.48%)</title><rect x="794" y="244" width="6" height="15" fill="rgb(219,108,43)"/><text x="797.00" y="254.50"></text></g><g><title>daemon (multiprocessing/process.py) (2 samples, 0.96%)</title><rect x="806" y="260" width="11" height="15" fill="rgb(218,190,20)"/><text x="809.00" y="270.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py) (5 samples, 2.39%)</title><rect x="800" y="244" width="28" height="15" fill="rgb(244,6,35)"/><text x="803.00" y="254.50">e..</text></g><g><title>in_main_thread (joblib/_parallel_backends.py) (2 samples, 0.96%)</title><rect x="817" y="260" width="11" height="15" fill="rgb(222,113,20)"/><text x="820.00" y="270.50"></text></g><g><title>current_thread (threading.py) (1 samples, 0.48%)</title><rect x="823" y="276" width="5" height="15" fill="rgb(247,40,4)"/><text x="826.00" y="286.50"></text></g><g><title>thread_get_ident (python3.7) (1 samples, 0.48%)</title><rect x="823" y="292" width="5" height="15" fill="rgb(228,134,12)"/><text x="826.00" y="302.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.48%)</title><rect x="823" y="308" width="5" height="15" fill="rgb(245,106,54)"/><text x="826.00" y="318.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (6 samples, 2.87%)</title><rect x="800" y="228" width="34" height="15" fill="rgb(211,214,33)"/><text x="803.00" y="238.50">ef..</text></g><g><title>get_active_backend (joblib/parallel.py) (1 samples, 0.48%)</title><rect x="828" y="244" width="6" height="15" fill="rgb(235,135,21)"/><text x="831.00" y="254.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.48%)</title><rect x="839" y="244" width="6" height="15" fill="rgb(225,6,36)"/><text x="842.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.48%)</title><rect x="839" y="260" width="6" height="15" fill="rgb(228,42,17)"/><text x="842.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.48%)</title><rect x="839" y="276" width="6" height="15" fill="rgb(243,141,11)"/><text x="842.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.48%)</title><rect x="839" y="292" width="6" height="15" fill="rgb(254,110,13)"/><text x="842.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.48%)</title><rect x="839" y="308" width="6" height="15" fill="rgb(244,218,28)"/><text x="842.00" y="318.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.48%)</title><rect x="839" y="324" width="6" height="15" fill="rgb(233,149,23)"/><text x="842.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.48%)</title><rect x="839" y="340" width="6" height="15" fill="rgb(229,199,39)"/><text x="842.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.96%)</title><rect x="845" y="260" width="11" height="15" fill="rgb(207,228,17)"/><text x="848.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.48%)</title><rect x="851" y="276" width="5" height="15" fill="rgb(246,0,47)"/><text x="854.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.48%)</title><rect x="851" y="292" width="5" height="15" fill="rgb(246,115,4)"/><text x="854.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.48%)</title><rect x="851" y="308" width="5" height="15" fill="rgb(223,66,14)"/><text x="854.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 1.44%)</title><rect x="845" y="244" width="17" height="15" fill="rgb(205,179,38)"/><text x="848.00" y="254.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.48%)</title><rect x="856" y="260" width="6" height="15" fill="rgb(232,11,21)"/><text x="859.00" y="270.50"></text></g><g><title>_return_float_dtype (sklearn/metrics/pairwise.py) (1 samples, 0.48%)</title><rect x="862" y="260" width="6" height="15" fill="rgb(217,132,11)"/><text x="865.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.48%)</title><rect x="862" y="276" width="6" height="15" fill="rgb(231,33,51)"/><text x="865.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.48%)</title><rect x="896" y="276" width="6" height="15" fill="rgb(252,165,7)"/><text x="899.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.96%)</title><rect x="913" y="292" width="11" height="15" fill="rgb(214,19,16)"/><text x="916.00" y="302.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 2.39%)</title><rect x="902" y="276" width="28" height="15" fill="rgb(247,197,26)"/><text x="905.00" y="286.50">_..</text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.48%)</title><rect x="924" y="292" width="6" height="15" fill="rgb(232,129,42)"/><text x="927.00" y="302.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.48%)</title><rect x="930" y="276" width="5" height="15" fill="rgb(205,124,47)"/><text x="933.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 3.35%)</title><rect x="935" y="276" width="40" height="15" fill="rgb(229,34,33)"/><text x="938.00" y="286.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.48%)</title><rect x="969" y="292" width="6" height="15" fill="rgb(228,125,24)"/><text x="972.00" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.48%)</title><rect x="969" y="308" width="6" height="15" fill="rgb(219,219,0)"/><text x="972.00" y="318.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.48%)</title><rect x="975" y="340" width="6" height="15" fill="rgb(244,198,8)"/><text x="978.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.48%)</title><rect x="986" y="388" width="6" height="15" fill="rgb(212,154,17)"/><text x="989.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.48%)</title><rect x="986" y="404" width="6" height="15" fill="rgb(218,220,5)"/><text x="989.00" y="414.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.96%)</title><rect x="986" y="356" width="12" height="15" fill="rgb(224,204,51)"/><text x="989.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.96%)</title><rect x="986" y="372" width="12" height="15" fill="rgb(234,203,43)"/><text x="989.00" y="382.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.48%)</title><rect x="992" y="388" width="6" height="15" fill="rgb(206,137,26)"/><text x="995.00" y="398.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (5 samples, 2.39%)</title><rect x="975" y="308" width="28" height="15" fill="rgb(207,219,48)"/><text x="978.00" y="318.50">P..</text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 2.39%)</title><rect x="975" y="324" width="28" height="15" fill="rgb(244,4,30)"/><text x="978.00" y="334.50">P..</text></g><g><title>PyArray_FromArray (ctors.c) (4 samples, 1.91%)</title><rect x="981" y="340" width="22" height="15" fill="rgb(243,78,36)"/><text x="984.00" y="350.50">P..</text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.48%)</title><rect x="998" y="356" width="5" height="15" fill="rgb(245,228,6)"/><text x="1001.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.48%)</title><rect x="998" y="372" width="5" height="15" fill="rgb(209,196,21)"/><text x="1001.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.48%)</title><rect x="998" y="388" width="5" height="15" fill="rgb(248,120,40)"/><text x="1001.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.48%)</title><rect x="998" y="404" width="5" height="15" fill="rgb(223,49,10)"/><text x="1001.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.48%)</title><rect x="998" y="420" width="5" height="15" fill="rgb(247,104,31)"/><text x="1001.00" y="430.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 2.87%)</title><rect x="975" y="276" width="34" height="15" fill="rgb(229,25,47)"/><text x="978.00" y="286.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 2.87%)</title><rect x="975" y="292" width="34" height="15" fill="rgb(225,4,42)"/><text x="978.00" y="302.50">_a..</text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.48%)</title><rect x="1003" y="308" width="6" height="15" fill="rgb(210,163,40)"/><text x="1006.00" y="318.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (27 samples, 12.92%)</title><rect x="862" y="244" width="152" height="15" fill="rgb(232,219,4)"/><text x="865.00" y="254.50">check_pairwise_arra..</text></g><g><title>check_array (sklearn/utils/validation.py) (26 samples, 12.44%)</title><rect x="868" y="260" width="146" height="15" fill="rgb(234,6,29)"/><text x="871.00" y="270.50">check_array (sklea..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.48%)</title><rect x="1009" y="276" width="5" height="15" fill="rgb(252,218,52)"/><text x="1012.00" y="286.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (5 samples, 2.39%)</title><rect x="1014" y="244" width="29" height="15" fill="rgb(246,131,23)"/><text x="1017.00" y="254.50">ro..</text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (3 samples, 1.44%)</title><rect x="1026" y="260" width="17" height="15" fill="rgb(227,56,21)"/><text x="1029.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.96%)</title><rect x="1031" y="276" width="12" height="15" fill="rgb(215,186,46)"/><text x="1034.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py) (2 samples, 0.96%)</title><rect x="1031" y="292" width="12" height="15" fill="rgb(208,165,18)"/><text x="1034.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c) (1 samples, 0.48%)</title><rect x="1037" y="308" width="6" height="15" fill="rgb(228,180,7)"/><text x="1040.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src) (1 samples, 0.48%)</title><rect x="1037" y="324" width="6" height="15" fill="rgb(240,105,20)"/><text x="1040.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.48%)</title><rect x="1037" y="340" width="6" height="15" fill="rgb(245,93,8)"/><text x="1040.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.48%)</title><rect x="1037" y="356" width="6" height="15" fill="rgb(245,226,24)"/><text x="1040.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.48%)</title><rect x="1048" y="308" width="6" height="15" fill="rgb(239,119,46)"/><text x="1051.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.48%)</title><rect x="1048" y="324" width="6" height="15" fill="rgb(249,98,32)"/><text x="1051.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.48%)</title><rect x="1048" y="340" width="6" height="15" fill="rgb(224,194,15)"/><text x="1051.00" y="350.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (3 samples, 1.44%)</title><rect x="1043" y="244" width="17" height="15" fill="rgb(245,155,19)"/><text x="1046.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.96%)</title><rect x="1048" y="260" width="12" height="15" fill="rgb(219,46,10)"/><text x="1051.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.96%)</title><rect x="1048" y="276" width="12" height="15" fill="rgb(235,0,8)"/><text x="1051.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (2 samples, 0.96%)</title><rect x="1048" y="292" width="12" height="15" fill="rgb(232,59,19)"/><text x="1051.00" y="302.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.48%)</title><rect x="1054" y="308" width="6" height="15" fill="rgb(254,185,15)"/><text x="1057.00" y="318.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.48%)</title><rect x="1060" y="292" width="5" height="15" fill="rgb(217,177,22)"/><text x="1063.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.48%)</title><rect x="1060" y="308" width="5" height="15" fill="rgb(248,75,38)"/><text x="1063.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.48%)</title><rect x="1060" y="324" width="5" height="15" fill="rgb(239,44,32)"/><text x="1063.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.48%)</title><rect x="1060" y="340" width="5" height="15" fill="rgb(215,74,28)"/><text x="1063.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.48%)</title><rect x="1060" y="356" width="5" height="15" fill="rgb(207,169,1)"/><text x="1063.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.96%)</title><rect x="1060" y="276" width="11" height="15" fill="rgb(246,190,23)"/><text x="1063.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.48%)</title><rect x="1065" y="292" width="6" height="15" fill="rgb(231,66,30)"/><text x="1068.00" y="302.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (72 samples, 34.45%)</title><rect x="670" y="180" width="407" height="15" fill="rgb(249,186,17)"/><text x="673.00" y="190.50">pairwise_distances_chunked (sklearn/metrics/pairwise.py)</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (54 samples, 25.84%)</title><rect x="772" y="196" width="305" height="15" fill="rgb(236,196,23)"/><text x="775.00" y="206.50">pairwise_distances (sklearn/metrics/pairw..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (51 samples, 24.40%)</title><rect x="789" y="212" width="288" height="15" fill="rgb(237,38,46)"/><text x="792.00" y="222.50">_parallel_pairwise (sklearn/metrics/pa..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (43 samples, 20.57%)</title><rect x="834" y="228" width="243" height="15" fill="rgb(225,28,21)"/><text x="837.00" y="238.50">euclidean_distances (sklearn/met..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.44%)</title><rect x="1060" y="244" width="17" height="15" fill="rgb(219,67,5)"/><text x="1063.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.44%)</title><rect x="1060" y="260" width="17" height="15" fill="rgb(248,211,5)"/><text x="1063.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.48%)</title><rect x="1071" y="276" width="6" height="15" fill="rgb(224,179,16)"/><text x="1074.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.48%)</title><rect x="1071" y="292" width="6" height="15" fill="rgb(237,14,24)"/><text x="1074.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.48%)</title><rect x="1071" y="308" width="6" height="15" fill="rgb(227,84,36)"/><text x="1074.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.48%)</title><rect x="1071" y="324" width="6" height="15" fill="rgb(246,8,8)"/><text x="1074.00" y="334.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (3 samples, 1.44%)</title><rect x="1082" y="228" width="17" height="15" fill="rgb(253,193,49)"/><text x="1085.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.96%)</title><rect x="1088" y="244" width="11" height="15" fill="rgb(244,8,49)"/><text x="1091.00" y="254.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (2 samples, 0.96%)</title><rect x="1088" y="260" width="11" height="15" fill="rgb(226,215,38)"/><text x="1091.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.48%)</title><rect x="1105" y="308" width="5" height="15" fill="rgb(225,173,12)"/><text x="1108.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.48%)</title><rect x="1105" y="324" width="5" height="15" fill="rgb(234,192,6)"/><text x="1108.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.48%)</title><rect x="1105" y="340" width="5" height="15" fill="rgb(244,41,10)"/><text x="1108.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.91%)</title><rect x="1099" y="244" width="23" height="15" fill="rgb(211,154,26)"/><text x="1102.00" y="254.50">a..</text></g><g><title>array_concatenate (multiarraymodule.c) (3 samples, 1.44%)</title><rect x="1105" y="260" width="17" height="15" fill="rgb(253,133,8)"/><text x="1108.00" y="270.50"></text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c) (3 samples, 1.44%)</title><rect x="1105" y="276" width="17" height="15" fill="rgb(240,10,0)"/><text x="1108.00" y="286.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c) (3 samples, 1.44%)</title><rect x="1105" y="292" width="17" height="15" fill="rgb(206,176,45)"/><text x="1108.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.96%)</title><rect x="1110" y="308" width="12" height="15" fill="rgb(229,23,41)"/><text x="1113.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.48%)</title><rect x="1116" y="324" width="6" height="15" fill="rgb(210,176,45)"/><text x="1119.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.48%)</title><rect x="1116" y="340" width="6" height="15" fill="rgb(219,67,16)"/><text x="1119.00" y="350.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (94 samples, 44.98%)</title><rect x="597" y="164" width="530" height="15" fill="rgb(229,149,51)"/><text x="600.00" y="174.50">kneighbors (sklearn/neighbors/_base.py)</text></g><g><title>vstack (&lt;__array_function__ internals&gt;) (9 samples, 4.31%)</title><rect x="1077" y="180" width="50" height="15" fill="rgb(239,36,13)"/><text x="1080.00" y="190.50">vstac..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 4.31%)</title><rect x="1077" y="196" width="50" height="15" fill="rgb(232,206,53)"/><text x="1080.00" y="206.50">array..</text></g><g><title>vstack (numpy/core/shape_base.py) (9 samples, 4.31%)</title><rect x="1077" y="212" width="50" height="15" fill="rgb(226,68,17)"/><text x="1080.00" y="222.50">vstac..</text></g><g><title>concatenate (&lt;__array_function__ internals&gt;) (5 samples, 2.39%)</title><rect x="1099" y="228" width="28" height="15" fill="rgb(251,113,30)"/><text x="1102.00" y="238.50">c..</text></g><g><title>concatenate (numpy/core/multiarray.py) (1 samples, 0.48%)</title><rect x="1122" y="244" width="5" height="15" fill="rgb(219,99,10)"/><text x="1125.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.48%)</title><rect x="1139" y="260" width="5" height="15" fill="rgb(206,38,25)"/><text x="1142.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.48%)</title><rect x="1139" y="276" width="5" height="15" fill="rgb(252,78,0)"/><text x="1142.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.48%)</title><rect x="1139" y="292" width="5" height="15" fill="rgb(225,95,10)"/><text x="1142.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.48%)</title><rect x="1139" y="308" width="5" height="15" fill="rgb(235,186,25)"/><text x="1142.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.48%)</title><rect x="1144" y="260" width="6" height="15" fill="rgb(225,134,51)"/><text x="1147.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.48%)</title><rect x="1144" y="276" width="6" height="15" fill="rgb(231,104,1)"/><text x="1147.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.48%)</title><rect x="1144" y="292" width="6" height="15" fill="rgb(209,84,45)"/><text x="1147.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.48%)</title><rect x="1150" y="276" width="6" height="15" fill="rgb(232,40,34)"/><text x="1153.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.48%)</title><rect x="1150" y="292" width="6" height="15" fill="rgb(205,101,53)"/><text x="1153.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.48%)</title><rect x="1150" y="308" width="6" height="15" fill="rgb(240,166,49)"/><text x="1153.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.91%)</title><rect x="1139" y="228" width="22" height="15" fill="rgb(244,18,2)"/><text x="1142.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.91%)</title><rect x="1139" y="244" width="22" height="15" fill="rgb(221,175,5)"/><text x="1142.00" y="254.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.96%)</title><rect x="1150" y="260" width="11" height="15" fill="rgb(213,194,54)"/><text x="1153.00" y="270.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.48%)</title><rect x="1156" y="276" width="5" height="15" fill="rgb(254,117,33)"/><text x="1159.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.48%)</title><rect x="1161" y="244" width="6" height="15" fill="rgb(241,38,31)"/><text x="1164.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.48%)</title><rect x="1161" y="260" width="6" height="15" fill="rgb(222,88,31)"/><text x="1164.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.48%)</title><rect x="1161" y="276" width="6" height="15" fill="rgb(246,29,25)"/><text x="1164.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.48%)</title><rect x="1161" y="292" width="6" height="15" fill="rgb(212,7,41)"/><text x="1164.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.48%)</title><rect x="1161" y="308" width="6" height="15" fill="rgb(223,27,12)"/><text x="1164.00" y="318.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.48%)</title><rect x="1161" y="324" width="6" height="15" fill="rgb(235,190,1)"/><text x="1164.00" y="334.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.48%)</title><rect x="1167" y="260" width="6" height="15" fill="rgb(240,121,33)"/><text x="1170.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.48%)</title><rect x="1167" y="276" width="6" height="15" fill="rgb(213,104,32)"/><text x="1170.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (116 samples, 55.50%)</title><rect x="523" y="132" width="655" height="15" fill="rgb(239,10,30)"/><text x="526.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neighbors/_regression.py) (116 samples, 55.50%)</title><rect x="523" y="148" width="655" height="15" fill="rgb(230,36,33)"/><text x="526.00" y="158.50">predict (sklearn/neighbors/_regression.py)</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (9 samples, 4.31%)</title><rect x="1127" y="164" width="51" height="15" fill="rgb(209,25,16)"/><text x="1130.00" y="174.50">mean ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 4.31%)</title><rect x="1127" y="180" width="51" height="15" fill="rgb(234,69,50)"/><text x="1130.00" y="190.50">array..</text></g><g><title>mean (numpy/core/fromnumeric.py) (9 samples, 4.31%)</title><rect x="1127" y="196" width="51" height="15" fill="rgb(231,51,36)"/><text x="1130.00" y="206.50">mean ..</text></g><g><title>_mean (numpy/core/_methods.py) (8 samples, 3.83%)</title><rect x="1133" y="212" width="45" height="15" fill="rgb(226,220,3)"/><text x="1136.00" y="222.50">_mea..</text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.44%)</title><rect x="1161" y="228" width="17" height="15" fill="rgb(242,214,51)"/><text x="1164.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.96%)</title><rect x="1167" y="244" width="11" height="15" fill="rgb(217,82,7)"/><text x="1170.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.48%)</title><rect x="1173" y="260" width="5" height="15" fill="rgb(211,146,21)"/><text x="1176.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.48%)</title><rect x="1173" y="276" width="5" height="15" fill="rgb(254,121,6)"/><text x="1176.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.48%)</title><rect x="1173" y="292" width="5" height="15" fill="rgb(253,46,1)"/><text x="1176.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.48%)</title><rect x="1173" y="308" width="5" height="15" fill="rgb(220,143,40)"/><text x="1176.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.48%)</title><rect x="1173" y="324" width="5" height="15" fill="rgb(227,218,32)"/><text x="1176.00" y="334.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.48%)</title><rect x="1178" y="132" width="6" height="15" fill="rgb(246,183,38)"/><text x="1181.00" y="142.50"></text></g><g><title>all (209 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,23,44)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (209 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(223,119,27)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py)</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (118 samples, 56.46%)</title><rect x="523" y="68" width="667" height="15" fill="rgb(209,3,33)"/><text x="526.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (118 samples, 56.46%)</title><rect x="523" y="84" width="667" height="15" fill="rgb(243,142,44)"/><text x="526.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_1..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py) (118 samples, 56.46%)</title><rect x="523" y="100" width="667" height="15" fill="rgb(226,83,43)"/><text x="526.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (118 samples, 56.46%)</title><rect x="523" y="116" width="667" height="15" fill="rgb(228,170,42)"/><text x="526.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.48%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(227,72,20)"/><text x="1187.00" y="142.50"></text></g><g><title>0x7fbb8bb57e87 (libc-2.29.so) (1 samples, 0.48%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(205,77,25)"/><text x="1187.00" y="158.50"></text></g></g></svg>