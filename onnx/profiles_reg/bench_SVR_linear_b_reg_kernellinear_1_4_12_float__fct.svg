<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(219,60,43)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(232,148,45)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(244,109,52)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(210,205,38)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(251,167,17)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(240,115,35)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(223,39,32)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(213,14,33)"/><text x="13.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(205,72,54)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(254,213,33)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(246,153,21)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(235,30,51)"/><text x="17.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(254,109,4)"/><text x="17.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(245,122,29)"/><text x="17.00" y="958.50"></text></g><g><title>__new__ (&lt;string&gt;) (1 samples, 0.35%)</title><rect x="18" y="980" width="4" height="15" fill="rgb(224,199,43)"/><text x="21.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.40%)</title><rect x="10" y="836" width="16" height="15" fill="rgb(225,194,35)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.40%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(217,72,20)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="18" y="868" width="8" height="15" fill="rgb(207,92,11)"/><text x="21.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="18" y="884" width="8" height="15" fill="rgb(210,222,47)"/><text x="21.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="18" y="900" width="8" height="15" fill="rgb(253,213,47)"/><text x="21.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="18" y="916" width="8" height="15" fill="rgb(229,219,28)"/><text x="21.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="18" y="932" width="8" height="15" fill="rgb(246,1,3)"/><text x="21.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.70%)</title><rect x="18" y="948" width="8" height="15" fill="rgb(252,35,52)"/><text x="21.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.70%)</title><rect x="18" y="964" width="8" height="15" fill="rgb(250,194,54)"/><text x="21.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.35%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(219,113,2)"/><text x="25.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.35%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(237,73,3)"/><text x="25.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.35%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(236,157,11)"/><text x="25.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.75%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(242,164,26)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(220,127,24)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(228,87,13)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(243,114,9)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(238,33,23)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(236,223,51)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.75%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(227,73,47)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(243,132,21)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(207,35,51)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(219,1,45)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(230,103,40)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(213,145,48)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(239,75,19)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(226,0,26)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(243,87,31)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.75%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(214,141,28)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(231,65,4)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(219,219,36)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(226,142,5)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(212,97,18)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(244,129,10)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.75%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(240,12,31)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(207,87,2)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(250,225,37)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(217,87,42)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(208,56,34)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(229,157,16)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.35%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(233,191,48)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(249,71,23)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(237,28,28)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(241,220,37)"/><text x="29.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(231,111,44)"/><text x="29.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(206,87,21)"/><text x="29.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(215,122,45)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(248,166,6)"/><text x="29.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1044" width="4" height="15" fill="rgb(213,70,7)"/><text x="29.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1060" width="4" height="15" fill="rgb(252,164,8)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1076" width="4" height="15" fill="rgb(252,175,23)"/><text x="29.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1092" width="4" height="15" fill="rgb(239,35,2)"/><text x="29.00" y="1102.50"></text></g><g><title>srange (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1108" width="4" height="15" fill="rgb(225,190,7)"/><text x="29.00" y="1118.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1124" width="4" height="15" fill="rgb(241,101,23)"/><text x="29.00" y="1134.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1140" width="4" height="15" fill="rgb(234,77,51)"/><text x="29.00" y="1150.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1156" width="4" height="15" fill="rgb(210,198,51)"/><text x="29.00" y="1166.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1172" width="4" height="15" fill="rgb(252,11,22)"/><text x="29.00" y="1182.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1188" width="4" height="15" fill="rgb(205,75,4)"/><text x="29.00" y="1198.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1204" width="4" height="15" fill="rgb(242,210,27)"/><text x="29.00" y="1214.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1220" width="4" height="15" fill="rgb(217,116,16)"/><text x="29.00" y="1230.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1236" width="4" height="15" fill="rgb(238,30,30)"/><text x="29.00" y="1246.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1252" width="4" height="15" fill="rgb(223,214,33)"/><text x="29.00" y="1262.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1268" width="4" height="15" fill="rgb(207,190,48)"/><text x="29.00" y="1278.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1284" width="4" height="15" fill="rgb(237,43,42)"/><text x="29.00" y="1294.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1300" width="4" height="15" fill="rgb(241,169,42)"/><text x="29.00" y="1310.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1316" width="4" height="15" fill="rgb(219,138,5)"/><text x="29.00" y="1326.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1332" width="4" height="15" fill="rgb(225,120,35)"/><text x="29.00" y="1342.50"></text></g><g><title>parseImpl (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1348" width="4" height="15" fill="rgb(254,84,34)"/><text x="29.00" y="1358.50"></text></g><g><title>_parseNoCache (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1364" width="4" height="15" fill="rgb(212,37,48)"/><text x="29.00" y="1374.50"></text></g><g><title>__new__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="26" y="1380" width="4" height="15" fill="rgb(241,98,53)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 2.10%)</title><rect x="10" y="292" width="24" height="15" fill="rgb(233,64,25)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="308" width="24" height="15" fill="rgb(240,67,31)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="324" width="24" height="15" fill="rgb(223,196,24)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="340" width="24" height="15" fill="rgb(246,27,45)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.10%)</title><rect x="10" y="356" width="24" height="15" fill="rgb(245,161,29)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="372" width="24" height="15" fill="rgb(234,65,34)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 2.10%)</title><rect x="10" y="388" width="24" height="15" fill="rgb(214,3,25)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="404" width="24" height="15" fill="rgb(207,57,14)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="420" width="24" height="15" fill="rgb(212,84,39)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="436" width="24" height="15" fill="rgb(226,155,34)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.10%)</title><rect x="10" y="452" width="24" height="15" fill="rgb(243,108,20)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="10" y="468" width="24" height="15" fill="rgb(229,187,22)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (uuid.py) (1 samples, 0.35%)</title><rect x="30" y="484" width="4" height="15" fill="rgb(254,19,23)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="500" width="4" height="15" fill="rgb(230,210,28)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="516" width="4" height="15" fill="rgb(205,134,4)"/><text x="33.00" y="526.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="30" y="532" width="4" height="15" fill="rgb(230,196,40)"/><text x="33.00" y="542.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="548" width="4" height="15" fill="rgb(223,16,50)"/><text x="33.00" y="558.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="564" width="4" height="15" fill="rgb(248,129,12)"/><text x="33.00" y="574.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="30" y="580" width="4" height="15" fill="rgb(242,44,45)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(250,88,31)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(232,111,28)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(233,204,30)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(225,98,44)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(247,177,10)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.35%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(232,221,21)"/><text x="37.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(248,213,10)"/><text x="37.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1028" width="4" height="15" fill="rgb(243,67,5)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1044" width="4" height="15" fill="rgb(227,173,0)"/><text x="37.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1060" width="4" height="15" fill="rgb(215,14,36)"/><text x="37.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1076" width="4" height="15" fill="rgb(232,223,39)"/><text x="37.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1092" width="4" height="15" fill="rgb(248,179,27)"/><text x="37.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1108" width="4" height="15" fill="rgb(223,121,12)"/><text x="37.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.35%)</title><rect x="34" y="1124" width="4" height="15" fill="rgb(218,137,33)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1140" width="4" height="15" fill="rgb(218,98,4)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1156" width="4" height="15" fill="rgb(252,63,15)"/><text x="37.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1172" width="4" height="15" fill="rgb(213,69,40)"/><text x="37.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1188" width="4" height="15" fill="rgb(227,168,7)"/><text x="37.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1204" width="4" height="15" fill="rgb(236,40,48)"/><text x="37.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_differentialevolution.py) (1 samples, 0.35%)</title><rect x="34" y="1220" width="4" height="15" fill="rgb(215,138,51)"/><text x="37.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1236" width="4" height="15" fill="rgb(225,168,45)"/><text x="37.00" y="1246.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.35%)</title><rect x="38" y="1060" width="5" height="15" fill="rgb(210,7,14)"/><text x="41.00" y="1070.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.70%)</title><rect x="38" y="1028" width="9" height="15" fill="rgb(245,177,39)"/><text x="41.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.70%)</title><rect x="38" y="1044" width="9" height="15" fill="rgb(215,48,54)"/><text x="41.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.35%)</title><rect x="43" y="1060" width="4" height="15" fill="rgb(230,104,9)"/><text x="46.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.35%)</title><rect x="43" y="1076" width="4" height="15" fill="rgb(242,52,0)"/><text x="46.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.35%)</title><rect x="43" y="1092" width="4" height="15" fill="rgb(244,32,42)"/><text x="46.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.85%)</title><rect x="10" y="196" width="45" height="15" fill="rgb(245,13,15)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.85%)</title><rect x="10" y="212" width="45" height="15" fill="rgb(230,219,27)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.85%)</title><rect x="10" y="228" width="45" height="15" fill="rgb(231,128,16)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.85%)</title><rect x="10" y="244" width="45" height="15" fill="rgb(207,178,0)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.85%)</title><rect x="10" y="260" width="45" height="15" fill="rgb(224,164,54)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.85%)</title><rect x="10" y="276" width="45" height="15" fill="rgb(210,15,31)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (5 samples, 1.75%)</title><rect x="34" y="292" width="21" height="15" fill="rgb(212,171,22)"/><text x="37.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="308" width="21" height="15" fill="rgb(226,178,14)"/><text x="37.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="324" width="21" height="15" fill="rgb(230,23,3)"/><text x="37.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="340" width="21" height="15" fill="rgb(231,144,3)"/><text x="37.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="34" y="356" width="21" height="15" fill="rgb(223,163,4)"/><text x="37.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="372" width="21" height="15" fill="rgb(236,177,16)"/><text x="37.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (5 samples, 1.75%)</title><rect x="34" y="388" width="21" height="15" fill="rgb(215,8,31)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="404" width="21" height="15" fill="rgb(225,132,38)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="420" width="21" height="15" fill="rgb(215,138,12)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="436" width="21" height="15" fill="rgb(223,116,54)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="34" y="452" width="21" height="15" fill="rgb(212,155,1)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="468" width="21" height="15" fill="rgb(232,192,31)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (5 samples, 1.75%)</title><rect x="34" y="484" width="21" height="15" fill="rgb(220,73,43)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="500" width="21" height="15" fill="rgb(234,59,32)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="516" width="21" height="15" fill="rgb(240,66,23)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="532" width="21" height="15" fill="rgb(208,222,21)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="34" y="548" width="21" height="15" fill="rgb(252,140,34)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="564" width="21" height="15" fill="rgb(212,8,7)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (5 samples, 1.75%)</title><rect x="34" y="580" width="21" height="15" fill="rgb(214,136,8)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="596" width="21" height="15" fill="rgb(233,25,28)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="612" width="21" height="15" fill="rgb(213,159,2)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="628" width="21" height="15" fill="rgb(250,92,5)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="34" y="644" width="21" height="15" fill="rgb(251,156,6)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="660" width="21" height="15" fill="rgb(244,91,11)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (5 samples, 1.75%)</title><rect x="34" y="676" width="21" height="15" fill="rgb(219,202,33)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="692" width="21" height="15" fill="rgb(242,8,54)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="708" width="21" height="15" fill="rgb(206,20,4)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="724" width="21" height="15" fill="rgb(245,229,34)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="34" y="740" width="21" height="15" fill="rgb(245,129,17)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="756" width="21" height="15" fill="rgb(223,145,30)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (5 samples, 1.75%)</title><rect x="34" y="772" width="21" height="15" fill="rgb(251,83,28)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="788" width="21" height="15" fill="rgb(231,170,49)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="804" width="21" height="15" fill="rgb(217,149,54)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="820" width="21" height="15" fill="rgb(218,105,42)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="836" width="21" height="15" fill="rgb(234,84,3)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="852" width="21" height="15" fill="rgb(234,2,13)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.75%)</title><rect x="34" y="868" width="21" height="15" fill="rgb(209,170,42)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.75%)</title><rect x="34" y="884" width="21" height="15" fill="rgb(249,170,50)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (5 samples, 1.75%)</title><rect x="34" y="900" width="21" height="15" fill="rgb(219,223,14)"/><text x="37.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="38" y="916" width="17" height="15" fill="rgb(241,43,39)"/><text x="41.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="38" y="932" width="17" height="15" fill="rgb(252,219,37)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="38" y="948" width="17" height="15" fill="rgb(241,40,36)"/><text x="41.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="38" y="964" width="17" height="15" fill="rgb(233,17,29)"/><text x="41.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="38" y="980" width="17" height="15" fill="rgb(227,182,43)"/><text x="41.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="38" y="996" width="17" height="15" fill="rgb(226,71,38)"/><text x="41.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="38" y="1012" width="17" height="15" fill="rgb(237,81,31)"/><text x="41.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (2 samples, 0.70%)</title><rect x="47" y="1028" width="8" height="15" fill="rgb(216,192,4)"/><text x="50.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.70%)</title><rect x="47" y="1044" width="8" height="15" fill="rgb(221,108,27)"/><text x="50.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (2 samples, 0.70%)</title><rect x="47" y="1060" width="8" height="15" fill="rgb(246,94,21)"/><text x="50.00" y="1070.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="51" y="1076" width="4" height="15" fill="rgb(242,182,18)"/><text x="54.00" y="1086.50"></text></g><g><title>0x7fcf4d050033 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="51" y="1092" width="4" height="15" fill="rgb(227,51,2)"/><text x="54.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1124" width="4" height="15" fill="rgb(222,38,26)"/><text x="58.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1140" width="4" height="15" fill="rgb(237,105,30)"/><text x="58.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1156" width="4" height="15" fill="rgb(226,166,0)"/><text x="58.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="55" y="1172" width="4" height="15" fill="rgb(232,104,52)"/><text x="58.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1188" width="4" height="15" fill="rgb(205,54,15)"/><text x="58.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.35%)</title><rect x="55" y="1204" width="4" height="15" fill="rgb(205,118,15)"/><text x="58.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1220" width="4" height="15" fill="rgb(237,151,10)"/><text x="58.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1236" width="4" height="15" fill="rgb(232,168,46)"/><text x="58.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1252" width="4" height="15" fill="rgb(219,187,9)"/><text x="58.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="55" y="1268" width="4" height="15" fill="rgb(234,106,15)"/><text x="58.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="55" y="1284" width="4" height="15" fill="rgb(244,195,37)"/><text x="58.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.35%)</title><rect x="55" y="1300" width="4" height="15" fill="rgb(218,113,45)"/><text x="58.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.35%)</title><rect x="55" y="1316" width="4" height="15" fill="rgb(217,180,10)"/><text x="58.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.35%)</title><rect x="55" y="1332" width="4" height="15" fill="rgb(220,54,30)"/><text x="58.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.35%)</title><rect x="55" y="1348" width="4" height="15" fill="rgb(252,92,49)"/><text x="58.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.35%)</title><rect x="55" y="1364" width="4" height="15" fill="rgb(212,135,52)"/><text x="58.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.35%)</title><rect x="55" y="1380" width="4" height="15" fill="rgb(217,192,43)"/><text x="58.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.35%)</title><rect x="55" y="1396" width="4" height="15" fill="rgb(211,86,7)"/><text x="58.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.35%)</title><rect x="55" y="1412" width="4" height="15" fill="rgb(246,124,26)"/><text x="58.00" y="1422.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="59" y="1300" width="4" height="15" fill="rgb(210,195,6)"/><text x="62.00" y="1310.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="59" y="1316" width="4" height="15" fill="rgb(248,110,23)"/><text x="62.00" y="1326.50"></text></g><g><title>0x7fcf3d10a0e9 (?) (1 samples, 0.35%)</title><rect x="63" y="1508" width="4" height="15" fill="rgb(232,165,36)"/><text x="66.00" y="1518.50"></text></g><g><title>0x7fcf3d10e22e (?) (1 samples, 0.35%)</title><rect x="63" y="1524" width="4" height="15" fill="rgb(211,53,43)"/><text x="66.00" y="1534.50"></text></g><g><title>0x7fcf3d10e17b (?) (1 samples, 0.35%)</title><rect x="63" y="1540" width="4" height="15" fill="rgb(214,103,53)"/><text x="66.00" y="1550.50"></text></g><g><title>0x7fcf3d10d3bf (?) (1 samples, 0.35%)</title><rect x="63" y="1556" width="4" height="15" fill="rgb(211,222,13)"/><text x="66.00" y="1566.50"></text></g><g><title>0x7fcf3d10d179 (?) (1 samples, 0.35%)</title><rect x="63" y="1572" width="4" height="15" fill="rgb(221,223,7)"/><text x="66.00" y="1582.50"></text></g><g><title>0x7fcf3d0fd991 (?) (1 samples, 0.35%)</title><rect x="63" y="1588" width="4" height="15" fill="rgb(236,16,2)"/><text x="66.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="484" width="16" height="15" fill="rgb(220,10,16)"/><text x="58.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="500" width="16" height="15" fill="rgb(242,149,13)"/><text x="58.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="516" width="16" height="15" fill="rgb(217,223,43)"/><text x="58.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="532" width="16" height="15" fill="rgb(217,204,29)"/><text x="58.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="55" y="548" width="16" height="15" fill="rgb(213,139,2)"/><text x="58.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="564" width="16" height="15" fill="rgb(212,114,23)"/><text x="58.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.40%)</title><rect x="55" y="580" width="16" height="15" fill="rgb(226,28,27)"/><text x="58.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="596" width="16" height="15" fill="rgb(243,2,47)"/><text x="58.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="612" width="16" height="15" fill="rgb(218,150,49)"/><text x="58.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="628" width="16" height="15" fill="rgb(237,180,46)"/><text x="58.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="55" y="644" width="16" height="15" fill="rgb(227,111,20)"/><text x="58.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="660" width="16" height="15" fill="rgb(214,16,43)"/><text x="58.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.40%)</title><rect x="55" y="676" width="16" height="15" fill="rgb(252,108,32)"/><text x="58.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="692" width="16" height="15" fill="rgb(219,156,47)"/><text x="58.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="708" width="16" height="15" fill="rgb(226,10,48)"/><text x="58.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="724" width="16" height="15" fill="rgb(240,143,45)"/><text x="58.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="55" y="740" width="16" height="15" fill="rgb(221,38,38)"/><text x="58.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="756" width="16" height="15" fill="rgb(230,81,6)"/><text x="58.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.40%)</title><rect x="55" y="772" width="16" height="15" fill="rgb(244,136,53)"/><text x="58.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="788" width="16" height="15" fill="rgb(210,85,12)"/><text x="58.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="804" width="16" height="15" fill="rgb(209,130,51)"/><text x="58.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="820" width="16" height="15" fill="rgb(217,83,3)"/><text x="58.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="55" y="836" width="16" height="15" fill="rgb(241,187,54)"/><text x="58.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="852" width="16" height="15" fill="rgb(254,211,34)"/><text x="58.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.40%)</title><rect x="55" y="868" width="16" height="15" fill="rgb(243,2,20)"/><text x="58.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="884" width="16" height="15" fill="rgb(239,222,41)"/><text x="58.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="900" width="16" height="15" fill="rgb(242,145,39)"/><text x="58.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="916" width="16" height="15" fill="rgb(231,138,31)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="932" width="16" height="15" fill="rgb(211,195,3)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="948" width="16" height="15" fill="rgb(240,135,5)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="964" width="16" height="15" fill="rgb(211,101,26)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="55" y="980" width="16" height="15" fill="rgb(233,78,23)"/><text x="58.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="996" width="16" height="15" fill="rgb(207,119,6)"/><text x="58.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.40%)</title><rect x="55" y="1012" width="16" height="15" fill="rgb(248,200,0)"/><text x="58.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="1028" width="16" height="15" fill="rgb(236,28,1)"/><text x="58.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="1044" width="16" height="15" fill="rgb(220,25,7)"/><text x="58.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="1060" width="16" height="15" fill="rgb(205,49,28)"/><text x="58.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="55" y="1076" width="16" height="15" fill="rgb(233,96,8)"/><text x="58.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="55" y="1092" width="16" height="15" fill="rgb(234,58,1)"/><text x="58.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.40%)</title><rect x="55" y="1108" width="16" height="15" fill="rgb(219,60,44)"/><text x="58.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1124" width="12" height="15" fill="rgb(231,191,53)"/><text x="62.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1140" width="12" height="15" fill="rgb(246,170,51)"/><text x="62.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1156" width="12" height="15" fill="rgb(234,1,13)"/><text x="62.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1172" width="12" height="15" fill="rgb(235,147,48)"/><text x="62.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1188" width="12" height="15" fill="rgb(223,63,53)"/><text x="62.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.05%)</title><rect x="59" y="1204" width="12" height="15" fill="rgb(227,154,38)"/><text x="62.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1220" width="12" height="15" fill="rgb(224,202,7)"/><text x="62.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.05%)</title><rect x="59" y="1236" width="12" height="15" fill="rgb(242,0,26)"/><text x="62.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1252" width="12" height="15" fill="rgb(217,105,42)"/><text x="62.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1268" width="12" height="15" fill="rgb(248,229,45)"/><text x="62.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="59" y="1284" width="12" height="15" fill="rgb(209,211,48)"/><text x="62.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="63" y="1300" width="8" height="15" fill="rgb(239,69,18)"/><text x="66.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="63" y="1316" width="8" height="15" fill="rgb(229,29,16)"/><text x="66.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="63" y="1332" width="8" height="15" fill="rgb(206,177,23)"/><text x="66.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="63" y="1348" width="8" height="15" fill="rgb(224,35,36)"/><text x="66.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.70%)</title><rect x="63" y="1364" width="8" height="15" fill="rgb(225,81,50)"/><text x="66.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="63" y="1380" width="8" height="15" fill="rgb(246,218,19)"/><text x="66.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="63" y="1396" width="8" height="15" fill="rgb(234,51,45)"/><text x="66.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="63" y="1412" width="8" height="15" fill="rgb(245,46,17)"/><text x="66.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="63" y="1428" width="8" height="15" fill="rgb(220,22,16)"/><text x="66.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="63" y="1444" width="8" height="15" fill="rgb(239,208,49)"/><text x="66.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.70%)</title><rect x="63" y="1460" width="8" height="15" fill="rgb(228,95,3)"/><text x="66.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.70%)</title><rect x="63" y="1476" width="8" height="15" fill="rgb(217,40,6)"/><text x="66.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.70%)</title><rect x="63" y="1492" width="8" height="15" fill="rgb(243,120,48)"/><text x="66.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.35%)</title><rect x="67" y="1508" width="4" height="15" fill="rgb(219,124,13)"/><text x="70.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.35%)</title><rect x="67" y="1524" width="4" height="15" fill="rgb(217,227,25)"/><text x="70.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.35%)</title><rect x="67" y="1540" width="4" height="15" fill="rgb(253,73,16)"/><text x="70.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.35%)</title><rect x="67" y="1556" width="4" height="15" fill="rgb(218,57,46)"/><text x="70.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.35%)</title><rect x="67" y="1572" width="4" height="15" fill="rgb(218,0,41)"/><text x="70.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.35%)</title><rect x="71" y="724" width="5" height="15" fill="rgb(222,125,47)"/><text x="74.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="740" width="5" height="15" fill="rgb(224,201,12)"/><text x="74.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="756" width="5" height="15" fill="rgb(230,69,31)"/><text x="74.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="772" width="5" height="15" fill="rgb(221,86,45)"/><text x="74.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="788" width="5" height="15" fill="rgb(233,202,12)"/><text x="74.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="804" width="5" height="15" fill="rgb(217,99,48)"/><text x="74.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.35%)</title><rect x="71" y="820" width="5" height="15" fill="rgb(208,32,29)"/><text x="74.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="836" width="5" height="15" fill="rgb(216,110,29)"/><text x="74.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="852" width="5" height="15" fill="rgb(251,172,12)"/><text x="74.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="868" width="5" height="15" fill="rgb(253,139,47)"/><text x="74.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="884" width="5" height="15" fill="rgb(239,208,40)"/><text x="74.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="900" width="5" height="15" fill="rgb(211,26,21)"/><text x="74.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.35%)</title><rect x="71" y="916" width="5" height="15" fill="rgb(235,201,34)"/><text x="74.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="932" width="5" height="15" fill="rgb(228,97,23)"/><text x="74.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="948" width="5" height="15" fill="rgb(251,65,48)"/><text x="74.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="964" width="5" height="15" fill="rgb(234,49,9)"/><text x="74.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="980" width="5" height="15" fill="rgb(226,212,28)"/><text x="74.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="996" width="5" height="15" fill="rgb(239,35,24)"/><text x="74.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.35%)</title><rect x="71" y="1012" width="5" height="15" fill="rgb(243,213,16)"/><text x="74.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1028" width="5" height="15" fill="rgb(221,196,22)"/><text x="74.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1044" width="5" height="15" fill="rgb(205,180,34)"/><text x="74.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1060" width="5" height="15" fill="rgb(230,33,11)"/><text x="74.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="1076" width="5" height="15" fill="rgb(238,47,0)"/><text x="74.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1092" width="5" height="15" fill="rgb(252,225,22)"/><text x="74.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.35%)</title><rect x="71" y="1108" width="5" height="15" fill="rgb(243,204,35)"/><text x="74.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1124" width="5" height="15" fill="rgb(218,48,28)"/><text x="74.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1140" width="5" height="15" fill="rgb(242,78,1)"/><text x="74.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1156" width="5" height="15" fill="rgb(213,1,44)"/><text x="74.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="1172" width="5" height="15" fill="rgb(218,176,31)"/><text x="74.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1188" width="5" height="15" fill="rgb(216,86,5)"/><text x="74.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.35%)</title><rect x="71" y="1204" width="5" height="15" fill="rgb(237,131,49)"/><text x="74.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1220" width="5" height="15" fill="rgb(217,12,13)"/><text x="74.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1236" width="5" height="15" fill="rgb(218,124,35)"/><text x="74.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1252" width="5" height="15" fill="rgb(221,136,23)"/><text x="74.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="1268" width="5" height="15" fill="rgb(245,210,52)"/><text x="74.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1284" width="5" height="15" fill="rgb(243,183,46)"/><text x="74.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.35%)</title><rect x="71" y="1300" width="5" height="15" fill="rgb(225,185,48)"/><text x="74.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1316" width="5" height="15" fill="rgb(249,229,25)"/><text x="74.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1332" width="5" height="15" fill="rgb(206,57,32)"/><text x="74.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1348" width="5" height="15" fill="rgb(207,198,33)"/><text x="74.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="1364" width="5" height="15" fill="rgb(205,228,28)"/><text x="74.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1380" width="5" height="15" fill="rgb(244,139,12)"/><text x="74.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.35%)</title><rect x="71" y="1396" width="5" height="15" fill="rgb(243,158,29)"/><text x="74.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1412" width="5" height="15" fill="rgb(243,120,35)"/><text x="74.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1428" width="5" height="15" fill="rgb(244,37,44)"/><text x="74.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1444" width="5" height="15" fill="rgb(244,81,12)"/><text x="74.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="1460" width="5" height="15" fill="rgb(254,176,2)"/><text x="74.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1476" width="5" height="15" fill="rgb(207,64,6)"/><text x="74.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.35%)</title><rect x="71" y="1492" width="5" height="15" fill="rgb(246,152,9)"/><text x="74.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1508" width="5" height="15" fill="rgb(244,196,25)"/><text x="74.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1524" width="5" height="15" fill="rgb(250,169,6)"/><text x="74.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1540" width="5" height="15" fill="rgb(253,74,31)"/><text x="74.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="71" y="1556" width="5" height="15" fill="rgb(217,48,11)"/><text x="74.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="71" y="1572" width="5" height="15" fill="rgb(234,165,9)"/><text x="74.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="71" y="1588" width="5" height="15" fill="rgb(220,189,47)"/><text x="74.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="71" y="1604" width="5" height="15" fill="rgb(233,226,2)"/><text x="74.00" y="1614.50"></text></g><g><title>__init__ (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="71" y="1620" width="5" height="15" fill="rgb(205,77,45)"/><text x="74.00" y="1630.50"></text></g><g><title>get_aliases (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="71" y="1636" width="5" height="15" fill="rgb(232,97,8)"/><text x="74.00" y="1646.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="71" y="1652" width="5" height="15" fill="rgb(218,173,53)"/><text x="74.00" y="1662.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="71" y="1668" width="5" height="15" fill="rgb(252,101,40)"/><text x="74.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 2.10%)</title><rect x="55" y="340" width="25" height="15" fill="rgb(213,63,47)"/><text x="58.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="55" y="356" width="25" height="15" fill="rgb(225,132,53)"/><text x="58.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="55" y="372" width="25" height="15" fill="rgb(240,86,28)"/><text x="58.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="55" y="388" width="25" height="15" fill="rgb(212,16,12)"/><text x="58.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.10%)</title><rect x="55" y="404" width="25" height="15" fill="rgb(240,67,7)"/><text x="58.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="55" y="420" width="25" height="15" fill="rgb(238,190,33)"/><text x="58.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.10%)</title><rect x="55" y="436" width="25" height="15" fill="rgb(209,172,33)"/><text x="58.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="55" y="452" width="25" height="15" fill="rgb(222,52,18)"/><text x="58.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.10%)</title><rect x="55" y="468" width="25" height="15" fill="rgb(231,211,31)"/><text x="58.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="484" width="9" height="15" fill="rgb(211,204,11)"/><text x="74.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="71" y="500" width="9" height="15" fill="rgb(209,100,32)"/><text x="74.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="516" width="9" height="15" fill="rgb(216,174,4)"/><text x="74.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.70%)</title><rect x="71" y="532" width="9" height="15" fill="rgb(245,58,34)"/><text x="74.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="548" width="9" height="15" fill="rgb(219,103,16)"/><text x="74.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="564" width="9" height="15" fill="rgb(247,42,9)"/><text x="74.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="580" width="9" height="15" fill="rgb(246,96,0)"/><text x="74.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="71" y="596" width="9" height="15" fill="rgb(250,164,33)"/><text x="74.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="612" width="9" height="15" fill="rgb(224,210,22)"/><text x="74.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.70%)</title><rect x="71" y="628" width="9" height="15" fill="rgb(247,118,16)"/><text x="74.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="644" width="9" height="15" fill="rgb(253,150,12)"/><text x="74.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="660" width="9" height="15" fill="rgb(223,138,39)"/><text x="74.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="676" width="9" height="15" fill="rgb(244,194,52)"/><text x="74.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="71" y="692" width="9" height="15" fill="rgb(230,152,52)"/><text x="74.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="71" y="708" width="9" height="15" fill="rgb(235,163,51)"/><text x="74.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/config_init.py) (1 samples, 0.35%)</title><rect x="76" y="724" width="4" height="15" fill="rgb(214,163,27)"/><text x="79.00" y="734.50"></text></g><g><title>inner (pandas/_config/config.py) (1 samples, 0.35%)</title><rect x="76" y="740" width="4" height="15" fill="rgb(243,177,29)"/><text x="79.00" y="750.50"></text></g><g><title>register_option (pandas/_config/config.py) (1 samples, 0.35%)</title><rect x="76" y="756" width="4" height="15" fill="rgb(219,50,39)"/><text x="79.00" y="766.50"></text></g><g><title>inner (pandas/_config/config.py) (1 samples, 0.35%)</title><rect x="76" y="772" width="4" height="15" fill="rgb(244,216,51)"/><text x="79.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="628" width="8" height="15" fill="rgb(251,67,12)"/><text x="83.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="644" width="8" height="15" fill="rgb(214,161,51)"/><text x="83.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="660" width="8" height="15" fill="rgb(249,132,29)"/><text x="83.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="676" width="8" height="15" fill="rgb(220,18,11)"/><text x="83.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="692" width="8" height="15" fill="rgb(222,96,23)"/><text x="83.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="708" width="8" height="15" fill="rgb(216,55,54)"/><text x="83.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 0.70%)</title><rect x="80" y="724" width="8" height="15" fill="rgb(216,131,21)"/><text x="83.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="740" width="8" height="15" fill="rgb(224,69,44)"/><text x="83.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="756" width="8" height="15" fill="rgb(230,163,13)"/><text x="83.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="772" width="8" height="15" fill="rgb(243,70,9)"/><text x="83.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="788" width="8" height="15" fill="rgb(242,200,40)"/><text x="83.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="804" width="8" height="15" fill="rgb(228,225,7)"/><text x="83.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 0.70%)</title><rect x="80" y="820" width="8" height="15" fill="rgb(210,172,45)"/><text x="83.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="836" width="8" height="15" fill="rgb(219,59,38)"/><text x="83.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="852" width="8" height="15" fill="rgb(216,207,50)"/><text x="83.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="868" width="8" height="15" fill="rgb(233,96,34)"/><text x="83.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="884" width="8" height="15" fill="rgb(254,226,34)"/><text x="83.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="900" width="8" height="15" fill="rgb(247,200,20)"/><text x="83.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (2 samples, 0.70%)</title><rect x="80" y="916" width="8" height="15" fill="rgb(238,6,21)"/><text x="83.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="932" width="8" height="15" fill="rgb(235,53,33)"/><text x="83.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="948" width="8" height="15" fill="rgb(235,130,7)"/><text x="83.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="964" width="8" height="15" fill="rgb(212,86,11)"/><text x="83.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="980" width="8" height="15" fill="rgb(210,26,47)"/><text x="83.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="996" width="8" height="15" fill="rgb(246,142,34)"/><text x="83.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1012" width="8" height="15" fill="rgb(219,32,26)"/><text x="83.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="1028" width="8" height="15" fill="rgb(213,224,37)"/><text x="83.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1044" width="8" height="15" fill="rgb(210,42,36)"/><text x="83.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (2 samples, 0.70%)</title><rect x="80" y="1060" width="8" height="15" fill="rgb(225,70,53)"/><text x="83.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1076" width="8" height="15" fill="rgb(225,136,35)"/><text x="83.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1092" width="8" height="15" fill="rgb(252,121,5)"/><text x="83.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1108" width="8" height="15" fill="rgb(229,84,51)"/><text x="83.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="1124" width="8" height="15" fill="rgb(206,12,23)"/><text x="83.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1140" width="8" height="15" fill="rgb(233,215,0)"/><text x="83.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (2 samples, 0.70%)</title><rect x="80" y="1156" width="8" height="15" fill="rgb(232,193,17)"/><text x="83.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1172" width="8" height="15" fill="rgb(225,41,12)"/><text x="83.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1188" width="8" height="15" fill="rgb(233,36,25)"/><text x="83.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="80" y="1204" width="8" height="15" fill="rgb(233,17,30)"/><text x="83.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="1220" width="8" height="15" fill="rgb(240,224,2)"/><text x="83.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="1236" width="8" height="15" fill="rgb(210,61,5)"/><text x="83.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.70%)</title><rect x="80" y="1252" width="8" height="15" fill="rgb(232,141,26)"/><text x="83.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (3 samples, 1.05%)</title><rect x="80" y="580" width="12" height="15" fill="rgb(234,224,8)"/><text x="83.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="80" y="596" width="12" height="15" fill="rgb(230,85,1)"/><text x="83.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="80" y="612" width="12" height="15" fill="rgb(229,128,21)"/><text x="83.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="628" width="4" height="15" fill="rgb(232,31,41)"/><text x="91.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="88" y="644" width="4" height="15" fill="rgb(232,89,45)"/><text x="91.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="660" width="4" height="15" fill="rgb(248,116,5)"/><text x="91.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.35%)</title><rect x="88" y="676" width="4" height="15" fill="rgb(211,159,26)"/><text x="91.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="692" width="4" height="15" fill="rgb(235,144,33)"/><text x="91.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="708" width="4" height="15" fill="rgb(217,35,54)"/><text x="91.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="724" width="4" height="15" fill="rgb(221,124,33)"/><text x="91.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="88" y="740" width="4" height="15" fill="rgb(229,98,49)"/><text x="91.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="756" width="4" height="15" fill="rgb(233,19,5)"/><text x="91.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.35%)</title><rect x="88" y="772" width="4" height="15" fill="rgb(210,214,34)"/><text x="91.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="788" width="4" height="15" fill="rgb(208,162,8)"/><text x="91.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="804" width="4" height="15" fill="rgb(214,219,43)"/><text x="91.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="820" width="4" height="15" fill="rgb(254,6,21)"/><text x="91.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="88" y="836" width="4" height="15" fill="rgb(210,208,54)"/><text x="91.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="88" y="852" width="4" height="15" fill="rgb(208,86,49)"/><text x="91.00" y="862.50"></text></g><g><title>&lt;module&gt; (configparser.py) (1 samples, 0.35%)</title><rect x="88" y="868" width="4" height="15" fill="rgb(223,52,25)"/><text x="91.00" y="878.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.35%)</title><rect x="88" y="884" width="4" height="15" fill="rgb(249,194,26)"/><text x="91.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 3.50%)</title><rect x="55" y="244" width="41" height="15" fill="rgb(249,75,34)"/><text x="58.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.50%)</title><rect x="55" y="260" width="41" height="15" fill="rgb(236,219,47)"/><text x="58.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.50%)</title><rect x="55" y="276" width="41" height="15" fill="rgb(217,204,19)"/><text x="58.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.50%)</title><rect x="55" y="292" width="41" height="15" fill="rgb(222,25,14)"/><text x="58.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.50%)</title><rect x="55" y="308" width="41" height="15" fill="rgb(210,68,21)"/><text x="58.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.50%)</title><rect x="55" y="324" width="41" height="15" fill="rgb(220,69,19)"/><text x="58.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.40%)</title><rect x="80" y="340" width="16" height="15" fill="rgb(254,98,42)"/><text x="83.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="356" width="16" height="15" fill="rgb(233,43,46)"/><text x="83.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="372" width="16" height="15" fill="rgb(227,166,26)"/><text x="83.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="388" width="16" height="15" fill="rgb(234,44,38)"/><text x="83.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="404" width="16" height="15" fill="rgb(222,117,38)"/><text x="83.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="420" width="16" height="15" fill="rgb(253,68,0)"/><text x="83.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="436" width="16" height="15" fill="rgb(249,209,47)"/><text x="83.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="80" y="452" width="16" height="15" fill="rgb(206,102,7)"/><text x="83.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="468" width="16" height="15" fill="rgb(253,98,50)"/><text x="83.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.40%)</title><rect x="80" y="484" width="16" height="15" fill="rgb(223,144,50)"/><text x="83.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="500" width="16" height="15" fill="rgb(206,83,41)"/><text x="83.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="516" width="16" height="15" fill="rgb(250,117,35)"/><text x="83.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="532" width="16" height="15" fill="rgb(213,219,34)"/><text x="83.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.40%)</title><rect x="80" y="548" width="16" height="15" fill="rgb(219,179,4)"/><text x="83.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.40%)</title><rect x="80" y="564" width="16" height="15" fill="rgb(245,90,46)"/><text x="83.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.35%)</title><rect x="92" y="580" width="4" height="15" fill="rgb(219,105,28)"/><text x="95.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="596" width="4" height="15" fill="rgb(209,30,14)"/><text x="95.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="612" width="4" height="15" fill="rgb(227,42,54)"/><text x="95.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="628" width="4" height="15" fill="rgb(235,14,42)"/><text x="95.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="644" width="4" height="15" fill="rgb(222,138,31)"/><text x="95.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="660" width="4" height="15" fill="rgb(219,160,44)"/><text x="95.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.35%)</title><rect x="92" y="676" width="4" height="15" fill="rgb(225,199,16)"/><text x="95.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="692" width="4" height="15" fill="rgb(244,185,34)"/><text x="95.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="708" width="4" height="15" fill="rgb(217,196,29)"/><text x="95.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="724" width="4" height="15" fill="rgb(218,100,17)"/><text x="95.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="740" width="4" height="15" fill="rgb(242,215,27)"/><text x="95.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="756" width="4" height="15" fill="rgb(227,215,33)"/><text x="95.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.35%)</title><rect x="92" y="772" width="4" height="15" fill="rgb(218,227,4)"/><text x="95.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="788" width="4" height="15" fill="rgb(213,95,42)"/><text x="95.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="804" width="4" height="15" fill="rgb(211,103,42)"/><text x="95.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="820" width="4" height="15" fill="rgb(223,227,28)"/><text x="95.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="836" width="4" height="15" fill="rgb(215,224,10)"/><text x="95.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="852" width="4" height="15" fill="rgb(221,90,7)"/><text x="95.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="868" width="4" height="15" fill="rgb(250,148,27)"/><text x="95.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="884" width="4" height="15" fill="rgb(218,66,40)"/><text x="95.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.35%)</title><rect x="92" y="900" width="4" height="15" fill="rgb(207,171,10)"/><text x="95.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="916" width="4" height="15" fill="rgb(242,61,36)"/><text x="95.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="932" width="4" height="15" fill="rgb(231,4,26)"/><text x="95.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="948" width="4" height="15" fill="rgb(226,70,20)"/><text x="95.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="964" width="4" height="15" fill="rgb(216,210,14)"/><text x="95.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="980" width="4" height="15" fill="rgb(229,103,30)"/><text x="95.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="996" width="4" height="15" fill="rgb(251,29,42)"/><text x="95.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="1012" width="4" height="15" fill="rgb(246,154,35)"/><text x="95.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1028" width="4" height="15" fill="rgb(238,111,5)"/><text x="95.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.35%)</title><rect x="92" y="1044" width="4" height="15" fill="rgb(221,200,23)"/><text x="95.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1060" width="4" height="15" fill="rgb(216,104,45)"/><text x="95.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1076" width="4" height="15" fill="rgb(215,64,22)"/><text x="95.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1092" width="4" height="15" fill="rgb(209,3,52)"/><text x="95.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1108" width="4" height="15" fill="rgb(230,222,43)"/><text x="95.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1124" width="4" height="15" fill="rgb(210,173,7)"/><text x="95.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="1140" width="4" height="15" fill="rgb(224,57,4)"/><text x="95.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1156" width="4" height="15" fill="rgb(231,26,24)"/><text x="95.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.35%)</title><rect x="92" y="1172" width="4" height="15" fill="rgb(231,123,52)"/><text x="95.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1188" width="4" height="15" fill="rgb(225,77,31)"/><text x="95.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1204" width="4" height="15" fill="rgb(253,108,45)"/><text x="95.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1220" width="4" height="15" fill="rgb(235,225,12)"/><text x="95.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1236" width="4" height="15" fill="rgb(245,182,24)"/><text x="95.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1252" width="4" height="15" fill="rgb(221,133,53)"/><text x="95.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="1268" width="4" height="15" fill="rgb(251,204,14)"/><text x="95.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1284" width="4" height="15" fill="rgb(245,5,7)"/><text x="95.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.35%)</title><rect x="92" y="1300" width="4" height="15" fill="rgb(234,213,27)"/><text x="95.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1316" width="4" height="15" fill="rgb(252,188,43)"/><text x="95.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1332" width="4" height="15" fill="rgb(233,209,37)"/><text x="95.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1348" width="4" height="15" fill="rgb(208,148,2)"/><text x="95.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="1364" width="4" height="15" fill="rgb(222,31,25)"/><text x="95.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1380" width="4" height="15" fill="rgb(223,122,2)"/><text x="95.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.35%)</title><rect x="92" y="1396" width="4" height="15" fill="rgb(243,37,53)"/><text x="95.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1412" width="4" height="15" fill="rgb(238,27,25)"/><text x="95.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1428" width="4" height="15" fill="rgb(244,141,42)"/><text x="95.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="92" y="1444" width="4" height="15" fill="rgb(239,28,12)"/><text x="95.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="1460" width="4" height="15" fill="rgb(218,126,34)"/><text x="95.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="1476" width="4" height="15" fill="rgb(210,130,40)"/><text x="95.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="92" y="1492" width="4" height="15" fill="rgb(213,115,54)"/><text x="95.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.69%)</title><rect x="10" y="68" width="90" height="15" fill="rgb(232,229,51)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.69%)</title><rect x="10" y="84" width="90" height="15" fill="rgb(239,28,12)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.69%)</title><rect x="10" y="100" width="90" height="15" fill="rgb(238,162,6)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 7.69%)</title><rect x="10" y="116" width="90" height="15" fill="rgb(211,104,45)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.69%)</title><rect x="10" y="132" width="90" height="15" fill="rgb(206,110,16)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_linear_b_reg_kernellinear.py) (22 samples, 7.69%)</title><rect x="10" y="148" width="90" height="15" fill="rgb(220,100,23)"/><text x="13.00" y="158.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.69%)</title><rect x="10" y="164" width="90" height="15" fill="rgb(215,105,8)"/><text x="13.00" y="174.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 7.69%)</title><rect x="10" y="180" width="90" height="15" fill="rgb(238,147,28)"/><text x="13.00" y="190.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.85%)</title><rect x="55" y="196" width="45" height="15" fill="rgb(213,43,1)"/><text x="58.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.85%)</title><rect x="55" y="212" width="45" height="15" fill="rgb(206,25,3)"/><text x="58.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.85%)</title><rect x="55" y="228" width="45" height="15" fill="rgb(225,14,19)"/><text x="58.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.35%)</title><rect x="96" y="244" width="4" height="15" fill="rgb(227,228,5)"/><text x="99.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="260" width="4" height="15" fill="rgb(230,121,2)"/><text x="99.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="276" width="4" height="15" fill="rgb(244,44,52)"/><text x="99.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="292" width="4" height="15" fill="rgb(235,194,9)"/><text x="99.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="308" width="4" height="15" fill="rgb(227,79,26)"/><text x="99.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="324" width="4" height="15" fill="rgb(213,2,27)"/><text x="99.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="96" y="340" width="4" height="15" fill="rgb(227,38,47)"/><text x="99.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="356" width="4" height="15" fill="rgb(254,157,52)"/><text x="99.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.35%)</title><rect x="96" y="372" width="4" height="15" fill="rgb(235,163,36)"/><text x="99.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="388" width="4" height="15" fill="rgb(228,135,22)"/><text x="99.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="404" width="4" height="15" fill="rgb(228,124,52)"/><text x="99.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="420" width="4" height="15" fill="rgb(241,172,4)"/><text x="99.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="96" y="436" width="4" height="15" fill="rgb(239,123,21)"/><text x="99.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="96" y="452" width="4" height="15" fill="rgb(222,12,2)"/><text x="99.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/arraypad.py) (1 samples, 0.35%)</title><rect x="96" y="468" width="4" height="15" fill="rgb(223,10,50)"/><text x="99.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.35%)</title><rect x="96" y="484" width="4" height="15" fill="rgb(210,113,18)"/><text x="99.00" y="494.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="137" y="180" width="5" height="15" fill="rgb(248,159,45)"/><text x="140.00" y="190.50"></text></g><g><title>0x7fcf0d0feff9 (?) (1 samples, 0.35%)</title><rect x="150" y="212" width="4" height="15" fill="rgb(209,10,32)"/><text x="153.00" y="222.50"></text></g><g><title>0x7fcf0d0f9ef6 (?) (1 samples, 0.35%)</title><rect x="150" y="228" width="4" height="15" fill="rgb(229,42,52)"/><text x="153.00" y="238.50"></text></g><g><title>0x7fcf0d0ee962 (?) (1 samples, 0.35%)</title><rect x="150" y="244" width="4" height="15" fill="rgb(220,197,18)"/><text x="153.00" y="254.50"></text></g><g><title>0x7fcf0d1227a7 (?) (1 samples, 0.35%)</title><rect x="150" y="260" width="4" height="15" fill="rgb(239,194,36)"/><text x="153.00" y="270.50"></text></g><g><title>0x7fcf0d122379 (?) (1 samples, 0.35%)</title><rect x="150" y="276" width="4" height="15" fill="rgb(228,167,50)"/><text x="153.00" y="286.50"></text></g><g><title>0x7fcf0d5808b8 (?) (1 samples, 0.35%)</title><rect x="150" y="292" width="4" height="15" fill="rgb(228,206,50)"/><text x="153.00" y="302.50"></text></g><g><title>0x7fcf0d57ec7f (?) (1 samples, 0.35%)</title><rect x="150" y="308" width="4" height="15" fill="rgb(231,31,45)"/><text x="153.00" y="318.50"></text></g><g><title>0x7fcf0d591541 (?) (1 samples, 0.35%)</title><rect x="150" y="324" width="4" height="15" fill="rgb(223,208,29)"/><text x="153.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="158" y="244" width="4" height="15" fill="rgb(240,130,15)"/><text x="161.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="158" y="260" width="4" height="15" fill="rgb(236,136,49)"/><text x="161.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.40%)</title><rect x="154" y="212" width="16" height="15" fill="rgb(215,220,6)"/><text x="157.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.40%)</title><rect x="154" y="228" width="16" height="15" fill="rgb(210,100,3)"/><text x="157.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="162" y="244" width="8" height="15" fill="rgb(217,187,51)"/><text x="165.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="162" y="260" width="8" height="15" fill="rgb(223,199,42)"/><text x="165.00" y="270.50"></text></g><g><title>0x7fcf4d04e90e (libc-2.29.so) (1 samples, 0.35%)</title><rect x="170" y="228" width="5" height="15" fill="rgb(223,103,1)"/><text x="173.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="183" y="260" width="4" height="15" fill="rgb(208,20,28)"/><text x="186.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="191" y="292" width="8" height="15" fill="rgb(223,50,6)"/><text x="194.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="191" y="308" width="8" height="15" fill="rgb(223,119,36)"/><text x="194.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="191" y="324" width="8" height="15" fill="rgb(216,202,38)"/><text x="194.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="199" y="292" width="9" height="15" fill="rgb(249,216,17)"/><text x="202.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="203" y="308" width="5" height="15" fill="rgb(208,127,19)"/><text x="206.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="203" y="324" width="5" height="15" fill="rgb(221,2,30)"/><text x="206.00" y="334.50"></text></g><g><title>0x7fcf4d04ff0a (libc-2.29.so) (1 samples, 0.35%)</title><rect x="203" y="340" width="5" height="15" fill="rgb(242,43,13)"/><text x="206.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="208" y="292" width="4" height="15" fill="rgb(236,183,1)"/><text x="211.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.85%)</title><rect x="187" y="260" width="45" height="15" fill="rgb(247,140,14)"/><text x="190.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.85%)</title><rect x="187" y="276" width="45" height="15" fill="rgb(240,41,48)"/><text x="190.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.75%)</title><rect x="212" y="292" width="20" height="15" fill="rgb(239,197,3)"/><text x="215.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.75%)</title><rect x="212" y="308" width="20" height="15" fill="rgb(249,70,50)"/><text x="215.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.40%)</title><rect x="216" y="324" width="16" height="15" fill="rgb(251,112,48)"/><text x="219.00" y="334.50"></text></g><g><title>onnxruntime::ml::SVMRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.40%)</title><rect x="216" y="340" width="16" height="15" fill="rgb(222,216,16)"/><text x="219.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="224" y="356" width="8" height="15" fill="rgb(216,32,33)"/><text x="227.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="224" y="372" width="8" height="15" fill="rgb(242,132,29)"/><text x="227.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="224" y="388" width="8" height="15" fill="rgb(210,214,54)"/><text x="227.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="224" y="404" width="8" height="15" fill="rgb(238,164,38)"/><text x="227.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="228" y="420" width="4" height="15" fill="rgb(237,112,42)"/><text x="231.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="228" y="436" width="4" height="15" fill="rgb(242,43,32)"/><text x="231.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="228" y="452" width="4" height="15" fill="rgb(251,57,47)"/><text x="231.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="228" y="468" width="4" height="15" fill="rgb(227,33,2)"/><text x="231.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="228" y="484" width="4" height="15" fill="rgb(251,116,54)"/><text x="231.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="228" y="500" width="4" height="15" fill="rgb(208,79,30)"/><text x="231.00" y="510.50"></text></g><g><title>array_finalize_get (getset.c) (1 samples, 0.35%)</title><rect x="232" y="276" width="4" height="15" fill="rgb(239,194,43)"/><text x="235.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="236" y="276" width="5" height="15" fill="rgb(249,182,33)"/><text x="239.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="236" y="292" width="5" height="15" fill="rgb(224,165,21)"/><text x="239.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="236" y="308" width="5" height="15" fill="rgb(216,21,1)"/><text x="239.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="236" y="324" width="5" height="15" fill="rgb(244,228,18)"/><text x="239.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.05%)</title><rect x="232" y="260" width="13" height="15" fill="rgb(219,149,54)"/><text x="235.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.35%)</title><rect x="241" y="276" width="4" height="15" fill="rgb(238,3,2)"/><text x="244.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="245" y="260" width="8" height="15" fill="rgb(215,225,52)"/><text x="248.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.70%)</title><rect x="245" y="276" width="8" height="15" fill="rgb(233,7,7)"/><text x="248.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="249" y="292" width="4" height="15" fill="rgb(247,99,34)"/><text x="252.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.35%)</title><rect x="249" y="308" width="4" height="15" fill="rgb(213,55,33)"/><text x="252.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.35%)</title><rect x="249" y="324" width="4" height="15" fill="rgb(236,202,4)"/><text x="252.00" y="334.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="249" y="340" width="4" height="15" fill="rgb(217,10,15)"/><text x="252.00" y="350.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="253" y="260" width="4" height="15" fill="rgb(214,158,9)"/><text x="256.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="257" y="260" width="4" height="15" fill="rgb(248,73,1)"/><text x="260.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="257" y="276" width="4" height="15" fill="rgb(231,95,33)"/><text x="260.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 7.69%)</title><rect x="175" y="244" width="90" height="15" fill="rgb(242,168,17)"/><text x="178.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="260" width="4" height="15" fill="rgb(216,119,49)"/><text x="264.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="276" width="4" height="15" fill="rgb(206,49,24)"/><text x="264.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="292" width="4" height="15" fill="rgb(215,37,53)"/><text x="264.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="308" width="4" height="15" fill="rgb(245,138,3)"/><text x="264.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="324" width="4" height="15" fill="rgb(208,161,34)"/><text x="264.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="340" width="4" height="15" fill="rgb(230,228,34)"/><text x="264.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="356" width="4" height="15" fill="rgb(219,166,29)"/><text x="264.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="372" width="4" height="15" fill="rgb(246,177,23)"/><text x="264.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocationRegion::IndexFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="261" y="388" width="4" height="15" fill="rgb(230,153,32)"/><text x="264.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.05%)</title><rect x="265" y="244" width="13" height="15" fill="rgb(246,149,40)"/><text x="268.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="269" y="260" width="9" height="15" fill="rgb(212,59,24)"/><text x="272.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="278" y="244" width="4" height="15" fill="rgb(232,91,27)"/><text x="281.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="278" y="260" width="4" height="15" fill="rgb(217,114,21)"/><text x="281.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (43 samples, 15.03%)</title><rect x="109" y="132" width="177" height="15" fill="rgb(223,134,9)"/><text x="112.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (42 samples, 14.69%)</title><rect x="113" y="148" width="173" height="15" fill="rgb(218,11,19)"/><text x="116.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (40 samples, 13.99%)</title><rect x="121" y="164" width="165" height="15" fill="rgb(216,205,3)"/><text x="124.00" y="174.50">_run_whole_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (35 samples, 12.24%)</title><rect x="142" y="180" width="144" height="15" fill="rgb(219,222,47)"/><text x="145.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (onnxruntime/capi/session.py) (35 samples, 12.24%)</title><rect x="142" y="196" width="144" height="15" fill="rgb(253,226,50)"/><text x="145.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 9.79%)</title><rect x="170" y="212" width="116" height="15" fill="rgb(228,77,50)"/><text x="173.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 9.44%)</title><rect x="175" y="228" width="111" height="15" fill="rgb(221,7,5)"/><text x="178.00" y="238.50">void pybind11..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="282" y="244" width="4" height="15" fill="rgb(212,144,27)"/><text x="285.00" y="254.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.35%)</title><rect x="286" y="132" width="4" height="15" fill="rgb(212,165,27)"/><text x="289.00" y="142.50"></text></g><g><title>profile_ort (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (47 samples, 16.43%)</title><rect x="100" y="68" width="194" height="15" fill="rgb(206,176,33)"/><text x="103.00" y="78.50">profile_ort (bench_SVR_li..</text></g><g><title>setup_profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (47 samples, 16.43%)</title><rect x="100" y="84" width="194" height="15" fill="rgb(215,225,6)"/><text x="103.00" y="94.50">setup_profile (bench_SVR_..</text></g><g><title>profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (47 samples, 16.43%)</title><rect x="100" y="100" width="194" height="15" fill="rgb(239,156,30)"/><text x="103.00" y="110.50">profile (bench_SVR_linear..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (46 samples, 16.08%)</title><rect x="104" y="116" width="190" height="15" fill="rgb(208,178,5)"/><text x="107.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="290" y="132" width="4" height="15" fill="rgb(216,217,10)"/><text x="293.00" y="142.50"></text></g><g><title>0x7fcf4d12c151 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="290" y="148" width="4" height="15" fill="rgb(225,141,23)"/><text x="293.00" y="158.50"></text></g><g><title>0x7fcf0dfd88f0 (?) (1 samples, 0.35%)</title><rect x="294" y="244" width="4" height="15" fill="rgb(219,227,0)"/><text x="297.00" y="254.50"></text></g><g><title>0x7fcf0dfdc64e (?) (1 samples, 0.35%)</title><rect x="294" y="260" width="4" height="15" fill="rgb(233,131,43)"/><text x="297.00" y="270.50"></text></g><g><title>0x7fcf0dfdc506 (?) (1 samples, 0.35%)</title><rect x="294" y="276" width="4" height="15" fill="rgb(207,17,37)"/><text x="297.00" y="286.50"></text></g><g><title>0x7fcf0dfd3b9b (?) (1 samples, 0.35%)</title><rect x="294" y="292" width="4" height="15" fill="rgb(226,83,48)"/><text x="297.00" y="302.50"></text></g><g><title>0x7fcf17046ab9 (?) (1 samples, 0.35%)</title><rect x="294" y="308" width="4" height="15" fill="rgb(215,192,28)"/><text x="297.00" y="318.50"></text></g><g><title>0x7fcf17047eab (?) (1 samples, 0.35%)</title><rect x="294" y="324" width="4" height="15" fill="rgb(230,126,31)"/><text x="297.00" y="334.50"></text></g><g><title>0x7fcf17047ea0 (libgomp.so.1.0.0) (2 samples, 0.70%)</title><rect x="298" y="468" width="9" height="15" fill="rgb(248,193,47)"/><text x="301.00" y="478.50"></text></g><g><title>0x7fcf17047ea9 (libgomp.so.1.0.0) (7 samples, 2.45%)</title><rect x="307" y="468" width="28" height="15" fill="rgb(247,175,22)"/><text x="310.00" y="478.50">0..</text></g><g><title>0x7fcf17047eab (libgomp.so.1.0.0) (9 samples, 3.15%)</title><rect x="335" y="468" width="38" height="15" fill="rgb(236,68,53)"/><text x="338.00" y="478.50">0x7..</text></g><g><title>0x7fcf17046ab9 (libgomp.so.1.0.0) (26 samples, 9.09%)</title><rect x="298" y="452" width="108" height="15" fill="rgb(233,191,53)"/><text x="301.00" y="462.50">0x7fcf17046ab..</text></g><g><title>0x7fcf17047ead (libgomp.so.1.0.0) (8 samples, 2.80%)</title><rect x="373" y="468" width="33" height="15" fill="rgb(231,174,49)"/><text x="376.00" y="478.50">0x..</text></g><g><title>0x7fcf17047cf0 (libgomp.so.1.0.0) (1 samples, 0.35%)</title><rect x="406" y="484" width="4" height="15" fill="rgb(217,9,5)"/><text x="409.00" y="494.50"></text></g><g><title>0x7fcf17047cf9 (libgomp.so.1.0.0) (2 samples, 0.70%)</title><rect x="410" y="484" width="8" height="15" fill="rgb(239,49,28)"/><text x="413.00" y="494.50"></text></g><g><title>profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (32 samples, 11.19%)</title><rect x="294" y="100" width="132" height="15" fill="rgb(217,222,26)"/><text x="297.00" y="110.50">profile (bench_S..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (32 samples, 11.19%)</title><rect x="294" y="116" width="132" height="15" fill="rgb(248,147,53)"/><text x="297.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (32 samples, 11.19%)</title><rect x="294" y="132" width="132" height="15" fill="rgb(239,115,33)"/><text x="297.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (32 samples, 11.19%)</title><rect x="294" y="148" width="132" height="15" fill="rgb(249,95,50)"/><text x="297.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (32 samples, 11.19%)</title><rect x="294" y="164" width="132" height="15" fill="rgb(207,105,22)"/><text x="297.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (32 samples, 11.19%)</title><rect x="294" y="180" width="132" height="15" fill="rgb(234,158,4)"/><text x="297.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (32 samples, 11.19%)</title><rect x="294" y="196" width="132" height="15" fill="rgb(251,46,38)"/><text x="297.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (32 samples, 11.19%)</title><rect x="294" y="212" width="132" height="15" fill="rgb(216,102,24)"/><text x="297.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_regressor.py) (32 samples, 11.19%)</title><rect x="294" y="228" width="132" height="15" fill="rgb(252,194,14)"/><text x="297.00" y="238.50">_run (mlprodict/..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (31 samples, 10.84%)</title><rect x="298" y="244" width="128" height="15" fill="rgb(252,23,54)"/><text x="301.00" y="254.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (31 samples, 10.84%)</title><rect x="298" y="260" width="128" height="15" fill="rgb(221,127,13)"/><text x="301.00" y="270.50">void pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (31 samples, 10.84%)</title><rect x="298" y="276" width="128" height="15" fill="rgb(234,156,1)"/><text x="301.00" y="286.50">void pybind11::c..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (31 samples, 10.84%)</title><rect x="298" y="292" width="128" height="15" fill="rgb(213,217,1)"/><text x="301.00" y="302.50">pybind11::detail..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (31 samples, 10.84%)</title><rect x="298" y="308" width="128" height="15" fill="rgb(226,108,37)"/><text x="301.00" y="318.50">pybind11::detail..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (31 samples, 10.84%)</title><rect x="298" y="324" width="128" height="15" fill="rgb(246,39,22)"/><text x="301.00" y="334.50">pybind11::cpp_fu..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (31 samples, 10.84%)</title><rect x="298" y="340" width="128" height="15" fill="rgb(252,94,44)"/><text x="301.00" y="350.50">pybind11::array_..</text></g><g><title>pybind11::array::~array (numpy.h) (31 samples, 10.84%)</title><rect x="298" y="356" width="128" height="15" fill="rgb(220,133,3)"/><text x="301.00" y="366.50">pybind11::array:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (31 samples, 10.84%)</title><rect x="298" y="372" width="128" height="15" fill="rgb(234,82,10)"/><text x="301.00" y="382.50">pybind11::buffer..</text></g><g><title>pybind11::object::~object (pytypes.h) (31 samples, 10.84%)</title><rect x="298" y="388" width="128" height="15" fill="rgb(230,25,30)"/><text x="301.00" y="398.50">pybind11::object..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (31 samples, 10.84%)</title><rect x="298" y="404" width="128" height="15" fill="rgb(219,5,22)"/><text x="301.00" y="414.50">pybind11::handle..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp) (31 samples, 10.84%)</title><rect x="298" y="420" width="128" height="15" fill="rgb(218,114,38)"/><text x="301.00" y="430.50">RuntimeSVMRegres..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (31 samples, 10.84%)</title><rect x="298" y="436" width="128" height="15" fill="rgb(226,18,11)"/><text x="301.00" y="446.50">pybind11::gil_sc..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 1.75%)</title><rect x="406" y="452" width="20" height="15" fill="rgb(240,196,39)"/><text x="409.00" y="462.50"></text></g><g><title>0x7fcf17045daa (libgomp.so.1.0.0) (5 samples, 1.75%)</title><rect x="406" y="468" width="20" height="15" fill="rgb(223,85,50)"/><text x="409.00" y="478.50"></text></g><g><title>0x7fcf17047cfd (libgomp.so.1.0.0) (2 samples, 0.70%)</title><rect x="418" y="484" width="8" height="15" fill="rgb(219,82,25)"/><text x="421.00" y="494.50"></text></g><g><title>profile_pyrt (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (33 samples, 11.54%)</title><rect x="294" y="68" width="136" height="15" fill="rgb(228,178,45)"/><text x="297.00" y="78.50">profile_pyrt (ben..</text></g><g><title>setup_profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (33 samples, 11.54%)</title><rect x="294" y="84" width="136" height="15" fill="rgb(251,101,11)"/><text x="297.00" y="94.50">setup_profile (be..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="426" y="100" width="4" height="15" fill="rgb(216,146,23)"/><text x="429.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="426" y="116" width="4" height="15" fill="rgb(212,167,23)"/><text x="429.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="426" y="132" width="4" height="15" fill="rgb(244,216,18)"/><text x="429.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="426" y="148" width="4" height="15" fill="rgb(243,79,45)"/><text x="429.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="426" y="164" width="4" height="15" fill="rgb(208,159,40)"/><text x="429.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.35%)</title><rect x="426" y="180" width="4" height="15" fill="rgb(205,39,30)"/><text x="429.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.35%)</title><rect x="426" y="196" width="4" height="15" fill="rgb(236,26,30)"/><text x="429.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="212" width="4" height="15" fill="rgb(241,177,12)"/><text x="429.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="228" width="4" height="15" fill="rgb(239,128,20)"/><text x="429.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="244" width="4" height="15" fill="rgb(242,189,5)"/><text x="429.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="426" y="260" width="4" height="15" fill="rgb(210,56,42)"/><text x="429.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="276" width="4" height="15" fill="rgb(206,189,53)"/><text x="429.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.35%)</title><rect x="426" y="292" width="4" height="15" fill="rgb(243,181,13)"/><text x="429.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="308" width="4" height="15" fill="rgb(229,212,26)"/><text x="429.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="324" width="4" height="15" fill="rgb(206,226,28)"/><text x="429.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="340" width="4" height="15" fill="rgb(213,111,19)"/><text x="429.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="426" y="356" width="4" height="15" fill="rgb(210,116,7)"/><text x="429.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="372" width="4" height="15" fill="rgb(236,207,32)"/><text x="429.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.35%)</title><rect x="426" y="388" width="4" height="15" fill="rgb(212,89,19)"/><text x="429.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="404" width="4" height="15" fill="rgb(208,87,29)"/><text x="429.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="420" width="4" height="15" fill="rgb(246,185,7)"/><text x="429.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="436" width="4" height="15" fill="rgb(232,46,51)"/><text x="429.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="426" y="452" width="4" height="15" fill="rgb(214,196,53)"/><text x="429.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="468" width="4" height="15" fill="rgb(211,147,51)"/><text x="429.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (1 samples, 0.35%)</title><rect x="426" y="484" width="4" height="15" fill="rgb(225,96,49)"/><text x="429.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="500" width="4" height="15" fill="rgb(208,156,27)"/><text x="429.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="516" width="4" height="15" fill="rgb(250,198,23)"/><text x="429.00" y="526.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="426" y="532" width="4" height="15" fill="rgb(248,114,33)"/><text x="429.00" y="542.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="426" y="548" width="4" height="15" fill="rgb(205,22,28)"/><text x="429.00" y="558.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="426" y="564" width="4" height="15" fill="rgb(242,175,29)"/><text x="429.00" y="574.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="426" y="580" width="4" height="15" fill="rgb(246,229,46)"/><text x="429.00" y="590.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="426" y="596" width="4" height="15" fill="rgb(214,48,22)"/><text x="429.00" y="606.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.35%)</title><rect x="426" y="612" width="4" height="15" fill="rgb(239,44,25)"/><text x="429.00" y="622.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.35%)</title><rect x="426" y="628" width="4" height="15" fill="rgb(217,185,0)"/><text x="429.00" y="638.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="443" y="116" width="4" height="15" fill="rgb(236,27,43)"/><text x="446.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="443" y="132" width="4" height="15" fill="rgb(231,189,47)"/><text x="446.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.35%)</title><rect x="443" y="148" width="4" height="15" fill="rgb(237,165,40)"/><text x="446.00" y="158.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.35%)</title><rect x="443" y="164" width="4" height="15" fill="rgb(205,152,13)"/><text x="446.00" y="174.50"></text></g><g><title>0x7fcf4d04e908 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="443" y="180" width="4" height="15" fill="rgb(218,210,5)"/><text x="446.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="455" y="148" width="4" height="15" fill="rgb(207,126,53)"/><text x="458.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="455" y="164" width="4" height="15" fill="rgb(229,92,48)"/><text x="458.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.35%)</title><rect x="455" y="180" width="4" height="15" fill="rgb(214,183,17)"/><text x="458.00" y="190.50"></text></g><g><title>0x7fcf27b26e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="505" y="212" width="4" height="15" fill="rgb(225,219,5)"/><text x="508.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.35%)</title><rect x="505" y="228" width="4" height="15" fill="rgb(224,162,39)"/><text x="508.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.35%)</title><rect x="505" y="244" width="4" height="15" fill="rgb(245,2,35)"/><text x="508.00" y="254.50"></text></g><g><title>0x7fcf27b40d86 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="505" y="196" width="8" height="15" fill="rgb(214,57,13)"/><text x="508.00" y="206.50"></text></g><g><title>0x7fcf27b26f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="509" y="212" width="4" height="15" fill="rgb(254,104,36)"/><text x="512.00" y="222.50"></text></g><g><title>0x7fcf27b2605a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="509" y="228" width="4" height="15" fill="rgb(251,56,28)"/><text x="512.00" y="238.50"></text></g><g><title>0x7fcf27b25a81 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="509" y="244" width="4" height="15" fill="rgb(239,55,40)"/><text x="512.00" y="254.50"></text></g><g><title>0x7fcf27b265ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="513" y="212" width="4" height="15" fill="rgb(238,156,1)"/><text x="516.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.35%)</title><rect x="513" y="228" width="4" height="15" fill="rgb(224,23,17)"/><text x="516.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.35%)</title><rect x="513" y="244" width="4" height="15" fill="rgb(247,83,27)"/><text x="516.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.35%)</title><rect x="513" y="260" width="4" height="15" fill="rgb(239,144,6)"/><text x="516.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.35%)</title><rect x="513" y="276" width="4" height="15" fill="rgb(234,211,18)"/><text x="516.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.35%)</title><rect x="513" y="292" width="4" height="15" fill="rgb(235,204,4)"/><text x="516.00" y="302.50"></text></g><g><title>0x7fcf27b40dcc (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="513" y="196" width="8" height="15" fill="rgb(248,197,24)"/><text x="516.00" y="206.50"></text></g><g><title>0x7fcf27b2661e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="517" y="212" width="4" height="15" fill="rgb(239,20,14)"/><text x="520.00" y="222.50"></text></g><g><title>0x7fcf27b40e0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="521" y="196" width="4" height="15" fill="rgb(253,123,22)"/><text x="524.00" y="206.50"></text></g><g><title>0x7fcf27b26f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="521" y="212" width="4" height="15" fill="rgb(254,172,53)"/><text x="524.00" y="222.50"></text></g><g><title>0x7fcf27b2633c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="521" y="228" width="4" height="15" fill="rgb(248,217,21)"/><text x="524.00" y="238.50"></text></g><g><title>0x7fcf27b25e28 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="521" y="244" width="4" height="15" fill="rgb(218,212,25)"/><text x="524.00" y="254.50"></text></g><g><title>0x7fcf27b265ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="525" y="212" width="8" height="15" fill="rgb(237,87,45)"/><text x="528.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.70%)</title><rect x="525" y="228" width="8" height="15" fill="rgb(242,194,23)"/><text x="528.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.70%)</title><rect x="525" y="244" width="8" height="15" fill="rgb(205,95,49)"/><text x="528.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.35%)</title><rect x="529" y="260" width="4" height="15" fill="rgb(253,32,33)"/><text x="532.00" y="270.50"></text></g><g><title>0x7fcf27b40e4d (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.05%)</title><rect x="525" y="196" width="13" height="15" fill="rgb(218,163,38)"/><text x="528.00" y="206.50"></text></g><g><title>0x7fcf27b2667f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="533" y="212" width="5" height="15" fill="rgb(208,75,35)"/><text x="536.00" y="222.50"></text></g><g><title>0x7fcf27b2633c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="533" y="228" width="5" height="15" fill="rgb(225,193,54)"/><text x="536.00" y="238.50"></text></g><g><title>0x7fcf27b25c10 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="533" y="244" width="5" height="15" fill="rgb(228,162,54)"/><text x="536.00" y="254.50"></text></g><g><title>0x7fcf27b40e8f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="538" y="196" width="4" height="15" fill="rgb(222,128,15)"/><text x="541.00" y="206.50"></text></g><g><title>0x7fcf27b26e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="538" y="212" width="4" height="15" fill="rgb(228,183,44)"/><text x="541.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.35%)</title><rect x="538" y="228" width="4" height="15" fill="rgb(215,194,20)"/><text x="541.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.35%)</title><rect x="538" y="244" width="4" height="15" fill="rgb(247,23,44)"/><text x="541.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.35%)</title><rect x="538" y="260" width="4" height="15" fill="rgb(216,35,39)"/><text x="541.00" y="270.50"></text></g><g><title>0x7fcf27b40ed1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="542" y="196" width="8" height="15" fill="rgb(252,99,16)"/><text x="545.00" y="206.50"></text></g><g><title>0x7fcf27b26e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="542" y="212" width="8" height="15" fill="rgb(219,24,40)"/><text x="545.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.70%)</title><rect x="542" y="228" width="8" height="15" fill="rgb(226,172,7)"/><text x="545.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.35%)</title><rect x="546" y="244" width="4" height="15" fill="rgb(242,88,2)"/><text x="549.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.35%)</title><rect x="546" y="260" width="4" height="15" fill="rgb(235,137,15)"/><text x="549.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="546" y="276" width="4" height="15" fill="rgb(247,45,2)"/><text x="549.00" y="286.50"></text></g><g><title>0x7fcf27b40f1c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="550" y="196" width="8" height="15" fill="rgb(228,142,31)"/><text x="553.00" y="206.50"></text></g><g><title>0x7fcf27b26e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="550" y="212" width="8" height="15" fill="rgb(250,222,17)"/><text x="553.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.70%)</title><rect x="550" y="228" width="8" height="15" fill="rgb(235,205,20)"/><text x="553.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.70%)</title><rect x="550" y="244" width="8" height="15" fill="rgb(226,205,54)"/><text x="553.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.35%)</title><rect x="554" y="260" width="4" height="15" fill="rgb(233,43,41)"/><text x="557.00" y="270.50"></text></g><g><title>0x7fcf27b40f67 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="558" y="196" width="4" height="15" fill="rgb(209,133,54)"/><text x="561.00" y="206.50"></text></g><g><title>0x7fcf27b26e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="558" y="212" width="4" height="15" fill="rgb(243,96,34)"/><text x="561.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.35%)</title><rect x="558" y="228" width="4" height="15" fill="rgb(212,132,40)"/><text x="561.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.35%)</title><rect x="558" y="244" width="4" height="15" fill="rgb(236,41,16)"/><text x="561.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.35%)</title><rect x="558" y="260" width="4" height="15" fill="rgb(227,30,50)"/><text x="561.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="558" y="276" width="4" height="15" fill="rgb(211,145,42)"/><text x="561.00" y="286.50"></text></g><g><title>0x7fcf27b40fed (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="562" y="196" width="4" height="15" fill="rgb(207,16,49)"/><text x="565.00" y="206.50"></text></g><g><title>0x7fcf27b26e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="562" y="212" width="4" height="15" fill="rgb(222,5,34)"/><text x="565.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.35%)</title><rect x="562" y="228" width="4" height="15" fill="rgb(247,170,10)"/><text x="565.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.35%)</title><rect x="562" y="244" width="4" height="15" fill="rgb(232,26,30)"/><text x="565.00" y="254.50"></text></g><g><title>0x7fcf27b410f4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="566" y="196" width="5" height="15" fill="rgb(223,176,15)"/><text x="569.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.35%)</title><rect x="575" y="260" width="4" height="15" fill="rgb(220,89,2)"/><text x="578.00" y="270.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.35%)</title><rect x="575" y="276" width="4" height="15" fill="rgb(226,217,53)"/><text x="578.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.70%)</title><rect x="575" y="244" width="8" height="15" fill="rgb(239,71,27)"/><text x="578.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="579" y="260" width="4" height="15" fill="rgb(246,228,21)"/><text x="582.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="579" y="276" width="4" height="15" fill="rgb(232,157,42)"/><text x="582.00" y="286.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (3 samples, 1.05%)</title><rect x="575" y="228" width="12" height="15" fill="rgb(213,19,25)"/><text x="578.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.35%)</title><rect x="583" y="244" width="4" height="15" fill="rgb(207,229,35)"/><text x="586.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="587" y="276" width="4" height="15" fill="rgb(237,10,39)"/><text x="590.00" y="286.50"></text></g><g><title>0x7fcf27b4117f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.10%)</title><rect x="571" y="196" width="24" height="15" fill="rgb(249,131,24)"/><text x="574.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c) (6 samples, 2.10%)</title><rect x="571" y="212" width="24" height="15" fill="rgb(223,13,37)"/><text x="574.00" y="222.50">a..</text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (2 samples, 0.70%)</title><rect x="587" y="228" width="8" height="15" fill="rgb(254,44,10)"/><text x="590.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.70%)</title><rect x="587" y="244" width="8" height="15" fill="rgb(234,156,29)"/><text x="590.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (2 samples, 0.70%)</title><rect x="587" y="260" width="8" height="15" fill="rgb(227,212,23)"/><text x="590.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.35%)</title><rect x="591" y="276" width="4" height="15" fill="rgb(221,180,7)"/><text x="594.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.35%)</title><rect x="591" y="292" width="4" height="15" fill="rgb(231,86,17)"/><text x="594.00" y="302.50"></text></g><g><title>0x7fcf27b277d2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="595" y="212" width="5" height="15" fill="rgb(248,61,2)"/><text x="598.00" y="222.50"></text></g><g><title>0x7fcf27b41281 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="595" y="196" width="9" height="15" fill="rgb(236,107,22)"/><text x="598.00" y="206.50"></text></g><g><title>0x7fcf27b27ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="600" y="212" width="4" height="15" fill="rgb(212,97,11)"/><text x="603.00" y="222.50"></text></g><g><title>0x7fcf4d12c130 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="600" y="228" width="4" height="15" fill="rgb(225,114,1)"/><text x="603.00" y="238.50"></text></g><g><title>0x7fcf4d04db9b (libc-2.29.so) (1 samples, 0.35%)</title><rect x="604" y="276" width="4" height="15" fill="rgb(205,113,41)"/><text x="607.00" y="286.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="604" y="228" width="8" height="15" fill="rgb(244,40,45)"/><text x="607.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.70%)</title><rect x="604" y="244" width="8" height="15" fill="rgb(254,174,18)"/><text x="607.00" y="254.50"></text></g><g><title>0x7fcf4d050028 (libc-2.29.so) (2 samples, 0.70%)</title><rect x="604" y="260" width="8" height="15" fill="rgb(229,39,28)"/><text x="607.00" y="270.50"></text></g><g><title>0x7fcf4d04dbc6 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="608" y="276" width="4" height="15" fill="rgb(224,149,39)"/><text x="611.00" y="286.50"></text></g><g><title>0x7fcf27b41307 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.05%)</title><rect x="604" y="196" width="12" height="15" fill="rgb(237,26,12)"/><text x="607.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.05%)</title><rect x="604" y="212" width="12" height="15" fill="rgb(234,108,45)"/><text x="607.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="612" y="228" width="4" height="15" fill="rgb(248,223,39)"/><text x="615.00" y="238.50"></text></g><g><title>0x7fcf27b41453 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="616" y="196" width="4" height="15" fill="rgb(241,162,23)"/><text x="619.00" y="206.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.35%)</title><rect x="624" y="276" width="4" height="15" fill="rgb(232,120,33)"/><text x="627.00" y="286.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.35%)</title><rect x="624" y="292" width="4" height="15" fill="rgb(233,166,17)"/><text x="627.00" y="302.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="624" y="308" width="4" height="15" fill="rgb(247,126,15)"/><text x="627.00" y="318.50"></text></g><g><title>0x7fcf27b414c8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.05%)</title><rect x="620" y="196" width="13" height="15" fill="rgb(219,154,7)"/><text x="623.00" y="206.50"></text></g><g><title>0x7fcf27b26e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.05%)</title><rect x="620" y="212" width="13" height="15" fill="rgb(233,36,50)"/><text x="623.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.05%)</title><rect x="620" y="228" width="13" height="15" fill="rgb(237,82,17)"/><text x="623.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 1.05%)</title><rect x="620" y="244" width="13" height="15" fill="rgb(252,172,22)"/><text x="623.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.70%)</title><rect x="624" y="260" width="9" height="15" fill="rgb(231,22,18)"/><text x="627.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="628" y="276" width="5" height="15" fill="rgb(221,35,30)"/><text x="631.00" y="286.50"></text></g><g><title>0x7fcf27b414f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.40%)</title><rect x="633" y="196" width="16" height="15" fill="rgb(212,192,26)"/><text x="636.00" y="206.50"></text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.40%)</title><rect x="633" y="212" width="16" height="15" fill="rgb(216,203,46)"/><text x="636.00" y="222.50"></text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.40%)</title><rect x="633" y="228" width="16" height="15" fill="rgb(240,25,25)"/><text x="636.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.40%)</title><rect x="633" y="244" width="16" height="15" fill="rgb(239,13,45)"/><text x="636.00" y="254.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="645" y="260" width="4" height="15" fill="rgb(235,77,20)"/><text x="648.00" y="270.50"></text></g><g><title>0x7fcf27b41752 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="649" y="196" width="8" height="15" fill="rgb(244,200,18)"/><text x="652.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.70%)</title><rect x="649" y="212" width="8" height="15" fill="rgb(239,179,4)"/><text x="652.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.70%)</title><rect x="649" y="228" width="8" height="15" fill="rgb(221,58,12)"/><text x="652.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.70%)</title><rect x="649" y="244" width="8" height="15" fill="rgb(217,47,9)"/><text x="652.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.35%)</title><rect x="653" y="260" width="4" height="15" fill="rgb(249,161,40)"/><text x="656.00" y="270.50"></text></g><g><title>0x7fcf27b41afb (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="657" y="196" width="4" height="15" fill="rgb(234,77,14)"/><text x="660.00" y="206.50"></text></g><g><title>0x7fcf27b41bc8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="661" y="196" width="5" height="15" fill="rgb(217,132,17)"/><text x="664.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.35%)</title><rect x="670" y="260" width="4" height="15" fill="rgb(244,35,34)"/><text x="673.00" y="270.50"></text></g><g><title>0x7fcf27b209a1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.05%)</title><rect x="666" y="212" width="12" height="15" fill="rgb(244,154,51)"/><text x="669.00" y="222.50"></text></g><g><title>0x7fcf27b24fdf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.05%)</title><rect x="666" y="228" width="12" height="15" fill="rgb(231,162,23)"/><text x="669.00" y="238.50"></text></g><g><title>array_empty (multiarraymodule.c) (2 samples, 0.70%)</title><rect x="670" y="244" width="8" height="15" fill="rgb(216,44,19)"/><text x="673.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.35%)</title><rect x="674" y="260" width="4" height="15" fill="rgb(210,162,16)"/><text x="677.00" y="270.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.35%)</title><rect x="674" y="276" width="4" height="15" fill="rgb(215,91,7)"/><text x="677.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="674" y="292" width="4" height="15" fill="rgb(212,170,25)"/><text x="677.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="674" y="308" width="4" height="15" fill="rgb(235,100,42)"/><text x="677.00" y="318.50"></text></g><g><title>0x7fcf27b41cec (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.40%)</title><rect x="666" y="196" width="16" height="15" fill="rgb(218,69,46)"/><text x="669.00" y="206.50"></text></g><g><title>0x7fcf27b209bf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="678" y="212" width="4" height="15" fill="rgb(241,10,14)"/><text x="681.00" y="222.50"></text></g><g><title>0x7fcf27b431dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (45 samples, 15.73%)</title><rect x="505" y="180" width="185" height="15" fill="rgb(253,84,11)"/><text x="508.00" y="190.50">0x7fcf27b431dd (sklearn/..</text></g><g><title>0x7fcf27b4226c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="682" y="196" width="8" height="15" fill="rgb(227,174,23)"/><text x="685.00" y="206.50"></text></g><g><title>0x7fcf27b265ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.70%)</title><rect x="682" y="212" width="8" height="15" fill="rgb(210,58,34)"/><text x="685.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.70%)</title><rect x="682" y="228" width="8" height="15" fill="rgb(248,141,48)"/><text x="685.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.70%)</title><rect x="682" y="244" width="8" height="15" fill="rgb(232,80,22)"/><text x="685.00" y="254.50"></text></g><g><title>0x7fcf27b43da2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="690" y="180" width="4" height="15" fill="rgb(240,144,12)"/><text x="693.00" y="190.50"></text></g><g><title>0x7fcf27b43f34 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="694" y="180" width="5" height="15" fill="rgb(220,110,1)"/><text x="697.00" y="190.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py) (58 samples, 20.28%)</title><rect x="463" y="164" width="240" height="15" fill="rgb(205,165,28)"/><text x="466.00" y="174.50">_dense_predict (sklearn/svm/_ba..</text></g><g><title>_compute_kernel (sklearn/svm/_base.py) (1 samples, 0.35%)</title><rect x="699" y="180" width="4" height="15" fill="rgb(238,139,7)"/><text x="702.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.70%)</title><rect x="793" y="196" width="9" height="15" fill="rgb(217,206,20)"/><text x="796.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 1.05%)</title><rect x="802" y="196" width="12" height="15" fill="rgb(250,37,32)"/><text x="805.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 1.40%)</title><rect x="814" y="196" width="17" height="15" fill="rgb(225,39,10)"/><text x="817.00" y="206.50"></text></g><g><title>0x7fcf4d12d0e6 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="872" y="212" width="4" height="15" fill="rgb(236,45,1)"/><text x="875.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.05%)</title><rect x="876" y="212" width="12" height="15" fill="rgb(233,102,6)"/><text x="879.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.35%)</title><rect x="888" y="212" width="4" height="15" fill="rgb(228,1,23)"/><text x="891.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (17 samples, 5.94%)</title><rect x="831" y="196" width="70" height="15" fill="rgb(234,146,5)"/><text x="834.00" y="206.50">_assert..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.70%)</title><rect x="892" y="212" width="9" height="15" fill="rgb(220,72,51)"/><text x="895.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.70%)</title><rect x="901" y="196" width="8" height="15" fill="rgb(250,159,7)"/><text x="904.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.35%)</title><rect x="958" y="212" width="5" height="15" fill="rgb(222,206,40)"/><text x="961.00" y="222.50"></text></g><g><title>0x7fcf4d06f124 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="958" y="228" width="5" height="15" fill="rgb(228,135,46)"/><text x="961.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 4.90%)</title><rect x="909" y="196" width="58" height="15" fill="rgb(230,177,28)"/><text x="912.00" y="206.50">_num_s..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.35%)</title><rect x="963" y="212" width="4" height="15" fill="rgb(245,55,10)"/><text x="966.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.35%)</title><rect x="963" y="228" width="4" height="15" fill="rgb(232,198,14)"/><text x="966.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 1.05%)</title><rect x="967" y="196" width="12" height="15" fill="rgb(240,101,19)"/><text x="970.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.70%)</title><rect x="971" y="212" width="8" height="15" fill="rgb(253,173,31)"/><text x="974.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.35%)</title><rect x="975" y="228" width="4" height="15" fill="rgb(244,166,46)"/><text x="978.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="975" y="244" width="4" height="15" fill="rgb(213,69,44)"/><text x="978.00" y="254.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.35%)</title><rect x="979" y="292" width="4" height="15" fill="rgb(222,211,16)"/><text x="982.00" y="302.50"></text></g><g><title>0x7fcf4d06f120 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="987" y="308" width="4" height="15" fill="rgb(213,132,41)"/><text x="990.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="991" y="308" width="5" height="15" fill="rgb(236,23,30)"/><text x="994.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (6 samples, 2.10%)</title><rect x="979" y="276" width="25" height="15" fill="rgb(214,53,33)"/><text x="982.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.75%)</title><rect x="983" y="292" width="21" height="15" fill="rgb(246,159,11)"/><text x="986.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.70%)</title><rect x="996" y="308" width="8" height="15" fill="rgb(241,175,3)"/><text x="999.00" y="318.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (7 samples, 2.45%)</title><rect x="979" y="196" width="29" height="15" fill="rgb(208,82,16)"/><text x="982.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c) (7 samples, 2.45%)</title><rect x="979" y="212" width="29" height="15" fill="rgb(250,108,31)"/><text x="982.00" y="222.50">_a..</text></g><g><title>PyArray_CheckFromAny (ctors.c) (7 samples, 2.45%)</title><rect x="979" y="228" width="29" height="15" fill="rgb(230,101,39)"/><text x="982.00" y="238.50">Py..</text></g><g><title>PyArray_FromAny (ctors.c) (7 samples, 2.45%)</title><rect x="979" y="244" width="29" height="15" fill="rgb(214,154,45)"/><text x="982.00" y="254.50">Py..</text></g><g><title>PyArray_FromArray (ctors.c) (7 samples, 2.45%)</title><rect x="979" y="260" width="29" height="15" fill="rgb(250,137,18)"/><text x="982.00" y="270.50">Py..</text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.35%)</title><rect x="1004" y="276" width="4" height="15" fill="rgb(220,41,15)"/><text x="1007.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="1004" y="292" width="4" height="15" fill="rgb(230,80,32)"/><text x="1007.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.35%)</title><rect x="1004" y="308" width="4" height="15" fill="rgb(208,228,28)"/><text x="1007.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="1004" y="324" width="4" height="15" fill="rgb(218,228,16)"/><text x="1007.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="1004" y="340" width="4" height="15" fill="rgb(207,39,32)"/><text x="1007.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (77 samples, 26.92%)</title><rect x="723" y="180" width="318" height="15" fill="rgb(251,143,16)"/><text x="726.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (8 samples, 2.80%)</title><rect x="1008" y="196" width="33" height="15" fill="rgb(218,111,1)"/><text x="1011.00" y="206.50">si..</text></g><g><title>_add_filter (warnings.py) (7 samples, 2.45%)</title><rect x="1012" y="212" width="29" height="15" fill="rgb(251,195,41)"/><text x="1015.00" y="222.50">_a..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.40%)</title><rect x="1144" y="212" width="17" height="15" fill="rgb(236,206,42)"/><text x="1147.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (26 samples, 9.09%)</title><rect x="1066" y="196" width="107" height="15" fill="rgb(215,170,24)"/><text x="1069.00" y="206.50">&lt;listcomp&gt; (s..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.05%)</title><rect x="1161" y="212" width="12" height="15" fill="rgb(221,125,47)"/><text x="1164.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (35 samples, 12.24%)</title><rect x="1041" y="180" width="144" height="15" fill="rgb(206,91,47)"/><text x="1044.00" y="190.50">check_is_fitted (s..</text></g><g><title>isclass (inspect.py) (3 samples, 1.05%)</title><rect x="1173" y="196" width="12" height="15" fill="rgb(249,181,48)"/><text x="1176.00" y="206.50"></text></g><g><title>all (286 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,28,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (286 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(215,29,36)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (184 samples, 64.34%)</title><rect x="430" y="68" width="760" height="15" fill="rgb(205,196,6)"/><text x="433.00" y="78.50">profile_skl (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (184 samples, 64.34%)</title><rect x="430" y="84" width="760" height="15" fill="rgb(240,47,41)"/><text x="433.00" y="94.50">setup_profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py)</text></g><g><title>profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py) (184 samples, 64.34%)</title><rect x="430" y="100" width="760" height="15" fill="rgb(254,222,52)"/><text x="433.00" y="110.50">profile (bench_SVR_linear_b_reg_kernellinear_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (180 samples, 62.94%)</title><rect x="447" y="116" width="743" height="15" fill="rgb(247,169,17)"/><text x="450.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (178 samples, 62.24%)</title><rect x="455" y="132" width="735" height="15" fill="rgb(249,202,8)"/><text x="458.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/svm/_base.py) (177 samples, 61.89%)</title><rect x="459" y="148" width="731" height="15" fill="rgb(231,199,20)"/><text x="462.00" y="158.50">predict (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (118 samples, 41.26%)</title><rect x="703" y="164" width="487" height="15" fill="rgb(208,61,53)"/><text x="706.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.35%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(229,179,38)"/><text x="1188.00" y="190.50"></text></g></g></svg>