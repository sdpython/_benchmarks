<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.47%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(236,100,53)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(214,103,21)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(227,138,51)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(225,145,49)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(246,155,18)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(223,130,48)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(218,63,46)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(231,66,35)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.47%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(238,133,43)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(251,82,30)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(231,8,35)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(245,208,47)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(208,116,12)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(247,193,35)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(219,96,12)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(227,118,21)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.47%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(233,223,27)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(238,183,50)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(216,63,54)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(233,173,41)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(207,142,29)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(238,212,51)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(246,162,37)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(222,27,23)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(234,55,2)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.47%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(214,165,47)"/><text x="13.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(223,94,15)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(244,202,8)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(248,23,47)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(210,110,5)"/><text x="13.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(227,22,16)"/><text x="13.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(248,28,19)"/><text x="13.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(231,75,28)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:16) (1 samples, 0.47%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(220,106,11)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(246,36,28)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(211,96,29)"/><text x="13.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(231,142,50)"/><text x="13.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(216,226,24)"/><text x="13.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(231,113,46)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py:13) (1 samples, 0.47%)</title><rect x="10" y="996" width="5" height="15" fill="rgb(219,134,31)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="10" y="1012" width="5" height="15" fill="rgb(233,228,16)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="10" y="1028" width="5" height="15" fill="rgb(212,13,19)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="10" y="1044" width="5" height="15" fill="rgb(217,66,35)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="10" y="1060" width="5" height="15" fill="rgb(245,116,9)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="10" y="1076" width="5" height="15" fill="rgb(235,201,32)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (urllib/parse.py:740) (1 samples, 0.47%)</title><rect x="10" y="1092" width="5" height="15" fill="rgb(254,69,31)"/><text x="13.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_sigmoid_b_reg_kernelsigmoid.py:1) (2 samples, 0.93%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(205,130,14)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="10" y="164" width="10" height="15" fill="rgb(252,79,21)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="10" y="180" width="10" height="15" fill="rgb(220,180,21)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(212,123,47)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(229,56,41)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(235,107,18)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.93%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(215,219,44)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.93%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(208,14,14)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(218,82,46)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(236,84,28)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(245,173,20)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(241,138,26)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(214,29,41)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(224,36,27)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.47%)</title><rect x="15" y="372" width="5" height="15" fill="rgb(207,172,42)"/><text x="18.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="15" y="388" width="5" height="15" fill="rgb(220,228,8)"/><text x="18.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="15" y="404" width="5" height="15" fill="rgb(225,211,54)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="15" y="420" width="5" height="15" fill="rgb(237,99,38)"/><text x="18.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="15" y="436" width="5" height="15" fill="rgb(253,96,2)"/><text x="18.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="15" y="452" width="5" height="15" fill="rgb(225,5,8)"/><text x="18.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="15" y="468" width="5" height="15" fill="rgb(242,135,4)"/><text x="18.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="15" y="484" width="5" height="15" fill="rgb(215,128,11)"/><text x="18.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:606) (1 samples, 0.47%)</title><rect x="15" y="500" width="5" height="15" fill="rgb(220,150,8)"/><text x="18.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.47%)</title><rect x="15" y="516" width="5" height="15" fill="rgb(233,88,30)"/><text x="18.00" y="526.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.47%)</title><rect x="15" y="532" width="5" height="15" fill="rgb(237,183,29)"/><text x="18.00" y="542.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.47%)</title><rect x="15" y="548" width="5" height="15" fill="rgb(243,185,12)"/><text x="18.00" y="558.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.47%)</title><rect x="15" y="564" width="5" height="15" fill="rgb(213,34,40)"/><text x="18.00" y="574.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.47%)</title><rect x="15" y="580" width="5" height="15" fill="rgb(233,79,45)"/><text x="18.00" y="590.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.47%)</title><rect x="15" y="596" width="5" height="15" fill="rgb(241,185,23)"/><text x="18.00" y="606.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.47%)</title><rect x="20" y="852" width="6" height="15" fill="rgb(243,6,28)"/><text x="23.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.47%)</title><rect x="20" y="868" width="6" height="15" fill="rgb(209,53,29)"/><text x="23.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.47%)</title><rect x="20" y="884" width="6" height="15" fill="rgb(234,188,22)"/><text x="23.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.47%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(244,95,51)"/><text x="23.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:702) (1 samples, 0.47%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(235,111,4)"/><text x="23.00" y="926.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.47%)</title><rect x="20" y="932" width="6" height="15" fill="rgb(245,159,2)"/><text x="23.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.47%)</title><rect x="26" y="884" width="5" height="15" fill="rgb(245,107,29)"/><text x="29.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.47%)</title><rect x="26" y="900" width="5" height="15" fill="rgb(216,201,21)"/><text x="29.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.47%)</title><rect x="26" y="916" width="5" height="15" fill="rgb(217,38,32)"/><text x="29.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.47%)</title><rect x="26" y="932" width="5" height="15" fill="rgb(230,6,17)"/><text x="29.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.47%)</title><rect x="26" y="948" width="5" height="15" fill="rgb(239,59,27)"/><text x="29.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.47%)</title><rect x="26" y="964" width="5" height="15" fill="rgb(240,114,43)"/><text x="29.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.47%)</title><rect x="26" y="980" width="5" height="15" fill="rgb(247,117,14)"/><text x="29.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:118) (1 samples, 0.47%)</title><rect x="26" y="996" width="5" height="15" fill="rgb(247,65,6)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.40%)</title><rect x="20" y="820" width="17" height="15" fill="rgb(243,84,35)"/><text x="23.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.40%)</title><rect x="20" y="836" width="17" height="15" fill="rgb(248,89,46)"/><text x="23.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.93%)</title><rect x="26" y="852" width="11" height="15" fill="rgb(214,189,16)"/><text x="29.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.93%)</title><rect x="26" y="868" width="11" height="15" fill="rgb(217,30,32)"/><text x="29.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.47%)</title><rect x="31" y="884" width="6" height="15" fill="rgb(242,148,15)"/><text x="34.00" y="894.50"></text></g><g><title>join (posixpath.py:89) (1 samples, 0.47%)</title><rect x="31" y="900" width="6" height="15" fill="rgb(226,33,29)"/><text x="34.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_sigmoid_b_reg_kernelsigmoid.py:2) (4 samples, 1.86%)</title><rect x="20" y="148" width="22" height="15" fill="rgb(247,229,43)"/><text x="23.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="164" width="22" height="15" fill="rgb(219,108,0)"/><text x="23.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.86%)</title><rect x="20" y="180" width="22" height="15" fill="rgb(240,81,37)"/><text x="23.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="196" width="22" height="15" fill="rgb(215,99,30)"/><text x="23.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="212" width="22" height="15" fill="rgb(233,26,49)"/><text x="23.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.86%)</title><rect x="20" y="228" width="22" height="15" fill="rgb(232,4,8)"/><text x="23.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.86%)</title><rect x="20" y="244" width="22" height="15" fill="rgb(244,151,8)"/><text x="23.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.86%)</title><rect x="20" y="260" width="22" height="15" fill="rgb(209,185,31)"/><text x="23.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="276" width="22" height="15" fill="rgb(229,96,9)"/><text x="23.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.86%)</title><rect x="20" y="292" width="22" height="15" fill="rgb(227,7,23)"/><text x="23.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="308" width="22" height="15" fill="rgb(226,8,51)"/><text x="23.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.86%)</title><rect x="20" y="324" width="22" height="15" fill="rgb(228,72,5)"/><text x="23.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.86%)</title><rect x="20" y="340" width="22" height="15" fill="rgb(234,59,47)"/><text x="23.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.86%)</title><rect x="20" y="356" width="22" height="15" fill="rgb(218,225,1)"/><text x="23.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="372" width="22" height="15" fill="rgb(239,211,24)"/><text x="23.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.86%)</title><rect x="20" y="388" width="22" height="15" fill="rgb(236,22,28)"/><text x="23.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="404" width="22" height="15" fill="rgb(209,81,0)"/><text x="23.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.86%)</title><rect x="20" y="420" width="22" height="15" fill="rgb(234,19,8)"/><text x="23.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.86%)</title><rect x="20" y="436" width="22" height="15" fill="rgb(220,78,51)"/><text x="23.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.86%)</title><rect x="20" y="452" width="22" height="15" fill="rgb(229,129,8)"/><text x="23.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="468" width="22" height="15" fill="rgb(228,101,48)"/><text x="23.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.86%)</title><rect x="20" y="484" width="22" height="15" fill="rgb(252,131,49)"/><text x="23.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="500" width="22" height="15" fill="rgb(248,220,40)"/><text x="23.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.86%)</title><rect x="20" y="516" width="22" height="15" fill="rgb(239,87,3)"/><text x="23.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.86%)</title><rect x="20" y="532" width="22" height="15" fill="rgb(230,105,29)"/><text x="23.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.86%)</title><rect x="20" y="548" width="22" height="15" fill="rgb(247,147,40)"/><text x="23.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="564" width="22" height="15" fill="rgb(247,45,34)"/><text x="23.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.86%)</title><rect x="20" y="580" width="22" height="15" fill="rgb(234,65,0)"/><text x="23.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="596" width="22" height="15" fill="rgb(231,1,9)"/><text x="23.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.86%)</title><rect x="20" y="612" width="22" height="15" fill="rgb(236,70,11)"/><text x="23.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="628" width="22" height="15" fill="rgb(240,101,42)"/><text x="23.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="644" width="22" height="15" fill="rgb(231,134,1)"/><text x="23.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.86%)</title><rect x="20" y="660" width="22" height="15" fill="rgb(239,84,4)"/><text x="23.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.86%)</title><rect x="20" y="676" width="22" height="15" fill="rgb(210,89,32)"/><text x="23.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.86%)</title><rect x="20" y="692" width="22" height="15" fill="rgb(209,62,46)"/><text x="23.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="708" width="22" height="15" fill="rgb(231,3,23)"/><text x="23.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.86%)</title><rect x="20" y="724" width="22" height="15" fill="rgb(211,4,30)"/><text x="23.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="20" y="740" width="22" height="15" fill="rgb(210,193,22)"/><text x="23.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.86%)</title><rect x="20" y="756" width="22" height="15" fill="rgb(226,168,48)"/><text x="23.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.86%)</title><rect x="20" y="772" width="22" height="15" fill="rgb(240,30,52)"/><text x="23.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.86%)</title><rect x="20" y="788" width="22" height="15" fill="rgb(212,48,45)"/><text x="23.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="20" y="804" width="22" height="15" fill="rgb(237,20,9)"/><text x="23.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.47%)</title><rect x="37" y="820" width="5" height="15" fill="rgb(243,109,50)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="37" y="836" width="5" height="15" fill="rgb(251,41,43)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="37" y="852" width="5" height="15" fill="rgb(230,178,30)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="37" y="868" width="5" height="15" fill="rgb(240,163,52)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="37" y="884" width="5" height="15" fill="rgb(226,131,30)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="37" y="900" width="5" height="15" fill="rgb(218,102,31)"/><text x="40.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.47%)</title><rect x="37" y="916" width="5" height="15" fill="rgb(226,114,48)"/><text x="40.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.47%)</title><rect x="37" y="932" width="5" height="15" fill="rgb(246,18,49)"/><text x="40.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.47%)</title><rect x="37" y="948" width="5" height="15" fill="rgb(241,37,21)"/><text x="40.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.47%)</title><rect x="37" y="964" width="5" height="15" fill="rgb(237,44,10)"/><text x="40.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.47%)</title><rect x="37" y="980" width="5" height="15" fill="rgb(224,58,16)"/><text x="40.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.47%)</title><rect x="37" y="996" width="5" height="15" fill="rgb(205,101,44)"/><text x="40.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.47%)</title><rect x="37" y="1012" width="5" height="15" fill="rgb(217,119,19)"/><text x="40.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.47%)</title><rect x="37" y="1028" width="5" height="15" fill="rgb(248,210,39)"/><text x="40.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.47%)</title><rect x="37" y="1044" width="5" height="15" fill="rgb(219,160,17)"/><text x="40.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.47%)</title><rect x="37" y="1060" width="5" height="15" fill="rgb(250,62,26)"/><text x="40.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.47%)</title><rect x="37" y="1076" width="5" height="15" fill="rgb(224,55,52)"/><text x="40.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.47%)</title><rect x="37" y="1092" width="5" height="15" fill="rgb(236,159,43)"/><text x="40.00" y="1102.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.47%)</title><rect x="37" y="1108" width="5" height="15" fill="rgb(249,90,28)"/><text x="40.00" y="1118.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.47%)</title><rect x="37" y="1124" width="5" height="15" fill="rgb(213,20,53)"/><text x="40.00" y="1134.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.47%)</title><rect x="42" y="772" width="6" height="15" fill="rgb(235,213,23)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="42" y="788" width="6" height="15" fill="rgb(238,88,36)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="42" y="804" width="6" height="15" fill="rgb(243,151,6)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="42" y="820" width="6" height="15" fill="rgb(206,24,44)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="42" y="836" width="6" height="15" fill="rgb(211,73,0)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="42" y="852" width="6" height="15" fill="rgb(231,203,40)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:19) (1 samples, 0.47%)</title><rect x="42" y="868" width="6" height="15" fill="rgb(209,83,44)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="42" y="884" width="6" height="15" fill="rgb(245,190,30)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="42" y="900" width="6" height="15" fill="rgb(230,60,30)"/><text x="45.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="42" y="916" width="6" height="15" fill="rgb(234,210,37)"/><text x="45.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.47%)</title><rect x="42" y="932" width="6" height="15" fill="rgb(246,176,25)"/><text x="45.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.47%)</title><rect x="42" y="948" width="6" height="15" fill="rgb(241,135,17)"/><text x="45.00" y="958.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:459) (1 samples, 0.47%)</title><rect x="42" y="964" width="6" height="15" fill="rgb(227,126,5)"/><text x="45.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.93%)</title><rect x="42" y="244" width="11" height="15" fill="rgb(223,64,44)"/><text x="45.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="42" y="260" width="11" height="15" fill="rgb(210,24,54)"/><text x="45.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="42" y="276" width="11" height="15" fill="rgb(215,195,15)"/><text x="45.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="42" y="292" width="11" height="15" fill="rgb(235,58,19)"/><text x="45.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="42" y="308" width="11" height="15" fill="rgb(226,224,39)"/><text x="45.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="42" y="324" width="11" height="15" fill="rgb(243,4,31)"/><text x="45.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.93%)</title><rect x="42" y="340" width="11" height="15" fill="rgb(232,169,4)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="42" y="356" width="11" height="15" fill="rgb(242,165,2)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.93%)</title><rect x="42" y="372" width="11" height="15" fill="rgb(227,138,1)"/><text x="45.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="42" y="388" width="11" height="15" fill="rgb(216,95,16)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="42" y="404" width="11" height="15" fill="rgb(227,181,35)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="42" y="420" width="11" height="15" fill="rgb(232,190,50)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="42" y="436" width="11" height="15" fill="rgb(222,6,1)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="42" y="452" width="11" height="15" fill="rgb(253,22,36)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="42" y="468" width="11" height="15" fill="rgb(213,123,45)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.93%)</title><rect x="42" y="484" width="11" height="15" fill="rgb(216,152,42)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="42" y="500" width="11" height="15" fill="rgb(216,186,31)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="42" y="516" width="11" height="15" fill="rgb(243,154,25)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="42" y="532" width="11" height="15" fill="rgb(233,40,17)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="42" y="548" width="11" height="15" fill="rgb(210,201,19)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="42" y="564" width="11" height="15" fill="rgb(242,61,30)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.93%)</title><rect x="42" y="580" width="11" height="15" fill="rgb(214,38,21)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="42" y="596" width="11" height="15" fill="rgb(220,188,1)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="42" y="612" width="11" height="15" fill="rgb(235,122,1)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="42" y="628" width="11" height="15" fill="rgb(234,191,37)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="42" y="644" width="11" height="15" fill="rgb(251,130,28)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="42" y="660" width="11" height="15" fill="rgb(248,140,1)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.93%)</title><rect x="42" y="676" width="11" height="15" fill="rgb(216,109,38)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="42" y="692" width="11" height="15" fill="rgb(235,78,14)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="42" y="708" width="11" height="15" fill="rgb(217,183,42)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="42" y="724" width="11" height="15" fill="rgb(209,154,11)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="42" y="740" width="11" height="15" fill="rgb(215,120,53)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="42" y="756" width="11" height="15" fill="rgb(234,167,49)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.47%)</title><rect x="48" y="772" width="5" height="15" fill="rgb(251,187,10)"/><text x="51.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="48" y="788" width="5" height="15" fill="rgb(239,185,16)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="804" width="5" height="15" fill="rgb(224,20,46)"/><text x="51.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="820" width="5" height="15" fill="rgb(214,11,16)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="48" y="836" width="5" height="15" fill="rgb(238,163,52)"/><text x="51.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="48" y="852" width="5" height="15" fill="rgb(211,74,36)"/><text x="51.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="48" y="868" width="5" height="15" fill="rgb(236,35,44)"/><text x="51.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="884" width="5" height="15" fill="rgb(208,178,44)"/><text x="51.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.47%)</title><rect x="48" y="900" width="5" height="15" fill="rgb(233,148,8)"/><text x="51.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="916" width="5" height="15" fill="rgb(218,229,3)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="48" y="932" width="5" height="15" fill="rgb(242,51,21)"/><text x="51.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="948" width="5" height="15" fill="rgb(243,63,45)"/><text x="51.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="964" width="5" height="15" fill="rgb(224,130,32)"/><text x="51.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="48" y="980" width="5" height="15" fill="rgb(246,147,54)"/><text x="51.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="48" y="996" width="5" height="15" fill="rgb(222,80,20)"/><text x="51.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="48" y="1012" width="5" height="15" fill="rgb(237,79,49)"/><text x="51.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1028" width="5" height="15" fill="rgb(232,213,10)"/><text x="51.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.47%)</title><rect x="48" y="1044" width="5" height="15" fill="rgb(250,54,21)"/><text x="51.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="48" y="1060" width="5" height="15" fill="rgb(237,98,43)"/><text x="51.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1076" width="5" height="15" fill="rgb(212,107,5)"/><text x="51.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="1092" width="5" height="15" fill="rgb(227,96,46)"/><text x="51.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="48" y="1108" width="5" height="15" fill="rgb(242,109,16)"/><text x="51.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="48" y="1124" width="5" height="15" fill="rgb(250,23,11)"/><text x="51.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="48" y="1140" width="5" height="15" fill="rgb(251,218,44)"/><text x="51.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1156" width="5" height="15" fill="rgb(241,140,45)"/><text x="51.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.47%)</title><rect x="48" y="1172" width="5" height="15" fill="rgb(253,115,17)"/><text x="51.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="48" y="1188" width="5" height="15" fill="rgb(215,156,35)"/><text x="51.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1204" width="5" height="15" fill="rgb(216,180,44)"/><text x="51.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="1220" width="5" height="15" fill="rgb(240,95,42)"/><text x="51.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="48" y="1236" width="5" height="15" fill="rgb(230,61,39)"/><text x="51.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="48" y="1252" width="5" height="15" fill="rgb(250,63,3)"/><text x="51.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="48" y="1268" width="5" height="15" fill="rgb(208,160,18)"/><text x="51.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1284" width="5" height="15" fill="rgb(237,180,27)"/><text x="51.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.47%)</title><rect x="48" y="1300" width="5" height="15" fill="rgb(213,146,18)"/><text x="51.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="1316" width="5" height="15" fill="rgb(223,56,33)"/><text x="51.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="48" y="1332" width="5" height="15" fill="rgb(246,32,38)"/><text x="51.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="48" y="1348" width="5" height="15" fill="rgb(251,93,6)"/><text x="51.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="48" y="1364" width="5" height="15" fill="rgb(209,36,50)"/><text x="51.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1380" width="5" height="15" fill="rgb(246,207,18)"/><text x="51.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:18) (1 samples, 0.47%)</title><rect x="48" y="1396" width="5" height="15" fill="rgb(239,192,44)"/><text x="51.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="1412" width="5" height="15" fill="rgb(243,56,49)"/><text x="51.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="48" y="1428" width="5" height="15" fill="rgb(220,25,34)"/><text x="51.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="48" y="1444" width="5" height="15" fill="rgb(229,211,36)"/><text x="51.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="48" y="1460" width="5" height="15" fill="rgb(225,117,8)"/><text x="51.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1476" width="5" height="15" fill="rgb(246,85,30)"/><text x="51.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:20) (1 samples, 0.47%)</title><rect x="48" y="1492" width="5" height="15" fill="rgb(209,30,38)"/><text x="51.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="48" y="1508" width="5" height="15" fill="rgb(219,68,52)"/><text x="51.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1524" width="5" height="15" fill="rgb(211,229,4)"/><text x="51.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="1540" width="5" height="15" fill="rgb(243,169,24)"/><text x="51.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="48" y="1556" width="5" height="15" fill="rgb(234,30,54)"/><text x="51.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="48" y="1572" width="5" height="15" fill="rgb(223,19,54)"/><text x="51.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="48" y="1588" width="5" height="15" fill="rgb(235,122,42)"/><text x="51.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1604" width="5" height="15" fill="rgb(206,83,41)"/><text x="51.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/constant_time.py:11) (1 samples, 0.47%)</title><rect x="48" y="1620" width="5" height="15" fill="rgb(225,179,22)"/><text x="51.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="1636" width="5" height="15" fill="rgb(220,170,5)"/><text x="51.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="48" y="1652" width="5" height="15" fill="rgb(238,218,24)"/><text x="51.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="48" y="1668" width="5" height="15" fill="rgb(217,19,48)"/><text x="51.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="48" y="1684" width="5" height="15" fill="rgb(246,223,13)"/><text x="51.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.47%)</title><rect x="48" y="1700" width="5" height="15" fill="rgb(240,194,3)"/><text x="51.00" y="1710.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.47%)</title><rect x="48" y="1716" width="5" height="15" fill="rgb(230,185,45)"/><text x="51.00" y="1726.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.47%)</title><rect x="48" y="1732" width="5" height="15" fill="rgb(239,137,53)"/><text x="51.00" y="1742.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.47%)</title><rect x="48" y="1748" width="5" height="15" fill="rgb(229,92,5)"/><text x="51.00" y="1758.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.47%)</title><rect x="48" y="1764" width="5" height="15" fill="rgb(208,5,18)"/><text x="51.00" y="1774.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.47%)</title><rect x="48" y="1780" width="5" height="15" fill="rgb(208,36,13)"/><text x="51.00" y="1790.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.47%)</title><rect x="48" y="1796" width="5" height="15" fill="rgb(220,151,47)"/><text x="51.00" y="1806.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.47%)</title><rect x="48" y="1812" width="5" height="15" fill="rgb(223,89,43)"/><text x="51.00" y="1822.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.47%)</title><rect x="48" y="1828" width="5" height="15" fill="rgb(225,221,8)"/><text x="51.00" y="1838.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.47%)</title><rect x="48" y="1844" width="5" height="15" fill="rgb(245,9,11)"/><text x="51.00" y="1854.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.47%)</title><rect x="53" y="1108" width="6" height="15" fill="rgb(226,43,17)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="53" y="1124" width="6" height="15" fill="rgb(247,139,41)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="53" y="1140" width="6" height="15" fill="rgb(225,132,54)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="53" y="1156" width="6" height="15" fill="rgb(222,133,52)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="53" y="1172" width="6" height="15" fill="rgb(211,19,37)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="53" y="1188" width="6" height="15" fill="rgb(233,187,40)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.47%)</title><rect x="53" y="1204" width="6" height="15" fill="rgb(218,94,36)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="53" y="1220" width="6" height="15" fill="rgb(209,94,40)"/><text x="56.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.47%)</title><rect x="53" y="1236" width="6" height="15" fill="rgb(218,217,15)"/><text x="56.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="53" y="1252" width="6" height="15" fill="rgb(254,27,28)"/><text x="56.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="53" y="1268" width="6" height="15" fill="rgb(217,152,4)"/><text x="56.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.47%)</title><rect x="53" y="1284" width="6" height="15" fill="rgb(242,132,45)"/><text x="56.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.47%)</title><rect x="53" y="1300" width="6" height="15" fill="rgb(215,179,6)"/><text x="56.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.47%)</title><rect x="53" y="1316" width="6" height="15" fill="rgb(238,117,51)"/><text x="56.00" y="1326.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.47%)</title><rect x="53" y="1332" width="6" height="15" fill="rgb(224,120,31)"/><text x="56.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.47%)</title><rect x="53" y="1348" width="6" height="15" fill="rgb(224,161,41)"/><text x="56.00" y="1358.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.47%)</title><rect x="53" y="1364" width="6" height="15" fill="rgb(210,158,42)"/><text x="56.00" y="1374.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.47%)</title><rect x="53" y="1380" width="6" height="15" fill="rgb(243,82,38)"/><text x="56.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:4) (10 samples, 4.65%)</title><rect x="10" y="52" width="54" height="15" fill="rgb(253,107,4)"/><text x="13.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 4.65%)</title><rect x="10" y="68" width="54" height="15" fill="rgb(218,21,31)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 4.65%)</title><rect x="10" y="84" width="54" height="15" fill="rgb(208,206,49)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 4.65%)</title><rect x="10" y="100" width="54" height="15" fill="rgb(212,110,20)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 4.65%)</title><rect x="10" y="116" width="54" height="15" fill="rgb(221,172,41)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 4.65%)</title><rect x="10" y="132" width="54" height="15" fill="rgb(251,23,8)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_sigmoid_b_reg_kernelsigmoid.py:7) (4 samples, 1.86%)</title><rect x="42" y="148" width="22" height="15" fill="rgb(242,167,24)"/><text x="45.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.86%)</title><rect x="42" y="164" width="22" height="15" fill="rgb(246,45,33)"/><text x="45.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.86%)</title><rect x="42" y="180" width="22" height="15" fill="rgb(251,100,41)"/><text x="45.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.86%)</title><rect x="42" y="196" width="22" height="15" fill="rgb(236,122,6)"/><text x="45.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.86%)</title><rect x="42" y="212" width="22" height="15" fill="rgb(240,209,1)"/><text x="45.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.86%)</title><rect x="42" y="228" width="22" height="15" fill="rgb(222,40,44)"/><text x="45.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (2 samples, 0.93%)</title><rect x="53" y="244" width="11" height="15" fill="rgb(215,109,54)"/><text x="56.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="260" width="11" height="15" fill="rgb(247,132,48)"/><text x="56.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="276" width="11" height="15" fill="rgb(215,2,30)"/><text x="56.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="292" width="11" height="15" fill="rgb(228,187,48)"/><text x="56.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="308" width="11" height="15" fill="rgb(238,90,12)"/><text x="56.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="324" width="11" height="15" fill="rgb(218,114,15)"/><text x="56.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (2 samples, 0.93%)</title><rect x="53" y="340" width="11" height="15" fill="rgb(247,155,37)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="356" width="11" height="15" fill="rgb(235,219,35)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="372" width="11" height="15" fill="rgb(247,0,5)"/><text x="56.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="388" width="11" height="15" fill="rgb(212,41,51)"/><text x="56.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="404" width="11" height="15" fill="rgb(226,213,21)"/><text x="56.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="420" width="11" height="15" fill="rgb(251,127,51)"/><text x="56.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.93%)</title><rect x="53" y="436" width="11" height="15" fill="rgb(248,124,24)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="452" width="11" height="15" fill="rgb(229,87,47)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.93%)</title><rect x="53" y="468" width="11" height="15" fill="rgb(248,101,50)"/><text x="56.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="484" width="11" height="15" fill="rgb(221,208,7)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="500" width="11" height="15" fill="rgb(205,121,2)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="516" width="11" height="15" fill="rgb(213,31,21)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="532" width="11" height="15" fill="rgb(253,191,15)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="548" width="11" height="15" fill="rgb(241,110,4)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="564" width="11" height="15" fill="rgb(209,55,21)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.93%)</title><rect x="53" y="580" width="11" height="15" fill="rgb(253,135,46)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="596" width="11" height="15" fill="rgb(246,65,6)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="612" width="11" height="15" fill="rgb(229,120,22)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="628" width="11" height="15" fill="rgb(230,208,0)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="644" width="11" height="15" fill="rgb(244,138,19)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="660" width="11" height="15" fill="rgb(223,87,6)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.93%)</title><rect x="53" y="676" width="11" height="15" fill="rgb(220,132,51)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="692" width="11" height="15" fill="rgb(249,146,46)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="708" width="11" height="15" fill="rgb(227,7,15)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="724" width="11" height="15" fill="rgb(253,148,52)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="740" width="11" height="15" fill="rgb(216,7,53)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="756" width="11" height="15" fill="rgb(220,48,16)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.93%)</title><rect x="53" y="772" width="11" height="15" fill="rgb(244,4,42)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="788" width="11" height="15" fill="rgb(231,195,17)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="804" width="11" height="15" fill="rgb(217,110,41)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="820" width="11" height="15" fill="rgb(222,182,33)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="836" width="11" height="15" fill="rgb(219,90,27)"/><text x="56.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="852" width="11" height="15" fill="rgb(244,8,27)"/><text x="56.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.93%)</title><rect x="53" y="868" width="11" height="15" fill="rgb(242,188,16)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="884" width="11" height="15" fill="rgb(209,0,54)"/><text x="56.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.93%)</title><rect x="53" y="900" width="11" height="15" fill="rgb(207,180,18)"/><text x="56.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="916" width="11" height="15" fill="rgb(249,22,4)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="932" width="11" height="15" fill="rgb(242,86,53)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="948" width="11" height="15" fill="rgb(213,89,37)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="964" width="11" height="15" fill="rgb(228,2,19)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="980" width="11" height="15" fill="rgb(246,215,21)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="996" width="11" height="15" fill="rgb(213,179,26)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.93%)</title><rect x="53" y="1012" width="11" height="15" fill="rgb(225,90,32)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.93%)</title><rect x="53" y="1028" width="11" height="15" fill="rgb(250,24,16)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.93%)</title><rect x="53" y="1044" width="11" height="15" fill="rgb(233,184,49)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.93%)</title><rect x="53" y="1060" width="11" height="15" fill="rgb(210,53,15)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.93%)</title><rect x="53" y="1076" width="11" height="15" fill="rgb(240,15,49)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.93%)</title><rect x="53" y="1092" width="11" height="15" fill="rgb(242,115,39)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.47%)</title><rect x="59" y="1108" width="5" height="15" fill="rgb(247,229,39)"/><text x="62.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="59" y="1124" width="5" height="15" fill="rgb(245,13,52)"/><text x="62.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="59" y="1140" width="5" height="15" fill="rgb(237,157,38)"/><text x="62.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="59" y="1156" width="5" height="15" fill="rgb(222,9,29)"/><text x="62.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="59" y="1172" width="5" height="15" fill="rgb(254,20,23)"/><text x="62.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="59" y="1188" width="5" height="15" fill="rgb(253,138,1)"/><text x="62.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="59" y="1204" width="5" height="15" fill="rgb(213,76,45)"/><text x="62.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="59" y="1220" width="5" height="15" fill="rgb(225,30,5)"/><text x="62.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.47%)</title><rect x="59" y="1236" width="5" height="15" fill="rgb(251,12,24)"/><text x="62.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.47%)</title><rect x="59" y="1252" width="5" height="15" fill="rgb(249,93,33)"/><text x="62.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="59" y="1268" width="5" height="15" fill="rgb(219,17,15)"/><text x="62.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="59" y="1284" width="5" height="15" fill="rgb(219,65,24)"/><text x="62.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="59" y="1300" width="5" height="15" fill="rgb(235,65,27)"/><text x="62.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="59" y="1316" width="5" height="15" fill="rgb(226,187,17)"/><text x="62.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="59" y="1332" width="5" height="15" fill="rgb(254,219,24)"/><text x="62.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="59" y="1348" width="5" height="15" fill="rgb(223,147,30)"/><text x="62.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.47%)</title><rect x="59" y="1364" width="5" height="15" fill="rgb(217,58,5)"/><text x="62.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.47%)</title><rect x="59" y="1380" width="5" height="15" fill="rgb(234,129,44)"/><text x="62.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.47%)</title><rect x="59" y="1396" width="5" height="15" fill="rgb(213,107,31)"/><text x="62.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.47%)</title><rect x="59" y="1412" width="5" height="15" fill="rgb(253,106,12)"/><text x="62.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.47%)</title><rect x="59" y="1428" width="5" height="15" fill="rgb(207,95,35)"/><text x="62.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.47%)</title><rect x="59" y="1444" width="5" height="15" fill="rgb(236,45,31)"/><text x="62.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.47%)</title><rect x="59" y="1460" width="5" height="15" fill="rgb(232,192,27)"/><text x="62.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.47%)</title><rect x="59" y="1476" width="5" height="15" fill="rgb(218,53,20)"/><text x="62.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:117) (1 samples, 0.47%)</title><rect x="59" y="1492" width="5" height="15" fill="rgb(226,117,32)"/><text x="62.00" y="1502.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.47%)</title><rect x="75" y="116" width="6" height="15" fill="rgb(239,93,27)"/><text x="78.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.47%)</title><rect x="75" y="132" width="6" height="15" fill="rgb(234,157,21)"/><text x="78.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.47%)</title><rect x="75" y="148" width="6" height="15" fill="rgb(212,91,11)"/><text x="78.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.47%)</title><rect x="103" y="180" width="5" height="15" fill="rgb(210,199,44)"/><text x="106.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 1.40%)</title><rect x="108" y="196" width="17" height="15" fill="rgb(243,156,36)"/><text x="111.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 3.26%)</title><rect x="125" y="196" width="38" height="15" fill="rgb(222,160,22)"/><text x="128.00" y="206.50">&lt;li..</text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.40%)</title><rect x="147" y="212" width="16" height="15" fill="rgb(226,23,2)"/><text x="150.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (15 samples, 6.98%)</title><rect x="103" y="164" width="82" height="15" fill="rgb(237,146,53)"/><text x="106.00" y="174.50">_validate..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 6.51%)</title><rect x="108" y="180" width="77" height="15" fill="rgb(238,156,1)"/><text x="111.00" y="190.50">check_is..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.86%)</title><rect x="163" y="196" width="22" height="15" fill="rgb(223,166,5)"/><text x="166.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.93%)</title><rect x="174" y="212" width="11" height="15" fill="rgb(249,93,18)"/><text x="177.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.47%)</title><rect x="185" y="180" width="6" height="15" fill="rgb(252,34,19)"/><text x="188.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.47%)</title><rect x="191" y="180" width="5" height="15" fill="rgb(253,158,30)"/><text x="194.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.47%)</title><rect x="196" y="196" width="6" height="15" fill="rgb(249,120,52)"/><text x="199.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.93%)</title><rect x="202" y="196" width="11" height="15" fill="rgb(224,40,33)"/><text x="205.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.93%)</title><rect x="213" y="196" width="11" height="15" fill="rgb(216,222,2)"/><text x="216.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 2.79%)</title><rect x="196" y="180" width="33" height="15" fill="rgb(209,34,44)"/><text x="199.00" y="190.50">ch..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.47%)</title><rect x="224" y="196" width="5" height="15" fill="rgb(223,27,41)"/><text x="227.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (9 samples, 4.19%)</title><rect x="240" y="212" width="49" height="15" fill="rgb(228,186,46)"/><text x="243.00" y="222.50">_add..</text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.47%)</title><rect x="289" y="212" width="6" height="15" fill="rgb(232,204,52)"/><text x="292.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (13 samples, 6.05%)</title><rect x="229" y="180" width="71" height="15" fill="rgb(240,208,40)"/><text x="232.00" y="190.50">check_ar..</text></g><g><title>simplefilter (warnings.py:179) (12 samples, 5.58%)</title><rect x="235" y="196" width="65" height="15" fill="rgb(229,226,18)"/><text x="238.00" y="206.50">simplef..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.47%)</title><rect x="295" y="212" width="5" height="15" fill="rgb(231,169,46)"/><text x="298.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.40%)</title><rect x="306" y="212" width="16" height="15" fill="rgb(217,180,19)"/><text x="309.00" y="222.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:553) (1 samples, 0.47%)</title><rect x="317" y="228" width="5" height="15" fill="rgb(215,32,48)"/><text x="320.00" y="238.50"></text></g><g><title>arrays_overlap (array_assign.c:158) (1 samples, 0.47%)</title><rect x="322" y="292" width="6" height="15" fill="rgb(237,34,34)"/><text x="325.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (2 samples, 0.93%)</title><rect x="322" y="276" width="11" height="15" fill="rgb(230,36,26)"/><text x="325.00" y="286.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.47%)</title><rect x="328" y="292" width="5" height="15" fill="rgb(229,140,54)"/><text x="331.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.47%)</title><rect x="328" y="308" width="5" height="15" fill="rgb(243,77,38)"/><text x="331.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.47%)</title><rect x="333" y="292" width="6" height="15" fill="rgb(219,105,47)"/><text x="336.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.47%)</title><rect x="333" y="308" width="6" height="15" fill="rgb(236,215,27)"/><text x="336.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.47%)</title><rect x="333" y="324" width="6" height="15" fill="rgb(239,130,13)"/><text x="336.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.47%)</title><rect x="339" y="292" width="5" height="15" fill="rgb(224,9,23)"/><text x="342.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (9 samples, 4.19%)</title><rect x="300" y="180" width="50" height="15" fill="rgb(205,97,53)"/><text x="303.00" y="190.50">check..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (9 samples, 4.19%)</title><rect x="300" y="196" width="50" height="15" fill="rgb(215,108,8)"/><text x="303.00" y="206.50">asarr..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (5 samples, 2.33%)</title><rect x="322" y="212" width="28" height="15" fill="rgb(240,132,24)"/><text x="325.00" y="222.50">_..</text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (5 samples, 2.33%)</title><rect x="322" y="228" width="28" height="15" fill="rgb(236,22,50)"/><text x="325.00" y="238.50">P..</text></g><g><title>PyArray_FromAny (ctors.c:1966) (5 samples, 2.33%)</title><rect x="322" y="244" width="28" height="15" fill="rgb(242,84,27)"/><text x="325.00" y="254.50">P..</text></g><g><title>PyArray_FromArray (ctors.c:2172) (5 samples, 2.33%)</title><rect x="322" y="260" width="28" height="15" fill="rgb(235,44,20)"/><text x="325.00" y="270.50">P..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.40%)</title><rect x="333" y="276" width="17" height="15" fill="rgb(247,160,31)"/><text x="336.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.47%)</title><rect x="344" y="292" width="6" height="15" fill="rgb(230,28,52)"/><text x="347.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.47%)</title><rect x="344" y="308" width="6" height="15" fill="rgb(219,140,26)"/><text x="347.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.47%)</title><rect x="344" y="324" width="6" height="15" fill="rgb(212,191,25)"/><text x="347.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.47%)</title><rect x="350" y="180" width="5" height="15" fill="rgb(224,93,39)"/><text x="353.00" y="190.50"></text></g><g><title>0x7f661e17a151 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="383" y="212" width="5" height="15" fill="rgb(232,5,2)"/><text x="386.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.40%)</title><rect x="388" y="212" width="17" height="15" fill="rgb(249,127,53)"/><text x="391.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.47%)</title><rect x="405" y="212" width="5" height="15" fill="rgb(226,3,17)"/><text x="408.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (11 samples, 5.12%)</title><rect x="355" y="196" width="61" height="15" fill="rgb(235,170,34)"/><text x="358.00" y="206.50">_asser..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.47%)</title><rect x="410" y="212" width="6" height="15" fill="rgb(245,153,39)"/><text x="413.00" y="222.50"></text></g><g><title>0x7f661e0ad6d0 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="410" y="228" width="6" height="15" fill="rgb(238,51,30)"/><text x="413.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (13 samples, 6.05%)</title><rect x="355" y="180" width="72" height="15" fill="rgb(218,143,32)"/><text x="358.00" y="190.50">check_ar..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.93%)</title><rect x="416" y="196" width="11" height="15" fill="rgb(238,12,26)"/><text x="419.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.47%)</title><rect x="421" y="212" width="6" height="15" fill="rgb(254,172,38)"/><text x="424.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.40%)</title><rect x="432" y="196" width="17" height="15" fill="rgb(231,99,32)"/><text x="435.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.47%)</title><rect x="443" y="212" width="6" height="15" fill="rgb(219,136,45)"/><text x="446.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.47%)</title><rect x="449" y="196" width="5" height="15" fill="rgb(236,131,18)"/><text x="452.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.47%)</title><rect x="454" y="196" width="6" height="15" fill="rgb(246,11,30)"/><text x="457.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.47%)</title><rect x="460" y="196" width="5" height="15" fill="rgb(225,137,6)"/><text x="463.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (53 samples, 24.65%)</title><rect x="185" y="164" width="291" height="15" fill="rgb(243,5,40)"/><text x="188.00" y="174.50">_validate_for_predict (sklearn/svm/_bas..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 4.19%)</title><rect x="427" y="180" width="49" height="15" fill="rgb(251,223,49)"/><text x="430.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.93%)</title><rect x="465" y="196" width="11" height="15" fill="rgb(205,9,29)"/><text x="468.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.93%)</title><rect x="465" y="212" width="11" height="15" fill="rgb(236,129,30)"/><text x="468.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.47%)</title><rect x="471" y="228" width="5" height="15" fill="rgb(209,4,14)"/><text x="474.00" y="238.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:448) (1 samples, 0.47%)</title><rect x="476" y="164" width="6" height="15" fill="rgb(212,204,54)"/><text x="479.00" y="174.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (2 samples, 0.93%)</title><rect x="482" y="164" width="10" height="15" fill="rgb(238,68,15)"/><text x="485.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.47%)</title><rect x="487" y="180" width="5" height="15" fill="rgb(243,111,1)"/><text x="490.00" y="190.50"></text></g><g><title>predict (sklearn/svm/_base.py:315) (72 samples, 33.49%)</title><rect x="103" y="148" width="395" height="15" fill="rgb(210,30,12)"/><text x="106.00" y="158.50">predict (sklearn/svm/_base.py:315)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:457) (1 samples, 0.47%)</title><rect x="492" y="164" width="6" height="15" fill="rgb(220,157,13)"/><text x="495.00" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:320) (1 samples, 0.47%)</title><rect x="503" y="164" width="6" height="15" fill="rgb(235,144,32)"/><text x="506.00" y="174.50"></text></g><g><title>_compute_kernel (sklearn/svm/_base.py:366) (1 samples, 0.47%)</title><rect x="503" y="180" width="6" height="15" fill="rgb(249,69,45)"/><text x="506.00" y="190.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:332) (1 samples, 0.47%)</title><rect x="509" y="164" width="5" height="15" fill="rgb(227,49,41)"/><text x="512.00" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:334) (1 samples, 0.47%)</title><rect x="514" y="164" width="6" height="15" fill="rgb(239,24,11)"/><text x="517.00" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:335) (1 samples, 0.47%)</title><rect x="520" y="164" width="5" height="15" fill="rgb(208,146,46)"/><text x="523.00" y="174.50"></text></g><g><title>0x7f65f8b911dd (?) (1 samples, 0.47%)</title><rect x="531" y="180" width="5" height="15" fill="rgb(246,139,37)"/><text x="534.00" y="190.50"></text></g><g><title>0x7f65f8b8f357 (?) (1 samples, 0.47%)</title><rect x="531" y="196" width="5" height="15" fill="rgb(213,174,22)"/><text x="534.00" y="206.50"></text></g><g><title>0x7f65f8b74e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="536" y="212" width="6" height="15" fill="rgb(224,30,17)"/><text x="539.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.47%)</title><rect x="536" y="228" width="6" height="15" fill="rgb(221,220,4)"/><text x="539.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.47%)</title><rect x="536" y="244" width="6" height="15" fill="rgb(228,206,31)"/><text x="539.00" y="254.50"></text></g><g><title>0x7f65f8b8ed86 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="536" y="196" width="11" height="15" fill="rgb(239,193,34)"/><text x="539.00" y="206.50"></text></g><g><title>0x7f65f8b74f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="542" y="212" width="5" height="15" fill="rgb(206,102,20)"/><text x="545.00" y="222.50"></text></g><g><title>0x7f65f8b7433c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="542" y="228" width="5" height="15" fill="rgb(220,158,53)"/><text x="545.00" y="238.50"></text></g><g><title>0x7f65f8b73b63 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="542" y="244" width="5" height="15" fill="rgb(252,62,9)"/><text x="545.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.47%)</title><rect x="547" y="260" width="6" height="15" fill="rgb(229,89,52)"/><text x="550.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="547" y="276" width="6" height="15" fill="rgb(226,79,49)"/><text x="550.00" y="286.50"></text></g><g><title>0x7f65f8b8edcc (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="547" y="196" width="11" height="15" fill="rgb(235,97,28)"/><text x="550.00" y="206.50"></text></g><g><title>0x7f65f8b745ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="547" y="212" width="11" height="15" fill="rgb(210,23,0)"/><text x="550.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.93%)</title><rect x="547" y="228" width="11" height="15" fill="rgb(219,181,15)"/><text x="550.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.93%)</title><rect x="547" y="244" width="11" height="15" fill="rgb(248,212,33)"/><text x="550.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:522) (1 samples, 0.47%)</title><rect x="553" y="260" width="5" height="15" fill="rgb(211,68,12)"/><text x="556.00" y="270.50"></text></g><g><title>0x7f661d2bf0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="553" y="276" width="5" height="15" fill="rgb(250,41,40)"/><text x="556.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.47%)</title><rect x="558" y="244" width="6" height="15" fill="rgb(238,211,54)"/><text x="561.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.47%)</title><rect x="558" y="260" width="6" height="15" fill="rgb(246,24,2)"/><text x="561.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.47%)</title><rect x="558" y="276" width="6" height="15" fill="rgb(245,44,46)"/><text x="561.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:206) (1 samples, 0.47%)</title><rect x="558" y="292" width="6" height="15" fill="rgb(225,216,26)"/><text x="561.00" y="302.50"></text></g><g><title>0x7f65f8b8ee4d (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="558" y="196" width="11" height="15" fill="rgb(233,211,13)"/><text x="561.00" y="206.50"></text></g><g><title>0x7f65f8b745ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="558" y="212" width="11" height="15" fill="rgb(244,199,19)"/><text x="561.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.93%)</title><rect x="558" y="228" width="11" height="15" fill="rgb(222,35,9)"/><text x="561.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.47%)</title><rect x="564" y="244" width="5" height="15" fill="rgb(222,92,43)"/><text x="567.00" y="254.50"></text></g><g><title>0x7f65f8b8ef1c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="569" y="196" width="6" height="15" fill="rgb(220,165,30)"/><text x="572.00" y="206.50"></text></g><g><title>0x7f65f8b74e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="569" y="212" width="6" height="15" fill="rgb(209,70,40)"/><text x="572.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.47%)</title><rect x="569" y="228" width="6" height="15" fill="rgb(207,37,10)"/><text x="572.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.47%)</title><rect x="569" y="244" width="6" height="15" fill="rgb(237,69,47)"/><text x="572.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.47%)</title><rect x="569" y="260" width="6" height="15" fill="rgb(220,153,13)"/><text x="572.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="569" y="276" width="6" height="15" fill="rgb(237,151,38)"/><text x="572.00" y="286.50"></text></g><g><title>0x7f65f8b8ef67 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="575" y="196" width="5" height="15" fill="rgb(238,61,38)"/><text x="578.00" y="206.50"></text></g><g><title>0x7f65f8b74e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="575" y="212" width="5" height="15" fill="rgb(225,146,2)"/><text x="578.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.47%)</title><rect x="575" y="228" width="5" height="15" fill="rgb(242,196,52)"/><text x="578.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.47%)</title><rect x="575" y="244" width="5" height="15" fill="rgb(253,69,2)"/><text x="578.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:575) (1 samples, 0.47%)</title><rect x="575" y="260" width="5" height="15" fill="rgb(225,15,31)"/><text x="578.00" y="270.50"></text></g><g><title>0x7f65f8b8efb2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="580" y="196" width="6" height="15" fill="rgb(254,120,53)"/><text x="583.00" y="206.50"></text></g><g><title>0x7f65f8b74e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="580" y="212" width="6" height="15" fill="rgb(244,189,40)"/><text x="583.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:748) (1 samples, 0.47%)</title><rect x="580" y="228" width="6" height="15" fill="rgb(236,58,16)"/><text x="583.00" y="238.50"></text></g><g><title>0x7f65f8b8f042 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="586" y="196" width="5" height="15" fill="rgb(212,156,5)"/><text x="589.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (3 samples, 1.40%)</title><rect x="591" y="212" width="17" height="15" fill="rgb(225,227,33)"/><text x="594.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.47%)</title><rect x="602" y="228" width="6" height="15" fill="rgb(236,120,33)"/><text x="605.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.47%)</title><rect x="602" y="244" width="6" height="15" fill="rgb(208,44,24)"/><text x="605.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.47%)</title><rect x="602" y="260" width="6" height="15" fill="rgb(241,156,14)"/><text x="605.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.47%)</title><rect x="602" y="276" width="6" height="15" fill="rgb(218,182,2)"/><text x="605.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4564) (1 samples, 0.47%)</title><rect x="602" y="292" width="6" height="15" fill="rgb(249,103,50)"/><text x="605.00" y="302.50"></text></g><g><title>_calc_length (ctors.c:3251) (1 samples, 0.47%)</title><rect x="608" y="244" width="5" height="15" fill="rgb(232,209,27)"/><text x="611.00" y="254.50"></text></g><g><title>0x7f65f8b8f17f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.33%)</title><rect x="591" y="196" width="28" height="15" fill="rgb(254,100,40)"/><text x="594.00" y="206.50">0..</text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.93%)</title><rect x="608" y="212" width="11" height="15" fill="rgb(254,154,37)"/><text x="611.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (2 samples, 0.93%)</title><rect x="608" y="228" width="11" height="15" fill="rgb(248,91,9)"/><text x="611.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3285) (1 samples, 0.47%)</title><rect x="613" y="244" width="6" height="15" fill="rgb(213,203,0)"/><text x="616.00" y="254.50"></text></g><g><title>0x7f65f8b8f281 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="619" y="196" width="5" height="15" fill="rgb(221,131,0)"/><text x="622.00" y="206.50"></text></g><g><title>0x7f65f8b75ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="619" y="212" width="5" height="15" fill="rgb(219,40,32)"/><text x="622.00" y="222.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.47%)</title><rect x="624" y="244" width="6" height="15" fill="rgb(233,3,44)"/><text x="627.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.47%)</title><rect x="624" y="260" width="6" height="15" fill="rgb(231,84,53)"/><text x="627.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="624" y="276" width="6" height="15" fill="rgb(233,126,2)"/><text x="627.00" y="286.50"></text></g><g><title>0x7f661e09e700 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="624" y="292" width="6" height="15" fill="rgb(225,224,35)"/><text x="627.00" y="302.50"></text></g><g><title>0x7f661e09baa4 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="624" y="308" width="6" height="15" fill="rgb(205,103,0)"/><text x="627.00" y="318.50"></text></g><g><title>0x7f65f8b8f4c8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.40%)</title><rect x="624" y="196" width="17" height="15" fill="rgb(230,136,11)"/><text x="627.00" y="206.50"></text></g><g><title>0x7f65f8b74e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.40%)</title><rect x="624" y="212" width="17" height="15" fill="rgb(212,69,40)"/><text x="627.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.40%)</title><rect x="624" y="228" width="17" height="15" fill="rgb(232,178,34)"/><text x="627.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (2 samples, 0.93%)</title><rect x="630" y="244" width="11" height="15" fill="rgb(229,49,50)"/><text x="633.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="244" width="5" height="15" fill="rgb(216,39,19)"/><text x="644.00" y="254.50"></text></g><g><title>0x7f661e09e700 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="260" width="5" height="15" fill="rgb(205,164,44)"/><text x="644.00" y="270.50"></text></g><g><title>0x7f661e09bad5 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="276" width="5" height="15" fill="rgb(211,89,15)"/><text x="644.00" y="286.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="657" y="260" width="6" height="15" fill="rgb(235,93,18)"/><text x="660.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="657" y="276" width="6" height="15" fill="rgb(253,52,37)"/><text x="660.00" y="286.50"></text></g><g><title>0x7f65f8b8f4f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 5.12%)</title><rect x="641" y="196" width="60" height="15" fill="rgb(225,145,22)"/><text x="644.00" y="206.50">0x7f65..</text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 5.12%)</title><rect x="641" y="212" width="60" height="15" fill="rgb(228,45,41)"/><text x="644.00" y="222.50">copy_p..</text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 5.12%)</title><rect x="641" y="228" width="60" height="15" fill="rgb(244,160,20)"/><text x="644.00" y="238.50">svm_pr..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 4.65%)</title><rect x="646" y="244" width="55" height="15" fill="rgb(251,56,41)"/><text x="649.00" y="254.50">svm_p..</text></g><g><title>tanhf32x (libm-2.29.so) (7 samples, 3.26%)</title><rect x="663" y="260" width="38" height="15" fill="rgb(234,176,24)"/><text x="666.00" y="270.50">tan..</text></g><g><title>expm1f64 (libm-2.29.so) (5 samples, 2.33%)</title><rect x="674" y="276" width="27" height="15" fill="rgb(248,0,27)"/><text x="677.00" y="286.50">e..</text></g><g><title>0x7f65f8b8f50d (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="701" y="196" width="6" height="15" fill="rgb(243,155,44)"/><text x="704.00" y="206.50"></text></g><g><title>free_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="701" y="212" width="6" height="15" fill="rgb(246,59,2)"/><text x="704.00" y="222.50"></text></g><g><title>0x7f661e09cf71 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="701" y="228" width="6" height="15" fill="rgb(238,201,43)"/><text x="704.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.47%)</title><rect x="707" y="212" width="5" height="15" fill="rgb(216,206,47)"/><text x="710.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.47%)</title><rect x="707" y="228" width="5" height="15" fill="rgb(236,50,5)"/><text x="710.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.47%)</title><rect x="707" y="244" width="5" height="15" fill="rgb(252,186,49)"/><text x="710.00" y="254.50"></text></g><g><title>0x7f65f8b8f752 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="707" y="196" width="11" height="15" fill="rgb(234,155,4)"/><text x="710.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.47%)</title><rect x="712" y="212" width="6" height="15" fill="rgb(224,88,1)"/><text x="715.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (2 samples, 0.93%)</title><rect x="718" y="260" width="10" height="15" fill="rgb(212,182,24)"/><text x="721.00" y="270.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (3 samples, 1.40%)</title><rect x="718" y="244" width="16" height="15" fill="rgb(235,162,17)"/><text x="721.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.47%)</title><rect x="728" y="260" width="6" height="15" fill="rgb(252,131,15)"/><text x="731.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:932) (1 samples, 0.47%)</title><rect x="728" y="276" width="6" height="15" fill="rgb(237,198,45)"/><text x="731.00" y="286.50"></text></g><g><title>PyArray_Empty (ctors.c:3099) (1 samples, 0.47%)</title><rect x="734" y="276" width="5" height="15" fill="rgb(207,170,7)"/><text x="737.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.47%)</title><rect x="734" y="292" width="5" height="15" fill="rgb(231,52,31)"/><text x="737.00" y="302.50"></text></g><g><title>0x7f65f8b8fcec (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.33%)</title><rect x="718" y="196" width="27" height="15" fill="rgb(241,100,19)"/><text x="721.00" y="206.50">0..</text></g><g><title>0x7f65f8b6e9a1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.33%)</title><rect x="718" y="212" width="27" height="15" fill="rgb(209,37,12)"/><text x="721.00" y="222.50">0..</text></g><g><title>0x7f65f8b72fdf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.33%)</title><rect x="718" y="228" width="27" height="15" fill="rgb(208,181,32)"/><text x="721.00" y="238.50">0..</text></g><g><title>array_empty (multiarraymodule.c:1837) (2 samples, 0.93%)</title><rect x="734" y="244" width="11" height="15" fill="rgb(207,27,4)"/><text x="737.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.93%)</title><rect x="734" y="260" width="11" height="15" fill="rgb(234,157,51)"/><text x="737.00" y="270.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.47%)</title><rect x="739" y="276" width="6" height="15" fill="rgb(220,35,4)"/><text x="742.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.47%)</title><rect x="739" y="292" width="6" height="15" fill="rgb(245,0,34)"/><text x="742.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.47%)</title><rect x="739" y="308" width="6" height="15" fill="rgb(223,215,22)"/><text x="742.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (118 samples, 54.88%)</title><rect x="103" y="132" width="647" height="15" fill="rgb(230,83,40)"/><text x="106.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/svm/_base.py:317) (46 samples, 21.40%)</title><rect x="498" y="148" width="252" height="15" fill="rgb(207,85,19)"/><text x="501.00" y="158.50">predict (sklearn/svm/_base.py:317)</text></g><g><title>_dense_predict (sklearn/svm/_base.py:339) (41 samples, 19.07%)</title><rect x="525" y="164" width="225" height="15" fill="rgb(213,30,45)"/><text x="528.00" y="174.50">_dense_predict (sklearn/svm/_..</text></g><g><title>0x7f65f8b911dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (39 samples, 18.14%)</title><rect x="536" y="180" width="214" height="15" fill="rgb(228,82,10)"/><text x="539.00" y="190.50">0x7f65f8b911dd (sklearn/svm/..</text></g><g><title>0x7f65f8b9026c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="745" y="196" width="5" height="15" fill="rgb(240,123,31)"/><text x="748.00" y="206.50"></text></g><g><title>0x7f65f8b745ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="745" y="212" width="5" height="15" fill="rgb(212,57,41)"/><text x="748.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:787) (1 samples, 0.47%)</title><rect x="745" y="228" width="5" height="15" fill="rgb(241,125,54)"/><text x="748.00" y="238.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.47%)</title><rect x="750" y="132" width="6" height="15" fill="rgb(237,192,13)"/><text x="753.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:54) (127 samples, 59.07%)</title><rect x="64" y="52" width="697" height="15" fill="rgb(229,41,31)"/><text x="67.00" y="62.50">&lt;module&gt; (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:53) (127 samples, 59.07%)</title><rect x="64" y="68" width="697" height="15" fill="rgb(249,180,22)"/><text x="67.00" y="78.50">profile_skl (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:37) (127 samples, 59.07%)</title><rect x="64" y="84" width="697" height="15" fill="rgb(224,88,51)"/><text x="67.00" y="94.50">setup_profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:37)</text></g><g><title>profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:31) (127 samples, 59.07%)</title><rect x="64" y="100" width="697" height="15" fill="rgb(208,212,44)"/><text x="67.00" y="110.50">profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (124 samples, 57.67%)</title><rect x="81" y="116" width="680" height="15" fill="rgb(235,162,51)"/><text x="84.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="756" y="132" width="5" height="15" fill="rgb(251,33,4)"/><text x="759.00" y="142.50"></text></g><g><title>0x7f65df0268f0 (?) (1 samples, 0.47%)</title><rect x="761" y="244" width="6" height="15" fill="rgb(248,4,0)"/><text x="764.00" y="254.50"></text></g><g><title>0x7f65df02a64e (?) (1 samples, 0.47%)</title><rect x="761" y="260" width="6" height="15" fill="rgb(241,83,3)"/><text x="764.00" y="270.50"></text></g><g><title>0x7f65df02a506 (?) (1 samples, 0.47%)</title><rect x="761" y="276" width="6" height="15" fill="rgb(228,74,1)"/><text x="764.00" y="286.50"></text></g><g><title>0x7f65df021b9b (?) (1 samples, 0.47%)</title><rect x="761" y="292" width="6" height="15" fill="rgb(218,159,30)"/><text x="764.00" y="302.50"></text></g><g><title>0x7f65e8094ab9 (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="761" y="308" width="6" height="15" fill="rgb(229,8,47)"/><text x="764.00" y="318.50"></text></g><g><title>0x7f65e8095ea9 (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="761" y="324" width="6" height="15" fill="rgb(247,86,36)"/><text x="764.00" y="334.50"></text></g><g><title>0x7f65e8095ea0 (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="767" y="468" width="5" height="15" fill="rgb(252,130,29)"/><text x="770.00" y="478.50"></text></g><g><title>0x7f65e8095ea9 (libgomp.so.1.0.0) (9 samples, 4.19%)</title><rect x="772" y="468" width="50" height="15" fill="rgb(253,1,28)"/><text x="775.00" y="478.50">0x7f6..</text></g><g><title>0x7f65e8095eab (libgomp.so.1.0.0) (7 samples, 3.26%)</title><rect x="822" y="468" width="38" height="15" fill="rgb(228,161,37)"/><text x="825.00" y="478.50">0x7..</text></g><g><title>0x7f65e8094ab9 (libgomp.so.1.0.0) (25 samples, 11.63%)</title><rect x="767" y="452" width="137" height="15" fill="rgb(219,151,40)"/><text x="770.00" y="462.50">0x7f65e8094ab9 (l..</text></g><g><title>0x7f65e8095ead (libgomp.so.1.0.0) (8 samples, 3.72%)</title><rect x="860" y="468" width="44" height="15" fill="rgb(238,110,14)"/><text x="863.00" y="478.50">0x7f..</text></g><g><title>0x7f65e8095cf0 (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="904" y="484" width="6" height="15" fill="rgb(223,217,48)"/><text x="907.00" y="494.50"></text></g><g><title>0x7f65e8095cf9 (libgomp.so.1.0.0) (2 samples, 0.93%)</title><rect x="910" y="484" width="11" height="15" fill="rgb(224,45,25)"/><text x="913.00" y="494.50"></text></g><g><title>0x7f65e8095cfb (libgomp.so.1.0.0) (3 samples, 1.40%)</title><rect x="921" y="484" width="16" height="15" fill="rgb(253,50,13)"/><text x="924.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:61) (33 samples, 15.35%)</title><rect x="761" y="52" width="182" height="15" fill="rgb(212,144,4)"/><text x="764.00" y="62.50">&lt;module&gt; (bench_SVR_sig..</text></g><g><title>profile_pyrt (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:60) (33 samples, 15.35%)</title><rect x="761" y="68" width="182" height="15" fill="rgb(206,202,20)"/><text x="764.00" y="78.50">profile_pyrt (bench_SVR..</text></g><g><title>setup_profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:37) (33 samples, 15.35%)</title><rect x="761" y="84" width="182" height="15" fill="rgb(227,121,31)"/><text x="764.00" y="94.50">setup_profile (bench_SV..</text></g><g><title>profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:31) (33 samples, 15.35%)</title><rect x="761" y="100" width="182" height="15" fill="rgb(206,53,26)"/><text x="764.00" y="110.50">profile (bench_SVR_sigm..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (33 samples, 15.35%)</title><rect x="761" y="116" width="182" height="15" fill="rgb(239,163,30)"/><text x="764.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (33 samples, 15.35%)</title><rect x="761" y="132" width="182" height="15" fill="rgb(206,209,33)"/><text x="764.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (33 samples, 15.35%)</title><rect x="761" y="148" width="182" height="15" fill="rgb(241,64,20)"/><text x="764.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (33 samples, 15.35%)</title><rect x="761" y="164" width="182" height="15" fill="rgb(222,92,4)"/><text x="764.00" y="174.50">_run_sequence_runtime (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (33 samples, 15.35%)</title><rect x="761" y="180" width="182" height="15" fill="rgb(219,53,29)"/><text x="764.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (33 samples, 15.35%)</title><rect x="761" y="196" width="182" height="15" fill="rgb(251,132,10)"/><text x="764.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (33 samples, 15.35%)</title><rect x="761" y="212" width="182" height="15" fill="rgb(222,148,32)"/><text x="764.00" y="222.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_regressor.py:59) (33 samples, 15.35%)</title><rect x="761" y="228" width="182" height="15" fill="rgb(240,85,24)"/><text x="764.00" y="238.50">_run (mlprodict/onnxrt/..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (32 samples, 14.88%)</title><rect x="767" y="244" width="176" height="15" fill="rgb(221,57,38)"/><text x="770.00" y="254.50">pybind11::cpp_function..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (32 samples, 14.88%)</title><rect x="767" y="260" width="176" height="15" fill="rgb(249,17,7)"/><text x="770.00" y="270.50">void pybind11::cpp_fun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (32 samples, 14.88%)</title><rect x="767" y="276" width="176" height="15" fill="rgb(245,86,46)"/><text x="770.00" y="286.50">void pybind11::cpp_fun..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (32 samples, 14.88%)</title><rect x="767" y="292" width="176" height="15" fill="rgb(222,174,17)"/><text x="770.00" y="302.50">pybind11::detail::argu..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (32 samples, 14.88%)</title><rect x="767" y="308" width="176" height="15" fill="rgb(226,154,36)"/><text x="770.00" y="318.50">pybind11::detail::argu..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (32 samples, 14.88%)</title><rect x="767" y="324" width="176" height="15" fill="rgb(211,91,0)"/><text x="770.00" y="334.50">pybind11::cpp_function..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (32 samples, 14.88%)</title><rect x="767" y="340" width="176" height="15" fill="rgb(239,101,27)"/><text x="770.00" y="350.50">pybind11::array_t&lt;floa..</text></g><g><title>pybind11::array::~array (numpy.h:538) (32 samples, 14.88%)</title><rect x="767" y="356" width="176" height="15" fill="rgb(254,12,35)"/><text x="770.00" y="366.50">pybind11::array::~arra..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (32 samples, 14.88%)</title><rect x="767" y="372" width="176" height="15" fill="rgb(208,41,23)"/><text x="770.00" y="382.50">pybind11::buffer::~buf..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (32 samples, 14.88%)</title><rect x="767" y="388" width="176" height="15" fill="rgb(220,123,34)"/><text x="770.00" y="398.50">pybind11::object::~obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (32 samples, 14.88%)</title><rect x="767" y="404" width="176" height="15" fill="rgb(213,53,0)"/><text x="770.00" y="414.50">pybind11::handle::dec_..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp:179) (32 samples, 14.88%)</title><rect x="767" y="420" width="176" height="15" fill="rgb(224,214,32)"/><text x="770.00" y="430.50">RuntimeSVMRegressor&lt;fl..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (32 samples, 14.88%)</title><rect x="767" y="436" width="176" height="15" fill="rgb(226,191,1)"/><text x="770.00" y="446.50">pybind11::gil_scoped_r..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (7 samples, 3.26%)</title><rect x="904" y="452" width="39" height="15" fill="rgb(223,202,28)"/><text x="907.00" y="462.50">GOM..</text></g><g><title>0x7f65e8093daa (libgomp.so.1.0.0) (7 samples, 3.26%)</title><rect x="904" y="468" width="39" height="15" fill="rgb(243,79,53)"/><text x="907.00" y="478.50">0x7..</text></g><g><title>0x7f65e8095cfd (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="937" y="484" width="6" height="15" fill="rgb(250,5,44)"/><text x="940.00" y="494.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.47%)</title><rect x="948" y="148" width="6" height="15" fill="rgb(206,20,15)"/><text x="951.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.93%)</title><rect x="948" y="116" width="11" height="15" fill="rgb(209,18,33)"/><text x="951.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.93%)</title><rect x="948" y="132" width="11" height="15" fill="rgb(224,28,44)"/><text x="951.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.47%)</title><rect x="954" y="148" width="5" height="15" fill="rgb(227,184,38)"/><text x="957.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.47%)</title><rect x="959" y="116" width="5" height="15" fill="rgb(253,42,53)"/><text x="962.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.47%)</title><rect x="959" y="132" width="5" height="15" fill="rgb(239,80,45)"/><text x="962.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.47%)</title><rect x="975" y="148" width="6" height="15" fill="rgb(246,83,28)"/><text x="978.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.47%)</title><rect x="981" y="196" width="5" height="15" fill="rgb(212,166,31)"/><text x="984.00" y="206.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1003" y="260" width="5" height="15" fill="rgb(229,32,5)"/><text x="1006.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 2.33%)</title><rect x="986" y="196" width="28" height="15" fill="rgb(249,45,14)"/><text x="989.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.86%)</title><rect x="992" y="212" width="22" height="15" fill="rgb(235,125,15)"/><text x="995.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1003" y="228" width="11" height="15" fill="rgb(237,134,9)"/><text x="1006.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1003" y="244" width="11" height="15" fill="rgb(251,174,36)"/><text x="1006.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1008" y="260" width="6" height="15" fill="rgb(246,141,17)"/><text x="1011.00" y="270.50"></text></g><g><title>0x7f65de14cff9 (?) (1 samples, 0.47%)</title><rect x="1019" y="212" width="6" height="15" fill="rgb(240,132,34)"/><text x="1022.00" y="222.50"></text></g><g><title>0x7f65de147ef6 (?) (1 samples, 0.47%)</title><rect x="1019" y="228" width="6" height="15" fill="rgb(245,100,20)"/><text x="1022.00" y="238.50"></text></g><g><title>0x7f65de13cd49 (?) (1 samples, 0.47%)</title><rect x="1019" y="244" width="6" height="15" fill="rgb(248,146,51)"/><text x="1022.00" y="254.50"></text></g><g><title>0x7f65de14ac1a (?) (1 samples, 0.47%)</title><rect x="1019" y="260" width="6" height="15" fill="rgb(249,144,36)"/><text x="1022.00" y="270.50"></text></g><g><title>0x7f65de56fe0e (?) (1 samples, 0.47%)</title><rect x="1019" y="276" width="6" height="15" fill="rgb(214,180,31)"/><text x="1022.00" y="286.50"></text></g><g><title>0x7f65de5b2f61 (?) (1 samples, 0.47%)</title><rect x="1019" y="292" width="6" height="15" fill="rgb(252,66,23)"/><text x="1022.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1030" y="228" width="6" height="15" fill="rgb(225,145,51)"/><text x="1033.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1047" y="292" width="11" height="15" fill="rgb(208,229,0)"/><text x="1050.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1047" y="308" width="11" height="15" fill="rgb(247,208,25)"/><text x="1050.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1047" y="324" width="11" height="15" fill="rgb(223,34,53)"/><text x="1050.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="1052" y="340" width="6" height="15" fill="rgb(214,35,13)"/><text x="1055.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1052" y="356" width="6" height="15" fill="rgb(218,171,10)"/><text x="1055.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1058" y="292" width="5" height="15" fill="rgb(225,212,23)"/><text x="1061.00" y="302.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1058" y="308" width="5" height="15" fill="rgb(221,54,3)"/><text x="1061.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1063" y="340" width="6" height="15" fill="rgb(237,161,47)"/><text x="1066.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1063" y="356" width="6" height="15" fill="rgb(216,61,31)"/><text x="1066.00" y="366.50"></text></g><g><title>0x7f660db697a0 (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="1074" y="356" width="6" height="15" fill="rgb(249,59,31)"/><text x="1077.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1080" y="484" width="5" height="15" fill="rgb(221,43,50)"/><text x="1083.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1080" y="500" width="5" height="15" fill="rgb(208,181,8)"/><text x="1083.00" y="510.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="356" width="11" height="15" fill="rgb(227,142,3)"/><text x="1083.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="372" width="11" height="15" fill="rgb(211,107,52)"/><text x="1083.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="388" width="11" height="15" fill="rgb(205,115,0)"/><text x="1083.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="404" width="11" height="15" fill="rgb(219,141,21)"/><text x="1083.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="420" width="11" height="15" fill="rgb(241,115,27)"/><text x="1083.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="436" width="11" height="15" fill="rgb(213,103,12)"/><text x="1083.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="452" width="11" height="15" fill="rgb(205,211,44)"/><text x="1083.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1080" y="468" width="11" height="15" fill="rgb(214,64,22)"/><text x="1083.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1085" y="484" width="6" height="15" fill="rgb(209,112,52)"/><text x="1088.00" y="494.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="1085" y="500" width="6" height="15" fill="rgb(215,25,13)"/><text x="1088.00" y="510.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.19%)</title><rect x="1063" y="308" width="50" height="15" fill="rgb(207,140,32)"/><text x="1066.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.19%)</title><rect x="1063" y="324" width="50" height="15" fill="rgb(230,69,5)"/><text x="1066.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::ml::SVMRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.72%)</title><rect x="1069" y="340" width="44" height="15" fill="rgb(231,85,38)"/><text x="1072.00" y="350.50">onnx..</text></g><g><title>tanhf32x (libm-2.29.so) (4 samples, 1.86%)</title><rect x="1091" y="356" width="22" height="15" fill="rgb(236,170,51)"/><text x="1094.00" y="366.50">t..</text></g><g><title>expm1f64 (libm-2.29.so) (4 samples, 1.86%)</title><rect x="1091" y="372" width="22" height="15" fill="rgb(210,152,52)"/><text x="1094.00" y="382.50">e..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 6.05%)</title><rect x="1047" y="260" width="71" height="15" fill="rgb(229,128,28)"/><text x="1050.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 6.05%)</title><rect x="1047" y="276" width="71" height="15" fill="rgb(223,82,23)"/><text x="1050.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.65%)</title><rect x="1063" y="292" width="55" height="15" fill="rgb(230,72,51)"/><text x="1066.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1113" y="308" width="5" height="15" fill="rgb(210,214,4)"/><text x="1116.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.47%)</title><rect x="1118" y="292" width="6" height="15" fill="rgb(236,198,26)"/><text x="1121.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.47%)</title><rect x="1118" y="308" width="6" height="15" fill="rgb(249,63,11)"/><text x="1121.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="1118" y="260" width="11" height="15" fill="rgb(252,88,30)"/><text x="1121.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.93%)</title><rect x="1118" y="276" width="11" height="15" fill="rgb(234,219,41)"/><text x="1121.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.47%)</title><rect x="1124" y="292" width="5" height="15" fill="rgb(236,78,46)"/><text x="1127.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.47%)</title><rect x="1124" y="308" width="5" height="15" fill="rgb(233,178,22)"/><text x="1127.00" y="318.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1129" y="260" width="6" height="15" fill="rgb(228,196,53)"/><text x="1132.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1129" y="276" width="6" height="15" fill="rgb(229,138,44)"/><text x="1132.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 9.77%)</title><rect x="1041" y="244" width="116" height="15" fill="rgb(236,163,4)"/><text x="1044.00" y="254.50">onnxruntime::p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.86%)</title><rect x="1135" y="260" width="22" height="15" fill="rgb(220,119,30)"/><text x="1138.00" y="270.50">s..</text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.86%)</title><rect x="1135" y="276" width="22" height="15" fill="rgb(246,1,32)"/><text x="1138.00" y="286.50">o..</text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.86%)</title><rect x="1135" y="292" width="22" height="15" fill="rgb(224,17,15)"/><text x="1138.00" y="302.50">o..</text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.40%)</title><rect x="1140" y="308" width="17" height="15" fill="rgb(206,142,12)"/><text x="1143.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1151" y="324" width="6" height="15" fill="rgb(238,34,32)"/><text x="1154.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1151" y="340" width="6" height="15" fill="rgb(217,208,44)"/><text x="1154.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1151" y="356" width="6" height="15" fill="rgb(210,212,47)"/><text x="1154.00" y="366.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1157" y="244" width="5" height="15" fill="rgb(221,164,40)"/><text x="1160.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1157" y="260" width="5" height="15" fill="rgb(239,54,54)"/><text x="1160.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (34 samples, 15.81%)</title><rect x="981" y="164" width="187" height="15" fill="rgb(217,29,34)"/><text x="984.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (34 samples, 15.81%)</title><rect x="981" y="180" width="187" height="15" fill="rgb(224,33,19)"/><text x="984.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py:136) (28 samples, 13.02%)</title><rect x="1014" y="196" width="154" height="15" fill="rgb(252,81,53)"/><text x="1017.00" y="206.50">run (onnxruntime/ca..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 12.09%)</title><rect x="1025" y="212" width="143" height="15" fill="rgb(213,66,16)"/><text x="1028.00" y="222.50">pybind11::cpp_func..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 11.16%)</title><rect x="1036" y="228" width="132" height="15" fill="rgb(205,49,54)"/><text x="1039.00" y="238.50">void pybind11::c..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1162" y="244" width="6" height="15" fill="rgb(214,212,21)"/><text x="1165.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="1162" y="260" width="6" height="15" fill="rgb(207,89,30)"/><text x="1165.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (38 samples, 17.67%)</title><rect x="975" y="132" width="209" height="15" fill="rgb(211,5,37)"/><text x="978.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (37 samples, 17.21%)</title><rect x="981" y="148" width="203" height="15" fill="rgb(217,12,24)"/><text x="984.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.40%)</title><rect x="1168" y="164" width="16" height="15" fill="rgb(250,221,6)"/><text x="1171.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.47%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(221,14,27)"/><text x="1182.00" y="190.50"></text></g><g><title>all (215 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(248,72,8)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:68) (45 samples, 20.93%)</title><rect x="943" y="52" width="247" height="15" fill="rgb(212,23,39)"/><text x="946.00" y="62.50">&lt;module&gt; (bench_SVR_sigmoid_b_re..</text></g><g><title>profile_ort (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:67) (45 samples, 20.93%)</title><rect x="943" y="68" width="247" height="15" fill="rgb(244,79,27)"/><text x="946.00" y="78.50">profile_ort (bench_SVR_sigmoid_b..</text></g><g><title>setup_profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:37) (45 samples, 20.93%)</title><rect x="943" y="84" width="247" height="15" fill="rgb(213,107,0)"/><text x="946.00" y="94.50">setup_profile (bench_SVR_sigmoid..</text></g><g><title>profile (bench_SVR_sigmoid_b_reg_kernelsigmoid_1_4_12_float_.py:31) (45 samples, 20.93%)</title><rect x="943" y="100" width="247" height="15" fill="rgb(254,163,49)"/><text x="946.00" y="110.50">profile (bench_SVR_sigmoid_b_reg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (41 samples, 19.07%)</title><rect x="964" y="116" width="226" height="15" fill="rgb(239,12,48)"/><text x="967.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(207,102,16)"/><text x="1187.00" y="142.50"></text></g></g></svg>