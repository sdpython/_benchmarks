<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(229,82,41)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(219,160,7)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(243,203,31)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(217,29,3)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(238,169,19)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(244,34,42)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(219,88,50)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(224,141,8)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(218,211,28)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(208,87,42)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(220,46,1)"/><text x="13.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.27%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(207,84,36)"/><text x="13.00" y="1054.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(219,123,34)"/><text x="13.00" y="1070.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(242,23,54)"/><text x="16.00" y="926.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(243,113,5)"/><text x="19.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(235,30,13)"/><text x="19.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.55%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(235,41,10)"/><text x="19.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(224,187,6)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(232,3,51)"/><text x="22.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(242,165,12)"/><text x="22.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(248,105,17)"/><text x="22.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(251,60,43)"/><text x="22.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(233,137,27)"/><text x="22.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.27%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(243,71,32)"/><text x="22.00" y="1054.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.27%)</title><rect x="19" y="1060" width="3" height="15" fill="rgb(205,4,53)"/><text x="22.00" y="1070.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.27%)</title><rect x="19" y="1076" width="3" height="15" fill="rgb(231,53,37)"/><text x="22.00" y="1086.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 1.09%)</title><rect x="13" y="868" width="13" height="15" fill="rgb(205,193,47)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 1.09%)</title><rect x="13" y="884" width="13" height="15" fill="rgb(239,93,9)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.09%)</title><rect x="13" y="900" width="13" height="15" fill="rgb(224,190,46)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.82%)</title><rect x="16" y="916" width="10" height="15" fill="rgb(240,43,54)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(230,187,31)"/><text x="25.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(242,52,15)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(252,221,13)"/><text x="25.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.64%)</title><rect x="10" y="836" width="19" height="15" fill="rgb(223,106,38)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.64%)</title><rect x="10" y="852" width="19" height="15" fill="rgb(217,186,34)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(246,61,35)"/><text x="29.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(238,210,47)"/><text x="29.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(246,76,47)"/><text x="29.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(232,13,7)"/><text x="29.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(237,19,19)"/><text x="29.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(234,116,11)"/><text x="29.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(239,63,31)"/><text x="29.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.91%)</title><rect x="10" y="292" width="22" height="15" fill="rgb(230,59,27)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="308" width="22" height="15" fill="rgb(248,91,17)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="324" width="22" height="15" fill="rgb(218,102,48)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="340" width="22" height="15" fill="rgb(214,212,31)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.91%)</title><rect x="10" y="356" width="22" height="15" fill="rgb(212,178,14)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="372" width="22" height="15" fill="rgb(223,30,4)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.91%)</title><rect x="10" y="388" width="22" height="15" fill="rgb(235,147,47)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="404" width="22" height="15" fill="rgb(206,120,35)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="420" width="22" height="15" fill="rgb(212,172,49)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="436" width="22" height="15" fill="rgb(249,218,36)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.91%)</title><rect x="10" y="452" width="22" height="15" fill="rgb(244,69,5)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="468" width="22" height="15" fill="rgb(216,10,23)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.91%)</title><rect x="10" y="484" width="22" height="15" fill="rgb(232,138,12)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="500" width="22" height="15" fill="rgb(224,147,12)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="516" width="22" height="15" fill="rgb(244,90,28)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="532" width="22" height="15" fill="rgb(238,55,22)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.91%)</title><rect x="10" y="548" width="22" height="15" fill="rgb(217,11,5)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="564" width="22" height="15" fill="rgb(229,217,27)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.91%)</title><rect x="10" y="580" width="22" height="15" fill="rgb(252,4,16)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="596" width="22" height="15" fill="rgb(211,3,7)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="612" width="22" height="15" fill="rgb(254,123,1)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="628" width="22" height="15" fill="rgb(222,166,50)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="644" width="22" height="15" fill="rgb(236,85,39)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="660" width="22" height="15" fill="rgb(253,190,27)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="676" width="22" height="15" fill="rgb(234,112,9)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.91%)</title><rect x="10" y="692" width="22" height="15" fill="rgb(210,172,15)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="708" width="22" height="15" fill="rgb(223,197,31)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.91%)</title><rect x="10" y="724" width="22" height="15" fill="rgb(224,60,19)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="740" width="22" height="15" fill="rgb(254,122,18)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="756" width="22" height="15" fill="rgb(225,161,54)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="772" width="22" height="15" fill="rgb(252,32,12)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.91%)</title><rect x="10" y="788" width="22" height="15" fill="rgb(213,139,14)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.91%)</title><rect x="10" y="804" width="22" height="15" fill="rgb(222,103,7)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.91%)</title><rect x="10" y="820" width="22" height="15" fill="rgb(223,160,48)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(217,130,35)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(211,186,17)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(248,137,29)"/><text x="32.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(235,13,50)"/><text x="32.00" y="894.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(205,54,50)"/><text x="32.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="916" width="3" height="15" fill="rgb(211,203,13)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="932" width="3" height="15" fill="rgb(236,215,21)"/><text x="35.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="948" width="3" height="15" fill="rgb(244,148,37)"/><text x="35.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="32" y="964" width="3" height="15" fill="rgb(247,132,25)"/><text x="35.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="980" width="3" height="15" fill="rgb(241,194,16)"/><text x="35.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.27%)</title><rect x="32" y="996" width="3" height="15" fill="rgb(254,86,46)"/><text x="35.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="1012" width="3" height="15" fill="rgb(205,42,14)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="1028" width="3" height="15" fill="rgb(218,187,53)"/><text x="35.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="1044" width="3" height="15" fill="rgb(223,158,47)"/><text x="35.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="32" y="1060" width="3" height="15" fill="rgb(224,7,38)"/><text x="35.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="1076" width="3" height="15" fill="rgb(231,41,26)"/><text x="35.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/misc/__init__.py) (1 samples, 0.27%)</title><rect x="32" y="1092" width="3" height="15" fill="rgb(234,72,54)"/><text x="35.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="1108" width="3" height="15" fill="rgb(230,206,18)"/><text x="35.00" y="1118.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="32" y="1124" width="3" height="15" fill="rgb(215,172,1)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.46%)</title><rect x="10" y="196" width="29" height="15" fill="rgb(224,224,51)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.46%)</title><rect x="10" y="212" width="29" height="15" fill="rgb(236,106,52)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.46%)</title><rect x="10" y="228" width="29" height="15" fill="rgb(214,188,36)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.46%)</title><rect x="10" y="244" width="29" height="15" fill="rgb(209,24,32)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.46%)</title><rect x="10" y="260" width="29" height="15" fill="rgb(241,100,49)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.46%)</title><rect x="10" y="276" width="29" height="15" fill="rgb(220,210,48)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.55%)</title><rect x="32" y="292" width="7" height="15" fill="rgb(242,227,5)"/><text x="35.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="308" width="7" height="15" fill="rgb(240,71,7)"/><text x="35.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="324" width="7" height="15" fill="rgb(236,43,32)"/><text x="35.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="340" width="7" height="15" fill="rgb(243,113,48)"/><text x="35.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="356" width="7" height="15" fill="rgb(213,135,9)"/><text x="35.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="372" width="7" height="15" fill="rgb(249,60,38)"/><text x="35.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.55%)</title><rect x="32" y="388" width="7" height="15" fill="rgb(231,201,13)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="404" width="7" height="15" fill="rgb(207,30,43)"/><text x="35.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="420" width="7" height="15" fill="rgb(210,134,28)"/><text x="35.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="436" width="7" height="15" fill="rgb(206,118,34)"/><text x="35.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="452" width="7" height="15" fill="rgb(227,206,13)"/><text x="35.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="468" width="7" height="15" fill="rgb(232,41,18)"/><text x="35.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.55%)</title><rect x="32" y="484" width="7" height="15" fill="rgb(245,103,17)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="500" width="7" height="15" fill="rgb(226,19,15)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="516" width="7" height="15" fill="rgb(206,50,30)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="532" width="7" height="15" fill="rgb(217,49,28)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="548" width="7" height="15" fill="rgb(229,26,3)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="564" width="7" height="15" fill="rgb(231,2,25)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.55%)</title><rect x="32" y="580" width="7" height="15" fill="rgb(242,227,47)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="596" width="7" height="15" fill="rgb(234,62,12)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="612" width="7" height="15" fill="rgb(247,205,4)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="628" width="7" height="15" fill="rgb(205,138,24)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="644" width="7" height="15" fill="rgb(227,74,22)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="660" width="7" height="15" fill="rgb(215,133,42)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.55%)</title><rect x="32" y="676" width="7" height="15" fill="rgb(217,138,7)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="692" width="7" height="15" fill="rgb(248,50,34)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="708" width="7" height="15" fill="rgb(233,3,0)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="724" width="7" height="15" fill="rgb(246,228,39)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="740" width="7" height="15" fill="rgb(252,81,9)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="756" width="7" height="15" fill="rgb(205,143,17)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.55%)</title><rect x="32" y="772" width="7" height="15" fill="rgb(234,25,34)"/><text x="35.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="788" width="7" height="15" fill="rgb(246,65,31)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="804" width="7" height="15" fill="rgb(251,113,36)"/><text x="35.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="820" width="7" height="15" fill="rgb(229,137,52)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="836" width="7" height="15" fill="rgb(222,2,23)"/><text x="35.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="852" width="7" height="15" fill="rgb(244,174,17)"/><text x="35.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="32" y="868" width="7" height="15" fill="rgb(210,172,4)"/><text x="35.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="32" y="884" width="7" height="15" fill="rgb(242,160,18)"/><text x="35.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.55%)</title><rect x="32" y="900" width="7" height="15" fill="rgb(249,50,46)"/><text x="35.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="35" y="916" width="4" height="15" fill="rgb(224,179,37)"/><text x="38.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="35" y="932" width="4" height="15" fill="rgb(206,126,19)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="35" y="948" width="4" height="15" fill="rgb(205,79,2)"/><text x="38.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="35" y="964" width="4" height="15" fill="rgb(226,45,18)"/><text x="38.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="35" y="980" width="4" height="15" fill="rgb(208,171,45)"/><text x="38.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="35" y="996" width="4" height="15" fill="rgb(227,228,20)"/><text x="38.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="35" y="1012" width="4" height="15" fill="rgb(215,133,40)"/><text x="38.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.27%)</title><rect x="35" y="1028" width="4" height="15" fill="rgb(248,206,17)"/><text x="38.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.27%)</title><rect x="35" y="1044" width="4" height="15" fill="rgb(249,197,38)"/><text x="38.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.27%)</title><rect x="35" y="1060" width="4" height="15" fill="rgb(235,60,42)"/><text x="38.00" y="1070.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.27%)</title><rect x="35" y="1076" width="4" height="15" fill="rgb(234,11,19)"/><text x="38.00" y="1086.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.27%)</title><rect x="39" y="1508" width="3" height="15" fill="rgb(229,3,5)"/><text x="42.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.27%)</title><rect x="39" y="1524" width="3" height="15" fill="rgb(223,163,51)"/><text x="42.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="39" y="1540" width="3" height="15" fill="rgb(227,216,4)"/><text x="42.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.27%)</title><rect x="39" y="1556" width="3" height="15" fill="rgb(209,35,47)"/><text x="42.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.27%)</title><rect x="39" y="1572" width="3" height="15" fill="rgb(222,186,48)"/><text x="42.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="39" y="1588" width="3" height="15" fill="rgb(238,190,40)"/><text x="42.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.27%)</title><rect x="39" y="1604" width="3" height="15" fill="rgb(225,25,8)"/><text x="42.00" y="1614.50"></text></g><g><title>0x7fa92fdff94d (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="39" y="1620" width="3" height="15" fill="rgb(249,181,17)"/><text x="42.00" y="1630.50"></text></g><g><title>google::protobuf::Message::_InternalParse (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="39" y="1636" width="3" height="15" fill="rgb(219,136,17)"/><text x="42.00" y="1646.50"></text></g><g><title>0x7fa92febfde2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="39" y="1652" width="3" height="15" fill="rgb(217,179,14)"/><text x="42.00" y="1662.50"></text></g><g><title>google::protobuf::ParseLenDelim (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="39" y="1668" width="3" height="15" fill="rgb(238,20,28)"/><text x="42.00" y="1678.50"></text></g><g><title>google::protobuf::Reflection::SetString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="39" y="1684" width="3" height="15" fill="rgb(229,195,4)"/><text x="42.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1348" width="6" height="15" fill="rgb(249,207,8)"/><text x="42.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.55%)</title><rect x="39" y="1364" width="6" height="15" fill="rgb(214,142,3)"/><text x="42.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1380" width="6" height="15" fill="rgb(239,76,2)"/><text x="42.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1396" width="6" height="15" fill="rgb(229,90,15)"/><text x="42.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1412" width="6" height="15" fill="rgb(212,209,53)"/><text x="42.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="1428" width="6" height="15" fill="rgb(208,148,34)"/><text x="42.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1444" width="6" height="15" fill="rgb(224,104,47)"/><text x="42.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.55%)</title><rect x="39" y="1460" width="6" height="15" fill="rgb(250,161,20)"/><text x="42.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.55%)</title><rect x="39" y="1476" width="6" height="15" fill="rgb(239,139,30)"/><text x="42.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.55%)</title><rect x="39" y="1492" width="6" height="15" fill="rgb(227,46,22)"/><text x="42.00" y="1502.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.27%)</title><rect x="42" y="1508" width="3" height="15" fill="rgb(253,99,9)"/><text x="45.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="484" width="9" height="15" fill="rgb(233,220,5)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="500" width="9" height="15" fill="rgb(252,139,27)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="516" width="9" height="15" fill="rgb(244,198,40)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="532" width="9" height="15" fill="rgb(215,181,1)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="548" width="9" height="15" fill="rgb(215,214,7)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="564" width="9" height="15" fill="rgb(244,81,8)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.82%)</title><rect x="39" y="580" width="9" height="15" fill="rgb(222,38,19)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="596" width="9" height="15" fill="rgb(242,214,24)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="612" width="9" height="15" fill="rgb(250,65,33)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="628" width="9" height="15" fill="rgb(238,151,34)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="644" width="9" height="15" fill="rgb(227,106,12)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="660" width="9" height="15" fill="rgb(251,189,38)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.82%)</title><rect x="39" y="676" width="9" height="15" fill="rgb(248,144,44)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="692" width="9" height="15" fill="rgb(218,62,45)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="708" width="9" height="15" fill="rgb(225,141,36)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="724" width="9" height="15" fill="rgb(239,40,1)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="740" width="9" height="15" fill="rgb(233,69,4)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="756" width="9" height="15" fill="rgb(207,60,33)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.82%)</title><rect x="39" y="772" width="9" height="15" fill="rgb(225,31,16)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="788" width="9" height="15" fill="rgb(248,138,33)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="804" width="9" height="15" fill="rgb(247,33,45)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="820" width="9" height="15" fill="rgb(215,184,35)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="836" width="9" height="15" fill="rgb(209,219,39)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="852" width="9" height="15" fill="rgb(226,17,2)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.82%)</title><rect x="39" y="868" width="9" height="15" fill="rgb(245,194,50)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="884" width="9" height="15" fill="rgb(242,152,11)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="900" width="9" height="15" fill="rgb(249,64,48)"/><text x="42.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="916" width="9" height="15" fill="rgb(243,47,41)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="932" width="9" height="15" fill="rgb(215,58,33)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="948" width="9" height="15" fill="rgb(230,202,35)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="964" width="9" height="15" fill="rgb(226,74,22)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="980" width="9" height="15" fill="rgb(211,29,22)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="996" width="9" height="15" fill="rgb(236,215,37)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.82%)</title><rect x="39" y="1012" width="9" height="15" fill="rgb(245,2,20)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1028" width="9" height="15" fill="rgb(244,102,24)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1044" width="9" height="15" fill="rgb(249,223,49)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1060" width="9" height="15" fill="rgb(248,178,47)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="1076" width="9" height="15" fill="rgb(244,51,38)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1092" width="9" height="15" fill="rgb(222,104,10)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.82%)</title><rect x="39" y="1108" width="9" height="15" fill="rgb(231,121,7)"/><text x="42.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1124" width="9" height="15" fill="rgb(246,68,45)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1140" width="9" height="15" fill="rgb(222,172,54)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1156" width="9" height="15" fill="rgb(226,142,36)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1172" width="9" height="15" fill="rgb(241,15,25)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1188" width="9" height="15" fill="rgb(245,228,51)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="1204" width="9" height="15" fill="rgb(235,186,54)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1220" width="9" height="15" fill="rgb(250,108,41)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.82%)</title><rect x="39" y="1236" width="9" height="15" fill="rgb(222,116,8)"/><text x="42.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1252" width="9" height="15" fill="rgb(244,122,32)"/><text x="42.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1268" width="9" height="15" fill="rgb(205,209,1)"/><text x="42.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1284" width="9" height="15" fill="rgb(209,195,38)"/><text x="42.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1300" width="9" height="15" fill="rgb(212,48,13)"/><text x="42.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="39" y="1316" width="9" height="15" fill="rgb(219,114,50)"/><text x="42.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="39" y="1332" width="9" height="15" fill="rgb(246,138,41)"/><text x="42.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="45" y="1348" width="3" height="15" fill="rgb(220,171,23)"/><text x="48.00" y="1358.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="45" y="1364" width="3" height="15" fill="rgb(235,149,24)"/><text x="48.00" y="1374.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="45" y="1380" width="3" height="15" fill="rgb(209,166,27)"/><text x="48.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="45" y="1396" width="3" height="15" fill="rgb(207,205,35)"/><text x="48.00" y="1406.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="724" width="3" height="15" fill="rgb(230,104,44)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="740" width="3" height="15" fill="rgb(244,209,42)"/><text x="51.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="756" width="3" height="15" fill="rgb(250,39,51)"/><text x="51.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="772" width="3" height="15" fill="rgb(239,147,7)"/><text x="51.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="788" width="3" height="15" fill="rgb(224,170,34)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="804" width="3" height="15" fill="rgb(218,33,28)"/><text x="51.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="820" width="3" height="15" fill="rgb(208,59,38)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="836" width="3" height="15" fill="rgb(221,34,21)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="852" width="3" height="15" fill="rgb(235,74,33)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="868" width="3" height="15" fill="rgb(225,219,28)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="884" width="3" height="15" fill="rgb(228,207,11)"/><text x="51.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="900" width="3" height="15" fill="rgb(228,22,23)"/><text x="51.00" y="910.50"></text></g><g><title>0x7fa916fdd40e (?) (1 samples, 0.27%)</title><rect x="48" y="916" width="3" height="15" fill="rgb(250,229,32)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="932" width="3" height="15" fill="rgb(211,144,26)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="948" width="3" height="15" fill="rgb(234,53,49)"/><text x="51.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="964" width="3" height="15" fill="rgb(229,175,31)"/><text x="51.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="980" width="3" height="15" fill="rgb(227,80,25)"/><text x="51.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="996" width="3" height="15" fill="rgb(207,163,48)"/><text x="51.00" y="1006.50"></text></g><g><title>0x7fa916d96cd2 (?) (1 samples, 0.27%)</title><rect x="48" y="1012" width="3" height="15" fill="rgb(206,1,21)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(251,64,53)"/><text x="51.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(236,20,21)"/><text x="51.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1060" width="3" height="15" fill="rgb(240,150,33)"/><text x="51.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="1076" width="3" height="15" fill="rgb(230,54,22)"/><text x="51.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1092" width="3" height="15" fill="rgb(215,205,5)"/><text x="51.00" y="1102.50"></text></g><g><title>0x7fa91648c0e5 (?) (1 samples, 0.27%)</title><rect x="48" y="1108" width="3" height="15" fill="rgb(230,207,6)"/><text x="51.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1124" width="3" height="15" fill="rgb(216,215,20)"/><text x="51.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1140" width="3" height="15" fill="rgb(246,79,15)"/><text x="51.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1156" width="3" height="15" fill="rgb(214,81,6)"/><text x="51.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="1172" width="3" height="15" fill="rgb(253,184,32)"/><text x="51.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1188" width="3" height="15" fill="rgb(232,190,40)"/><text x="51.00" y="1198.50"></text></g><g><title>0x7fa916210e68 (?) (1 samples, 0.27%)</title><rect x="48" y="1204" width="3" height="15" fill="rgb(254,92,41)"/><text x="51.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1220" width="3" height="15" fill="rgb(224,137,40)"/><text x="51.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1236" width="3" height="15" fill="rgb(206,6,19)"/><text x="51.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1252" width="3" height="15" fill="rgb(207,38,8)"/><text x="51.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="1268" width="3" height="15" fill="rgb(205,104,41)"/><text x="51.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1284" width="3" height="15" fill="rgb(208,198,33)"/><text x="51.00" y="1294.50"></text></g><g><title>0x7fa915fa12fb (?) (1 samples, 0.27%)</title><rect x="48" y="1300" width="3" height="15" fill="rgb(232,120,18)"/><text x="51.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1316" width="3" height="15" fill="rgb(206,127,7)"/><text x="51.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1332" width="3" height="15" fill="rgb(247,189,27)"/><text x="51.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1348" width="3" height="15" fill="rgb(226,71,49)"/><text x="51.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="1364" width="3" height="15" fill="rgb(245,156,47)"/><text x="51.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1380" width="3" height="15" fill="rgb(214,179,4)"/><text x="51.00" y="1390.50"></text></g><g><title>0x7fa915d85153 (?) (1 samples, 0.27%)</title><rect x="48" y="1396" width="3" height="15" fill="rgb(244,196,20)"/><text x="51.00" y="1406.50"></text></g><g><title>0x7fa915d83c13 (?) (1 samples, 0.27%)</title><rect x="48" y="1412" width="3" height="15" fill="rgb(250,132,50)"/><text x="51.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1428" width="3" height="15" fill="rgb(231,152,52)"/><text x="51.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1444" width="3" height="15" fill="rgb(216,145,13)"/><text x="51.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1460" width="3" height="15" fill="rgb(241,56,19)"/><text x="51.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="1476" width="3" height="15" fill="rgb(234,21,10)"/><text x="51.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="1492" width="3" height="15" fill="rgb(226,69,51)"/><text x="51.00" y="1502.50"></text></g><g><title>0x7fa915b20181 (?) (1 samples, 0.27%)</title><rect x="48" y="1508" width="3" height="15" fill="rgb(242,83,26)"/><text x="51.00" y="1518.50"></text></g><g><title>0x7fa915b231c9 (?) (1 samples, 0.27%)</title><rect x="48" y="1524" width="3" height="15" fill="rgb(229,110,51)"/><text x="51.00" y="1534.50"></text></g><g><title>0x7fa915b4f167 (?) (1 samples, 0.27%)</title><rect x="48" y="1540" width="3" height="15" fill="rgb(234,127,19)"/><text x="51.00" y="1550.50"></text></g><g><title>0x7fa915b4ab64 (?) (1 samples, 0.27%)</title><rect x="48" y="1556" width="3" height="15" fill="rgb(250,64,46)"/><text x="51.00" y="1566.50"></text></g><g><title>0x7fa915b2e07b (?) (1 samples, 0.27%)</title><rect x="48" y="1572" width="3" height="15" fill="rgb(223,29,27)"/><text x="51.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.27%)</title><rect x="48" y="1588" width="3" height="15" fill="rgb(235,98,4)"/><text x="51.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="1604" width="3" height="15" fill="rgb(219,98,36)"/><text x="51.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="1620" width="3" height="15" fill="rgb(231,88,40)"/><text x="51.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="1636" width="3" height="15" fill="rgb(205,157,21)"/><text x="51.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="772" width="4" height="15" fill="rgb(237,36,43)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="788" width="4" height="15" fill="rgb(216,31,22)"/><text x="54.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="804" width="4" height="15" fill="rgb(240,100,45)"/><text x="54.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="820" width="4" height="15" fill="rgb(243,69,44)"/><text x="54.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="836" width="4" height="15" fill="rgb(221,20,18)"/><text x="54.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="852" width="4" height="15" fill="rgb(237,213,33)"/><text x="54.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.27%)</title><rect x="51" y="868" width="4" height="15" fill="rgb(245,97,34)"/><text x="54.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="884" width="4" height="15" fill="rgb(236,33,51)"/><text x="54.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="900" width="4" height="15" fill="rgb(241,191,26)"/><text x="54.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="916" width="4" height="15" fill="rgb(216,102,37)"/><text x="54.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="932" width="4" height="15" fill="rgb(205,11,46)"/><text x="54.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="948" width="4" height="15" fill="rgb(233,93,48)"/><text x="54.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.27%)</title><rect x="51" y="964" width="4" height="15" fill="rgb(243,32,21)"/><text x="54.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="980" width="4" height="15" fill="rgb(245,159,39)"/><text x="54.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="996" width="4" height="15" fill="rgb(207,189,44)"/><text x="54.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="1012" width="4" height="15" fill="rgb(206,161,44)"/><text x="54.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="1028" width="4" height="15" fill="rgb(252,15,48)"/><text x="54.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="1044" width="4" height="15" fill="rgb(245,92,49)"/><text x="54.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.27%)</title><rect x="51" y="1060" width="4" height="15" fill="rgb(233,226,12)"/><text x="54.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="1076" width="4" height="15" fill="rgb(250,104,13)"/><text x="54.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="1092" width="4" height="15" fill="rgb(235,19,14)"/><text x="54.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="1108" width="4" height="15" fill="rgb(206,209,25)"/><text x="54.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="1124" width="4" height="15" fill="rgb(236,211,4)"/><text x="54.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="1140" width="4" height="15" fill="rgb(211,109,37)"/><text x="54.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/strings.py) (1 samples, 0.27%)</title><rect x="51" y="1156" width="4" height="15" fill="rgb(206,58,26)"/><text x="54.00" y="1166.50"></text></g><g><title>StringMethods (pandas/core/strings.py) (1 samples, 0.27%)</title><rect x="51" y="1172" width="4" height="15" fill="rgb(219,40,29)"/><text x="54.00" y="1182.50"></text></g><g><title>_forbid_nonstring_types (pandas/core/strings.py) (1 samples, 0.27%)</title><rect x="51" y="1188" width="4" height="15" fill="rgb(235,185,4)"/><text x="54.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.64%)</title><rect x="39" y="340" width="19" height="15" fill="rgb(244,175,17)"/><text x="42.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.64%)</title><rect x="39" y="356" width="19" height="15" fill="rgb(212,104,39)"/><text x="42.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.64%)</title><rect x="39" y="372" width="19" height="15" fill="rgb(232,151,36)"/><text x="42.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.64%)</title><rect x="39" y="388" width="19" height="15" fill="rgb(215,168,15)"/><text x="42.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.64%)</title><rect x="39" y="404" width="19" height="15" fill="rgb(249,151,3)"/><text x="42.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.64%)</title><rect x="39" y="420" width="19" height="15" fill="rgb(223,64,38)"/><text x="42.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.64%)</title><rect x="39" y="436" width="19" height="15" fill="rgb(238,228,18)"/><text x="42.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.64%)</title><rect x="39" y="452" width="19" height="15" fill="rgb(253,201,27)"/><text x="42.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.64%)</title><rect x="39" y="468" width="19" height="15" fill="rgb(212,142,43)"/><text x="42.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="484" width="10" height="15" fill="rgb(229,101,6)"/><text x="51.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="48" y="500" width="10" height="15" fill="rgb(250,46,46)"/><text x="51.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="516" width="10" height="15" fill="rgb(224,224,17)"/><text x="51.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.82%)</title><rect x="48" y="532" width="10" height="15" fill="rgb(237,209,19)"/><text x="51.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="548" width="10" height="15" fill="rgb(217,212,44)"/><text x="51.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="564" width="10" height="15" fill="rgb(216,190,52)"/><text x="51.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="580" width="10" height="15" fill="rgb(251,223,27)"/><text x="51.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="48" y="596" width="10" height="15" fill="rgb(214,185,42)"/><text x="51.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="612" width="10" height="15" fill="rgb(236,207,45)"/><text x="51.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.82%)</title><rect x="48" y="628" width="10" height="15" fill="rgb(244,65,39)"/><text x="51.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="644" width="10" height="15" fill="rgb(209,184,42)"/><text x="51.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="660" width="10" height="15" fill="rgb(222,86,28)"/><text x="51.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="676" width="10" height="15" fill="rgb(213,24,40)"/><text x="51.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="48" y="692" width="10" height="15" fill="rgb(240,74,28)"/><text x="51.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="48" y="708" width="10" height="15" fill="rgb(213,125,4)"/><text x="51.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.55%)</title><rect x="51" y="724" width="7" height="15" fill="rgb(242,208,0)"/><text x="54.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="51" y="740" width="7" height="15" fill="rgb(243,1,14)"/><text x="54.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="51" y="756" width="7" height="15" fill="rgb(251,112,54)"/><text x="54.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="772" width="3" height="15" fill="rgb(253,204,15)"/><text x="58.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="55" y="788" width="3" height="15" fill="rgb(226,97,35)"/><text x="58.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="804" width="3" height="15" fill="rgb(251,135,35)"/><text x="58.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.27%)</title><rect x="55" y="820" width="3" height="15" fill="rgb(250,161,50)"/><text x="58.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="836" width="3" height="15" fill="rgb(208,54,8)"/><text x="58.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="852" width="3" height="15" fill="rgb(231,195,7)"/><text x="58.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="868" width="3" height="15" fill="rgb(251,182,32)"/><text x="58.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="55" y="884" width="3" height="15" fill="rgb(219,25,39)"/><text x="58.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="900" width="3" height="15" fill="rgb(254,18,12)"/><text x="58.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.27%)</title><rect x="55" y="916" width="3" height="15" fill="rgb(242,117,18)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="932" width="3" height="15" fill="rgb(234,111,22)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="948" width="3" height="15" fill="rgb(244,15,38)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="964" width="3" height="15" fill="rgb(246,21,26)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="55" y="980" width="3" height="15" fill="rgb(241,4,50)"/><text x="58.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="55" y="996" width="3" height="15" fill="rgb(248,37,8)"/><text x="58.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py) (1 samples, 0.27%)</title><rect x="55" y="1012" width="3" height="15" fill="rgb(228,223,33)"/><text x="58.00" y="1022.50"></text></g><g><title>GroupBy (pandas/core/groupby/groupby.py) (1 samples, 0.27%)</title><rect x="55" y="1028" width="3" height="15" fill="rgb(207,2,32)"/><text x="58.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.27%)</title><rect x="55" y="1044" width="3" height="15" fill="rgb(211,203,5)"/><text x="58.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.19%)</title><rect x="39" y="244" width="25" height="15" fill="rgb(215,200,12)"/><text x="42.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.19%)</title><rect x="39" y="260" width="25" height="15" fill="rgb(233,53,44)"/><text x="42.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.19%)</title><rect x="39" y="276" width="25" height="15" fill="rgb(207,130,24)"/><text x="42.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.19%)</title><rect x="39" y="292" width="25" height="15" fill="rgb(245,226,53)"/><text x="42.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.19%)</title><rect x="39" y="308" width="25" height="15" fill="rgb(210,75,45)"/><text x="42.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.19%)</title><rect x="39" y="324" width="25" height="15" fill="rgb(209,170,14)"/><text x="42.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.55%)</title><rect x="58" y="340" width="6" height="15" fill="rgb(236,141,39)"/><text x="61.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="58" y="356" width="6" height="15" fill="rgb(215,194,28)"/><text x="61.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="58" y="372" width="6" height="15" fill="rgb(236,115,42)"/><text x="61.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="58" y="388" width="6" height="15" fill="rgb(236,150,25)"/><text x="61.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="58" y="404" width="6" height="15" fill="rgb(222,223,53)"/><text x="61.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="58" y="420" width="6" height="15" fill="rgb(221,18,14)"/><text x="61.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="58" y="436" width="6" height="15" fill="rgb(222,125,0)"/><text x="61.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="58" y="452" width="6" height="15" fill="rgb(223,46,49)"/><text x="61.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="58" y="468" width="6" height="15" fill="rgb(245,173,46)"/><text x="61.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.55%)</title><rect x="58" y="484" width="6" height="15" fill="rgb(205,226,2)"/><text x="61.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="500" width="3" height="15" fill="rgb(206,54,12)"/><text x="64.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="516" width="3" height="15" fill="rgb(233,107,32)"/><text x="64.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="532" width="3" height="15" fill="rgb(238,91,24)"/><text x="64.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="548" width="3" height="15" fill="rgb(225,208,31)"/><text x="64.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="564" width="3" height="15" fill="rgb(251,40,17)"/><text x="64.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.27%)</title><rect x="61" y="580" width="3" height="15" fill="rgb(244,100,22)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="596" width="3" height="15" fill="rgb(215,180,53)"/><text x="64.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="612" width="3" height="15" fill="rgb(231,117,32)"/><text x="64.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="628" width="3" height="15" fill="rgb(205,37,42)"/><text x="64.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="644" width="3" height="15" fill="rgb(217,8,34)"/><text x="64.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="660" width="3" height="15" fill="rgb(213,163,24)"/><text x="64.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.27%)</title><rect x="61" y="676" width="3" height="15" fill="rgb(220,173,8)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="692" width="3" height="15" fill="rgb(212,105,39)"/><text x="64.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="708" width="3" height="15" fill="rgb(218,6,4)"/><text x="64.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="724" width="3" height="15" fill="rgb(248,180,39)"/><text x="64.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="740" width="3" height="15" fill="rgb(238,44,40)"/><text x="64.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="756" width="3" height="15" fill="rgb(246,208,28)"/><text x="64.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.27%)</title><rect x="61" y="772" width="3" height="15" fill="rgb(233,13,28)"/><text x="64.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="788" width="3" height="15" fill="rgb(216,212,5)"/><text x="64.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="804" width="3" height="15" fill="rgb(223,99,44)"/><text x="64.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="820" width="3" height="15" fill="rgb(228,78,9)"/><text x="64.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="836" width="3" height="15" fill="rgb(237,28,48)"/><text x="64.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="852" width="3" height="15" fill="rgb(241,191,16)"/><text x="64.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.27%)</title><rect x="61" y="868" width="3" height="15" fill="rgb(223,228,27)"/><text x="64.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="884" width="3" height="15" fill="rgb(231,193,52)"/><text x="64.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="900" width="3" height="15" fill="rgb(248,89,20)"/><text x="64.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="916" width="3" height="15" fill="rgb(205,187,40)"/><text x="64.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="932" width="3" height="15" fill="rgb(246,79,13)"/><text x="64.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="948" width="3" height="15" fill="rgb(214,170,3)"/><text x="64.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.27%)</title><rect x="61" y="964" width="3" height="15" fill="rgb(217,9,10)"/><text x="64.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="980" width="3" height="15" fill="rgb(251,54,41)"/><text x="64.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="996" width="3" height="15" fill="rgb(208,37,9)"/><text x="64.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1012" width="3" height="15" fill="rgb(213,67,21)"/><text x="64.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="1028" width="3" height="15" fill="rgb(239,15,45)"/><text x="64.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1044" width="3" height="15" fill="rgb(244,154,42)"/><text x="64.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/request.py) (1 samples, 0.27%)</title><rect x="61" y="1060" width="3" height="15" fill="rgb(209,204,18)"/><text x="64.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1076" width="3" height="15" fill="rgb(218,132,41)"/><text x="64.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1092" width="3" height="15" fill="rgb(229,222,45)"/><text x="64.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1108" width="3" height="15" fill="rgb(245,164,30)"/><text x="64.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="1124" width="3" height="15" fill="rgb(240,194,46)"/><text x="64.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1140" width="3" height="15" fill="rgb(216,100,0)"/><text x="64.00" y="1150.50"></text></g><g><title>&lt;module&gt; (urllib3/filepost.py) (1 samples, 0.27%)</title><rect x="61" y="1156" width="3" height="15" fill="rgb(209,200,0)"/><text x="64.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1172" width="3" height="15" fill="rgb(206,114,19)"/><text x="64.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1188" width="3" height="15" fill="rgb(234,37,40)"/><text x="64.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1204" width="3" height="15" fill="rgb(249,197,48)"/><text x="64.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="1220" width="3" height="15" fill="rgb(209,165,23)"/><text x="64.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1236" width="3" height="15" fill="rgb(222,217,35)"/><text x="64.00" y="1246.50"></text></g><g><title>&lt;module&gt; (urllib3/fields.py) (1 samples, 0.27%)</title><rect x="61" y="1252" width="3" height="15" fill="rgb(251,21,36)"/><text x="64.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1268" width="3" height="15" fill="rgb(239,191,0)"/><text x="64.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1284" width="3" height="15" fill="rgb(224,197,0)"/><text x="64.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="61" y="1300" width="3" height="15" fill="rgb(230,16,41)"/><text x="64.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="1316" width="3" height="15" fill="rgb(245,223,40)"/><text x="64.00" y="1326.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="1332" width="3" height="15" fill="rgb(240,229,6)"/><text x="64.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="61" y="1348" width="3" height="15" fill="rgb(211,56,29)"/><text x="64.00" y="1358.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.27%)</title><rect x="64" y="372" width="4" height="15" fill="rgb(245,82,34)"/><text x="67.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="388" width="4" height="15" fill="rgb(215,156,51)"/><text x="67.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="404" width="4" height="15" fill="rgb(209,49,46)"/><text x="67.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="420" width="4" height="15" fill="rgb(245,152,2)"/><text x="67.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="436" width="4" height="15" fill="rgb(227,15,32)"/><text x="67.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="452" width="4" height="15" fill="rgb(228,32,22)"/><text x="67.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="468" width="4" height="15" fill="rgb(214,29,24)"/><text x="67.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="484" width="4" height="15" fill="rgb(235,174,29)"/><text x="67.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.27%)</title><rect x="64" y="500" width="4" height="15" fill="rgb(207,152,30)"/><text x="67.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="516" width="4" height="15" fill="rgb(230,1,24)"/><text x="67.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="532" width="4" height="15" fill="rgb(227,130,7)"/><text x="67.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="548" width="4" height="15" fill="rgb(247,216,12)"/><text x="67.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="564" width="4" height="15" fill="rgb(241,185,5)"/><text x="67.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="580" width="4" height="15" fill="rgb(233,175,21)"/><text x="67.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="596" width="4" height="15" fill="rgb(226,200,28)"/><text x="67.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="612" width="4" height="15" fill="rgb(224,142,52)"/><text x="67.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.27%)</title><rect x="64" y="628" width="4" height="15" fill="rgb(215,150,9)"/><text x="67.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="644" width="4" height="15" fill="rgb(229,192,52)"/><text x="67.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="660" width="4" height="15" fill="rgb(216,144,1)"/><text x="67.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="676" width="4" height="15" fill="rgb(222,208,15)"/><text x="67.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="692" width="4" height="15" fill="rgb(223,162,8)"/><text x="67.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="708" width="4" height="15" fill="rgb(209,223,2)"/><text x="67.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="724" width="4" height="15" fill="rgb(237,9,35)"/><text x="67.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="740" width="4" height="15" fill="rgb(248,6,4)"/><text x="67.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="756" width="4" height="15" fill="rgb(251,101,17)"/><text x="67.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.27%)</title><rect x="64" y="772" width="4" height="15" fill="rgb(236,114,3)"/><text x="67.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="788" width="4" height="15" fill="rgb(253,21,46)"/><text x="67.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="804" width="4" height="15" fill="rgb(226,114,35)"/><text x="67.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="820" width="4" height="15" fill="rgb(213,138,36)"/><text x="67.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="836" width="4" height="15" fill="rgb(230,106,51)"/><text x="67.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="852" width="4" height="15" fill="rgb(246,195,29)"/><text x="67.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="868" width="4" height="15" fill="rgb(216,58,3)"/><text x="67.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="884" width="4" height="15" fill="rgb(238,159,0)"/><text x="67.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.27%)</title><rect x="64" y="900" width="4" height="15" fill="rgb(240,31,26)"/><text x="67.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="916" width="4" height="15" fill="rgb(215,13,29)"/><text x="67.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="932" width="4" height="15" fill="rgb(229,202,23)"/><text x="67.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="948" width="4" height="15" fill="rgb(236,39,48)"/><text x="67.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="964" width="4" height="15" fill="rgb(225,134,26)"/><text x="67.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="980" width="4" height="15" fill="rgb(219,34,8)"/><text x="67.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py) (1 samples, 0.27%)</title><rect x="64" y="996" width="4" height="15" fill="rgb(247,88,16)"/><text x="67.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="1012" width="4" height="15" fill="rgb(235,14,37)"/><text x="67.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="1028" width="4" height="15" fill="rgb(235,224,27)"/><text x="67.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="64" y="1044" width="4" height="15" fill="rgb(231,38,34)"/><text x="67.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="1060" width="4" height="15" fill="rgb(240,126,36)"/><text x="67.00" y="1070.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="1076" width="4" height="15" fill="rgb(253,181,53)"/><text x="67.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="64" y="1092" width="4" height="15" fill="rgb(205,70,24)"/><text x="67.00" y="1102.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.27%)</title><rect x="68" y="372" width="3" height="15" fill="rgb(216,78,28)"/><text x="71.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="68" y="388" width="3" height="15" fill="rgb(241,29,32)"/><text x="71.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="68" y="404" width="3" height="15" fill="rgb(213,196,16)"/><text x="71.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="68" y="420" width="3" height="15" fill="rgb(216,128,15)"/><text x="71.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="68" y="436" width="3" height="15" fill="rgb(238,59,0)"/><text x="71.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="68" y="452" width="3" height="15" fill="rgb(237,163,34)"/><text x="71.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/nanfunctions.py) (1 samples, 0.27%)</title><rect x="68" y="468" width="3" height="15" fill="rgb(209,52,7)"/><text x="71.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.27%)</title><rect x="68" y="484" width="3" height="15" fill="rgb(218,2,48)"/><text x="71.00" y="494.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.27%)</title><rect x="68" y="500" width="3" height="15" fill="rgb(251,24,39)"/><text x="71.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.46%)</title><rect x="10" y="68" width="64" height="15" fill="rgb(227,78,15)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.46%)</title><rect x="10" y="84" width="64" height="15" fill="rgb(249,126,54)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.46%)</title><rect x="10" y="100" width="64" height="15" fill="rgb(215,218,5)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 5.46%)</title><rect x="10" y="116" width="64" height="15" fill="rgb(250,125,0)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.46%)</title><rect x="10" y="132" width="64" height="15" fill="rgb(217,13,25)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (20 samples, 5.46%)</title><rect x="10" y="148" width="64" height="15" fill="rgb(212,194,38)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.46%)</title><rect x="10" y="164" width="64" height="15" fill="rgb(248,189,44)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.46%)</title><rect x="10" y="180" width="64" height="15" fill="rgb(230,33,37)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.01%)</title><rect x="39" y="196" width="35" height="15" fill="rgb(233,66,46)"/><text x="42.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.01%)</title><rect x="39" y="212" width="35" height="15" fill="rgb(239,93,21)"/><text x="42.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.01%)</title><rect x="39" y="228" width="35" height="15" fill="rgb(238,34,35)"/><text x="42.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.82%)</title><rect x="64" y="244" width="10" height="15" fill="rgb(244,97,11)"/><text x="67.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="64" y="260" width="10" height="15" fill="rgb(254,8,28)"/><text x="67.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="64" y="276" width="10" height="15" fill="rgb(245,101,11)"/><text x="67.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="64" y="292" width="10" height="15" fill="rgb(208,209,15)"/><text x="67.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="64" y="308" width="10" height="15" fill="rgb(229,184,49)"/><text x="67.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="64" y="324" width="10" height="15" fill="rgb(216,187,21)"/><text x="67.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.82%)</title><rect x="64" y="340" width="10" height="15" fill="rgb(247,56,19)"/><text x="67.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.82%)</title><rect x="64" y="356" width="10" height="15" fill="rgb(218,204,40)"/><text x="67.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py) (1 samples, 0.27%)</title><rect x="71" y="372" width="3" height="15" fill="rgb(212,169,47)"/><text x="74.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="388" width="3" height="15" fill="rgb(218,25,25)"/><text x="74.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="404" width="3" height="15" fill="rgb(246,173,9)"/><text x="74.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="420" width="3" height="15" fill="rgb(252,187,32)"/><text x="74.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="71" y="436" width="3" height="15" fill="rgb(220,105,46)"/><text x="74.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="452" width="3" height="15" fill="rgb(210,213,0)"/><text x="74.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/polynomial.py) (1 samples, 0.27%)</title><rect x="71" y="468" width="3" height="15" fill="rgb(247,33,25)"/><text x="74.00" y="478.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="484" width="3" height="15" fill="rgb(249,180,19)"/><text x="74.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="500" width="3" height="15" fill="rgb(210,158,20)"/><text x="74.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="516" width="3" height="15" fill="rgb(221,123,14)"/><text x="74.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="532" width="3" height="15" fill="rgb(238,190,50)"/><text x="74.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="71" y="548" width="3" height="15" fill="rgb(212,189,40)"/><text x="74.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="71" y="564" width="3" height="15" fill="rgb(222,90,32)"/><text x="74.00" y="574.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="71" y="580" width="3" height="15" fill="rgb(235,225,28)"/><text x="74.00" y="590.50"></text></g><g><title>0x7fa91b4fe225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="77" y="356" width="3" height="15" fill="rgb(224,222,2)"/><text x="80.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.27%)</title><rect x="77" y="372" width="3" height="15" fill="rgb(237,174,51)"/><text x="80.00" y="382.50"></text></g><g><title>_dispatch (joblib/parallel.py) (3 samples, 0.82%)</title><rect x="74" y="196" width="10" height="15" fill="rgb(249,220,0)"/><text x="77.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (2 samples, 0.55%)</title><rect x="77" y="212" width="7" height="15" fill="rgb(254,191,9)"/><text x="80.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.55%)</title><rect x="77" y="228" width="7" height="15" fill="rgb(244,197,16)"/><text x="80.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.55%)</title><rect x="77" y="244" width="7" height="15" fill="rgb(207,140,27)"/><text x="80.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (2 samples, 0.55%)</title><rect x="77" y="260" width="7" height="15" fill="rgb(236,176,37)"/><text x="80.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (2 samples, 0.55%)</title><rect x="77" y="276" width="7" height="15" fill="rgb(227,151,7)"/><text x="80.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (2 samples, 0.55%)</title><rect x="77" y="292" width="7" height="15" fill="rgb(233,184,42)"/><text x="80.00" y="302.50"></text></g><g><title>0x7fa91b4f0d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="77" y="308" width="7" height="15" fill="rgb(221,192,53)"/><text x="80.00" y="318.50"></text></g><g><title>0x7fa91b4effa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="77" y="324" width="7" height="15" fill="rgb(243,48,17)"/><text x="80.00" y="334.50"></text></g><g><title>0x7fa91b4ff405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="77" y="340" width="7" height="15" fill="rgb(210,189,25)"/><text x="80.00" y="350.50"></text></g><g><title>0x7fa91b4fe2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="80" y="356" width="4" height="15" fill="rgb(214,20,41)"/><text x="83.00" y="366.50"></text></g><g><title>0x7fa91b4e2d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="80" y="372" width="4" height="15" fill="rgb(218,135,47)"/><text x="83.00" y="382.50"></text></g><g><title>0x7fa91b4e2666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="80" y="388" width="4" height="15" fill="rgb(235,53,0)"/><text x="83.00" y="398.50"></text></g><g><title>0x7fa91b4d82fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="80" y="404" width="4" height="15" fill="rgb(223,204,54)"/><text x="83.00" y="414.50"></text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (4 samples, 1.09%)</title><rect x="74" y="100" width="13" height="15" fill="rgb(252,28,41)"/><text x="77.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.09%)</title><rect x="74" y="116" width="13" height="15" fill="rgb(235,150,17)"/><text x="77.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.09%)</title><rect x="74" y="132" width="13" height="15" fill="rgb(224,46,52)"/><text x="77.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py) (4 samples, 1.09%)</title><rect x="74" y="148" width="13" height="15" fill="rgb(225,218,23)"/><text x="77.00" y="158.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.09%)</title><rect x="74" y="164" width="13" height="15" fill="rgb(254,101,42)"/><text x="77.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (4 samples, 1.09%)</title><rect x="74" y="180" width="13" height="15" fill="rgb(222,174,2)"/><text x="77.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.27%)</title><rect x="84" y="196" width="3" height="15" fill="rgb(225,203,41)"/><text x="87.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="84" y="212" width="3" height="15" fill="rgb(206,122,36)"/><text x="87.00" y="222.50"></text></g><g><title>0x7fa941ac2e7a (libc-2.29.so) (1 samples, 0.27%)</title><rect x="84" y="228" width="3" height="15" fill="rgb(222,47,38)"/><text x="87.00" y="238.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (5 samples, 1.37%)</title><rect x="74" y="68" width="16" height="15" fill="rgb(231,189,45)"/><text x="77.00" y="78.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (5 samples, 1.37%)</title><rect x="74" y="84" width="16" height="15" fill="rgb(249,220,21)"/><text x="77.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="87" y="100" width="3" height="15" fill="rgb(218,220,39)"/><text x="90.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="87" y="116" width="3" height="15" fill="rgb(214,142,17)"/><text x="90.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="87" y="132" width="3" height="15" fill="rgb(230,95,16)"/><text x="90.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.27%)</title><rect x="87" y="148" width="3" height="15" fill="rgb(238,207,33)"/><text x="90.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.27%)</title><rect x="87" y="164" width="3" height="15" fill="rgb(236,57,50)"/><text x="90.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.27%)</title><rect x="87" y="180" width="3" height="15" fill="rgb(229,120,13)"/><text x="90.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.27%)</title><rect x="87" y="196" width="3" height="15" fill="rgb(233,38,49)"/><text x="90.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.27%)</title><rect x="87" y="212" width="3" height="15" fill="rgb(230,117,12)"/><text x="90.00" y="222.50"></text></g><g><title>0x7fa901aeaff9 (?) (1 samples, 0.27%)</title><rect x="90" y="212" width="3" height="15" fill="rgb(207,111,25)"/><text x="93.00" y="222.50"></text></g><g><title>0x7fa901ae5ef6 (?) (1 samples, 0.27%)</title><rect x="90" y="228" width="3" height="15" fill="rgb(253,212,41)"/><text x="93.00" y="238.50"></text></g><g><title>0x7fa901ada962 (?) (1 samples, 0.27%)</title><rect x="90" y="244" width="3" height="15" fill="rgb(217,157,54)"/><text x="93.00" y="254.50"></text></g><g><title>0x7fa901b0e7a7 (?) (1 samples, 0.27%)</title><rect x="90" y="260" width="3" height="15" fill="rgb(242,95,2)"/><text x="93.00" y="270.50"></text></g><g><title>0x7fa901b0e379 (?) (1 samples, 0.27%)</title><rect x="90" y="276" width="3" height="15" fill="rgb(247,138,21)"/><text x="93.00" y="286.50"></text></g><g><title>0x7fa901f6c8b8 (?) (1 samples, 0.27%)</title><rect x="90" y="292" width="3" height="15" fill="rgb(221,100,15)"/><text x="93.00" y="302.50"></text></g><g><title>0x7fa901f6ac7f (?) (1 samples, 0.27%)</title><rect x="90" y="308" width="3" height="15" fill="rgb(234,21,38)"/><text x="93.00" y="318.50"></text></g><g><title>0x7fa901f7d99c (?) (1 samples, 0.27%)</title><rect x="90" y="324" width="3" height="15" fill="rgb(205,67,13)"/><text x="93.00" y="334.50"></text></g><g><title>0x7fa901ca4dc2 (?) (1 samples, 0.27%)</title><rect x="90" y="340" width="3" height="15" fill="rgb(212,201,16)"/><text x="93.00" y="350.50"></text></g><g><title>0x7fa901ca4557 (?) (1 samples, 0.27%)</title><rect x="90" y="356" width="3" height="15" fill="rgb(225,159,47)"/><text x="93.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.27%)</title><rect x="93" y="212" width="4" height="15" fill="rgb(237,55,30)"/><text x="96.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="93" y="228" width="4" height="15" fill="rgb(211,216,25)"/><text x="96.00" y="238.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 28.42%)</title><rect x="106" y="356" width="336" height="15" fill="rgb(231,67,40)"/><text x="109.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 29.78%)</title><rect x="97" y="260" width="351" height="15" fill="rgb(218,228,47)"/><text x="100.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 29.78%)</title><rect x="97" y="276" width="351" height="15" fill="rgb(215,177,0)"/><text x="100.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 29.78%)</title><rect x="97" y="292" width="351" height="15" fill="rgb(249,70,50)"/><text x="100.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 29.78%)</title><rect x="97" y="308" width="351" height="15" fill="rgb(225,66,31)"/><text x="100.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 29.78%)</title><rect x="97" y="324" width="351" height="15" fill="rgb(237,70,34)"/><text x="100.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxr..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 29.78%)</title><rect x="97" y="340" width="351" height="15" fill="rgb(242,202,39)"/><text x="100.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="442" y="356" width="6" height="15" fill="rgb(225,179,42)"/><text x="445.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.27%)</title><rect x="445" y="372" width="3" height="15" fill="rgb(223,32,18)"/><text x="448.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="445" y="388" width="3" height="15" fill="rgb(210,179,54)"/><text x="448.00" y="398.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (112 samples, 30.60%)</title><rect x="90" y="100" width="361" height="15" fill="rgb(229,215,11)"/><text x="93.00" y="110.50">profile (bench_RandomForestRegressor_default_b_r..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (112 samples, 30.60%)</title><rect x="90" y="116" width="361" height="15" fill="rgb(208,51,40)"/><text x="93.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (112 samples, 30.60%)</title><rect x="90" y="132" width="361" height="15" fill="rgb(215,208,16)"/><text x="93.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (112 samples, 30.60%)</title><rect x="90" y="148" width="361" height="15" fill="rgb(229,34,41)"/><text x="93.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (112 samples, 30.60%)</title><rect x="90" y="164" width="361" height="15" fill="rgb(230,163,25)"/><text x="93.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (112 samples, 30.60%)</title><rect x="90" y="180" width="361" height="15" fill="rgb(225,171,22)"/><text x="93.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (112 samples, 30.60%)</title><rect x="90" y="196" width="361" height="15" fill="rgb(230,182,29)"/><text x="93.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 30.05%)</title><rect x="97" y="212" width="354" height="15" fill="rgb(207,74,31)"/><text x="100.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 30.05%)</title><rect x="97" y="228" width="354" height="15" fill="rgb(226,108,1)"/><text x="100.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 30.05%)</title><rect x="97" y="244" width="354" height="15" fill="rgb(231,132,10)"/><text x="100.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="448" y="260" width="3" height="15" fill="rgb(231,140,53)"/><text x="451.00" y="270.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (114 samples, 31.15%)</title><rect x="90" y="68" width="368" height="15" fill="rgb(239,120,36)"/><text x="93.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (114 samples, 31.15%)</title><rect x="90" y="84" width="368" height="15" fill="rgb(206,0,30)"/><text x="93.00" y="94.50">setup_profile (bench_RandomForestRegressor_defaul..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.55%)</title><rect x="451" y="100" width="7" height="15" fill="rgb(242,43,26)"/><text x="454.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.55%)</title><rect x="451" y="116" width="7" height="15" fill="rgb(247,221,1)"/><text x="454.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.55%)</title><rect x="451" y="132" width="7" height="15" fill="rgb(246,7,35)"/><text x="454.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.55%)</title><rect x="451" y="148" width="7" height="15" fill="rgb(209,228,51)"/><text x="454.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.55%)</title><rect x="451" y="164" width="7" height="15" fill="rgb(209,209,22)"/><text x="454.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.55%)</title><rect x="451" y="180" width="7" height="15" fill="rgb(235,216,43)"/><text x="454.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (2 samples, 0.55%)</title><rect x="451" y="196" width="7" height="15" fill="rgb(252,121,36)"/><text x="454.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.55%)</title><rect x="451" y="212" width="7" height="15" fill="rgb(229,222,48)"/><text x="454.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.55%)</title><rect x="451" y="228" width="7" height="15" fill="rgb(214,11,7)"/><text x="454.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="451" y="244" width="7" height="15" fill="rgb(215,40,22)"/><text x="454.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.55%)</title><rect x="451" y="260" width="7" height="15" fill="rgb(252,66,40)"/><text x="454.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.55%)</title><rect x="451" y="276" width="7" height="15" fill="rgb(226,191,17)"/><text x="454.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.55%)</title><rect x="451" y="292" width="7" height="15" fill="rgb(226,69,2)"/><text x="454.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.27%)</title><rect x="454" y="308" width="4" height="15" fill="rgb(239,109,8)"/><text x="457.00" y="318.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.27%)</title><rect x="454" y="324" width="4" height="15" fill="rgb(205,159,2)"/><text x="457.00" y="334.50"></text></g><g><title>0x7fa90258554f (?) (1 samples, 0.27%)</title><rect x="458" y="244" width="3" height="15" fill="rgb(253,87,37)"/><text x="461.00" y="254.50"></text></g><g><title>0x7fa90258b65e (?) (1 samples, 0.27%)</title><rect x="458" y="260" width="3" height="15" fill="rgb(247,184,0)"/><text x="461.00" y="270.50"></text></g><g><title>0x7fa90258b50f (?) (1 samples, 0.27%)</title><rect x="458" y="276" width="3" height="15" fill="rgb(219,165,20)"/><text x="461.00" y="286.50"></text></g><g><title>0x7fa902591d6c (?) (1 samples, 0.27%)</title><rect x="458" y="292" width="3" height="15" fill="rgb(227,37,12)"/><text x="461.00" y="302.50"></text></g><g><title>0x7fa90ba68cff (?) (1 samples, 0.27%)</title><rect x="458" y="308" width="3" height="15" fill="rgb(216,184,11)"/><text x="461.00" y="318.50"></text></g><g><title>0x7fa90257627c (?) (1 samples, 0.27%)</title><rect x="458" y="324" width="3" height="15" fill="rgb(231,43,44)"/><text x="461.00" y="334.50"></text></g><g><title>0x7fa9025755b7 (?) (1 samples, 0.27%)</title><rect x="458" y="340" width="3" height="15" fill="rgb(217,107,17)"/><text x="461.00" y="350.50"></text></g><g><title>0x7fa90ba72ab9 (libgomp.so.1.0.0) (2 samples, 0.55%)</title><rect x="461" y="468" width="6" height="15" fill="rgb(209,229,33)"/><text x="464.00" y="478.50"></text></g><g><title>0x7fa90ba73eab (libgomp.so.1.0.0) (2 samples, 0.55%)</title><rect x="461" y="484" width="6" height="15" fill="rgb(210,137,41)"/><text x="464.00" y="494.50"></text></g><g><title>std::isnan (cmath) (3 samples, 0.82%)</title><rect x="483" y="532" width="10" height="15" fill="rgb(218,59,1)"/><text x="486.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (2 samples, 0.55%)</title><rect x="493" y="564" width="7" height="15" fill="rgb(235,214,34)"/><text x="496.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (2 samples, 0.55%)</title><rect x="493" y="580" width="7" height="15" fill="rgb(223,73,40)"/><text x="496.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (2 samples, 0.55%)</title><rect x="493" y="596" width="7" height="15" fill="rgb(250,23,9)"/><text x="496.00" y="606.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (19 samples, 5.19%)</title><rect x="458" y="100" width="61" height="15" fill="rgb(245,93,50)"/><text x="461.00" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (19 samples, 5.19%)</title><rect x="458" y="116" width="61" height="15" fill="rgb(217,7,34)"/><text x="461.00" y="126.50">time_p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (19 samples, 5.19%)</title><rect x="458" y="132" width="61" height="15" fill="rgb(243,124,34)"/><text x="461.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (19 samples, 5.19%)</title><rect x="458" y="148" width="61" height="15" fill="rgb(253,63,11)"/><text x="461.00" y="158.50">run (m..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (19 samples, 5.19%)</title><rect x="458" y="164" width="61" height="15" fill="rgb(243,35,39)"/><text x="461.00" y="174.50">_run_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (19 samples, 5.19%)</title><rect x="458" y="180" width="61" height="15" fill="rgb(227,67,8)"/><text x="461.00" y="190.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (19 samples, 5.19%)</title><rect x="458" y="196" width="61" height="15" fill="rgb(219,145,14)"/><text x="461.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (19 samples, 5.19%)</title><rect x="458" y="212" width="61" height="15" fill="rgb(224,15,29)"/><text x="461.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (19 samples, 5.19%)</title><rect x="458" y="228" width="61" height="15" fill="rgb(250,16,2)"/><text x="461.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (18 samples, 4.92%)</title><rect x="461" y="244" width="58" height="15" fill="rgb(209,158,38)"/><text x="464.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (18 samples, 4.92%)</title><rect x="461" y="260" width="58" height="15" fill="rgb(227,134,43)"/><text x="464.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (18 samples, 4.92%)</title><rect x="461" y="276" width="58" height="15" fill="rgb(250,135,0)"/><text x="464.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (18 samples, 4.92%)</title><rect x="461" y="292" width="58" height="15" fill="rgb(236,182,24)"/><text x="464.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (18 samples, 4.92%)</title><rect x="461" y="308" width="58" height="15" fill="rgb(222,42,29)"/><text x="464.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (18 samples, 4.92%)</title><rect x="461" y="324" width="58" height="15" fill="rgb(254,123,36)"/><text x="464.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (18 samples, 4.92%)</title><rect x="461" y="340" width="58" height="15" fill="rgb(249,3,20)"/><text x="464.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h) (18 samples, 4.92%)</title><rect x="461" y="356" width="58" height="15" fill="rgb(234,47,4)"/><text x="464.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (18 samples, 4.92%)</title><rect x="461" y="372" width="58" height="15" fill="rgb(220,152,15)"/><text x="464.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h) (18 samples, 4.92%)</title><rect x="461" y="388" width="58" height="15" fill="rgb(252,135,30)"/><text x="464.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (18 samples, 4.92%)</title><rect x="461" y="404" width="58" height="15" fill="rgb(237,89,7)"/><text x="464.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (18 samples, 4.92%)</title><rect x="461" y="420" width="58" height="15" fill="rgb(253,162,51)"/><text x="464.00" y="430.50">Runtim..</text></g><g><title>pybind11::array::size (numpy.h) (18 samples, 4.92%)</title><rect x="461" y="436" width="58" height="15" fill="rgb(230,33,22)"/><text x="464.00" y="446.50">pybind..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (18 samples, 4.92%)</title><rect x="461" y="452" width="58" height="15" fill="rgb(206,202,53)"/><text x="464.00" y="462.50">std::a..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (16 samples, 4.37%)</title><rect x="467" y="468" width="52" height="15" fill="rgb(232,2,50)"/><text x="470.00" y="478.50">GOMP_..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (16 samples, 4.37%)</title><rect x="467" y="484" width="52" height="15" fill="rgb(236,44,9)"/><text x="470.00" y="494.50">Runti..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (16 samples, 4.37%)</title><rect x="467" y="500" width="52" height="15" fill="rgb(232,206,6)"/><text x="470.00" y="510.50">std::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (16 samples, 4.37%)</title><rect x="467" y="516" width="52" height="15" fill="rgb(224,91,20)"/><text x="470.00" y="526.50">Runti..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (8 samples, 2.19%)</title><rect x="493" y="532" width="26" height="15" fill="rgb(230,134,39)"/><text x="496.00" y="542.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (8 samples, 2.19%)</title><rect x="493" y="548" width="26" height="15" fill="rgb(245,143,39)"/><text x="496.00" y="558.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (6 samples, 1.64%)</title><rect x="500" y="564" width="19" height="15" fill="rgb(252,209,6)"/><text x="503.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (6 samples, 1.64%)</title><rect x="500" y="580" width="19" height="15" fill="rgb(235,180,3)"/><text x="503.00" y="590.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (20 samples, 5.46%)</title><rect x="458" y="68" width="64" height="15" fill="rgb(206,220,0)"/><text x="461.00" y="78.50">profile..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (20 samples, 5.46%)</title><rect x="458" y="84" width="64" height="15" fill="rgb(213,219,1)"/><text x="461.00" y="94.50">setup_p..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="519" y="100" width="3" height="15" fill="rgb(219,158,45)"/><text x="522.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="519" y="116" width="3" height="15" fill="rgb(226,140,50)"/><text x="522.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="519" y="132" width="3" height="15" fill="rgb(206,13,16)"/><text x="522.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="519" y="148" width="3" height="15" fill="rgb(217,80,19)"/><text x="522.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="519" y="164" width="3" height="15" fill="rgb(207,215,51)"/><text x="522.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.27%)</title><rect x="519" y="180" width="3" height="15" fill="rgb(237,76,25)"/><text x="522.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.27%)</title><rect x="519" y="196" width="3" height="15" fill="rgb(227,30,28)"/><text x="522.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="212" width="3" height="15" fill="rgb(253,12,6)"/><text x="522.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="228" width="3" height="15" fill="rgb(234,34,8)"/><text x="522.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="244" width="3" height="15" fill="rgb(254,179,24)"/><text x="522.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="519" y="260" width="3" height="15" fill="rgb(238,40,3)"/><text x="522.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="276" width="3" height="15" fill="rgb(242,139,34)"/><text x="522.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.27%)</title><rect x="519" y="292" width="3" height="15" fill="rgb(209,168,48)"/><text x="522.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="308" width="3" height="15" fill="rgb(226,194,40)"/><text x="522.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(216,150,30)"/><text x="522.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="340" width="3" height="15" fill="rgb(216,191,50)"/><text x="522.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="519" y="356" width="3" height="15" fill="rgb(227,124,48)"/><text x="522.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="372" width="3" height="15" fill="rgb(238,116,4)"/><text x="522.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.27%)</title><rect x="519" y="388" width="3" height="15" fill="rgb(231,161,7)"/><text x="522.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="404" width="3" height="15" fill="rgb(240,210,46)"/><text x="522.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="420" width="3" height="15" fill="rgb(230,83,5)"/><text x="522.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="436" width="3" height="15" fill="rgb(232,132,14)"/><text x="522.00" y="446.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="452" width="3" height="15" fill="rgb(252,177,25)"/><text x="522.00" y="462.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="468" width="3" height="15" fill="rgb(209,42,53)"/><text x="522.00" y="478.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="519" y="484" width="3" height="15" fill="rgb(215,27,17)"/><text x="522.00" y="494.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="519" y="500" width="3" height="15" fill="rgb(228,42,48)"/><text x="522.00" y="510.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="519" y="516" width="3" height="15" fill="rgb(218,167,8)"/><text x="522.00" y="526.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.27%)</title><rect x="519" y="532" width="3" height="15" fill="rgb(243,0,37)"/><text x="522.00" y="542.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (13 samples, 3.55%)</title><rect x="574" y="196" width="42" height="15" fill="rgb(241,178,6)"/><text x="577.00" y="206.50">&lt;ge..</text></g><g><title>delayed (joblib/parallel.py) (7 samples, 1.91%)</title><rect x="593" y="212" width="23" height="15" fill="rgb(222,54,29)"/><text x="596.00" y="222.50">d..</text></g><g><title>update_wrapper (functools.py) (7 samples, 1.91%)</title><rect x="593" y="228" width="23" height="15" fill="rgb(246,172,9)"/><text x="596.00" y="238.50">u..</text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.82%)</title><rect x="616" y="196" width="9" height="15" fill="rgb(239,23,46)"/><text x="619.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.55%)</title><rect x="641" y="212" width="7" height="15" fill="rgb(221,127,41)"/><text x="644.00" y="222.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.27%)</title><rect x="648" y="212" width="3" height="15" fill="rgb(218,204,24)"/><text x="651.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (5 samples, 1.37%)</title><rect x="654" y="228" width="16" height="15" fill="rgb(230,53,6)"/><text x="657.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py) (1 samples, 0.27%)</title><rect x="667" y="244" width="3" height="15" fill="rgb(208,48,42)"/><text x="670.00" y="254.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.27%)</title><rect x="719" y="292" width="3" height="15" fill="rgb(207,107,54)"/><text x="722.00" y="302.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.27%)</title><rect x="722" y="292" width="3" height="15" fill="rgb(239,220,20)"/><text x="725.00" y="302.50"></text></g><g><title>0x7fa91b4eff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="745" y="324" width="6" height="15" fill="rgb(253,75,14)"/><text x="748.00" y="334.50"></text></g><g><title>0x7fa91b4dfd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="745" y="340" width="6" height="15" fill="rgb(238,90,28)"/><text x="748.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.55%)</title><rect x="745" y="356" width="6" height="15" fill="rgb(250,203,45)"/><text x="748.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="748" y="372" width="3" height="15" fill="rgb(238,54,24)"/><text x="751.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="748" y="388" width="3" height="15" fill="rgb(240,18,38)"/><text x="751.00" y="398.50"></text></g><g><title>0x7fa91b4d810c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="751" y="404" width="3" height="15" fill="rgb(237,136,48)"/><text x="754.00" y="414.50"></text></g><g><title>0x7fa91b4d8249 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="754" y="404" width="3" height="15" fill="rgb(208,25,4)"/><text x="757.00" y="414.50"></text></g><g><title>0x7fa91b4fe2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.64%)</title><rect x="751" y="356" width="19" height="15" fill="rgb(224,19,0)"/><text x="754.00" y="366.50"></text></g><g><title>0x7fa91b4e2d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.64%)</title><rect x="751" y="372" width="19" height="15" fill="rgb(231,59,22)"/><text x="754.00" y="382.50"></text></g><g><title>0x7fa91b4e2666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.64%)</title><rect x="751" y="388" width="19" height="15" fill="rgb(221,171,18)"/><text x="754.00" y="398.50"></text></g><g><title>0x7fa91b4d82fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.09%)</title><rect x="757" y="404" width="13" height="15" fill="rgb(218,75,34)"/><text x="760.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 1.09%)</title><rect x="757" y="420" width="13" height="15" fill="rgb(230,27,38)"/><text x="760.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.09%)</title><rect x="757" y="436" width="13" height="15" fill="rgb(205,161,23)"/><text x="760.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.55%)</title><rect x="764" y="452" width="6" height="15" fill="rgb(209,185,2)"/><text x="767.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.55%)</title><rect x="764" y="468" width="6" height="15" fill="rgb(229,71,48)"/><text x="767.00" y="478.50"></text></g><g><title>0x7fa91b4fe474 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="770" y="356" width="4" height="15" fill="rgb(207,16,21)"/><text x="773.00" y="366.50"></text></g><g><title>0x7fa91b4fe511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="774" y="356" width="3" height="15" fill="rgb(243,33,48)"/><text x="777.00" y="366.50"></text></g><g><title>0x7fa941b8a151 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="774" y="372" width="3" height="15" fill="rgb(219,178,40)"/><text x="777.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.27%)</title><rect x="780" y="388" width="3" height="15" fill="rgb(213,76,6)"/><text x="783.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.27%)</title><rect x="780" y="404" width="3" height="15" fill="rgb(227,94,36)"/><text x="783.00" y="414.50"></text></g><g><title>0x7fa91b4fe592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.82%)</title><rect x="777" y="356" width="9" height="15" fill="rgb(227,111,47)"/><text x="780.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 0.82%)</title><rect x="777" y="372" width="9" height="15" fill="rgb(209,46,11)"/><text x="780.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.27%)</title><rect x="783" y="388" width="3" height="15" fill="rgb(225,227,25)"/><text x="786.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.27%)</title><rect x="783" y="404" width="3" height="15" fill="rgb(217,32,8)"/><text x="786.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="783" y="420" width="3" height="15" fill="rgb(223,164,29)"/><text x="786.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.27%)</title><rect x="783" y="436" width="3" height="15" fill="rgb(221,77,23)"/><text x="786.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.27%)</title><rect x="783" y="452" width="3" height="15" fill="rgb(215,220,30)"/><text x="786.00" y="462.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="783" y="468" width="3" height="15" fill="rgb(254,135,10)"/><text x="786.00" y="478.50"></text></g><g><title>0x7fa91b4fe687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="786" y="356" width="4" height="15" fill="rgb(239,146,3)"/><text x="789.00" y="366.50"></text></g><g><title>0x7fa91b4fe698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="790" y="356" width="6" height="15" fill="rgb(232,95,2)"/><text x="793.00" y="366.50"></text></g><g><title>0x7fa91b4fe6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.09%)</title><rect x="796" y="356" width="13" height="15" fill="rgb(235,118,22)"/><text x="799.00" y="366.50"></text></g><g><title>0x7fa91b4fe6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.37%)</title><rect x="809" y="356" width="16" height="15" fill="rgb(222,170,44)"/><text x="812.00" y="366.50"></text></g><g><title>0x7fa91b4fe6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="825" y="356" width="7" height="15" fill="rgb(243,139,40)"/><text x="828.00" y="366.50"></text></g><g><title>0x7fa91b4fe6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="832" y="356" width="3" height="15" fill="rgb(252,49,6)"/><text x="835.00" y="366.50"></text></g><g><title>0x7fa91b4fe6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="835" y="356" width="3" height="15" fill="rgb(206,41,28)"/><text x="838.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="835" y="372" width="3" height="15" fill="rgb(254,147,40)"/><text x="838.00" y="382.50"></text></g><g><title>0x7fa91b4fe7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="838" y="356" width="3" height="15" fill="rgb(224,33,28)"/><text x="841.00" y="366.50"></text></g><g><title>0x7fa91b4fe7a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="841" y="356" width="4" height="15" fill="rgb(226,37,13)"/><text x="844.00" y="366.50"></text></g><g><title>0x7fa91b4d6529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="845" y="372" width="3" height="15" fill="rgb(243,70,53)"/><text x="848.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.27%)</title><rect x="845" y="388" width="3" height="15" fill="rgb(209,204,7)"/><text x="848.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.27%)</title><rect x="845" y="404" width="3" height="15" fill="rgb(232,10,46)"/><text x="848.00" y="414.50"></text></g><g><title>0x7fa91b4effa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 8.47%)</title><rect x="751" y="324" width="100" height="15" fill="rgb(238,210,2)"/><text x="754.00" y="334.50">0x7fa91b4eff..</text></g><g><title>0x7fa91b4ff405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 8.47%)</title><rect x="751" y="340" width="100" height="15" fill="rgb(218,50,23)"/><text x="754.00" y="350.50">0x7fa91b4ff4..</text></g><g><title>0x7fa91b4fec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="845" y="356" width="6" height="15" fill="rgb(224,218,13)"/><text x="848.00" y="366.50"></text></g><g><title>0x7fa91b4d65f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="848" y="372" width="3" height="15" fill="rgb(210,129,32)"/><text x="851.00" y="382.50"></text></g><g><title>0x7fa91b4d62bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="848" y="388" width="3" height="15" fill="rgb(229,86,37)"/><text x="851.00" y="398.50"></text></g><g><title>0x7fa91b4d5bad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="848" y="404" width="3" height="15" fill="rgb(211,92,42)"/><text x="851.00" y="414.50"></text></g><g><title>0x7fa91b4f0057 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="851" y="324" width="3" height="15" fill="rgb(207,169,12)"/><text x="854.00" y="334.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.27%)</title><rect x="861" y="372" width="3" height="15" fill="rgb(217,195,21)"/><text x="864.00" y="382.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.27%)</title><rect x="864" y="388" width="3" height="15" fill="rgb(253,116,38)"/><text x="867.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.55%)</title><rect x="864" y="372" width="6" height="15" fill="rgb(205,202,8)"/><text x="867.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.27%)</title><rect x="867" y="388" width="3" height="15" fill="rgb(217,95,13)"/><text x="870.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.27%)</title><rect x="870" y="404" width="4" height="15" fill="rgb(213,112,49)"/><text x="873.00" y="414.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (7 samples, 1.91%)</title><rect x="854" y="356" width="23" height="15" fill="rgb(246,107,6)"/><text x="857.00" y="366.50">P..</text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.55%)</title><rect x="870" y="372" width="7" height="15" fill="rgb(251,45,35)"/><text x="873.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.55%)</title><rect x="870" y="388" width="7" height="15" fill="rgb(211,223,51)"/><text x="873.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="874" y="404" width="3" height="15" fill="rgb(253,26,29)"/><text x="877.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="874" y="420" width="3" height="15" fill="rgb(237,51,18)"/><text x="877.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.27%)</title><rect x="874" y="436" width="3" height="15" fill="rgb(231,159,1)"/><text x="877.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="874" y="452" width="3" height="15" fill="rgb(247,69,23)"/><text x="877.00" y="462.50"></text></g><g><title>0x7fa941aadd2a (libc-2.29.so) (1 samples, 0.27%)</title><rect x="874" y="468" width="3" height="15" fill="rgb(206,80,8)"/><text x="877.00" y="478.50"></text></g><g><title>0x7fa91b4f005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.19%)</title><rect x="854" y="324" width="26" height="15" fill="rgb(235,150,24)"/><text x="857.00" y="334.50">0..</text></g><g><title>array_take (methods.c) (8 samples, 2.19%)</title><rect x="854" y="340" width="26" height="15" fill="rgb(252,191,49)"/><text x="857.00" y="350.50">a..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.27%)</title><rect x="877" y="356" width="3" height="15" fill="rgb(216,0,51)"/><text x="880.00" y="366.50"></text></g><g><title>0x7fa91b4f010e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="880" y="324" width="3" height="15" fill="rgb(223,146,45)"/><text x="883.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.27%)</title><rect x="883" y="356" width="3" height="15" fill="rgb(214,104,52)"/><text x="886.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.27%)</title><rect x="883" y="372" width="3" height="15" fill="rgb(243,191,10)"/><text x="886.00" y="382.50"></text></g><g><title>0x7fa91b4f014f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="883" y="324" width="7" height="15" fill="rgb(247,57,27)"/><text x="886.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.55%)</title><rect x="883" y="340" width="7" height="15" fill="rgb(246,103,48)"/><text x="886.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="886" y="356" width="4" height="15" fill="rgb(242,13,45)"/><text x="889.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="886" y="372" width="4" height="15" fill="rgb(217,222,8)"/><text x="889.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.27%)</title><rect x="886" y="388" width="4" height="15" fill="rgb(210,207,10)"/><text x="889.00" y="398.50"></text></g><g><title>0x7fa941aacb87 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="886" y="404" width="4" height="15" fill="rgb(225,203,49)"/><text x="889.00" y="414.50"></text></g><g><title>0x7fa91b4f018f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="890" y="324" width="3" height="15" fill="rgb(230,96,0)"/><text x="893.00" y="334.50"></text></g><g><title>0x7fa91b4f01bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="893" y="324" width="6" height="15" fill="rgb(218,168,25)"/><text x="896.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.27%)</title><rect x="896" y="340" width="3" height="15" fill="rgb(252,96,21)"/><text x="899.00" y="350.50"></text></g><g><title>0x7fa941acd124 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="896" y="356" width="3" height="15" fill="rgb(205,198,52)"/><text x="899.00" y="366.50"></text></g><g><title>0x7fa91b4f0d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (49 samples, 13.39%)</title><rect x="745" y="308" width="158" height="15" fill="rgb(217,105,19)"/><text x="748.00" y="318.50">0x7fa91b4f0d2e (skle..</text></g><g><title>0x7fa91b4f08c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="899" y="324" width="4" height="15" fill="rgb(215,166,16)"/><text x="902.00" y="334.50"></text></g><g><title>0x7fa941accdbb (libc-2.29.so) (1 samples, 0.27%)</title><rect x="903" y="372" width="3" height="15" fill="rgb(245,121,12)"/><text x="906.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.55%)</title><rect x="903" y="308" width="6" height="15" fill="rgb(235,208,24)"/><text x="906.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.55%)</title><rect x="903" y="324" width="6" height="15" fill="rgb(213,120,37)"/><text x="906.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.55%)</title><rect x="903" y="340" width="6" height="15" fill="rgb(238,110,51)"/><text x="906.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.55%)</title><rect x="903" y="356" width="6" height="15" fill="rgb(238,105,14)"/><text x="906.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="906" y="372" width="3" height="15" fill="rgb(224,147,41)"/><text x="909.00" y="382.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.09%)</title><rect x="925" y="340" width="13" height="15" fill="rgb(224,196,34)"/><text x="928.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 3.28%)</title><rect x="909" y="308" width="39" height="15" fill="rgb(219,8,44)"/><text x="912.00" y="318.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 3.01%)</title><rect x="912" y="324" width="36" height="15" fill="rgb(249,127,7)"/><text x="915.00" y="334.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.82%)</title><rect x="938" y="340" width="10" height="15" fill="rgb(253,219,31)"/><text x="941.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (70 samples, 19.13%)</title><rect x="725" y="292" width="226" height="15" fill="rgb(234,162,45)"/><text x="728.00" y="302.50">predict (sklearn/tree/_classe..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.27%)</title><rect x="948" y="308" width="3" height="15" fill="rgb(216,134,50)"/><text x="951.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="951" y="308" width="3" height="15" fill="rgb(207,122,28)"/><text x="954.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="951" y="324" width="3" height="15" fill="rgb(219,175,29)"/><text x="954.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.27%)</title><rect x="951" y="340" width="3" height="15" fill="rgb(234,88,7)"/><text x="954.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.27%)</title><rect x="954" y="324" width="3" height="15" fill="rgb(213,224,13)"/><text x="957.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.27%)</title><rect x="961" y="388" width="3" height="15" fill="rgb(245,169,50)"/><text x="964.00" y="398.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (3 samples, 0.82%)</title><rect x="957" y="372" width="10" height="15" fill="rgb(245,155,38)"/><text x="960.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.27%)</title><rect x="964" y="388" width="3" height="15" fill="rgb(210,100,46)"/><text x="967.00" y="398.50"></text></g><g><title>0x7fa941a64a45 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="964" y="404" width="3" height="15" fill="rgb(223,149,0)"/><text x="967.00" y="414.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.09%)</title><rect x="957" y="340" width="13" height="15" fill="rgb(207,23,11)"/><text x="960.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.09%)</title><rect x="957" y="356" width="13" height="15" fill="rgb(244,177,52)"/><text x="960.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.27%)</title><rect x="967" y="372" width="3" height="15" fill="rgb(243,160,36)"/><text x="970.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.27%)</title><rect x="967" y="388" width="3" height="15" fill="rgb(208,226,53)"/><text x="970.00" y="398.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.27%)</title><rect x="967" y="404" width="3" height="15" fill="rgb(240,198,33)"/><text x="970.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.19%)</title><rect x="957" y="324" width="26" height="15" fill="rgb(218,22,1)"/><text x="960.00" y="334.50">e..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 1.09%)</title><rect x="970" y="340" width="13" height="15" fill="rgb(222,141,26)"/><text x="973.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 1.09%)</title><rect x="970" y="356" width="13" height="15" fill="rgb(250,81,22)"/><text x="973.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (4 samples, 1.09%)</title><rect x="970" y="372" width="13" height="15" fill="rgb(228,126,15)"/><text x="973.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (4 samples, 1.09%)</title><rect x="970" y="388" width="13" height="15" fill="rgb(230,8,38)"/><text x="973.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.82%)</title><rect x="973" y="404" width="10" height="15" fill="rgb(209,44,50)"/><text x="976.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (90 samples, 24.59%)</title><rect x="696" y="260" width="290" height="15" fill="rgb(251,196,18)"/><text x="699.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (89 samples, 24.32%)</title><rect x="699" y="276" width="287" height="15" fill="rgb(229,152,4)"/><text x="702.00" y="286.50">_accumulate_prediction (sklearn/ensemb..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.01%)</title><rect x="951" y="292" width="35" height="15" fill="rgb(246,23,39)"/><text x="954.00" y="302.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.73%)</title><rect x="954" y="308" width="32" height="15" fill="rgb(213,23,22)"/><text x="957.00" y="318.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.27%)</title><rect x="983" y="324" width="3" height="15" fill="rgb(227,186,48)"/><text x="986.00" y="334.50"></text></g><g><title>__exit__ (joblib/parallel.py) (3 samples, 0.82%)</title><rect x="986" y="260" width="10" height="15" fill="rgb(217,147,51)"/><text x="989.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (2 samples, 0.55%)</title><rect x="990" y="276" width="6" height="15" fill="rgb(242,43,8)"/><text x="993.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (122 samples, 33.33%)</title><rect x="625" y="196" width="394" height="15" fill="rgb(207,160,10)"/><text x="628.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (114 samples, 31.15%)</title><rect x="651" y="212" width="368" height="15" fill="rgb(208,123,38)"/><text x="654.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (108 samples, 29.51%)</title><rect x="670" y="228" width="349" height="15" fill="rgb(250,19,31)"/><text x="673.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (106 samples, 28.96%)</title><rect x="677" y="244" width="342" height="15" fill="rgb(218,40,49)"/><text x="680.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (7 samples, 1.91%)</title><rect x="996" y="260" width="23" height="15" fill="rgb(248,36,23)"/><text x="999.00" y="270.50">_..</text></g><g><title>0x7fa941ac2e54 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1015" y="276" width="4" height="15" fill="rgb(219,34,50)"/><text x="1018.00" y="286.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.27%)</title><rect x="1054" y="212" width="3" height="15" fill="rgb(252,173,24)"/><text x="1057.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (3 samples, 0.82%)</title><rect x="1057" y="212" width="10" height="15" fill="rgb(216,221,6)"/><text x="1060.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.27%)</title><rect x="1064" y="228" width="3" height="15" fill="rgb(232,134,29)"/><text x="1067.00" y="238.50"></text></g><g><title>get (queue.py) (16 samples, 4.37%)</title><rect x="1019" y="196" width="51" height="15" fill="rgb(213,197,34)"/><text x="1022.00" y="206.50">get (..</text></g><g><title>notify (threading.py) (1 samples, 0.27%)</title><rect x="1067" y="212" width="3" height="15" fill="rgb(243,227,49)"/><text x="1070.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.27%)</title><rect x="1067" y="228" width="3" height="15" fill="rgb(216,157,32)"/><text x="1070.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="1086" y="212" width="4" height="15" fill="rgb(252,26,27)"/><text x="1089.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (17 samples, 4.64%)</title><rect x="1070" y="196" width="55" height="15" fill="rgb(251,113,7)"/><text x="1073.00" y="206.50">get_n..</text></g><g><title>get_active_backend (joblib/parallel.py) (11 samples, 3.01%)</title><rect x="1090" y="212" width="35" height="15" fill="rgb(224,150,26)"/><text x="1093.00" y="222.50">ge..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.82%)</title><rect x="1115" y="228" width="10" height="15" fill="rgb(231,2,44)"/><text x="1118.00" y="238.50"></text></g><g><title>_put (queue.py) (1 samples, 0.27%)</title><rect x="1144" y="212" width="4" height="15" fill="rgb(250,133,20)"/><text x="1147.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (194 samples, 53.01%)</title><rect x="532" y="180" width="625" height="15" fill="rgb(219,105,36)"/><text x="535.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (10 samples, 2.73%)</title><rect x="1125" y="196" width="32" height="15" fill="rgb(242,164,8)"/><text x="1128.00" y="206.50">pu..</text></g><g><title>notify (threading.py) (3 samples, 0.82%)</title><rect x="1148" y="212" width="9" height="15" fill="rgb(212,187,42)"/><text x="1151.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (200 samples, 54.64%)</title><rect x="525" y="164" width="645" height="15" fill="rgb(245,67,38)"/><text x="528.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (4 samples, 1.09%)</title><rect x="1157" y="180" width="13" height="15" fill="rgb(229,51,38)"/><text x="1160.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.27%)</title><rect x="1170" y="164" width="3" height="15" fill="rgb(242,67,48)"/><text x="1173.00" y="174.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py) (1 samples, 0.27%)</title><rect x="1173" y="164" width="4" height="15" fill="rgb(234,30,27)"/><text x="1176.00" y="174.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (204 samples, 55.74%)</title><rect x="522" y="68" width="658" height="15" fill="rgb(223,18,5)"/><text x="525.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (204 samples, 55.74%)</title><rect x="522" y="84" width="658" height="15" fill="rgb(244,187,29)"/><text x="525.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (204 samples, 55.74%)</title><rect x="522" y="100" width="658" height="15" fill="rgb(211,124,46)"/><text x="525.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (204 samples, 55.74%)</title><rect x="522" y="116" width="658" height="15" fill="rgb(223,211,47)"/><text x="525.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (204 samples, 55.74%)</title><rect x="522" y="132" width="658" height="15" fill="rgb(223,163,2)"/><text x="525.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (204 samples, 55.74%)</title><rect x="522" y="148" width="658" height="15" fill="rgb(239,196,54)"/><text x="525.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="1177" y="164" width="3" height="15" fill="rgb(238,127,23)"/><text x="1180.00" y="174.50"></text></g><g><title>kind (inspect.py) (1 samples, 0.27%)</title><rect x="1180" y="212" width="3" height="15" fill="rgb(232,111,24)"/><text x="1183.00" y="222.50"></text></g><g><title>all (366 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(215,223,24)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (366 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(209,113,30)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1000_4_12_float_.py) (3 samples, 0.82%)</title><rect x="1180" y="68" width="10" height="15" fill="rgb(249,93,10)"/><text x="1183.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (3 samples, 0.82%)</title><rect x="1180" y="84" width="10" height="15" fill="rgb(250,133,8)"/><text x="1183.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.82%)</title><rect x="1180" y="100" width="10" height="15" fill="rgb(239,224,32)"/><text x="1183.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (3 samples, 0.82%)</title><rect x="1180" y="116" width="10" height="15" fill="rgb(226,110,40)"/><text x="1183.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (3 samples, 0.82%)</title><rect x="1180" y="132" width="10" height="15" fill="rgb(220,141,29)"/><text x="1183.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (3 samples, 0.82%)</title><rect x="1180" y="148" width="10" height="15" fill="rgb(219,60,21)"/><text x="1183.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (3 samples, 0.82%)</title><rect x="1180" y="164" width="10" height="15" fill="rgb(216,56,49)"/><text x="1183.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (3 samples, 0.82%)</title><rect x="1180" y="180" width="10" height="15" fill="rgb(246,19,28)"/><text x="1183.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (3 samples, 0.82%)</title><rect x="1180" y="196" width="10" height="15" fill="rgb(221,105,28)"/><text x="1183.00" y="206.50"></text></g><g><title>signature (inspect.py) (2 samples, 0.55%)</title><rect x="1183" y="212" width="7" height="15" fill="rgb(217,75,26)"/><text x="1186.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (2 samples, 0.55%)</title><rect x="1183" y="228" width="7" height="15" fill="rgb(211,192,32)"/><text x="1186.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (2 samples, 0.55%)</title><rect x="1183" y="244" width="7" height="15" fill="rgb(250,98,16)"/><text x="1186.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py) (2 samples, 0.55%)</title><rect x="1183" y="260" width="7" height="15" fill="rgb(230,209,31)"/><text x="1186.00" y="270.50"></text></g><g><title>__init__ (inspect.py) (2 samples, 0.55%)</title><rect x="1183" y="276" width="7" height="15" fill="rgb(219,2,34)"/><text x="1186.00" y="286.50"></text></g></g></svg>