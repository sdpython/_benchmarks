<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1814" onload="init(evt)" viewBox="0 0 1200 1814" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1814" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1797.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1797.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:1) (1 samples, 0.26%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(238,42,53)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(232,4,6)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(223,114,9)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(221,207,46)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(244,18,46)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(219,177,31)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.26%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(205,225,23)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(247,149,46)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(213,37,16)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(231,149,32)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(208,161,4)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(224,197,44)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(229,151,51)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(233,41,9)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.26%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(208,128,12)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(219,163,2)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(237,222,49)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(234,128,37)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(232,155,8)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(254,213,15)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:13) (1 samples, 0.26%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(217,69,24)"/><text x="13.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(237,109,5)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(229,85,42)"/><text x="13.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(226,22,6)"/><text x="13.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(228,68,31)"/><text x="13.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(219,213,35)"/><text x="13.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py:6) (1 samples, 0.26%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(222,182,19)"/><text x="13.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(229,47,25)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(225,181,11)"/><text x="13.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(241,9,15)"/><text x="13.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(250,220,51)"/><text x="13.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(236,10,49)"/><text x="13.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py:13) (1 samples, 0.26%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(248,118,42)"/><text x="13.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(234,49,50)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(209,86,23)"/><text x="13.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(243,184,6)"/><text x="13.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(226,134,15)"/><text x="13.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(229,164,9)"/><text x="13.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py:51) (1 samples, 0.26%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(218,25,43)"/><text x="13.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(229,215,50)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(218,62,27)"/><text x="13.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(240,38,28)"/><text x="13.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(230,83,7)"/><text x="13.00" y="830.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.26%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(228,0,18)"/><text x="13.00" y="846.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.26%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(234,42,46)"/><text x="13.00" y="862.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(233,166,35)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.26%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(247,131,46)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.26%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(216,38,12)"/><text x="16.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.52%)</title><rect x="13" y="852" width="6" height="15" fill="rgb(221,0,9)"/><text x="16.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.52%)</title><rect x="13" y="868" width="6" height="15" fill="rgb(254,123,48)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.52%)</title><rect x="13" y="884" width="6" height="15" fill="rgb(207,133,12)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.52%)</title><rect x="13" y="900" width="6" height="15" fill="rgb(220,51,5)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.52%)</title><rect x="13" y="916" width="6" height="15" fill="rgb(248,209,50)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.52%)</title><rect x="13" y="932" width="6" height="15" fill="rgb(208,160,22)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.52%)</title><rect x="13" y="948" width="6" height="15" fill="rgb(232,157,30)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.52%)</title><rect x="13" y="964" width="6" height="15" fill="rgb(231,90,29)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.52%)</title><rect x="13" y="980" width="6" height="15" fill="rgb(229,93,14)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:214) (1 samples, 0.26%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(228,75,2)"/><text x="19.00" y="1006.50"></text></g><g><title>_parse_letter_version (pkg_resources/_vendor/packaging/version.py:321) (1 samples, 0.26%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(250,63,49)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.26%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(231,145,50)"/><text x="22.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.26%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(238,159,40)"/><text x="22.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.26%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(254,13,9)"/><text x="22.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.26%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(225,134,2)"/><text x="22.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.26%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(221,184,16)"/><text x="22.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.26%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(214,94,10)"/><text x="22.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:2) (4 samples, 1.04%)</title><rect x="13" y="148" width="12" height="15" fill="rgb(229,125,4)"/><text x="16.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="164" width="12" height="15" fill="rgb(206,175,30)"/><text x="16.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.04%)</title><rect x="13" y="180" width="12" height="15" fill="rgb(218,184,16)"/><text x="16.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="196" width="12" height="15" fill="rgb(218,20,52)"/><text x="16.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="212" width="12" height="15" fill="rgb(235,44,13)"/><text x="16.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="13" y="228" width="12" height="15" fill="rgb(222,128,0)"/><text x="16.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="13" y="244" width="12" height="15" fill="rgb(236,104,12)"/><text x="16.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="13" y="260" width="12" height="15" fill="rgb(245,112,32)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="276" width="12" height="15" fill="rgb(205,169,10)"/><text x="16.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.04%)</title><rect x="13" y="292" width="12" height="15" fill="rgb(211,133,37)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="308" width="12" height="15" fill="rgb(252,53,49)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="13" y="324" width="12" height="15" fill="rgb(229,77,30)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="13" y="340" width="12" height="15" fill="rgb(211,59,36)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="13" y="356" width="12" height="15" fill="rgb(236,123,15)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="372" width="12" height="15" fill="rgb(250,21,14)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.04%)</title><rect x="13" y="388" width="12" height="15" fill="rgb(210,156,35)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="404" width="12" height="15" fill="rgb(227,229,53)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="13" y="420" width="12" height="15" fill="rgb(234,219,1)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="13" y="436" width="12" height="15" fill="rgb(238,7,15)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="13" y="452" width="12" height="15" fill="rgb(213,7,17)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="468" width="12" height="15" fill="rgb(248,188,14)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.04%)</title><rect x="13" y="484" width="12" height="15" fill="rgb(235,221,18)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="500" width="12" height="15" fill="rgb(250,111,2)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="13" y="516" width="12" height="15" fill="rgb(211,71,24)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="13" y="532" width="12" height="15" fill="rgb(250,37,48)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="13" y="548" width="12" height="15" fill="rgb(218,91,36)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="564" width="12" height="15" fill="rgb(228,136,45)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.04%)</title><rect x="13" y="580" width="12" height="15" fill="rgb(217,158,27)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="596" width="12" height="15" fill="rgb(230,199,50)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.04%)</title><rect x="13" y="612" width="12" height="15" fill="rgb(217,125,10)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="628" width="12" height="15" fill="rgb(251,187,2)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="644" width="12" height="15" fill="rgb(209,80,25)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="13" y="660" width="12" height="15" fill="rgb(222,20,6)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="13" y="676" width="12" height="15" fill="rgb(225,154,26)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="13" y="692" width="12" height="15" fill="rgb(223,32,6)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="708" width="12" height="15" fill="rgb(254,15,50)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.04%)</title><rect x="13" y="724" width="12" height="15" fill="rgb(210,139,32)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="13" y="740" width="12" height="15" fill="rgb(215,68,41)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="13" y="756" width="12" height="15" fill="rgb(216,4,12)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="13" y="772" width="12" height="15" fill="rgb(220,216,44)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="13" y="788" width="12" height="15" fill="rgb(217,219,44)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="13" y="804" width="12" height="15" fill="rgb(213,151,51)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.04%)</title><rect x="13" y="820" width="12" height="15" fill="rgb(217,82,8)"/><text x="16.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.04%)</title><rect x="13" y="836" width="12" height="15" fill="rgb(253,121,35)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.52%)</title><rect x="19" y="852" width="6" height="15" fill="rgb(237,42,47)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.52%)</title><rect x="19" y="868" width="6" height="15" fill="rgb(210,136,24)"/><text x="22.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.52%)</title><rect x="19" y="884" width="6" height="15" fill="rgb(215,184,7)"/><text x="22.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.52%)</title><rect x="19" y="900" width="6" height="15" fill="rgb(246,179,46)"/><text x="22.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.52%)</title><rect x="19" y="916" width="6" height="15" fill="rgb(254,145,14)"/><text x="22.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(214,203,15)"/><text x="25.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.26%)</title><rect x="25" y="484" width="3" height="15" fill="rgb(250,168,54)"/><text x="28.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="25" y="500" width="3" height="15" fill="rgb(241,90,39)"/><text x="28.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="516" width="3" height="15" fill="rgb(234,206,0)"/><text x="28.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="532" width="3" height="15" fill="rgb(253,27,45)"/><text x="28.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="548" width="3" height="15" fill="rgb(252,105,51)"/><text x="28.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="564" width="3" height="15" fill="rgb(227,141,28)"/><text x="28.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="580" width="3" height="15" fill="rgb(249,199,10)"/><text x="28.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="596" width="3" height="15" fill="rgb(239,226,15)"/><text x="28.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.26%)</title><rect x="25" y="612" width="3" height="15" fill="rgb(223,23,43)"/><text x="28.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="628" width="3" height="15" fill="rgb(215,137,11)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="644" width="3" height="15" fill="rgb(216,147,20)"/><text x="28.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="660" width="3" height="15" fill="rgb(241,221,49)"/><text x="28.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="676" width="3" height="15" fill="rgb(213,15,5)"/><text x="28.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="692" width="3" height="15" fill="rgb(235,166,31)"/><text x="28.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.26%)</title><rect x="25" y="708" width="3" height="15" fill="rgb(241,24,28)"/><text x="28.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="724" width="3" height="15" fill="rgb(211,10,18)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="740" width="3" height="15" fill="rgb(235,176,38)"/><text x="28.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="756" width="3" height="15" fill="rgb(235,10,22)"/><text x="28.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="772" width="3" height="15" fill="rgb(209,179,7)"/><text x="28.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="788" width="3" height="15" fill="rgb(223,32,12)"/><text x="28.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.26%)</title><rect x="25" y="804" width="3" height="15" fill="rgb(209,195,48)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="820" width="3" height="15" fill="rgb(251,226,28)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="836" width="3" height="15" fill="rgb(207,26,51)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="852" width="3" height="15" fill="rgb(222,10,35)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(210,47,48)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(235,169,5)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.26%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(230,76,30)"/><text x="28.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(209,176,38)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(248,133,22)"/><text x="28.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(236,64,40)"/><text x="28.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(250,164,30)"/><text x="28.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="980" width="3" height="15" fill="rgb(224,222,54)"/><text x="28.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.26%)</title><rect x="25" y="996" width="3" height="15" fill="rgb(217,189,53)"/><text x="28.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1012" width="3" height="15" fill="rgb(205,40,2)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="25" y="1028" width="3" height="15" fill="rgb(223,3,27)"/><text x="28.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1044" width="3" height="15" fill="rgb(209,71,36)"/><text x="28.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1060" width="3" height="15" fill="rgb(241,73,48)"/><text x="28.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="1076" width="3" height="15" fill="rgb(229,80,42)"/><text x="28.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="1092" width="3" height="15" fill="rgb(223,171,47)"/><text x="28.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="1108" width="3" height="15" fill="rgb(246,53,34)"/><text x="28.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1124" width="3" height="15" fill="rgb(249,11,31)"/><text x="28.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.26%)</title><rect x="25" y="1140" width="3" height="15" fill="rgb(247,160,35)"/><text x="28.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1156" width="3" height="15" fill="rgb(236,156,54)"/><text x="28.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="1172" width="3" height="15" fill="rgb(234,144,26)"/><text x="28.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="1188" width="3" height="15" fill="rgb(212,146,27)"/><text x="28.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="1204" width="3" height="15" fill="rgb(209,147,39)"/><text x="28.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1220" width="3" height="15" fill="rgb(213,36,7)"/><text x="28.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.26%)</title><rect x="25" y="1236" width="3" height="15" fill="rgb(243,110,48)"/><text x="28.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1252" width="3" height="15" fill="rgb(224,141,21)"/><text x="28.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="1268" width="3" height="15" fill="rgb(246,77,16)"/><text x="28.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="1284" width="3" height="15" fill="rgb(220,179,32)"/><text x="28.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="1300" width="3" height="15" fill="rgb(242,154,25)"/><text x="28.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1316" width="3" height="15" fill="rgb(236,115,17)"/><text x="28.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.26%)</title><rect x="25" y="1332" width="3" height="15" fill="rgb(213,145,53)"/><text x="28.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1348" width="3" height="15" fill="rgb(226,110,44)"/><text x="28.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="1364" width="3" height="15" fill="rgb(233,70,40)"/><text x="28.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="1380" width="3" height="15" fill="rgb(249,125,46)"/><text x="28.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="1396" width="3" height="15" fill="rgb(244,37,19)"/><text x="28.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1412" width="3" height="15" fill="rgb(253,95,26)"/><text x="28.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.26%)</title><rect x="25" y="1428" width="3" height="15" fill="rgb(251,33,10)"/><text x="28.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1444" width="3" height="15" fill="rgb(216,14,32)"/><text x="28.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="1460" width="3" height="15" fill="rgb(240,179,40)"/><text x="28.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="1476" width="3" height="15" fill="rgb(246,217,41)"/><text x="28.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="1492" width="3" height="15" fill="rgb(237,177,34)"/><text x="28.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1508" width="3" height="15" fill="rgb(217,90,20)"/><text x="28.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:96) (1 samples, 0.26%)</title><rect x="25" y="1524" width="3" height="15" fill="rgb(252,223,37)"/><text x="28.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="25" y="1540" width="3" height="15" fill="rgb(234,169,1)"/><text x="28.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1556" width="3" height="15" fill="rgb(249,119,41)"/><text x="28.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="1572" width="3" height="15" fill="rgb(237,110,44)"/><text x="28.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="1588" width="3" height="15" fill="rgb(218,92,7)"/><text x="28.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="1604" width="3" height="15" fill="rgb(222,208,32)"/><text x="28.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="1620" width="3" height="15" fill="rgb(217,181,7)"/><text x="28.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1636" width="3" height="15" fill="rgb(254,146,47)"/><text x="28.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_pslinux.py:1531) (1 samples, 0.26%)</title><rect x="25" y="1652" width="3" height="15" fill="rgb(232,96,18)"/><text x="28.00" y="1662.50"></text></g><g><title>Process (psutil/_pslinux.py:2093) (1 samples, 0.26%)</title><rect x="25" y="1668" width="3" height="15" fill="rgb(220,114,33)"/><text x="28.00" y="1678.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.26%)</title><rect x="25" y="1684" width="3" height="15" fill="rgb(224,53,0)"/><text x="28.00" y="1694.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.26%)</title><rect x="25" y="1700" width="3" height="15" fill="rgb(219,111,47)"/><text x="28.00" y="1710.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.26%)</title><rect x="25" y="1716" width="3" height="15" fill="rgb(233,153,0)"/><text x="28.00" y="1726.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.26%)</title><rect x="25" y="1732" width="3" height="15" fill="rgb(243,87,23)"/><text x="28.00" y="1742.50"></text></g><g><title>_compile_info (sre_compile.py:540) (1 samples, 0.26%)</title><rect x="25" y="1748" width="3" height="15" fill="rgb(244,151,31)"/><text x="28.00" y="1758.50"></text></g><g><title>getwidth (sre_parse.py:180) (1 samples, 0.26%)</title><rect x="25" y="1764" width="3" height="15" fill="rgb(235,88,10)"/><text x="28.00" y="1774.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.26%)</title><rect x="28" y="772" width="3" height="15" fill="rgb(230,47,40)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(222,11,17)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(254,70,28)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(251,28,4)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(210,161,39)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(239,158,0)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (1 samples, 0.26%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(212,71,9)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(218,96,21)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(223,185,14)"/><text x="31.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(249,54,24)"/><text x="31.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(251,133,5)"/><text x="31.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(210,32,12)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (1 samples, 0.26%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(221,14,38)"/><text x="31.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(242,83,46)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(244,85,17)"/><text x="31.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(216,102,18)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(210,102,53)"/><text x="31.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(250,120,4)"/><text x="31.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(214,50,34)"/><text x="31.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(211,126,12)"/><text x="31.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (1 samples, 0.26%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(251,86,54)"/><text x="31.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(206,217,6)"/><text x="31.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(214,79,27)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="1140" width="3" height="15" fill="rgb(238,32,1)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="1156" width="3" height="15" fill="rgb(245,158,24)"/><text x="31.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="1172" width="3" height="15" fill="rgb(234,145,53)"/><text x="31.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="1188" width="3" height="15" fill="rgb(248,90,44)"/><text x="31.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="1204" width="3" height="15" fill="rgb(245,66,19)"/><text x="31.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:206) (1 samples, 0.26%)</title><rect x="28" y="1220" width="3" height="15" fill="rgb(208,223,22)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="1236" width="3" height="15" fill="rgb(248,224,27)"/><text x="31.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="1252" width="3" height="15" fill="rgb(226,96,3)"/><text x="31.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="1268" width="3" height="15" fill="rgb(224,124,50)"/><text x="31.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="1284" width="3" height="15" fill="rgb(225,193,12)"/><text x="31.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="1300" width="3" height="15" fill="rgb(243,190,51)"/><text x="31.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/matfuncs.py:18) (1 samples, 0.26%)</title><rect x="28" y="1316" width="3" height="15" fill="rgb(207,140,39)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="1332" width="3" height="15" fill="rgb(244,190,50)"/><text x="31.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="1348" width="3" height="15" fill="rgb(216,158,53)"/><text x="31.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="1364" width="3" height="15" fill="rgb(207,98,49)"/><text x="31.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="28" y="1380" width="3" height="15" fill="rgb(221,63,2)"/><text x="31.00" y="1390.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.26%)</title><rect x="28" y="1396" width="3" height="15" fill="rgb(249,146,42)"/><text x="31.00" y="1406.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.26%)</title><rect x="28" y="1412" width="3" height="15" fill="rgb(208,186,24)"/><text x="31.00" y="1422.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="28" y="1428" width="3" height="15" fill="rgb(221,107,3)"/><text x="31.00" y="1438.50"></text></g><g><title>0x7fc19fbe98a4 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="28" y="1444" width="3" height="15" fill="rgb(253,64,30)"/><text x="31.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3087) (1 samples, 0.26%)</title><rect x="31" y="1028" width="3" height="15" fill="rgb(210,105,22)"/><text x="34.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.26%)</title><rect x="31" y="1044" width="3" height="15" fill="rgb(253,155,23)"/><text x="34.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.26%)</title><rect x="31" y="1060" width="3" height="15" fill="rgb(235,50,10)"/><text x="34.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.26%)</title><rect x="31" y="1076" width="3" height="15" fill="rgb(222,186,45)"/><text x="34.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.26%)</title><rect x="31" y="1092" width="3" height="15" fill="rgb(247,9,43)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.52%)</title><rect x="31" y="900" width="6" height="15" fill="rgb(213,13,21)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.52%)</title><rect x="31" y="916" width="6" height="15" fill="rgb(253,32,45)"/><text x="34.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="31" y="932" width="6" height="15" fill="rgb(249,127,10)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="31" y="948" width="6" height="15" fill="rgb(229,34,6)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="31" y="964" width="6" height="15" fill="rgb(232,210,29)"/><text x="34.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="31" y="980" width="6" height="15" fill="rgb(227,180,38)"/><text x="34.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="31" y="996" width="6" height="15" fill="rgb(240,4,42)"/><text x="34.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="31" y="1012" width="6" height="15" fill="rgb(253,154,16)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:94) (1 samples, 0.26%)</title><rect x="34" y="1028" width="3" height="15" fill="rgb(241,86,49)"/><text x="37.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.26%)</title><rect x="34" y="1044" width="3" height="15" fill="rgb(248,201,4)"/><text x="37.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.26%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(247,144,23)"/><text x="37.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:63) (1 samples, 0.26%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(206,215,14)"/><text x="37.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.78%)</title><rect x="31" y="772" width="9" height="15" fill="rgb(242,113,3)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.78%)</title><rect x="31" y="788" width="9" height="15" fill="rgb(244,69,53)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="31" y="804" width="9" height="15" fill="rgb(241,20,21)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="31" y="820" width="9" height="15" fill="rgb(217,176,7)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="31" y="836" width="9" height="15" fill="rgb(231,106,38)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="31" y="852" width="9" height="15" fill="rgb(234,155,47)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="31" y="868" width="9" height="15" fill="rgb(235,80,18)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="31" y="884" width="9" height="15" fill="rgb(229,128,30)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.26%)</title><rect x="37" y="900" width="3" height="15" fill="rgb(208,219,8)"/><text x="40.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="37" y="916" width="3" height="15" fill="rgb(230,33,4)"/><text x="40.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="37" y="932" width="3" height="15" fill="rgb(207,53,29)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="37" y="948" width="3" height="15" fill="rgb(237,133,29)"/><text x="40.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="37" y="964" width="3" height="15" fill="rgb(212,92,8)"/><text x="40.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="37" y="980" width="3" height="15" fill="rgb(232,83,33)"/><text x="40.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="37" y="996" width="3" height="15" fill="rgb(218,23,44)"/><text x="40.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="37" y="1012" width="3" height="15" fill="rgb(242,205,9)"/><text x="40.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:553) (1 samples, 0.26%)</title><rect x="37" y="1028" width="3" height="15" fill="rgb(251,85,44)"/><text x="40.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.26%)</title><rect x="37" y="1044" width="3" height="15" fill="rgb(251,187,14)"/><text x="40.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.26%)</title><rect x="37" y="1060" width="3" height="15" fill="rgb(236,80,38)"/><text x="40.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.26%)</title><rect x="37" y="1076" width="3" height="15" fill="rgb(253,61,13)"/><text x="40.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:68) (1 samples, 0.26%)</title><rect x="37" y="1092" width="3" height="15" fill="rgb(240,81,3)"/><text x="40.00" y="1102.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="37" y="1108" width="3" height="15" fill="rgb(236,173,36)"/><text x="40.00" y="1118.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:4) (6 samples, 1.55%)</title><rect x="25" y="148" width="18" height="15" fill="rgb(212,11,37)"/><text x="28.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.55%)</title><rect x="25" y="164" width="18" height="15" fill="rgb(251,146,6)"/><text x="28.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.55%)</title><rect x="25" y="180" width="18" height="15" fill="rgb(208,76,29)"/><text x="28.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.55%)</title><rect x="25" y="196" width="18" height="15" fill="rgb(227,68,8)"/><text x="28.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.55%)</title><rect x="25" y="212" width="18" height="15" fill="rgb(253,69,1)"/><text x="28.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.55%)</title><rect x="25" y="228" width="18" height="15" fill="rgb(232,102,51)"/><text x="28.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.55%)</title><rect x="25" y="244" width="18" height="15" fill="rgb(214,181,2)"/><text x="28.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.55%)</title><rect x="25" y="260" width="18" height="15" fill="rgb(219,51,5)"/><text x="28.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.55%)</title><rect x="25" y="276" width="18" height="15" fill="rgb(216,45,23)"/><text x="28.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (6 samples, 1.55%)</title><rect x="25" y="292" width="18" height="15" fill="rgb(210,109,46)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.55%)</title><rect x="25" y="308" width="18" height="15" fill="rgb(240,152,40)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.55%)</title><rect x="25" y="324" width="18" height="15" fill="rgb(225,59,17)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.55%)</title><rect x="25" y="340" width="18" height="15" fill="rgb(209,65,49)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.55%)</title><rect x="25" y="356" width="18" height="15" fill="rgb(234,192,52)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.55%)</title><rect x="25" y="372" width="18" height="15" fill="rgb(246,57,28)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (6 samples, 1.55%)</title><rect x="25" y="388" width="18" height="15" fill="rgb(212,145,22)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.55%)</title><rect x="25" y="404" width="18" height="15" fill="rgb(223,37,25)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.55%)</title><rect x="25" y="420" width="18" height="15" fill="rgb(242,149,20)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.55%)</title><rect x="25" y="436" width="18" height="15" fill="rgb(225,72,0)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.55%)</title><rect x="25" y="452" width="18" height="15" fill="rgb(214,153,13)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.55%)</title><rect x="25" y="468" width="18" height="15" fill="rgb(205,97,25)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (5 samples, 1.30%)</title><rect x="28" y="484" width="15" height="15" fill="rgb(218,193,34)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.30%)</title><rect x="28" y="500" width="15" height="15" fill="rgb(223,65,19)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.30%)</title><rect x="28" y="516" width="15" height="15" fill="rgb(217,191,4)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.30%)</title><rect x="28" y="532" width="15" height="15" fill="rgb(230,85,51)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.30%)</title><rect x="28" y="548" width="15" height="15" fill="rgb(250,220,16)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.30%)</title><rect x="28" y="564" width="15" height="15" fill="rgb(237,55,8)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (5 samples, 1.30%)</title><rect x="28" y="580" width="15" height="15" fill="rgb(234,66,50)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.30%)</title><rect x="28" y="596" width="15" height="15" fill="rgb(254,74,29)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.30%)</title><rect x="28" y="612" width="15" height="15" fill="rgb(229,50,42)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.30%)</title><rect x="28" y="628" width="15" height="15" fill="rgb(226,75,32)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.30%)</title><rect x="28" y="644" width="15" height="15" fill="rgb(250,8,34)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.30%)</title><rect x="28" y="660" width="15" height="15" fill="rgb(241,112,48)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (5 samples, 1.30%)</title><rect x="28" y="676" width="15" height="15" fill="rgb(235,60,10)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.30%)</title><rect x="28" y="692" width="15" height="15" fill="rgb(240,180,25)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.30%)</title><rect x="28" y="708" width="15" height="15" fill="rgb(219,78,42)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.30%)</title><rect x="28" y="724" width="15" height="15" fill="rgb(249,215,7)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.30%)</title><rect x="28" y="740" width="15" height="15" fill="rgb(252,75,46)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.30%)</title><rect x="28" y="756" width="15" height="15" fill="rgb(252,100,38)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:5887) (1 samples, 0.26%)</title><rect x="40" y="772" width="3" height="15" fill="rgb(236,143,27)"/><text x="43.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.26%)</title><rect x="40" y="788" width="3" height="15" fill="rgb(211,148,2)"/><text x="43.00" y="798.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.26%)</title><rect x="43" y="484" width="3" height="15" fill="rgb(224,15,3)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="500" width="3" height="15" fill="rgb(245,127,5)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="516" width="3" height="15" fill="rgb(243,185,4)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="532" width="3" height="15" fill="rgb(253,83,28)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="548" width="3" height="15" fill="rgb(238,12,42)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="564" width="3" height="15" fill="rgb(211,219,11)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.26%)</title><rect x="43" y="580" width="3" height="15" fill="rgb(216,34,44)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="596" width="3" height="15" fill="rgb(245,53,32)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="612" width="3" height="15" fill="rgb(226,6,4)"/><text x="46.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="628" width="3" height="15" fill="rgb(220,155,10)"/><text x="46.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="644" width="3" height="15" fill="rgb(224,147,35)"/><text x="46.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="660" width="3" height="15" fill="rgb(237,64,38)"/><text x="46.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.26%)</title><rect x="43" y="676" width="3" height="15" fill="rgb(251,227,19)"/><text x="46.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="692" width="3" height="15" fill="rgb(245,150,35)"/><text x="46.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="708" width="3" height="15" fill="rgb(228,123,4)"/><text x="46.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="724" width="3" height="15" fill="rgb(224,164,32)"/><text x="46.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="740" width="3" height="15" fill="rgb(224,183,1)"/><text x="46.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="756" width="3" height="15" fill="rgb(241,62,52)"/><text x="46.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.26%)</title><rect x="43" y="772" width="3" height="15" fill="rgb(226,55,52)"/><text x="46.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="43" y="788" width="3" height="15" fill="rgb(242,142,31)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="804" width="3" height="15" fill="rgb(243,175,11)"/><text x="46.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="820" width="3" height="15" fill="rgb(241,86,46)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="836" width="3" height="15" fill="rgb(235,122,19)"/><text x="46.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="852" width="3" height="15" fill="rgb(247,113,8)"/><text x="46.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="868" width="3" height="15" fill="rgb(214,81,41)"/><text x="46.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="884" width="3" height="15" fill="rgb(217,161,23)"/><text x="46.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.26%)</title><rect x="43" y="900" width="3" height="15" fill="rgb(230,35,16)"/><text x="46.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="916" width="3" height="15" fill="rgb(211,145,31)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="932" width="3" height="15" fill="rgb(217,129,52)"/><text x="46.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="948" width="3" height="15" fill="rgb(250,31,3)"/><text x="46.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="964" width="3" height="15" fill="rgb(232,136,34)"/><text x="46.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="980" width="3" height="15" fill="rgb(232,164,10)"/><text x="46.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.26%)</title><rect x="43" y="996" width="3" height="15" fill="rgb(239,100,47)"/><text x="46.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1012" width="3" height="15" fill="rgb(248,56,44)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1028" width="3" height="15" fill="rgb(209,219,41)"/><text x="46.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1044" width="3" height="15" fill="rgb(220,188,17)"/><text x="46.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1060" width="3" height="15" fill="rgb(227,217,49)"/><text x="46.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1076" width="3" height="15" fill="rgb(248,77,0)"/><text x="46.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:29) (1 samples, 0.26%)</title><rect x="43" y="1092" width="3" height="15" fill="rgb(224,51,42)"/><text x="46.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1108" width="3" height="15" fill="rgb(205,21,50)"/><text x="46.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1124" width="3" height="15" fill="rgb(242,206,2)"/><text x="46.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1140" width="3" height="15" fill="rgb(231,14,16)"/><text x="46.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1156" width="3" height="15" fill="rgb(239,218,19)"/><text x="46.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1172" width="3" height="15" fill="rgb(250,204,24)"/><text x="46.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py:132) (1 samples, 0.26%)</title><rect x="43" y="1188" width="3" height="15" fill="rgb(209,70,54)"/><text x="46.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.26%)</title><rect x="43" y="1204" width="3" height="15" fill="rgb(228,30,35)"/><text x="46.00" y="1214.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.26%)</title><rect x="43" y="1220" width="3" height="15" fill="rgb(237,217,47)"/><text x="46.00" y="1230.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:167) (1 samples, 0.26%)</title><rect x="43" y="1236" width="3" height="15" fill="rgb(254,194,50)"/><text x="46.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.26%)</title><rect x="46" y="916" width="3" height="15" fill="rgb(252,29,29)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="46" y="932" width="3" height="15" fill="rgb(238,124,41)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="46" y="948" width="3" height="15" fill="rgb(211,222,28)"/><text x="49.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="46" y="964" width="3" height="15" fill="rgb(210,176,15)"/><text x="49.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="46" y="980" width="3" height="15" fill="rgb(234,60,38)"/><text x="49.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="46" y="996" width="3" height="15" fill="rgb(207,130,8)"/><text x="49.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="46" y="1012" width="3" height="15" fill="rgb(247,31,48)"/><text x="49.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="46" y="1028" width="3" height="15" fill="rgb(208,186,51)"/><text x="49.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="46" y="1044" width="3" height="15" fill="rgb(248,225,38)"/><text x="49.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.26%)</title><rect x="46" y="1060" width="3" height="15" fill="rgb(217,185,43)"/><text x="49.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="46" y="1076" width="3" height="15" fill="rgb(215,97,26)"/><text x="49.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="46" y="1092" width="3" height="15" fill="rgb(206,126,2)"/><text x="49.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="46" y="1108" width="3" height="15" fill="rgb(222,69,40)"/><text x="49.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="46" y="1124" width="3" height="15" fill="rgb(251,177,50)"/><text x="49.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="46" y="1140" width="3" height="15" fill="rgb(242,146,21)"/><text x="49.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (1 samples, 0.26%)</title><rect x="46" y="1156" width="3" height="15" fill="rgb(253,7,24)"/><text x="49.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="46" y="1172" width="3" height="15" fill="rgb(245,91,29)"/><text x="49.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="46" y="1188" width="3" height="15" fill="rgb(211,155,16)"/><text x="49.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="46" y="1204" width="3" height="15" fill="rgb(239,24,37)"/><text x="49.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="46" y="1220" width="3" height="15" fill="rgb(236,2,37)"/><text x="49.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="46" y="1236" width="3" height="15" fill="rgb(208,201,14)"/><text x="49.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="46" y="1252" width="3" height="15" fill="rgb(249,222,45)"/><text x="49.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.78%)</title><rect x="43" y="244" width="9" height="15" fill="rgb(252,214,0)"/><text x="46.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="43" y="260" width="9" height="15" fill="rgb(225,100,29)"/><text x="46.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="43" y="276" width="9" height="15" fill="rgb(244,145,27)"/><text x="46.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="43" y="292" width="9" height="15" fill="rgb(213,85,4)"/><text x="46.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="43" y="308" width="9" height="15" fill="rgb(228,137,14)"/><text x="46.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="43" y="324" width="9" height="15" fill="rgb(237,60,51)"/><text x="46.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.78%)</title><rect x="43" y="340" width="9" height="15" fill="rgb(207,42,12)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="43" y="356" width="9" height="15" fill="rgb(247,223,44)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.78%)</title><rect x="43" y="372" width="9" height="15" fill="rgb(222,46,4)"/><text x="46.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="43" y="388" width="9" height="15" fill="rgb(230,37,53)"/><text x="46.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="43" y="404" width="9" height="15" fill="rgb(230,75,29)"/><text x="46.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="43" y="420" width="9" height="15" fill="rgb(221,87,23)"/><text x="46.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="43" y="436" width="9" height="15" fill="rgb(221,92,32)"/><text x="46.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="43" y="452" width="9" height="15" fill="rgb(244,41,53)"/><text x="46.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="43" y="468" width="9" height="15" fill="rgb(252,217,47)"/><text x="46.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.52%)</title><rect x="46" y="484" width="6" height="15" fill="rgb(228,111,17)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="46" y="500" width="6" height="15" fill="rgb(252,76,25)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="46" y="516" width="6" height="15" fill="rgb(241,146,36)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="46" y="532" width="6" height="15" fill="rgb(214,31,5)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="46" y="548" width="6" height="15" fill="rgb(205,4,3)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="46" y="564" width="6" height="15" fill="rgb(235,110,11)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.52%)</title><rect x="46" y="580" width="6" height="15" fill="rgb(233,57,46)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="46" y="596" width="6" height="15" fill="rgb(207,80,46)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.52%)</title><rect x="46" y="612" width="6" height="15" fill="rgb(238,95,7)"/><text x="49.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="46" y="628" width="6" height="15" fill="rgb(234,99,32)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="46" y="644" width="6" height="15" fill="rgb(225,69,3)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="46" y="660" width="6" height="15" fill="rgb(247,151,50)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="46" y="676" width="6" height="15" fill="rgb(215,21,12)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="46" y="692" width="6" height="15" fill="rgb(214,214,25)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="46" y="708" width="6" height="15" fill="rgb(253,22,34)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.52%)</title><rect x="46" y="724" width="6" height="15" fill="rgb(213,172,43)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="46" y="740" width="6" height="15" fill="rgb(236,165,44)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="46" y="756" width="6" height="15" fill="rgb(254,136,6)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="46" y="772" width="6" height="15" fill="rgb(211,25,20)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="46" y="788" width="6" height="15" fill="rgb(247,211,29)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="46" y="804" width="6" height="15" fill="rgb(245,106,48)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.52%)</title><rect x="46" y="820" width="6" height="15" fill="rgb(219,115,10)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="46" y="836" width="6" height="15" fill="rgb(227,168,16)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="46" y="852" width="6" height="15" fill="rgb(230,103,13)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="46" y="868" width="6" height="15" fill="rgb(232,211,26)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="46" y="884" width="6" height="15" fill="rgb(216,24,24)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="46" y="900" width="6" height="15" fill="rgb(229,10,9)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:11) (1 samples, 0.26%)</title><rect x="49" y="916" width="3" height="15" fill="rgb(231,74,32)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="49" y="932" width="3" height="15" fill="rgb(244,114,38)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="49" y="948" width="3" height="15" fill="rgb(217,87,53)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="49" y="964" width="3" height="15" fill="rgb(240,179,16)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="49" y="980" width="3" height="15" fill="rgb(247,146,54)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="49" y="996" width="3" height="15" fill="rgb(233,73,20)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/file_tree_node.py:13) (1 samples, 0.26%)</title><rect x="49" y="1012" width="3" height="15" fill="rgb(243,121,27)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="49" y="1028" width="3" height="15" fill="rgb(211,146,24)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.26%)</title><rect x="49" y="1044" width="3" height="15" fill="rgb(211,27,30)"/><text x="52.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.26%)</title><rect x="49" y="1060" width="3" height="15" fill="rgb(206,42,24)"/><text x="52.00" y="1070.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.26%)</title><rect x="49" y="1076" width="3" height="15" fill="rgb(205,43,13)"/><text x="52.00" y="1086.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.26%)</title><rect x="49" y="1092" width="3" height="15" fill="rgb(247,163,4)"/><text x="52.00" y="1102.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.26%)</title><rect x="49" y="1108" width="3" height="15" fill="rgb(222,89,28)"/><text x="52.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.26%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(235,108,42)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="356" width="3" height="15" fill="rgb(245,163,9)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(233,193,35)"/><text x="55.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="388" width="3" height="15" fill="rgb(215,13,4)"/><text x="55.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="52" y="404" width="3" height="15" fill="rgb(242,216,35)"/><text x="55.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="420" width="3" height="15" fill="rgb(247,80,9)"/><text x="55.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:22) (1 samples, 0.26%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(223,93,8)"/><text x="55.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(215,11,12)"/><text x="55.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(212,7,35)"/><text x="55.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(216,145,0)"/><text x="55.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(215,98,52)"/><text x="55.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(249,125,54)"/><text x="55.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py:30) (1 samples, 0.26%)</title><rect x="52" y="532" width="3" height="15" fill="rgb(225,218,39)"/><text x="55.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="548" width="3" height="15" fill="rgb(224,138,23)"/><text x="55.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="564" width="3" height="15" fill="rgb(234,130,19)"/><text x="55.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="580" width="3" height="15" fill="rgb(254,216,54)"/><text x="55.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="52" y="596" width="3" height="15" fill="rgb(210,119,48)"/><text x="55.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="52" y="612" width="3" height="15" fill="rgb(239,217,29)"/><text x="55.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="52" y="628" width="3" height="15" fill="rgb(212,145,11)"/><text x="55.00" y="638.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.26%)</title><rect x="55" y="1012" width="3" height="15" fill="rgb(225,76,30)"/><text x="58.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="55" y="1028" width="3" height="15" fill="rgb(215,106,12)"/><text x="58.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="55" y="1044" width="3" height="15" fill="rgb(223,160,5)"/><text x="58.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="55" y="1060" width="3" height="15" fill="rgb(240,78,26)"/><text x="58.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="55" y="1076" width="3" height="15" fill="rgb(251,100,2)"/><text x="58.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="55" y="1092" width="3" height="15" fill="rgb(250,217,24)"/><text x="58.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.26%)</title><rect x="55" y="1108" width="3" height="15" fill="rgb(250,171,26)"/><text x="58.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="55" y="1124" width="3" height="15" fill="rgb(250,96,5)"/><text x="58.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="55" y="1140" width="3" height="15" fill="rgb(224,29,23)"/><text x="58.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="55" y="1156" width="3" height="15" fill="rgb(226,33,33)"/><text x="58.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="55" y="1172" width="3" height="15" fill="rgb(207,45,36)"/><text x="58.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="55" y="1188" width="3" height="15" fill="rgb(237,79,12)"/><text x="58.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.26%)</title><rect x="55" y="1204" width="3" height="15" fill="rgb(247,105,30)"/><text x="58.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="55" y="1220" width="3" height="15" fill="rgb(254,176,6)"/><text x="58.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="55" y="1236" width="3" height="15" fill="rgb(243,218,14)"/><text x="58.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="55" y="1252" width="3" height="15" fill="rgb(237,195,38)"/><text x="58.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="55" y="1268" width="3" height="15" fill="rgb(207,22,31)"/><text x="58.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="55" y="1284" width="3" height="15" fill="rgb(246,25,51)"/><text x="58.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.26%)</title><rect x="55" y="1300" width="3" height="15" fill="rgb(232,176,35)"/><text x="58.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="55" y="1316" width="3" height="15" fill="rgb(206,193,34)"/><text x="58.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="55" y="1332" width="3" height="15" fill="rgb(254,63,45)"/><text x="58.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="55" y="1348" width="3" height="15" fill="rgb(210,96,20)"/><text x="58.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="55" y="1364" width="3" height="15" fill="rgb(239,13,38)"/><text x="58.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="55" y="1380" width="3" height="15" fill="rgb(210,45,25)"/><text x="58.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.26%)</title><rect x="55" y="1396" width="3" height="15" fill="rgb(232,136,8)"/><text x="58.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="55" y="1412" width="3" height="15" fill="rgb(215,140,43)"/><text x="58.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="55" y="1428" width="3" height="15" fill="rgb(244,61,14)"/><text x="58.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="55" y="1444" width="3" height="15" fill="rgb(209,212,13)"/><text x="58.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="55" y="1460" width="3" height="15" fill="rgb(234,126,28)"/><text x="58.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="55" y="1476" width="3" height="15" fill="rgb(215,123,25)"/><text x="58.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.26%)</title><rect x="55" y="1492" width="3" height="15" fill="rgb(227,123,6)"/><text x="58.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="55" y="1508" width="3" height="15" fill="rgb(212,87,53)"/><text x="58.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="55" y="1524" width="3" height="15" fill="rgb(218,104,25)"/><text x="58.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="55" y="1540" width="3" height="15" fill="rgb(213,156,14)"/><text x="58.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="55" y="1556" width="3" height="15" fill="rgb(231,175,4)"/><text x="58.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="55" y="1572" width="3" height="15" fill="rgb(241,30,24)"/><text x="58.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.26%)</title><rect x="55" y="1588" width="3" height="15" fill="rgb(219,186,0)"/><text x="58.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.26%)</title><rect x="55" y="1604" width="3" height="15" fill="rgb(242,150,17)"/><text x="58.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.26%)</title><rect x="55" y="1620" width="3" height="15" fill="rgb(216,46,46)"/><text x="58.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.26%)</title><rect x="55" y="1636" width="3" height="15" fill="rgb(207,16,50)"/><text x="58.00" y="1646.50"></text></g><g><title>search (re.py:183) (1 samples, 0.26%)</title><rect x="55" y="1652" width="3" height="15" fill="rgb(249,65,54)"/><text x="58.00" y="1662.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.26%)</title><rect x="55" y="1668" width="3" height="15" fill="rgb(226,159,50)"/><text x="58.00" y="1678.50"></text></g><g><title>compile (sre_compile.py:776) (1 samples, 0.26%)</title><rect x="55" y="1684" width="3" height="15" fill="rgb(223,156,45)"/><text x="58.00" y="1694.50"></text></g><g><title>groups (sre_parse.py:83) (1 samples, 0.26%)</title><rect x="55" y="1700" width="3" height="15" fill="rgb(233,57,25)"/><text x="58.00" y="1710.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.52%)</title><rect x="55" y="436" width="6" height="15" fill="rgb(233,194,23)"/><text x="58.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="55" y="452" width="6" height="15" fill="rgb(206,38,36)"/><text x="58.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="55" y="468" width="6" height="15" fill="rgb(236,76,6)"/><text x="58.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="55" y="484" width="6" height="15" fill="rgb(253,29,30)"/><text x="58.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="55" y="500" width="6" height="15" fill="rgb(240,144,35)"/><text x="58.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="55" y="516" width="6" height="15" fill="rgb(243,106,46)"/><text x="58.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.52%)</title><rect x="55" y="532" width="6" height="15" fill="rgb(254,58,41)"/><text x="58.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="55" y="548" width="6" height="15" fill="rgb(251,1,54)"/><text x="58.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="55" y="564" width="6" height="15" fill="rgb(233,118,49)"/><text x="58.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="55" y="580" width="6" height="15" fill="rgb(224,221,23)"/><text x="58.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="55" y="596" width="6" height="15" fill="rgb(233,157,17)"/><text x="58.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="55" y="612" width="6" height="15" fill="rgb(246,113,31)"/><text x="58.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.52%)</title><rect x="55" y="628" width="6" height="15" fill="rgb(233,74,7)"/><text x="58.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="55" y="644" width="6" height="15" fill="rgb(251,55,27)"/><text x="58.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="55" y="660" width="6" height="15" fill="rgb(229,152,27)"/><text x="58.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="55" y="676" width="6" height="15" fill="rgb(228,134,38)"/><text x="58.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="55" y="692" width="6" height="15" fill="rgb(241,229,22)"/><text x="58.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="55" y="708" width="6" height="15" fill="rgb(205,214,15)"/><text x="58.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.52%)</title><rect x="55" y="724" width="6" height="15" fill="rgb(221,161,11)"/><text x="58.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="55" y="740" width="6" height="15" fill="rgb(236,202,24)"/><text x="58.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="55" y="756" width="6" height="15" fill="rgb(242,28,31)"/><text x="58.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="55" y="772" width="6" height="15" fill="rgb(250,210,2)"/><text x="58.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="55" y="788" width="6" height="15" fill="rgb(220,89,34)"/><text x="58.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="55" y="804" width="6" height="15" fill="rgb(249,229,26)"/><text x="58.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.52%)</title><rect x="55" y="820" width="6" height="15" fill="rgb(206,74,32)"/><text x="58.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="55" y="836" width="6" height="15" fill="rgb(237,51,10)"/><text x="58.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="55" y="852" width="6" height="15" fill="rgb(248,89,41)"/><text x="58.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="55" y="868" width="6" height="15" fill="rgb(214,19,23)"/><text x="58.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="55" y="884" width="6" height="15" fill="rgb(227,58,24)"/><text x="58.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="55" y="900" width="6" height="15" fill="rgb(254,19,26)"/><text x="58.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.52%)</title><rect x="55" y="916" width="6" height="15" fill="rgb(211,93,29)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="55" y="932" width="6" height="15" fill="rgb(228,226,37)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="55" y="948" width="6" height="15" fill="rgb(239,35,0)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="55" y="964" width="6" height="15" fill="rgb(221,143,27)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="55" y="980" width="6" height="15" fill="rgb(231,6,40)"/><text x="58.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="55" y="996" width="6" height="15" fill="rgb(210,89,54)"/><text x="58.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:305) (1 samples, 0.26%)</title><rect x="58" y="1012" width="3" height="15" fill="rgb(223,46,24)"/><text x="61.00" y="1022.50"></text></g><g><title>DataFrame (pandas/core/frame.py:5037) (1 samples, 0.26%)</title><rect x="58" y="1028" width="3" height="15" fill="rgb(244,170,17)"/><text x="61.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.26%)</title><rect x="58" y="1044" width="3" height="15" fill="rgb(231,98,27)"/><text x="61.00" y="1054.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.26%)</title><rect x="58" y="1060" width="3" height="15" fill="rgb(238,203,31)"/><text x="61.00" y="1070.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="58" y="1076" width="3" height="15" fill="rgb(206,90,44)"/><text x="61.00" y="1086.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.26%)</title><rect x="58" y="1092" width="3" height="15" fill="rgb(253,155,16)"/><text x="61.00" y="1102.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="58" y="1108" width="3" height="15" fill="rgb(249,187,42)"/><text x="61.00" y="1118.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.26%)</title><rect x="61" y="1108" width="4" height="15" fill="rgb(218,101,12)"/><text x="64.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="61" y="1124" width="4" height="15" fill="rgb(235,150,22)"/><text x="64.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="61" y="1140" width="4" height="15" fill="rgb(245,98,22)"/><text x="64.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="61" y="1156" width="4" height="15" fill="rgb(240,224,25)"/><text x="64.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="61" y="1172" width="4" height="15" fill="rgb(226,11,19)"/><text x="64.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="61" y="1188" width="4" height="15" fill="rgb(247,196,40)"/><text x="64.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.26%)</title><rect x="61" y="1204" width="4" height="15" fill="rgb(222,189,41)"/><text x="64.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="61" y="1220" width="4" height="15" fill="rgb(221,216,6)"/><text x="64.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="61" y="1236" width="4" height="15" fill="rgb(236,99,26)"/><text x="64.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="61" y="1252" width="4" height="15" fill="rgb(207,168,7)"/><text x="64.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="61" y="1268" width="4" height="15" fill="rgb(237,223,40)"/><text x="64.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="61" y="1284" width="4" height="15" fill="rgb(249,167,41)"/><text x="64.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.26%)</title><rect x="61" y="1300" width="4" height="15" fill="rgb(238,38,54)"/><text x="64.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.26%)</title><rect x="61" y="1316" width="4" height="15" fill="rgb(250,24,42)"/><text x="64.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.26%)</title><rect x="61" y="1332" width="4" height="15" fill="rgb(254,130,23)"/><text x="64.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.26%)</title><rect x="61" y="1348" width="4" height="15" fill="rgb(252,116,49)"/><text x="64.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.26%)</title><rect x="61" y="1364" width="4" height="15" fill="rgb(252,11,17)"/><text x="64.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.26%)</title><rect x="61" y="1380" width="4" height="15" fill="rgb(245,174,18)"/><text x="64.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.26%)</title><rect x="61" y="1396" width="4" height="15" fill="rgb(221,5,24)"/><text x="64.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.26%)</title><rect x="61" y="1412" width="4" height="15" fill="rgb(211,228,46)"/><text x="64.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.26%)</title><rect x="61" y="1428" width="4" height="15" fill="rgb(234,145,36)"/><text x="64.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.26%)</title><rect x="61" y="1444" width="4" height="15" fill="rgb(249,114,3)"/><text x="64.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.26%)</title><rect x="61" y="1460" width="4" height="15" fill="rgb(217,2,45)"/><text x="64.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="61" y="1476" width="4" height="15" fill="rgb(235,31,24)"/><text x="64.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.26%)</title><rect x="61" y="1492" width="4" height="15" fill="rgb(221,68,11)"/><text x="64.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="61" y="1508" width="4" height="15" fill="rgb(217,192,0)"/><text x="64.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.26%)</title><rect x="61" y="1524" width="4" height="15" fill="rgb(254,48,19)"/><text x="64.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="61" y="1540" width="4" height="15" fill="rgb(239,87,47)"/><text x="64.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.26%)</title><rect x="61" y="1556" width="4" height="15" fill="rgb(216,25,30)"/><text x="64.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="61" y="1572" width="4" height="15" fill="rgb(252,106,2)"/><text x="64.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.26%)</title><rect x="61" y="1588" width="4" height="15" fill="rgb(243,198,7)"/><text x="64.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="61" y="1604" width="4" height="15" fill="rgb(223,178,3)"/><text x="64.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.26%)</title><rect x="61" y="1620" width="4" height="15" fill="rgb(242,22,46)"/><text x="64.00" y="1630.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.26%)</title><rect x="61" y="1636" width="4" height="15" fill="rgb(231,138,8)"/><text x="64.00" y="1646.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.26%)</title><rect x="61" y="1652" width="4" height="15" fill="rgb(228,2,19)"/><text x="64.00" y="1662.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="65" y="1572" width="3" height="15" fill="rgb(243,8,25)"/><text x="68.00" y="1582.50"></text></g><g><title>0x7fc19fbe9028 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="65" y="1588" width="3" height="15" fill="rgb(237,146,22)"/><text x="68.00" y="1598.50"></text></g><g><title>0x7fc19fbe6bc6 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="65" y="1604" width="3" height="15" fill="rgb(235,39,38)"/><text x="68.00" y="1614.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.26%)</title><rect x="68" y="1572" width="3" height="15" fill="rgb(245,112,8)"/><text x="71.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.26%)</title><rect x="68" y="1588" width="3" height="15" fill="rgb(228,71,51)"/><text x="71.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.26%)</title><rect x="68" y="1604" width="3" height="15" fill="rgb(210,141,34)"/><text x="71.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1620" width="3" height="15" fill="rgb(210,192,30)"/><text x="71.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1636" width="3" height="15" fill="rgb(224,145,9)"/><text x="71.00" y="1646.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1652" width="3" height="15" fill="rgb(232,86,50)"/><text x="71.00" y="1662.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1668" width="3" height="15" fill="rgb(241,58,1)"/><text x="71.00" y="1678.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1684" width="3" height="15" fill="rgb(231,128,46)"/><text x="71.00" y="1694.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1700" width="3" height="15" fill="rgb(241,83,50)"/><text x="71.00" y="1710.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1716" width="3" height="15" fill="rgb(238,176,15)"/><text x="71.00" y="1726.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::enum_&lt;onnx::OpSchema::FormalParameterOption&gt;::enum_&lt;&gt;(char const*, const&amp;)::{lambda(onnx::OpSchema::FormalParameterOption)#2}, unsigned char, onnx::OpSchema::FormalParameterOption, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(pybind11::enum_&lt;onnx::OpSchema::FormalParameterOption&gt;::enum_&lt;&gt;(char const*, const&amp;)::{lambda(onnx::OpSchema::FormalParameterOption&amp;&amp;)#2}, unsigned char (*)(onnx::OpSchema::FormalParameterOption), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1732" width="3" height="15" fill="rgb(235,128,49)"/><text x="71.00" y="1742.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1748" width="3" height="15" fill="rgb(252,169,5)"/><text x="71.00" y="1758.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="68" y="1764" width="3" height="15" fill="rgb(226,14,25)"/><text x="71.00" y="1774.50"></text></g><g><title>root (&lt;template&gt;:137) (2 samples, 0.52%)</title><rect x="71" y="1572" width="6" height="15" fill="rgb(209,53,3)"/><text x="74.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.26%)</title><rect x="74" y="1588" width="3" height="15" fill="rgb(246,57,44)"/><text x="77.00" y="1598.50"></text></g><g><title>getconstraint (skl2onnx/algebra/automation.py:168) (1 samples, 0.26%)</title><rect x="74" y="1604" width="3" height="15" fill="rgb(252,6,29)"/><text x="77.00" y="1614.50"></text></g><g><title>0x7fc18fca248e (?) (1 samples, 0.26%)</title><rect x="74" y="1620" width="3" height="15" fill="rgb(235,207,5)"/><text x="77.00" y="1630.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.26%)</title><rect x="80" y="1604" width="3" height="15" fill="rgb(225,164,38)"/><text x="83.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.26%)</title><rect x="80" y="1620" width="3" height="15" fill="rgb(220,208,23)"/><text x="83.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.26%)</title><rect x="80" y="1636" width="3" height="15" fill="rgb(214,0,15)"/><text x="83.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="80" y="1652" width="3" height="15" fill="rgb(214,81,38)"/><text x="83.00" y="1662.50"></text></g><g><title>root (&lt;template&gt;:59) (3 samples, 0.78%)</title><rect x="77" y="1572" width="9" height="15" fill="rgb(215,163,12)"/><text x="80.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.52%)</title><rect x="80" y="1588" width="6" height="15" fill="rgb(213,40,42)"/><text x="83.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:198) (1 samples, 0.26%)</title><rect x="83" y="1604" width="3" height="15" fill="rgb(207,101,46)"/><text x="86.00" y="1614.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (8 samples, 2.07%)</title><rect x="65" y="1492" width="24" height="15" fill="rgb(236,228,27)"/><text x="68.00" y="1502.50">d..</text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (8 samples, 2.07%)</title><rect x="65" y="1508" width="24" height="15" fill="rgb(210,178,28)"/><text x="68.00" y="1518.50">g..</text></g><g><title>render (jinja2/asyncsupport.py:76) (8 samples, 2.07%)</title><rect x="65" y="1524" width="24" height="15" fill="rgb(237,18,22)"/><text x="68.00" y="1534.50">r..</text></g><g><title>render (jinja2/environment.py:1005) (8 samples, 2.07%)</title><rect x="65" y="1540" width="24" height="15" fill="rgb(214,83,9)"/><text x="68.00" y="1550.50">r..</text></g><g><title>unicode_join (python3.7) (8 samples, 2.07%)</title><rect x="65" y="1556" width="24" height="15" fill="rgb(209,194,1)"/><text x="68.00" y="1566.50">u..</text></g><g><title>root (&lt;template&gt;:67) (1 samples, 0.26%)</title><rect x="86" y="1572" width="3" height="15" fill="rgb(253,65,25)"/><text x="89.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:4) (27 samples, 6.99%)</title><rect x="10" y="52" width="82" height="15" fill="rgb(207,123,38)"/><text x="13.00" y="62.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (27 samples, 6.99%)</title><rect x="10" y="68" width="82" height="15" fill="rgb(215,35,18)"/><text x="13.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (27 samples, 6.99%)</title><rect x="10" y="84" width="82" height="15" fill="rgb(241,145,40)"/><text x="13.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (27 samples, 6.99%)</title><rect x="10" y="100" width="82" height="15" fill="rgb(223,152,10)"/><text x="13.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (27 samples, 6.99%)</title><rect x="10" y="116" width="82" height="15" fill="rgb(206,40,51)"/><text x="13.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (27 samples, 6.99%)</title><rect x="10" y="132" width="82" height="15" fill="rgb(246,27,51)"/><text x="13.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:7) (16 samples, 4.15%)</title><rect x="43" y="148" width="49" height="15" fill="rgb(225,105,24)"/><text x="46.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 4.15%)</title><rect x="43" y="164" width="49" height="15" fill="rgb(254,26,49)"/><text x="46.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 4.15%)</title><rect x="43" y="180" width="49" height="15" fill="rgb(252,68,37)"/><text x="46.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 4.15%)</title><rect x="43" y="196" width="49" height="15" fill="rgb(214,222,35)"/><text x="46.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 4.15%)</title><rect x="43" y="212" width="49" height="15" fill="rgb(246,99,8)"/><text x="46.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 4.15%)</title><rect x="43" y="228" width="49" height="15" fill="rgb(209,199,2)"/><text x="46.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (13 samples, 3.37%)</title><rect x="52" y="244" width="40" height="15" fill="rgb(226,141,41)"/><text x="55.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 3.37%)</title><rect x="52" y="260" width="40" height="15" fill="rgb(222,26,32)"/><text x="55.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 3.37%)</title><rect x="52" y="276" width="40" height="15" fill="rgb(246,28,11)"/><text x="55.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 3.37%)</title><rect x="52" y="292" width="40" height="15" fill="rgb(207,42,37)"/><text x="55.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 3.37%)</title><rect x="52" y="308" width="40" height="15" fill="rgb(231,175,43)"/><text x="55.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 3.37%)</title><rect x="52" y="324" width="40" height="15" fill="rgb(206,57,28)"/><text x="55.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (12 samples, 3.11%)</title><rect x="55" y="340" width="37" height="15" fill="rgb(247,3,47)"/><text x="58.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 3.11%)</title><rect x="55" y="356" width="37" height="15" fill="rgb(219,77,20)"/><text x="58.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 3.11%)</title><rect x="55" y="372" width="37" height="15" fill="rgb(235,131,32)"/><text x="58.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 3.11%)</title><rect x="55" y="388" width="37" height="15" fill="rgb(234,228,23)"/><text x="58.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 3.11%)</title><rect x="55" y="404" width="37" height="15" fill="rgb(249,225,27)"/><text x="58.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 3.11%)</title><rect x="55" y="420" width="37" height="15" fill="rgb(213,228,53)"/><text x="58.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (10 samples, 2.59%)</title><rect x="61" y="436" width="31" height="15" fill="rgb(254,223,16)"/><text x="64.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="452" width="31" height="15" fill="rgb(223,182,47)"/><text x="64.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 2.59%)</title><rect x="61" y="468" width="31" height="15" fill="rgb(224,192,33)"/><text x="64.00" y="478.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="484" width="31" height="15" fill="rgb(232,100,24)"/><text x="64.00" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="500" width="31" height="15" fill="rgb(241,92,4)"/><text x="64.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.59%)</title><rect x="61" y="516" width="31" height="15" fill="rgb(225,71,29)"/><text x="64.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.59%)</title><rect x="61" y="532" width="31" height="15" fill="rgb(210,111,30)"/><text x="64.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.59%)</title><rect x="61" y="548" width="31" height="15" fill="rgb(217,60,2)"/><text x="64.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="564" width="31" height="15" fill="rgb(217,38,6)"/><text x="64.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (10 samples, 2.59%)</title><rect x="61" y="580" width="31" height="15" fill="rgb(232,165,43)"/><text x="64.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="596" width="31" height="15" fill="rgb(248,183,48)"/><text x="64.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.59%)</title><rect x="61" y="612" width="31" height="15" fill="rgb(249,91,23)"/><text x="64.00" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.59%)</title><rect x="61" y="628" width="31" height="15" fill="rgb(239,186,17)"/><text x="64.00" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.59%)</title><rect x="61" y="644" width="31" height="15" fill="rgb(218,170,27)"/><text x="64.00" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="660" width="31" height="15" fill="rgb(243,197,18)"/><text x="64.00" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (10 samples, 2.59%)</title><rect x="61" y="676" width="31" height="15" fill="rgb(222,151,54)"/><text x="64.00" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="692" width="31" height="15" fill="rgb(223,208,30)"/><text x="64.00" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.59%)</title><rect x="61" y="708" width="31" height="15" fill="rgb(230,189,1)"/><text x="64.00" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.59%)</title><rect x="61" y="724" width="31" height="15" fill="rgb(234,54,8)"/><text x="64.00" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.59%)</title><rect x="61" y="740" width="31" height="15" fill="rgb(226,176,49)"/><text x="64.00" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="756" width="31" height="15" fill="rgb(235,118,0)"/><text x="64.00" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (10 samples, 2.59%)</title><rect x="61" y="772" width="31" height="15" fill="rgb(217,98,43)"/><text x="64.00" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="788" width="31" height="15" fill="rgb(247,80,22)"/><text x="64.00" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.59%)</title><rect x="61" y="804" width="31" height="15" fill="rgb(232,38,48)"/><text x="64.00" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.59%)</title><rect x="61" y="820" width="31" height="15" fill="rgb(232,204,42)"/><text x="64.00" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.59%)</title><rect x="61" y="836" width="31" height="15" fill="rgb(220,127,35)"/><text x="64.00" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="852" width="31" height="15" fill="rgb(250,216,44)"/><text x="64.00" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (10 samples, 2.59%)</title><rect x="61" y="868" width="31" height="15" fill="rgb(217,119,19)"/><text x="64.00" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="884" width="31" height="15" fill="rgb(236,160,31)"/><text x="64.00" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 2.59%)</title><rect x="61" y="900" width="31" height="15" fill="rgb(213,224,13)"/><text x="64.00" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="916" width="31" height="15" fill="rgb(207,99,45)"/><text x="64.00" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="932" width="31" height="15" fill="rgb(218,156,27)"/><text x="64.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.59%)</title><rect x="61" y="948" width="31" height="15" fill="rgb(219,80,36)"/><text x="64.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.59%)</title><rect x="61" y="964" width="31" height="15" fill="rgb(205,51,31)"/><text x="64.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.59%)</title><rect x="61" y="980" width="31" height="15" fill="rgb(239,194,52)"/><text x="64.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="996" width="31" height="15" fill="rgb(229,12,45)"/><text x="64.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (10 samples, 2.59%)</title><rect x="61" y="1012" width="31" height="15" fill="rgb(231,9,47)"/><text x="64.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="61" y="1028" width="31" height="15" fill="rgb(252,82,45)"/><text x="64.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.59%)</title><rect x="61" y="1044" width="31" height="15" fill="rgb(238,111,49)"/><text x="64.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.59%)</title><rect x="61" y="1060" width="31" height="15" fill="rgb(242,29,4)"/><text x="64.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.59%)</title><rect x="61" y="1076" width="31" height="15" fill="rgb(246,77,8)"/><text x="64.00" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="61" y="1092" width="31" height="15" fill="rgb(225,55,23)"/><text x="64.00" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (9 samples, 2.33%)</title><rect x="65" y="1108" width="27" height="15" fill="rgb(221,219,28)"/><text x="68.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (9 samples, 2.33%)</title><rect x="65" y="1124" width="27" height="15" fill="rgb(213,108,46)"/><text x="68.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.33%)</title><rect x="65" y="1140" width="27" height="15" fill="rgb(250,60,21)"/><text x="68.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.33%)</title><rect x="65" y="1156" width="27" height="15" fill="rgb(237,142,39)"/><text x="68.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.33%)</title><rect x="65" y="1172" width="27" height="15" fill="rgb(233,67,24)"/><text x="68.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.33%)</title><rect x="65" y="1188" width="27" height="15" fill="rgb(225,177,23)"/><text x="68.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.33%)</title><rect x="65" y="1204" width="27" height="15" fill="rgb(220,132,13)"/><text x="68.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.33%)</title><rect x="65" y="1220" width="27" height="15" fill="rgb(254,87,30)"/><text x="68.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (9 samples, 2.33%)</title><rect x="65" y="1236" width="27" height="15" fill="rgb(230,207,9)"/><text x="68.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (9 samples, 2.33%)</title><rect x="65" y="1252" width="27" height="15" fill="rgb(246,210,34)"/><text x="68.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.33%)</title><rect x="65" y="1268" width="27" height="15" fill="rgb(231,171,21)"/><text x="68.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.33%)</title><rect x="65" y="1284" width="27" height="15" fill="rgb(244,50,15)"/><text x="68.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.33%)</title><rect x="65" y="1300" width="27" height="15" fill="rgb(231,168,3)"/><text x="68.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.33%)</title><rect x="65" y="1316" width="27" height="15" fill="rgb(242,38,27)"/><text x="68.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.33%)</title><rect x="65" y="1332" width="27" height="15" fill="rgb(245,186,27)"/><text x="68.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.33%)</title><rect x="65" y="1348" width="27" height="15" fill="rgb(227,28,27)"/><text x="68.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (9 samples, 2.33%)</title><rect x="65" y="1364" width="27" height="15" fill="rgb(210,142,0)"/><text x="68.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.33%)</title><rect x="65" y="1380" width="27" height="15" fill="rgb(239,201,35)"/><text x="68.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.33%)</title><rect x="65" y="1396" width="27" height="15" fill="rgb(211,174,9)"/><text x="68.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.33%)</title><rect x="65" y="1412" width="27" height="15" fill="rgb(227,179,38)"/><text x="68.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.33%)</title><rect x="65" y="1428" width="27" height="15" fill="rgb(228,116,51)"/><text x="68.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.33%)</title><rect x="65" y="1444" width="27" height="15" fill="rgb(238,159,49)"/><text x="68.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (9 samples, 2.33%)</title><rect x="65" y="1460" width="27" height="15" fill="rgb(206,229,13)"/><text x="68.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (9 samples, 2.33%)</title><rect x="65" y="1476" width="27" height="15" fill="rgb(243,194,54)"/><text x="68.00" y="1486.50">_..</text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.26%)</title><rect x="89" y="1492" width="3" height="15" fill="rgb(210,117,23)"/><text x="92.00" y="1502.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="89" y="1508" width="3" height="15" fill="rgb(220,214,36)"/><text x="92.00" y="1518.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="89" y="1524" width="3" height="15" fill="rgb(243,16,24)"/><text x="92.00" y="1534.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (1 samples, 0.26%)</title><rect x="92" y="164" width="3" height="15" fill="rgb(227,0,43)"/><text x="95.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.26%)</title><rect x="92" y="180" width="3" height="15" fill="rgb(237,218,26)"/><text x="95.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.26%)</title><rect x="92" y="196" width="3" height="15" fill="rgb(209,99,36)"/><text x="95.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.26%)</title><rect x="92" y="212" width="3" height="15" fill="rgb(205,201,10)"/><text x="95.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.26%)</title><rect x="92" y="228" width="3" height="15" fill="rgb(245,1,38)"/><text x="95.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.26%)</title><rect x="92" y="244" width="3" height="15" fill="rgb(228,165,44)"/><text x="95.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.26%)</title><rect x="92" y="260" width="3" height="15" fill="rgb(236,127,11)"/><text x="95.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.26%)</title><rect x="92" y="276" width="3" height="15" fill="rgb(227,6,51)"/><text x="95.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.26%)</title><rect x="92" y="292" width="3" height="15" fill="rgb(226,44,37)"/><text x="95.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (1 samples, 0.26%)</title><rect x="92" y="308" width="3" height="15" fill="rgb(239,184,26)"/><text x="95.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.26%)</title><rect x="92" y="324" width="3" height="15" fill="rgb(230,8,24)"/><text x="95.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="92" y="340" width="3" height="15" fill="rgb(205,104,5)"/><text x="95.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.26%)</title><rect x="92" y="356" width="3" height="15" fill="rgb(235,78,47)"/><text x="95.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.26%)</title><rect x="92" y="372" width="3" height="15" fill="rgb(225,49,33)"/><text x="95.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.26%)</title><rect x="92" y="388" width="3" height="15" fill="rgb(254,81,42)"/><text x="95.00" y="398.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:244) (1 samples, 0.26%)</title><rect x="95" y="164" width="3" height="15" fill="rgb(243,200,25)"/><text x="98.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:125) (1 samples, 0.26%)</title><rect x="95" y="180" width="3" height="15" fill="rgb(211,38,39)"/><text x="98.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.26%)</title><rect x="95" y="196" width="3" height="15" fill="rgb(250,140,39)"/><text x="98.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(211,48,8)"/><text x="98.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.26%)</title><rect x="95" y="228" width="3" height="15" fill="rgb(225,210,15)"/><text x="98.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.26%)</title><rect x="95" y="244" width="3" height="15" fill="rgb(242,4,15)"/><text x="98.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (1 samples, 0.26%)</title><rect x="95" y="260" width="3" height="15" fill="rgb(245,207,37)"/><text x="98.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.26%)</title><rect x="95" y="276" width="3" height="15" fill="rgb(244,107,34)"/><text x="98.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="95" y="292" width="3" height="15" fill="rgb(220,57,32)"/><text x="98.00" y="302.50"></text></g><g><title>dgemv_thread_n (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="95" y="308" width="3" height="15" fill="rgb(219,10,49)"/><text x="98.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="95" y="324" width="3" height="15" fill="rgb(205,57,45)"/><text x="98.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="95" y="340" width="3" height="15" fill="rgb(223,64,26)"/><text x="98.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.26%)</title><rect x="95" y="356" width="3" height="15" fill="rgb(221,113,22)"/><text x="98.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:40) (3 samples, 0.78%)</title><rect x="92" y="52" width="9" height="15" fill="rgb(245,141,48)"/><text x="95.00" y="62.50"></text></g><g><title>start (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:11) (3 samples, 0.78%)</title><rect x="92" y="68" width="9" height="15" fill="rgb(207,103,21)"/><text x="95.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:39) (3 samples, 0.78%)</title><rect x="92" y="84" width="9" height="15" fill="rgb(208,167,38)"/><text x="95.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.78%)</title><rect x="92" y="100" width="9" height="15" fill="rgb(210,190,22)"/><text x="95.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:627) (3 samples, 0.78%)</title><rect x="92" y="116" width="9" height="15" fill="rgb(213,44,24)"/><text x="95.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (3 samples, 0.78%)</title><rect x="92" y="132" width="9" height="15" fill="rgb(241,89,31)"/><text x="95.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (3 samples, 0.78%)</title><rect x="92" y="148" width="9" height="15" fill="rgb(210,149,29)"/><text x="95.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:250) (1 samples, 0.26%)</title><rect x="98" y="164" width="3" height="15" fill="rgb(212,45,52)"/><text x="101.00" y="174.50"></text></g><g><title>inplace_relu_derivative (sklearn/neural_network/_base.py:170) (1 samples, 0.26%)</title><rect x="98" y="180" width="3" height="15" fill="rgb(239,185,13)"/><text x="101.00" y="190.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.26%)</title><rect x="98" y="196" width="3" height="15" fill="rgb(216,30,35)"/><text x="101.00" y="206.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1287) (1 samples, 0.26%)</title><rect x="98" y="212" width="3" height="15" fill="rgb(219,210,5)"/><text x="101.00" y="222.50"></text></g><g><title>npy_memchr (common.h:262) (1 samples, 0.26%)</title><rect x="98" y="228" width="3" height="15" fill="rgb(219,36,19)"/><text x="101.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.26%)</title><rect x="101" y="116" width="3" height="15" fill="rgb(226,17,53)"/><text x="104.00" y="126.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.26%)</title><rect x="107" y="164" width="3" height="15" fill="rgb(227,120,28)"/><text x="110.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.26%)</title><rect x="107" y="180" width="3" height="15" fill="rgb(250,218,13)"/><text x="110.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:941) (1 samples, 0.26%)</title><rect x="110" y="164" width="3" height="15" fill="rgb(244,178,26)"/><text x="113.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 0.78%)</title><rect x="120" y="180" width="9" height="15" fill="rgb(215,148,47)"/><text x="123.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.52%)</title><rect x="144" y="196" width="6" height="15" fill="rgb(214,181,52)"/><text x="147.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 3.37%)</title><rect x="129" y="180" width="39" height="15" fill="rgb(240,67,41)"/><text x="132.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (6 samples, 1.55%)</title><rect x="150" y="196" width="18" height="15" fill="rgb(215,160,54)"/><text x="153.00" y="206.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1332) (21 samples, 5.44%)</title><rect x="107" y="148" width="65" height="15" fill="rgb(238,25,31)"/><text x="110.00" y="158.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (19 samples, 4.92%)</title><rect x="113" y="164" width="59" height="15" fill="rgb(232,120,11)"/><text x="116.00" y="174.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.26%)</title><rect x="168" y="180" width="4" height="15" fill="rgb(209,82,52)"/><text x="171.00" y="190.50"></text></g><g><title>0x7fc19fc081ea (libc-2.29.so) (1 samples, 0.26%)</title><rect x="168" y="196" width="4" height="15" fill="rgb(231,56,32)"/><text x="171.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (2 samples, 0.52%)</title><rect x="175" y="180" width="6" height="15" fill="rgb(238,158,13)"/><text x="178.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.26%)</title><rect x="181" y="180" width="3" height="15" fill="rgb(214,154,23)"/><text x="184.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.26%)</title><rect x="184" y="180" width="3" height="15" fill="rgb(218,132,25)"/><text x="187.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.26%)</title><rect x="184" y="196" width="3" height="15" fill="rgb(216,212,7)"/><text x="187.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:474) (1 samples, 0.26%)</title><rect x="187" y="196" width="3" height="15" fill="rgb(237,73,42)"/><text x="190.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.26%)</title><rect x="190" y="196" width="3" height="15" fill="rgb(216,173,31)"/><text x="193.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.26%)</title><rect x="193" y="196" width="3" height="15" fill="rgb(229,229,39)"/><text x="196.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.04%)</title><rect x="187" y="180" width="12" height="15" fill="rgb(235,117,29)"/><text x="190.00" y="190.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.26%)</title><rect x="196" y="196" width="3" height="15" fill="rgb(207,166,25)"/><text x="199.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.26%)</title><rect x="199" y="196" width="3" height="15" fill="rgb(236,227,43)"/><text x="202.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.26%)</title><rect x="202" y="196" width="3" height="15" fill="rgb(217,225,38)"/><text x="205.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.04%)</title><rect x="199" y="180" width="12" height="15" fill="rgb(218,46,36)"/><text x="202.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.52%)</title><rect x="205" y="196" width="6" height="15" fill="rgb(206,13,17)"/><text x="208.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.26%)</title><rect x="208" y="212" width="3" height="15" fill="rgb(206,104,38)"/><text x="211.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.52%)</title><rect x="211" y="180" width="6" height="15" fill="rgb(217,184,47)"/><text x="214.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.52%)</title><rect x="211" y="196" width="6" height="15" fill="rgb(252,21,41)"/><text x="214.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (2 samples, 0.52%)</title><rect x="220" y="196" width="7" height="15" fill="rgb(218,117,5)"/><text x="223.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.04%)</title><rect x="217" y="180" width="13" height="15" fill="rgb(210,182,47)"/><text x="220.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.26%)</title><rect x="227" y="196" width="3" height="15" fill="rgb(247,92,7)"/><text x="230.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.26%)</title><rect x="230" y="180" width="3" height="15" fill="rgb(220,66,45)"/><text x="233.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.52%)</title><rect x="242" y="212" width="6" height="15" fill="rgb(238,75,35)"/><text x="245.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (5 samples, 1.30%)</title><rect x="239" y="196" width="15" height="15" fill="rgb(213,210,45)"/><text x="242.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (2 samples, 0.52%)</title><rect x="248" y="212" width="6" height="15" fill="rgb(232,63,33)"/><text x="251.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.26%)</title><rect x="254" y="196" width="3" height="15" fill="rgb(250,53,13)"/><text x="257.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.26%)</title><rect x="254" y="212" width="3" height="15" fill="rgb(222,196,50)"/><text x="257.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (9 samples, 2.33%)</title><rect x="233" y="180" width="27" height="15" fill="rgb(206,89,39)"/><text x="236.00" y="190.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.26%)</title><rect x="257" y="196" width="3" height="15" fill="rgb(212,136,50)"/><text x="260.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (2 samples, 0.52%)</title><rect x="260" y="180" width="6" height="15" fill="rgb(224,154,32)"/><text x="263.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.26%)</title><rect x="269" y="212" width="3" height="15" fill="rgb(253,112,31)"/><text x="272.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.78%)</title><rect x="266" y="180" width="9" height="15" fill="rgb(208,192,32)"/><text x="269.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.78%)</title><rect x="266" y="196" width="9" height="15" fill="rgb(245,7,38)"/><text x="269.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.26%)</title><rect x="272" y="212" width="3" height="15" fill="rgb(231,182,9)"/><text x="275.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.26%)</title><rect x="275" y="180" width="4" height="15" fill="rgb(209,142,5)"/><text x="278.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.26%)</title><rect x="279" y="196" width="3" height="15" fill="rgb(235,101,26)"/><text x="282.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.26%)</title><rect x="282" y="196" width="3" height="15" fill="rgb(251,165,41)"/><text x="285.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.55%)</title><rect x="279" y="180" width="18" height="15" fill="rgb(229,33,10)"/><text x="282.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.04%)</title><rect x="285" y="196" width="12" height="15" fill="rgb(208,184,37)"/><text x="288.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.52%)</title><rect x="291" y="212" width="6" height="15" fill="rgb(205,84,10)"/><text x="294.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.52%)</title><rect x="291" y="228" width="6" height="15" fill="rgb(221,53,35)"/><text x="294.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (42 samples, 10.88%)</title><rect x="172" y="164" width="128" height="15" fill="rgb(236,52,10)"/><text x="175.00" y="174.50">_predict (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.26%)</title><rect x="297" y="180" width="3" height="15" fill="rgb(236,200,48)"/><text x="300.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.26%)</title><rect x="297" y="196" width="3" height="15" fill="rgb(221,7,9)"/><text x="300.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:673) (2 samples, 0.52%)</title><rect x="300" y="164" width="6" height="15" fill="rgb(214,77,24)"/><text x="303.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:675) (1 samples, 0.26%)</title><rect x="306" y="164" width="3" height="15" fill="rgb(243,204,46)"/><text x="309.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:676) (1 samples, 0.26%)</title><rect x="309" y="164" width="3" height="15" fill="rgb(237,33,22)"/><text x="312.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:681) (1 samples, 0.26%)</title><rect x="312" y="164" width="3" height="15" fill="rgb(241,53,35)"/><text x="315.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:682) (2 samples, 0.52%)</title><rect x="315" y="164" width="6" height="15" fill="rgb(208,145,38)"/><text x="318.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (1 samples, 0.26%)</title><rect x="321" y="164" width="3" height="15" fill="rgb(207,6,26)"/><text x="324.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="337" y="196" width="3" height="15" fill="rgb(222,65,3)"/><text x="340.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="337" y="212" width="3" height="15" fill="rgb(212,0,20)"/><text x="340.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.26%)</title><rect x="337" y="228" width="3" height="15" fill="rgb(254,100,3)"/><text x="340.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (3 samples, 0.78%)</title><rect x="340" y="196" width="9" height="15" fill="rgb(231,138,17)"/><text x="343.00" y="206.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2588) (1 samples, 0.26%)</title><rect x="349" y="244" width="3" height="15" fill="rgb(205,219,31)"/><text x="352.00" y="254.50"></text></g><g><title>0x7fc19fc08120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="349" y="260" width="3" height="15" fill="rgb(242,40,7)"/><text x="352.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:503) (1 samples, 0.26%)</title><rect x="352" y="260" width="3" height="15" fill="rgb(239,177,41)"/><text x="355.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.52%)</title><rect x="352" y="244" width="6" height="15" fill="rgb(205,186,10)"/><text x="355.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.26%)</title><rect x="355" y="260" width="3" height="15" fill="rgb(224,161,28)"/><text x="358.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.26%)</title><rect x="355" y="276" width="3" height="15" fill="rgb(224,226,35)"/><text x="358.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.26%)</title><rect x="355" y="292" width="3" height="15" fill="rgb(250,213,29)"/><text x="358.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.26%)</title><rect x="355" y="308" width="3" height="15" fill="rgb(223,102,10)"/><text x="358.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2819) (1 samples, 0.26%)</title><rect x="358" y="244" width="3" height="15" fill="rgb(214,82,21)"/><text x="361.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.26%)</title><rect x="358" y="260" width="3" height="15" fill="rgb(233,212,32)"/><text x="361.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.26%)</title><rect x="361" y="276" width="3" height="15" fill="rgb(242,111,54)"/><text x="364.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:937) (1 samples, 0.26%)</title><rect x="361" y="292" width="3" height="15" fill="rgb(227,91,42)"/><text x="364.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.52%)</title><rect x="361" y="260" width="6" height="15" fill="rgb(252,19,13)"/><text x="364.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.26%)</title><rect x="364" y="276" width="3" height="15" fill="rgb(211,210,5)"/><text x="367.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.26%)</title><rect x="364" y="292" width="3" height="15" fill="rgb(254,8,44)"/><text x="367.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.26%)</title><rect x="364" y="308" width="3" height="15" fill="rgb(237,228,0)"/><text x="367.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.26%)</title><rect x="367" y="260" width="3" height="15" fill="rgb(241,48,37)"/><text x="370.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.26%)</title><rect x="367" y="276" width="3" height="15" fill="rgb(212,157,39)"/><text x="370.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.26%)</title><rect x="370" y="276" width="3" height="15" fill="rgb(221,92,49)"/><text x="373.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.26%)</title><rect x="370" y="292" width="3" height="15" fill="rgb(235,153,1)"/><text x="373.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.26%)</title><rect x="370" y="308" width="3" height="15" fill="rgb(253,116,23)"/><text x="373.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.26%)</title><rect x="370" y="324" width="3" height="15" fill="rgb(239,27,31)"/><text x="373.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.26%)</title><rect x="370" y="340" width="3" height="15" fill="rgb(237,87,8)"/><text x="373.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (6 samples, 1.55%)</title><rect x="361" y="244" width="18" height="15" fill="rgb(247,43,27)"/><text x="364.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.78%)</title><rect x="370" y="260" width="9" height="15" fill="rgb(209,3,54)"/><text x="373.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.52%)</title><rect x="373" y="276" width="6" height="15" fill="rgb(223,220,4)"/><text x="376.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.52%)</title><rect x="373" y="292" width="6" height="15" fill="rgb(218,130,47)"/><text x="376.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.52%)</title><rect x="373" y="308" width="6" height="15" fill="rgb(250,72,21)"/><text x="376.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="376" y="324" width="3" height="15" fill="rgb(235,213,48)"/><text x="379.00" y="334.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src:3432) (1 samples, 0.26%)</title><rect x="379" y="276" width="3" height="15" fill="rgb(241,155,7)"/><text x="382.00" y="286.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:443) (2 samples, 0.52%)</title><rect x="379" y="260" width="7" height="15" fill="rgb(231,77,43)"/><text x="382.00" y="270.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src:3441) (1 samples, 0.26%)</title><rect x="382" y="276" width="4" height="15" fill="rgb(238,146,18)"/><text x="385.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 0.78%)</title><rect x="379" y="244" width="10" height="15" fill="rgb(228,86,26)"/><text x="382.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.26%)</title><rect x="386" y="260" width="3" height="15" fill="rgb(236,189,33)"/><text x="389.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.26%)</title><rect x="386" y="276" width="3" height="15" fill="rgb(209,54,14)"/><text x="389.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="386" y="292" width="3" height="15" fill="rgb(231,121,12)"/><text x="389.00" y="302.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="386" y="308" width="3" height="15" fill="rgb(230,90,24)"/><text x="389.00" y="318.50"></text></g><g><title>dscal_kernel_8_zero (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="386" y="324" width="3" height="15" fill="rgb(229,94,49)"/><text x="389.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 3.89%)</title><rect x="349" y="212" width="46" height="15" fill="rgb(208,124,23)"/><text x="352.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (15 samples, 3.89%)</title><rect x="349" y="228" width="46" height="15" fill="rgb(226,92,11)"/><text x="352.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.52%)</title><rect x="389" y="244" width="6" height="15" fill="rgb(245,126,13)"/><text x="392.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (2 samples, 0.52%)</title><rect x="389" y="260" width="6" height="15" fill="rgb(213,185,42)"/><text x="392.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.26%)</title><rect x="395" y="212" width="3" height="15" fill="rgb(212,81,19)"/><text x="398.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (17 samples, 4.40%)</title><rect x="349" y="196" width="52" height="15" fill="rgb(222,143,20)"/><text x="352.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.26%)</title><rect x="398" y="212" width="3" height="15" fill="rgb(250,224,15)"/><text x="401.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.26%)</title><rect x="398" y="228" width="3" height="15" fill="rgb(224,9,35)"/><text x="401.00" y="238.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (25 samples, 6.48%)</title><rect x="330" y="180" width="77" height="15" fill="rgb(212,30,26)"/><text x="333.00" y="190.50">_forward..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.52%)</title><rect x="401" y="196" width="6" height="15" fill="rgb(223,9,13)"/><text x="404.00" y="206.50"></text></g><g><title>array_inplace_add (number.c:709) (1 samples, 0.26%)</title><rect x="410" y="196" width="3" height="15" fill="rgb(229,71,12)"/><text x="413.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.26%)</title><rect x="413" y="228" width="3" height="15" fill="rgb(206,178,41)"/><text x="416.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.52%)</title><rect x="413" y="212" width="6" height="15" fill="rgb(236,168,37)"/><text x="416.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.26%)</title><rect x="416" y="228" width="3" height="15" fill="rgb(251,3,40)"/><text x="419.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.26%)</title><rect x="416" y="244" width="3" height="15" fill="rgb(245,159,6)"/><text x="419.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.52%)</title><rect x="419" y="260" width="6" height="15" fill="rgb(230,191,47)"/><text x="422.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1177) (2 samples, 0.52%)</title><rect x="419" y="276" width="6" height="15" fill="rgb(214,56,50)"/><text x="422.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.26%)</title><rect x="425" y="260" width="3" height="15" fill="rgb(240,23,52)"/><text x="428.00" y="270.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2296) (1 samples, 0.26%)</title><rect x="425" y="276" width="3" height="15" fill="rgb(221,30,5)"/><text x="428.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.04%)</title><rect x="419" y="244" width="12" height="15" fill="rgb(214,158,8)"/><text x="422.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.26%)</title><rect x="428" y="260" width="3" height="15" fill="rgb(235,133,18)"/><text x="431.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.81%)</title><rect x="413" y="196" width="21" height="15" fill="rgb(210,138,15)"/><text x="416.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.30%)</title><rect x="419" y="212" width="15" height="15" fill="rgb(227,148,48)"/><text x="422.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.30%)</title><rect x="419" y="228" width="15" height="15" fill="rgb(240,59,29)"/><text x="422.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.26%)</title><rect x="431" y="244" width="3" height="15" fill="rgb(227,39,40)"/><text x="434.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.26%)</title><rect x="431" y="260" width="3" height="15" fill="rgb(219,5,7)"/><text x="434.00" y="270.50"></text></g><g><title>0x7fc19fbe7904 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="431" y="276" width="3" height="15" fill="rgb(217,190,7)"/><text x="434.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.26%)</title><rect x="434" y="196" width="3" height="15" fill="rgb(243,229,47)"/><text x="437.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.26%)</title><rect x="434" y="212" width="3" height="15" fill="rgb(224,80,17)"/><text x="437.00" y="222.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (11 samples, 2.85%)</title><rect x="407" y="180" width="34" height="15" fill="rgb(217,175,42)"/><text x="410.00" y="190.50">_f..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.26%)</title><rect x="437" y="196" width="4" height="15" fill="rgb(209,227,48)"/><text x="440.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.26%)</title><rect x="453" y="212" width="3" height="15" fill="rgb(225,43,45)"/><text x="456.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.26%)</title><rect x="456" y="212" width="3" height="15" fill="rgb(243,95,22)"/><text x="459.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.52%)</title><rect x="459" y="292" width="6" height="15" fill="rgb(227,10,19)"/><text x="462.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="462" y="308" width="3" height="15" fill="rgb(215,34,6)"/><text x="465.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (4 samples, 1.04%)</title><rect x="459" y="228" width="12" height="15" fill="rgb(233,24,19)"/><text x="462.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (4 samples, 1.04%)</title><rect x="459" y="244" width="12" height="15" fill="rgb(214,161,12)"/><text x="462.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (4 samples, 1.04%)</title><rect x="459" y="260" width="12" height="15" fill="rgb(213,80,30)"/><text x="462.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 1.04%)</title><rect x="459" y="276" width="12" height="15" fill="rgb(218,140,7)"/><text x="462.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.52%)</title><rect x="465" y="292" width="6" height="15" fill="rgb(225,131,26)"/><text x="468.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.26%)</title><rect x="477" y="308" width="3" height="15" fill="rgb(248,128,7)"/><text x="480.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.52%)</title><rect x="483" y="324" width="6" height="15" fill="rgb(248,200,1)"/><text x="486.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (2 samples, 0.52%)</title><rect x="489" y="340" width="7" height="15" fill="rgb(219,221,29)"/><text x="492.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py:2983) (1 samples, 0.26%)</title><rect x="493" y="356" width="3" height="15" fill="rgb(227,25,53)"/><text x="496.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.26%)</title><rect x="496" y="388" width="3" height="15" fill="rgb(236,145,9)"/><text x="499.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.26%)</title><rect x="502" y="436" width="3" height="15" fill="rgb(209,14,13)"/><text x="505.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1600) (1 samples, 0.26%)</title><rect x="502" y="452" width="3" height="15" fill="rgb(216,122,30)"/><text x="505.00" y="462.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.26%)</title><rect x="505" y="436" width="3" height="15" fill="rgb(246,73,10)"/><text x="508.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (7 samples, 1.81%)</title><rect x="489" y="324" width="22" height="15" fill="rgb(217,98,16)"/><text x="492.00" y="334.50">_..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (5 samples, 1.30%)</title><rect x="496" y="340" width="15" height="15" fill="rgb(250,73,6)"/><text x="499.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.30%)</title><rect x="496" y="356" width="15" height="15" fill="rgb(235,3,9)"/><text x="499.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (5 samples, 1.30%)</title><rect x="496" y="372" width="15" height="15" fill="rgb(242,114,42)"/><text x="499.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 1.04%)</title><rect x="499" y="388" width="12" height="15" fill="rgb(223,133,7)"/><text x="502.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.78%)</title><rect x="502" y="404" width="9" height="15" fill="rgb(227,123,27)"/><text x="505.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 0.78%)</title><rect x="502" y="420" width="9" height="15" fill="rgb(240,38,5)"/><text x="505.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.26%)</title><rect x="508" y="436" width="3" height="15" fill="rgb(237,23,6)"/><text x="511.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.26%)</title><rect x="508" y="452" width="3" height="15" fill="rgb(237,82,38)"/><text x="511.00" y="462.50"></text></g><g><title>npy_alloc_cache (alloc.c:121) (1 samples, 0.26%)</title><rect x="508" y="468" width="3" height="15" fill="rgb(214,219,21)"/><text x="511.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.26%)</title><rect x="517" y="372" width="3" height="15" fill="rgb(227,113,12)"/><text x="520.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.26%)</title><rect x="517" y="388" width="3" height="15" fill="rgb(222,205,42)"/><text x="520.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (14 samples, 3.63%)</title><rect x="480" y="308" width="43" height="15" fill="rgb(235,220,20)"/><text x="483.00" y="318.50">_cli..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (4 samples, 1.04%)</title><rect x="511" y="324" width="12" height="15" fill="rgb(231,31,52)"/><text x="514.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.52%)</title><rect x="517" y="340" width="6" height="15" fill="rgb(216,168,41)"/><text x="520.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.52%)</title><rect x="517" y="356" width="6" height="15" fill="rgb(221,71,12)"/><text x="520.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.26%)</title><rect x="520" y="372" width="3" height="15" fill="rgb(223,50,43)"/><text x="523.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.26%)</title><rect x="520" y="388" width="3" height="15" fill="rgb(206,175,38)"/><text x="523.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="520" y="404" width="3" height="15" fill="rgb(245,27,43)"/><text x="523.00" y="414.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (4 samples, 1.04%)</title><rect x="526" y="324" width="12" height="15" fill="rgb(235,145,6)"/><text x="529.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.52%)</title><rect x="532" y="340" width="6" height="15" fill="rgb(251,71,43)"/><text x="535.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.26%)</title><rect x="538" y="324" width="3" height="15" fill="rgb(221,205,37)"/><text x="541.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.26%)</title><rect x="538" y="340" width="3" height="15" fill="rgb(229,137,18)"/><text x="541.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.26%)</title><rect x="538" y="356" width="3" height="15" fill="rgb(212,56,5)"/><text x="541.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.26%)</title><rect x="541" y="340" width="3" height="15" fill="rgb(217,163,13)"/><text x="544.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.26%)</title><rect x="541" y="356" width="3" height="15" fill="rgb(221,229,2)"/><text x="544.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.26%)</title><rect x="541" y="372" width="3" height="15" fill="rgb(230,173,52)"/><text x="544.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.26%)</title><rect x="541" y="388" width="3" height="15" fill="rgb(237,73,0)"/><text x="544.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.26%)</title><rect x="541" y="404" width="3" height="15" fill="rgb(244,67,44)"/><text x="544.00" y="414.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:31) (1 samples, 0.26%)</title><rect x="541" y="420" width="3" height="15" fill="rgb(224,85,2)"/><text x="544.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.26%)</title><rect x="544" y="372" width="4" height="15" fill="rgb(245,124,30)"/><text x="547.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.52%)</title><rect x="544" y="356" width="7" height="15" fill="rgb(235,69,15)"/><text x="547.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.26%)</title><rect x="548" y="372" width="3" height="15" fill="rgb(215,94,25)"/><text x="551.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.26%)</title><rect x="548" y="388" width="3" height="15" fill="rgb(254,154,10)"/><text x="551.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.26%)</title><rect x="551" y="356" width="3" height="15" fill="rgb(226,192,34)"/><text x="554.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.26%)</title><rect x="551" y="372" width="3" height="15" fill="rgb(212,46,27)"/><text x="554.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.26%)</title><rect x="551" y="388" width="3" height="15" fill="rgb(215,225,47)"/><text x="554.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.26%)</title><rect x="554" y="356" width="3" height="15" fill="rgb(218,102,4)"/><text x="557.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.26%)</title><rect x="554" y="372" width="3" height="15" fill="rgb(242,110,33)"/><text x="557.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1487) (1 samples, 0.26%)</title><rect x="554" y="388" width="3" height="15" fill="rgb(221,162,22)"/><text x="557.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (12 samples, 3.11%)</title><rect x="523" y="308" width="37" height="15" fill="rgb(209,83,35)"/><text x="526.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (6 samples, 1.55%)</title><rect x="541" y="324" width="19" height="15" fill="rgb(214,127,49)"/><text x="544.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.30%)</title><rect x="544" y="340" width="16" height="15" fill="rgb(242,227,53)"/><text x="547.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.26%)</title><rect x="557" y="356" width="3" height="15" fill="rgb(206,208,49)"/><text x="560.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.26%)</title><rect x="575" y="356" width="3" height="15" fill="rgb(229,166,46)"/><text x="578.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.26%)</title><rect x="575" y="372" width="3" height="15" fill="rgb(240,37,20)"/><text x="578.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.26%)</title><rect x="575" y="388" width="3" height="15" fill="rgb(247,94,21)"/><text x="578.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.26%)</title><rect x="575" y="404" width="3" height="15" fill="rgb(252,63,28)"/><text x="578.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.26%)</title><rect x="575" y="420" width="3" height="15" fill="rgb(221,216,18)"/><text x="578.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.26%)</title><rect x="575" y="436" width="3" height="15" fill="rgb(219,210,11)"/><text x="578.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.26%)</title><rect x="578" y="356" width="3" height="15" fill="rgb(235,29,11)"/><text x="581.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.26%)</title><rect x="578" y="372" width="3" height="15" fill="rgb(210,154,54)"/><text x="581.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1895) (1 samples, 0.26%)</title><rect x="578" y="388" width="3" height="15" fill="rgb(235,149,36)"/><text x="581.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.26%)</title><rect x="578" y="404" width="3" height="15" fill="rgb(218,10,35)"/><text x="581.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.26%)</title><rect x="581" y="356" width="3" height="15" fill="rgb(231,147,2)"/><text x="584.00" y="366.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.26%)</title><rect x="581" y="372" width="3" height="15" fill="rgb(224,100,50)"/><text x="584.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.26%)</title><rect x="584" y="356" width="3" height="15" fill="rgb(247,206,35)"/><text x="587.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.26%)</title><rect x="584" y="372" width="3" height="15" fill="rgb(213,163,52)"/><text x="587.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.26%)</title><rect x="584" y="388" width="3" height="15" fill="rgb(233,53,42)"/><text x="587.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="584" y="404" width="3" height="15" fill="rgb(247,8,5)"/><text x="587.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.26%)</title><rect x="587" y="372" width="3" height="15" fill="rgb(240,219,9)"/><text x="590.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.26%)</title><rect x="587" y="388" width="3" height="15" fill="rgb(248,27,17)"/><text x="590.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.26%)</title><rect x="590" y="404" width="3" height="15" fill="rgb(230,163,30)"/><text x="593.00" y="414.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.26%)</title><rect x="590" y="420" width="3" height="15" fill="rgb(247,173,40)"/><text x="593.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.26%)</title><rect x="593" y="404" width="3" height="15" fill="rgb(208,63,43)"/><text x="596.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.26%)</title><rect x="596" y="404" width="4" height="15" fill="rgb(254,127,30)"/><text x="599.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.26%)</title><rect x="596" y="420" width="4" height="15" fill="rgb(224,210,37)"/><text x="599.00" y="430.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.26%)</title><rect x="596" y="436" width="4" height="15" fill="rgb(225,57,16)"/><text x="599.00" y="446.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:701) (1 samples, 0.26%)</title><rect x="596" y="452" width="4" height="15" fill="rgb(253,179,3)"/><text x="599.00" y="462.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.04%)</title><rect x="590" y="388" width="13" height="15" fill="rgb(253,34,27)"/><text x="593.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.26%)</title><rect x="600" y="404" width="3" height="15" fill="rgb(240,220,9)"/><text x="603.00" y="414.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.26%)</title><rect x="600" y="420" width="3" height="15" fill="rgb(224,78,38)"/><text x="603.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.26%)</title><rect x="600" y="436" width="3" height="15" fill="rgb(250,197,29)"/><text x="603.00" y="446.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.26%)</title><rect x="600" y="452" width="3" height="15" fill="rgb(216,77,45)"/><text x="603.00" y="462.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:350) (1 samples, 0.26%)</title><rect x="600" y="468" width="3" height="15" fill="rgb(237,143,13)"/><text x="603.00" y="478.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.26%)</title><rect x="603" y="420" width="3" height="15" fill="rgb(228,66,28)"/><text x="606.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1719) (1 samples, 0.26%)</title><rect x="606" y="420" width="3" height="15" fill="rgb(251,126,46)"/><text x="609.00" y="430.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (3 samples, 0.78%)</title><rect x="603" y="404" width="9" height="15" fill="rgb(207,177,48)"/><text x="606.00" y="414.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.26%)</title><rect x="609" y="420" width="3" height="15" fill="rgb(239,208,2)"/><text x="612.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="609" y="436" width="3" height="15" fill="rgb(211,180,7)"/><text x="612.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 3.37%)</title><rect x="575" y="340" width="40" height="15" fill="rgb(219,97,18)"/><text x="578.00" y="350.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 2.33%)</title><rect x="587" y="356" width="28" height="15" fill="rgb(247,39,18)"/><text x="590.00" y="366.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.07%)</title><rect x="590" y="372" width="25" height="15" fill="rgb(253,74,22)"/><text x="593.00" y="382.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.04%)</title><rect x="603" y="388" width="12" height="15" fill="rgb(239,63,18)"/><text x="606.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.26%)</title><rect x="612" y="404" width="3" height="15" fill="rgb(225,51,30)"/><text x="615.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2042) (1 samples, 0.26%)</title><rect x="612" y="420" width="3" height="15" fill="rgb(244,193,0)"/><text x="615.00" y="430.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (96 samples, 24.87%)</title><rect x="324" y="164" width="294" height="15" fill="rgb(211,180,53)"/><text x="327.00" y="174.50">_predict (sklearn/neural_network/_multi..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (58 samples, 15.03%)</title><rect x="441" y="180" width="177" height="15" fill="rgb(222,191,52)"/><text x="444.00" y="190.50">_forward_pass (sklearn/..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (57 samples, 14.77%)</title><rect x="444" y="196" width="174" height="15" fill="rgb(254,196,39)"/><text x="447.00" y="206.50">relu (sklearn/neural_n..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (52 samples, 13.47%)</title><rect x="459" y="212" width="159" height="15" fill="rgb(218,142,11)"/><text x="462.00" y="222.50">clip (&lt;__array_funct..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (48 samples, 12.44%)</title><rect x="471" y="228" width="147" height="15" fill="rgb(251,194,15)"/><text x="474.00" y="238.50">array_implement_ar..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (48 samples, 12.44%)</title><rect x="471" y="244" width="147" height="15" fill="rgb(211,18,0)"/><text x="474.00" y="254.50">clip (numpy/core/f..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (47 samples, 12.18%)</title><rect x="474" y="260" width="144" height="15" fill="rgb(240,182,31)"/><text x="477.00" y="270.50">_wrapfunc (numpy/c..</text></g><g><title>array_clip (methods.c:2381) (47 samples, 12.18%)</title><rect x="474" y="276" width="144" height="15" fill="rgb(236,2,24)"/><text x="477.00" y="286.50">array_clip (method..</text></g><g><title>forward_ndarray_method (methods.c:108) (47 samples, 12.18%)</title><rect x="474" y="292" width="144" height="15" fill="rgb(225,119,25)"/><text x="477.00" y="302.50">forward_ndarray_me..</text></g><g><title>_clip (numpy/core/_methods.py:132) (19 samples, 4.92%)</title><rect x="560" y="308" width="58" height="15" fill="rgb(234,53,52)"/><text x="563.00" y="318.50">_clip ..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (17 samples, 4.40%)</title><rect x="566" y="324" width="52" height="15" fill="rgb(243,131,25)"/><text x="569.00" y="334.50">_clip..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.26%)</title><rect x="615" y="340" width="3" height="15" fill="rgb(246,203,22)"/><text x="618.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="615" y="356" width="3" height="15" fill="rgb(232,39,11)"/><text x="618.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="615" y="372" width="3" height="15" fill="rgb(212,56,45)"/><text x="618.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.26%)</title><rect x="615" y="388" width="3" height="15" fill="rgb(206,105,14)"/><text x="618.00" y="398.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (147 samples, 38.08%)</title><rect x="172" y="148" width="449" height="15" fill="rgb(210,224,46)"/><text x="175.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py:133..</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:686) (1 samples, 0.26%)</title><rect x="618" y="164" width="3" height="15" fill="rgb(211,39,35)"/><text x="621.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (171 samples, 44.30%)</title><rect x="104" y="132" width="523" height="15" fill="rgb(253,48,33)"/><text x="107.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1335) (2 samples, 0.52%)</title><rect x="621" y="148" width="6" height="15" fill="rgb(210,140,24)"/><text x="624.00" y="158.50"></text></g><g><title>array_ravel (methods.c:2438) (1 samples, 0.26%)</title><rect x="624" y="164" width="3" height="15" fill="rgb(214,211,15)"/><text x="627.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:54) (173 samples, 44.82%)</title><rect x="101" y="52" width="529" height="15" fill="rgb(233,39,3)"/><text x="104.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:53) (173 samples, 44.82%)</title><rect x="101" y="68" width="529" height="15" fill="rgb(236,45,32)"/><text x="104.00" y="78.50">profile_skl (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:37) (173 samples, 44.82%)</title><rect x="101" y="84" width="529" height="15" fill="rgb(230,96,14)"/><text x="104.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:37)</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:31) (173 samples, 44.82%)</title><rect x="101" y="100" width="529" height="15" fill="rgb(220,116,5)"/><text x="104.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (172 samples, 44.56%)</title><rect x="104" y="116" width="526" height="15" fill="rgb(251,179,6)"/><text x="107.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="627" y="132" width="3" height="15" fill="rgb(205,196,3)"/><text x="630.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.26%)</title><rect x="633" y="116" width="3" height="15" fill="rgb(251,28,54)"/><text x="636.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.26%)</title><rect x="633" y="132" width="3" height="15" fill="rgb(222,119,26)"/><text x="636.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.26%)</title><rect x="633" y="148" width="3" height="15" fill="rgb(211,110,23)"/><text x="636.00" y="158.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.26%)</title><rect x="633" y="164" width="3" height="15" fill="rgb(208,144,41)"/><text x="636.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.26%)</title><rect x="645" y="148" width="3" height="15" fill="rgb(226,7,1)"/><text x="648.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.26%)</title><rect x="655" y="164" width="3" height="15" fill="rgb(217,188,38)"/><text x="658.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.26%)</title><rect x="658" y="164" width="3" height="15" fill="rgb(214,64,28)"/><text x="661.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.26%)</title><rect x="661" y="164" width="3" height="15" fill="rgb(243,18,31)"/><text x="664.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.26%)</title><rect x="664" y="164" width="3" height="15" fill="rgb(229,143,54)"/><text x="667.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.26%)</title><rect x="685" y="180" width="3" height="15" fill="rgb(226,209,52)"/><text x="688.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (13 samples, 3.37%)</title><rect x="688" y="180" width="40" height="15" fill="rgb(225,222,31)"/><text x="691.00" y="190.50">run..</text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.26%)</title><rect x="749" y="260" width="3" height="15" fill="rgb(251,10,33)"/><text x="752.00" y="270.50"></text></g><g><title>array_astype (methods.c:799) (3 samples, 0.78%)</title><rect x="746" y="244" width="9" height="15" fill="rgb(223,110,10)"/><text x="749.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.26%)</title><rect x="752" y="260" width="3" height="15" fill="rgb(236,71,21)"/><text x="755.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.26%)</title><rect x="752" y="276" width="3" height="15" fill="rgb(244,16,31)"/><text x="755.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.26%)</title><rect x="752" y="292" width="3" height="15" fill="rgb(249,116,5)"/><text x="755.00" y="302.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.26%)</title><rect x="755" y="244" width="3" height="15" fill="rgb(252,139,51)"/><text x="758.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.26%)</title><rect x="755" y="260" width="3" height="15" fill="rgb(254,130,43)"/><text x="758.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.26%)</title><rect x="755" y="276" width="3" height="15" fill="rgb(225,98,9)"/><text x="758.00" y="286.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.26%)</title><rect x="758" y="308" width="4" height="15" fill="rgb(246,81,34)"/><text x="761.00" y="318.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.26%)</title><rect x="762" y="308" width="3" height="15" fill="rgb(239,228,8)"/><text x="765.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (8 samples, 2.07%)</title><rect x="746" y="212" width="25" height="15" fill="rgb(227,172,32)"/><text x="749.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (8 samples, 2.07%)</title><rect x="746" y="228" width="25" height="15" fill="rgb(236,25,10)"/><text x="749.00" y="238.50">&lt;..</text></g><g><title>array_astype (methods.c:845) (4 samples, 1.04%)</title><rect x="758" y="244" width="13" height="15" fill="rgb(222,71,3)"/><text x="761.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 1.04%)</title><rect x="758" y="260" width="13" height="15" fill="rgb(214,69,30)"/><text x="761.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (4 samples, 1.04%)</title><rect x="758" y="276" width="13" height="15" fill="rgb(220,196,7)"/><text x="761.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (4 samples, 1.04%)</title><rect x="758" y="292" width="13" height="15" fill="rgb(244,166,44)"/><text x="761.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.52%)</title><rect x="765" y="308" width="6" height="15" fill="rgb(208,3,33)"/><text x="768.00" y="318.50"></text></g><g><title>0x7fc19fb9fa19 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="768" y="324" width="3" height="15" fill="rgb(232,113,43)"/><text x="771.00" y="334.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:735) (1 samples, 0.26%)</title><rect x="768" y="340" width="3" height="15" fill="rgb(249,112,0)"/><text x="771.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:16) (1 samples, 0.26%)</title><rect x="771" y="212" width="3" height="15" fill="rgb(217,79,26)"/><text x="774.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.26%)</title><rect x="774" y="228" width="3" height="15" fill="rgb(250,100,14)"/><text x="777.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.26%)</title><rect x="774" y="244" width="3" height="15" fill="rgb(247,34,26)"/><text x="777.00" y="254.50"></text></g><g><title>0x7fc19fbfd776 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="774" y="260" width="3" height="15" fill="rgb(212,26,18)"/><text x="777.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.26%)</title><rect x="780" y="244" width="3" height="15" fill="rgb(246,25,40)"/><text x="783.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.26%)</title><rect x="780" y="260" width="3" height="15" fill="rgb(253,73,4)"/><text x="783.00" y="270.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.78%)</title><rect x="777" y="228" width="9" height="15" fill="rgb(224,27,19)"/><text x="780.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.26%)</title><rect x="783" y="244" width="3" height="15" fill="rgb(225,83,28)"/><text x="786.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.26%)</title><rect x="783" y="260" width="3" height="15" fill="rgb(216,131,36)"/><text x="786.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.26%)</title><rect x="783" y="276" width="3" height="15" fill="rgb(218,60,25)"/><text x="786.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.26%)</title><rect x="783" y="292" width="3" height="15" fill="rgb(212,19,39)"/><text x="786.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:129) (1 samples, 0.26%)</title><rect x="783" y="308" width="3" height="15" fill="rgb(217,24,31)"/><text x="786.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (14 samples, 3.63%)</title><rect x="746" y="196" width="43" height="15" fill="rgb(221,48,39)"/><text x="749.00" y="206.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (5 samples, 1.30%)</title><rect x="774" y="212" width="15" height="15" fill="rgb(231,175,8)"/><text x="777.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.26%)</title><rect x="786" y="228" width="3" height="15" fill="rgb(218,122,41)"/><text x="789.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.26%)</title><rect x="786" y="244" width="3" height="15" fill="rgb(225,39,9)"/><text x="789.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.26%)</title><rect x="786" y="260" width="3" height="15" fill="rgb(242,27,45)"/><text x="789.00" y="270.50"></text></g><g><title>_fix_unknown_dimension (shape.c:476) (1 samples, 0.26%)</title><rect x="786" y="276" width="3" height="15" fill="rgb(207,141,15)"/><text x="789.00" y="286.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:199) (1 samples, 0.26%)</title><rect x="792" y="324" width="3" height="15" fill="rgb(238,28,34)"/><text x="795.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.52%)</title><rect x="792" y="276" width="6" height="15" fill="rgb(224,64,43)"/><text x="795.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (2 samples, 0.52%)</title><rect x="792" y="292" width="6" height="15" fill="rgb(234,113,14)"/><text x="795.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (2 samples, 0.52%)</title><rect x="792" y="308" width="6" height="15" fill="rgb(209,57,24)"/><text x="795.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.26%)</title><rect x="795" y="324" width="3" height="15" fill="rgb(249,120,14)"/><text x="798.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.26%)</title><rect x="795" y="340" width="3" height="15" fill="rgb(234,75,3)"/><text x="798.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.26%)</title><rect x="795" y="356" width="3" height="15" fill="rgb(224,56,43)"/><text x="798.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (3 samples, 0.78%)</title><rect x="792" y="260" width="9" height="15" fill="rgb(234,203,17)"/><text x="795.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.26%)</title><rect x="798" y="276" width="3" height="15" fill="rgb(208,93,44)"/><text x="801.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="798" y="292" width="3" height="15" fill="rgb(233,185,13)"/><text x="801.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="798" y="308" width="3" height="15" fill="rgb(215,94,5)"/><text x="801.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.26%)</title><rect x="798" y="324" width="3" height="15" fill="rgb(251,68,20)"/><text x="801.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.26%)</title><rect x="801" y="276" width="3" height="15" fill="rgb(207,102,45)"/><text x="804.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.26%)</title><rect x="801" y="292" width="3" height="15" fill="rgb(231,224,32)"/><text x="804.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.26%)</title><rect x="804" y="276" width="3" height="15" fill="rgb(229,184,16)"/><text x="807.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.26%)</title><rect x="804" y="292" width="3" height="15" fill="rgb(213,46,6)"/><text x="807.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.26%)</title><rect x="804" y="308" width="3" height="15" fill="rgb(252,143,1)"/><text x="807.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.26%)</title><rect x="804" y="324" width="3" height="15" fill="rgb(219,99,30)"/><text x="807.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="804" y="340" width="3" height="15" fill="rgb(212,61,21)"/><text x="807.00" y="350.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1854) (1 samples, 0.26%)</title><rect x="807" y="308" width="3" height="15" fill="rgb(216,190,16)"/><text x="810.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.04%)</title><rect x="801" y="260" width="12" height="15" fill="rgb(224,68,54)"/><text x="804.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.52%)</title><rect x="807" y="276" width="6" height="15" fill="rgb(207,148,44)"/><text x="810.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (2 samples, 0.52%)</title><rect x="807" y="292" width="6" height="15" fill="rgb(227,51,46)"/><text x="810.00" y="302.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1871) (1 samples, 0.26%)</title><rect x="810" y="308" width="3" height="15" fill="rgb(224,28,9)"/><text x="813.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.07%)</title><rect x="792" y="244" width="25" height="15" fill="rgb(254,139,6)"/><text x="795.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.26%)</title><rect x="813" y="260" width="4" height="15" fill="rgb(251,178,50)"/><text x="816.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.26%)</title><rect x="817" y="244" width="3" height="15" fill="rgb(244,146,15)"/><text x="820.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.26%)</title><rect x="817" y="260" width="3" height="15" fill="rgb(240,131,3)"/><text x="820.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.26%)</title><rect x="820" y="260" width="3" height="15" fill="rgb(218,83,26)"/><text x="823.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (12 samples, 3.11%)</title><rect x="789" y="196" width="37" height="15" fill="rgb(241,96,31)"/><text x="792.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (12 samples, 3.11%)</title><rect x="789" y="212" width="37" height="15" fill="rgb(224,170,34)"/><text x="792.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (11 samples, 2.85%)</title><rect x="792" y="228" width="34" height="15" fill="rgb(207,201,48)"/><text x="795.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (2 samples, 0.52%)</title><rect x="820" y="244" width="6" height="15" fill="rgb(221,31,50)"/><text x="823.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.26%)</title><rect x="823" y="260" width="3" height="15" fill="rgb(216,175,10)"/><text x="826.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.26%)</title><rect x="823" y="276" width="3" height="15" fill="rgb(206,18,13)"/><text x="826.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.26%)</title><rect x="826" y="196" width="3" height="15" fill="rgb(221,183,9)"/><text x="829.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.26%)</title><rect x="826" y="212" width="3" height="15" fill="rgb(211,102,5)"/><text x="829.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:422) (1 samples, 0.26%)</title><rect x="829" y="212" width="3" height="15" fill="rgb(208,5,45)"/><text x="832.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (2 samples, 0.52%)</title><rect x="832" y="212" width="6" height="15" fill="rgb(249,131,25)"/><text x="835.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (2 samples, 0.52%)</title><rect x="832" y="228" width="6" height="15" fill="rgb(217,190,46)"/><text x="835.00" y="238.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.26%)</title><rect x="835" y="244" width="3" height="15" fill="rgb(244,210,19)"/><text x="838.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (4 samples, 1.04%)</title><rect x="853" y="228" width="12" height="15" fill="rgb(223,181,19)"/><text x="856.00" y="238.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.26%)</title><rect x="862" y="244" width="3" height="15" fill="rgb(235,212,1)"/><text x="865.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (3 samples, 0.78%)</title><rect x="865" y="228" width="10" height="15" fill="rgb(226,163,28)"/><text x="868.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (2 samples, 0.52%)</title><rect x="869" y="244" width="6" height="15" fill="rgb(233,4,29)"/><text x="872.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.26%)</title><rect x="875" y="244" width="3" height="15" fill="rgb(224,108,1)"/><text x="878.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.26%)</title><rect x="875" y="260" width="3" height="15" fill="rgb(216,46,34)"/><text x="878.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.26%)</title><rect x="878" y="260" width="3" height="15" fill="rgb(241,191,12)"/><text x="881.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.26%)</title><rect x="878" y="276" width="3" height="15" fill="rgb(252,103,42)"/><text x="881.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.26%)</title><rect x="878" y="292" width="3" height="15" fill="rgb(253,52,12)"/><text x="881.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.26%)</title><rect x="881" y="260" width="3" height="15" fill="rgb(254,30,43)"/><text x="884.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.26%)</title><rect x="881" y="276" width="3" height="15" fill="rgb(242,76,50)"/><text x="884.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.26%)</title><rect x="881" y="292" width="3" height="15" fill="rgb(235,12,48)"/><text x="884.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.26%)</title><rect x="881" y="308" width="3" height="15" fill="rgb(252,167,43)"/><text x="884.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.26%)</title><rect x="881" y="324" width="3" height="15" fill="rgb(248,31,12)"/><text x="884.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.26%)</title><rect x="884" y="260" width="3" height="15" fill="rgb(215,224,35)"/><text x="887.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.26%)</title><rect x="884" y="276" width="3" height="15" fill="rgb(212,23,46)"/><text x="887.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.26%)</title><rect x="887" y="260" width="3" height="15" fill="rgb(235,190,14)"/><text x="890.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.26%)</title><rect x="887" y="276" width="3" height="15" fill="rgb(210,86,5)"/><text x="890.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.26%)</title><rect x="890" y="260" width="3" height="15" fill="rgb(244,79,21)"/><text x="893.00" y="270.50"></text></g><g><title>0x7fc19ee08f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="893" y="276" width="3" height="15" fill="rgb(208,81,42)"/><text x="896.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.26%)</title><rect x="896" y="276" width="3" height="15" fill="rgb(248,142,13)"/><text x="899.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.26%)</title><rect x="899" y="308" width="3" height="15" fill="rgb(237,172,44)"/><text x="902.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:601) (1 samples, 0.26%)</title><rect x="902" y="324" width="3" height="15" fill="rgb(228,158,3)"/><text x="905.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.52%)</title><rect x="902" y="308" width="6" height="15" fill="rgb(239,200,22)"/><text x="905.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.26%)</title><rect x="905" y="324" width="3" height="15" fill="rgb(223,108,10)"/><text x="908.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="905" y="340" width="3" height="15" fill="rgb(215,13,39)"/><text x="908.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="905" y="356" width="3" height="15" fill="rgb(230,150,23)"/><text x="908.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (4 samples, 1.04%)</title><rect x="899" y="276" width="12" height="15" fill="rgb(253,85,38)"/><text x="902.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 1.04%)</title><rect x="899" y="292" width="12" height="15" fill="rgb(252,164,32)"/><text x="902.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.26%)</title><rect x="908" y="308" width="3" height="15" fill="rgb(249,138,18)"/><text x="911.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.26%)</title><rect x="908" y="324" width="3" height="15" fill="rgb(221,70,26)"/><text x="911.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.26%)</title><rect x="908" y="340" width="3" height="15" fill="rgb(231,166,53)"/><text x="911.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.26%)</title><rect x="908" y="356" width="3" height="15" fill="rgb(224,73,44)"/><text x="911.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.26%)</title><rect x="908" y="372" width="3" height="15" fill="rgb(220,23,29)"/><text x="911.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.26%)</title><rect x="911" y="308" width="3" height="15" fill="rgb(223,163,11)"/><text x="914.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.26%)</title><rect x="911" y="324" width="3" height="15" fill="rgb(236,102,51)"/><text x="914.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.26%)</title><rect x="911" y="340" width="3" height="15" fill="rgb(219,5,37)"/><text x="914.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.26%)</title><rect x="911" y="356" width="3" height="15" fill="rgb(248,137,21)"/><text x="914.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.26%)</title><rect x="911" y="372" width="3" height="15" fill="rgb(218,207,49)"/><text x="914.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.26%)</title><rect x="914" y="308" width="3" height="15" fill="rgb(233,131,53)"/><text x="917.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.26%)</title><rect x="914" y="324" width="3" height="15" fill="rgb(224,85,12)"/><text x="917.00" y="334.50"></text></g><g><title>0x7fc19ee0a1c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="914" y="340" width="3" height="15" fill="rgb(236,109,34)"/><text x="917.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.26%)</title><rect x="917" y="308" width="3" height="15" fill="rgb(220,46,29)"/><text x="920.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2288) (1 samples, 0.26%)</title><rect x="917" y="324" width="3" height="15" fill="rgb(230,190,41)"/><text x="920.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.26%)</title><rect x="920" y="308" width="4" height="15" fill="rgb(217,217,48)"/><text x="923.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2762) (1 samples, 0.26%)</title><rect x="920" y="324" width="4" height="15" fill="rgb(235,110,4)"/><text x="923.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (5 samples, 1.30%)</title><rect x="911" y="292" width="16" height="15" fill="rgb(242,53,25)"/><text x="914.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.26%)</title><rect x="924" y="308" width="3" height="15" fill="rgb(228,224,54)"/><text x="927.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.26%)</title><rect x="924" y="324" width="3" height="15" fill="rgb(245,0,19)"/><text x="927.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.26%)</title><rect x="924" y="340" width="3" height="15" fill="rgb(216,10,15)"/><text x="927.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (2 samples, 0.52%)</title><rect x="927" y="308" width="6" height="15" fill="rgb(232,16,38)"/><text x="930.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (2 samples, 0.52%)</title><rect x="927" y="324" width="6" height="15" fill="rgb(236,227,34)"/><text x="930.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.07%)</title><rect x="911" y="276" width="25" height="15" fill="rgb(244,9,20)"/><text x="914.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.78%)</title><rect x="927" y="292" width="9" height="15" fill="rgb(220,56,27)"/><text x="930.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.26%)</title><rect x="933" y="308" width="3" height="15" fill="rgb(251,42,39)"/><text x="936.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.26%)</title><rect x="933" y="324" width="3" height="15" fill="rgb(251,13,30)"/><text x="936.00" y="334.50"></text></g><g><title>0x7fc19ee0ac90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="936" y="292" width="3" height="15" fill="rgb(208,21,24)"/><text x="939.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (22 samples, 5.70%)</title><rect x="875" y="228" width="67" height="15" fill="rgb(250,227,47)"/><text x="878.00" y="238.50">_run (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 5.44%)</title><rect x="878" y="244" width="64" height="15" fill="rgb(250,135,17)"/><text x="881.00" y="254.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 4.15%)</title><rect x="893" y="260" width="49" height="15" fill="rgb(206,220,8)"/><text x="896.00" y="270.50">PyUF..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (2 samples, 0.52%)</title><rect x="936" y="276" width="6" height="15" fill="rgb(251,61,14)"/><text x="939.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.26%)</title><rect x="939" y="292" width="3" height="15" fill="rgb(210,187,14)"/><text x="942.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="939" y="308" width="3" height="15" fill="rgb(219,19,8)"/><text x="942.00" y="318.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (2 samples, 0.52%)</title><rect x="948" y="244" width="6" height="15" fill="rgb(230,215,19)"/><text x="951.00" y="254.50"></text></g><g><title>PyArray_NewFlagsObject (flagsobject.c:49) (1 samples, 0.26%)</title><rect x="951" y="260" width="3" height="15" fill="rgb(208,66,18)"/><text x="954.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (5 samples, 1.30%)</title><rect x="954" y="244" width="15" height="15" fill="rgb(228,165,39)"/><text x="957.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="976" y="260" width="3" height="15" fill="rgb(222,75,43)"/><text x="979.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="976" y="276" width="3" height="15" fill="rgb(209,169,46)"/><text x="979.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.26%)</title><rect x="976" y="292" width="3" height="15" fill="rgb(237,114,54)"/><text x="979.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.26%)</title><rect x="979" y="276" width="3" height="15" fill="rgb(228,3,33)"/><text x="982.00" y="286.50"></text></g><g><title>0x7fc19ee09ae0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="979" y="292" width="3" height="15" fill="rgb(206,114,43)"/><text x="982.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.52%)</title><rect x="979" y="260" width="6" height="15" fill="rgb(240,57,42)"/><text x="982.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.26%)</title><rect x="982" y="276" width="3" height="15" fill="rgb(216,216,46)"/><text x="985.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.26%)</title><rect x="982" y="292" width="3" height="15" fill="rgb(213,195,9)"/><text x="985.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.26%)</title><rect x="982" y="308" width="3" height="15" fill="rgb(238,215,40)"/><text x="985.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.26%)</title><rect x="982" y="324" width="3" height="15" fill="rgb(233,218,46)"/><text x="985.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:133) (1 samples, 0.26%)</title><rect x="982" y="340" width="3" height="15" fill="rgb(213,194,35)"/><text x="985.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.26%)</title><rect x="991" y="324" width="3" height="15" fill="rgb(211,120,16)"/><text x="994.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:875) (1 samples, 0.26%)</title><rect x="991" y="340" width="3" height="15" fill="rgb(242,86,50)"/><text x="994.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:818) (1 samples, 0.26%)</title><rect x="991" y="356" width="3" height="15" fill="rgb(253,99,30)"/><text x="994.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.26%)</title><rect x="994" y="388" width="3" height="15" fill="rgb(214,104,26)"/><text x="997.00" y="398.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.26%)</title><rect x="994" y="404" width="3" height="15" fill="rgb(236,86,40)"/><text x="997.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.26%)</title><rect x="994" y="420" width="3" height="15" fill="rgb(252,95,34)"/><text x="997.00" y="430.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:685) (2 samples, 0.52%)</title><rect x="994" y="324" width="6" height="15" fill="rgb(220,117,14)"/><text x="997.00" y="334.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c:430) (2 samples, 0.52%)</title><rect x="994" y="340" width="6" height="15" fill="rgb(241,160,25)"/><text x="997.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2819) (2 samples, 0.52%)</title><rect x="994" y="356" width="6" height="15" fill="rgb(247,201,46)"/><text x="997.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.52%)</title><rect x="994" y="372" width="6" height="15" fill="rgb(208,78,7)"/><text x="997.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.26%)</title><rect x="997" y="388" width="3" height="15" fill="rgb(218,80,11)"/><text x="1000.00" y="398.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.26%)</title><rect x="997" y="404" width="3" height="15" fill="rgb(212,58,39)"/><text x="1000.00" y="414.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.26%)</title><rect x="1000" y="340" width="3" height="15" fill="rgb(251,15,26)"/><text x="1003.00" y="350.50"></text></g><g><title>0x7fc19ee097c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1000" y="356" width="3" height="15" fill="rgb(218,82,41)"/><text x="1003.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (12 samples, 3.11%)</title><rect x="969" y="244" width="37" height="15" fill="rgb(217,182,33)"/><text x="972.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (7 samples, 1.81%)</title><rect x="985" y="260" width="21" height="15" fill="rgb(220,199,20)"/><text x="988.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.30%)</title><rect x="991" y="276" width="15" height="15" fill="rgb(207,1,22)"/><text x="994.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.30%)</title><rect x="991" y="292" width="15" height="15" fill="rgb(206,27,51)"/><text x="994.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.30%)</title><rect x="991" y="308" width="15" height="15" fill="rgb(205,36,29)"/><text x="994.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (2 samples, 0.52%)</title><rect x="1000" y="324" width="6" height="15" fill="rgb(213,224,16)"/><text x="1003.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="1003" y="340" width="3" height="15" fill="rgb(254,98,41)"/><text x="1006.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="1003" y="356" width="3" height="15" fill="rgb(218,19,31)"/><text x="1006.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.26%)</title><rect x="1003" y="372" width="3" height="15" fill="rgb(240,10,20)"/><text x="1006.00" y="382.50"></text></g><g><title>0x7fc19fc0812b (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1012" y="260" width="3" height="15" fill="rgb(205,227,34)"/><text x="1015.00" y="270.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.26%)</title><rect x="1015" y="260" width="3" height="15" fill="rgb(210,104,33)"/><text x="1018.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.26%)</title><rect x="1018" y="292" width="3" height="15" fill="rgb(219,43,14)"/><text x="1021.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:223) (1 samples, 0.26%)</title><rect x="1021" y="324" width="3" height="15" fill="rgb(214,195,35)"/><text x="1024.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (65 samples, 16.84%)</title><rect x="829" y="196" width="198" height="15" fill="rgb(213,67,52)"/><text x="832.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (62 samples, 16.06%)</title><rect x="838" y="212" width="189" height="15" fill="rgb(248,21,23)"/><text x="841.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (28 samples, 7.25%)</title><rect x="942" y="228" width="85" height="15" fill="rgb(215,101,2)"/><text x="945.00" y="238.50">_run (mlpr..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (7 samples, 1.81%)</title><rect x="1006" y="244" width="21" height="15" fill="rgb(219,92,54)"/><text x="1009.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 0.78%)</title><rect x="1018" y="260" width="9" height="15" fill="rgb(210,125,4)"/><text x="1021.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.78%)</title><rect x="1018" y="276" width="9" height="15" fill="rgb(218,219,5)"/><text x="1021.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.52%)</title><rect x="1021" y="292" width="6" height="15" fill="rgb(218,43,25)"/><text x="1024.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.52%)</title><rect x="1021" y="308" width="6" height="15" fill="rgb(236,222,49)"/><text x="1024.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.26%)</title><rect x="1024" y="324" width="3" height="15" fill="rgb(215,184,54)"/><text x="1027.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.26%)</title><rect x="1024" y="340" width="3" height="15" fill="rgb(248,145,35)"/><text x="1027.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.26%)</title><rect x="1024" y="356" width="3" height="15" fill="rgb(236,128,30)"/><text x="1027.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.26%)</title><rect x="1024" y="372" width="3" height="15" fill="rgb(244,33,36)"/><text x="1027.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.26%)</title><rect x="1024" y="388" width="3" height="15" fill="rgb(208,154,38)"/><text x="1027.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (99 samples, 25.65%)</title><rect x="728" y="180" width="303" height="15" fill="rgb(250,139,2)"/><text x="731.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.26%)</title><rect x="1027" y="196" width="4" height="15" fill="rgb(238,12,31)"/><text x="1030.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.26%)</title><rect x="1027" y="212" width="4" height="15" fill="rgb(237,77,46)"/><text x="1030.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.78%)</title><rect x="1031" y="180" width="9" height="15" fill="rgb(248,137,46)"/><text x="1034.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (4 samples, 1.04%)</title><rect x="1040" y="180" width="12" height="15" fill="rgb(213,121,43)"/><text x="1043.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (7 samples, 1.81%)</title><rect x="1052" y="180" width="21" height="15" fill="rgb(206,186,53)"/><text x="1055.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (134 samples, 34.72%)</title><rect x="667" y="164" width="409" height="15" fill="rgb(229,195,30)"/><text x="670.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.26%)</title><rect x="1073" y="180" width="3" height="15" fill="rgb(218,175,9)"/><text x="1076.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:61) (149 samples, 38.60%)</title><rect x="630" y="52" width="456" height="15" fill="rgb(245,60,43)"/><text x="633.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:61)</text></g><g><title>profile_pyrt (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:60) (149 samples, 38.60%)</title><rect x="630" y="68" width="456" height="15" fill="rgb(209,217,28)"/><text x="633.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_m_reg_1_4_12_float_.p..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:37) (149 samples, 38.60%)</title><rect x="630" y="84" width="456" height="15" fill="rgb(214,207,19)"/><text x="633.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_...</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:31) (149 samples, 38.60%)</title><rect x="630" y="100" width="456" height="15" fill="rgb(243,227,29)"/><text x="633.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (147 samples, 38.08%)</title><rect x="636" y="116" width="450" height="15" fill="rgb(209,229,22)"/><text x="639.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (145 samples, 37.56%)</title><rect x="642" y="132" width="444" height="15" fill="rgb(206,136,42)"/><text x="645.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (143 samples, 37.05%)</title><rect x="648" y="148" width="438" height="15" fill="rgb(238,151,25)"/><text x="651.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 0.78%)</title><rect x="1076" y="164" width="10" height="15" fill="rgb(231,211,22)"/><text x="1079.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.52%)</title><rect x="1079" y="180" width="7" height="15" fill="rgb(205,155,21)"/><text x="1082.00" y="190.50"></text></g><g><title>0x7fc19ee0a9c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1086" y="116" width="3" height="15" fill="rgb(239,59,47)"/><text x="1089.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:57) (1 samples, 0.26%)</title><rect x="1104" y="180" width="3" height="15" fill="rgb(249,30,30)"/><text x="1107.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.26%)</title><rect x="1113" y="196" width="3" height="15" fill="rgb(252,162,17)"/><text x="1116.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 1.55%)</title><rect x="1116" y="196" width="18" height="15" fill="rgb(215,23,3)"/><text x="1119.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (6 samples, 1.55%)</title><rect x="1116" y="212" width="18" height="15" fill="rgb(219,193,29)"/><text x="1119.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.78%)</title><rect x="1125" y="228" width="9" height="15" fill="rgb(207,203,2)"/><text x="1128.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1131" y="244" width="3" height="15" fill="rgb(240,200,45)"/><text x="1134.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1131" y="260" width="3" height="15" fill="rgb(211,223,40)"/><text x="1134.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1131" y="276" width="3" height="15" fill="rgb(211,71,31)"/><text x="1134.00" y="286.50"></text></g><g><title>0x7fc19fbfde98 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1131" y="292" width="3" height="15" fill="rgb(234,85,28)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7fc15dc6aff9 (?) (1 samples, 0.26%)</title><rect x="1144" y="212" width="3" height="15" fill="rgb(234,118,20)"/><text x="1147.00" y="222.50"></text></g><g><title>0x7fc15dc65ef6 (?) (1 samples, 0.26%)</title><rect x="1144" y="228" width="3" height="15" fill="rgb(211,113,33)"/><text x="1147.00" y="238.50"></text></g><g><title>0x7fc15dc5a962 (?) (1 samples, 0.26%)</title><rect x="1144" y="244" width="3" height="15" fill="rgb(237,13,16)"/><text x="1147.00" y="254.50"></text></g><g><title>0x7fc15dc8e7a7 (?) (1 samples, 0.26%)</title><rect x="1144" y="260" width="3" height="15" fill="rgb(230,70,29)"/><text x="1147.00" y="270.50"></text></g><g><title>0x7fc15dc8e379 (?) (1 samples, 0.26%)</title><rect x="1144" y="276" width="3" height="15" fill="rgb(235,50,39)"/><text x="1147.00" y="286.50"></text></g><g><title>0x7fc15e0ec8b8 (?) (1 samples, 0.26%)</title><rect x="1144" y="292" width="3" height="15" fill="rgb(219,160,28)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7fc15e0eac7f (?) (1 samples, 0.26%)</title><rect x="1144" y="308" width="3" height="15" fill="rgb(253,158,45)"/><text x="1147.00" y="318.50"></text></g><g><title>0x7fc15e0fd99c (?) (1 samples, 0.26%)</title><rect x="1144" y="324" width="3" height="15" fill="rgb(209,98,0)"/><text x="1147.00" y="334.50"></text></g><g><title>0x7fc15dd827c3 (?) (1 samples, 0.26%)</title><rect x="1144" y="340" width="3" height="15" fill="rgb(235,35,53)"/><text x="1147.00" y="350.50"></text></g><g><title>0x7fc15e06bfac (?) (1 samples, 0.26%)</title><rect x="1144" y="356" width="3" height="15" fill="rgb(223,36,34)"/><text x="1147.00" y="366.50"></text></g><g><title>0x7fc155de30f1 (?) (1 samples, 0.26%)</title><rect x="1144" y="372" width="3" height="15" fill="rgb(220,206,27)"/><text x="1147.00" y="382.50"></text></g><g><title>0x7fc155e293cb (?) (1 samples, 0.26%)</title><rect x="1144" y="388" width="3" height="15" fill="rgb(241,10,46)"/><text x="1147.00" y="398.50"></text></g><g><title>0x7fc155e5cd02 (?) (1 samples, 0.26%)</title><rect x="1144" y="404" width="3" height="15" fill="rgb(236,90,15)"/><text x="1147.00" y="414.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1147" y="212" width="3" height="15" fill="rgb(212,208,32)"/><text x="1150.00" y="222.50"></text></g><g><title>0x7ffed4d0eb28 ([vdso]) (1 samples, 0.26%)</title><rect x="1147" y="228" width="3" height="15" fill="rgb(211,83,51)"/><text x="1150.00" y="238.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1150" y="276" width="3" height="15" fill="rgb(222,197,35)"/><text x="1153.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1153" y="292" width="3" height="15" fill="rgb(216,135,41)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7fc19fc07db3 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1153" y="308" width="3" height="15" fill="rgb(235,132,13)"/><text x="1156.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1156" y="356" width="3" height="15" fill="rgb(220,81,13)"/><text x="1159.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1156" y="372" width="3" height="15" fill="rgb(232,113,26)"/><text x="1159.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.52%)</title><rect x="1156" y="340" width="6" height="15" fill="rgb(223,77,44)"/><text x="1159.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1159" y="356" width="3" height="15" fill="rgb(214,180,17)"/><text x="1162.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1162" y="340" width="3" height="15" fill="rgb(209,222,22)"/><text x="1165.00" y="350.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1165" y="340" width="3" height="15" fill="rgb(217,223,31)"/><text x="1168.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1165" y="356" width="3" height="15" fill="rgb(244,204,50)"/><text x="1168.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1165" y="372" width="3" height="15" fill="rgb(217,166,40)"/><text x="1168.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1165" y="388" width="3" height="15" fill="rgb(243,120,38)"/><text x="1168.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1165" y="404" width="3" height="15" fill="rgb(227,133,43)"/><text x="1168.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1165" y="420" width="3" height="15" fill="rgb(205,61,15)"/><text x="1168.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1165" y="436" width="3" height="15" fill="rgb(219,42,26)"/><text x="1168.00" y="446.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.81%)</title><rect x="1150" y="260" width="21" height="15" fill="rgb(233,205,43)"/><text x="1153.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.55%)</title><rect x="1153" y="276" width="18" height="15" fill="rgb(241,99,36)"/><text x="1156.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.30%)</title><rect x="1156" y="292" width="15" height="15" fill="rgb(228,87,11)"/><text x="1159.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.30%)</title><rect x="1156" y="308" width="15" height="15" fill="rgb(240,163,45)"/><text x="1159.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.30%)</title><rect x="1156" y="324" width="15" height="15" fill="rgb(207,103,4)"/><text x="1159.00" y="334.50"></text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1168" y="340" width="3" height="15" fill="rgb(235,138,44)"/><text x="1171.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1171" y="260" width="3" height="15" fill="rgb(216,104,9)"/><text x="1174.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.33%)</title><rect x="1150" y="244" width="27" height="15" fill="rgb(225,6,32)"/><text x="1153.00" y="254.50">o..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1174" y="260" width="3" height="15" fill="rgb(242,144,31)"/><text x="1177.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.26%)</title><rect x="1174" y="276" width="3" height="15" fill="rgb(238,161,42)"/><text x="1177.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.26%)</title><rect x="1174" y="292" width="3" height="15" fill="rgb(216,29,0)"/><text x="1177.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.26%)</title><rect x="1174" y="308" width="3" height="15" fill="rgb(235,208,37)"/><text x="1177.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1177" y="244" width="3" height="15" fill="rgb(233,79,43)"/><text x="1180.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1177" y="260" width="3" height="15" fill="rgb(241,65,50)"/><text x="1180.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1177" y="276" width="3" height="15" fill="rgb(205,170,27)"/><text x="1180.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (27 samples, 6.99%)</title><rect x="1104" y="164" width="82" height="15" fill="rgb(254,22,42)"/><text x="1107.00" y="174.50">_run_whol..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (26 samples, 6.74%)</title><rect x="1107" y="180" width="79" height="15" fill="rgb(237,197,25)"/><text x="1110.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (17 samples, 4.40%)</title><rect x="1134" y="196" width="52" height="15" fill="rgb(246,19,27)"/><text x="1137.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.11%)</title><rect x="1150" y="212" width="36" height="15" fill="rgb(205,64,9)"/><text x="1153.00" y="222.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.11%)</title><rect x="1150" y="228" width="36" height="15" fill="rgb(230,189,43)"/><text x="1153.00" y="238.50">voi..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.52%)</title><rect x="1180" y="244" width="6" height="15" fill="rgb(233,154,24)"/><text x="1183.00" y="254.50"></text></g><g><title>all (386 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,33,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:68) (34 samples, 8.81%)</title><rect x="1086" y="52" width="104" height="15" fill="rgb(233,158,23)"/><text x="1089.00" y="62.50">&lt;module&gt; (be..</text></g><g><title>profile_ort (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:67) (34 samples, 8.81%)</title><rect x="1086" y="68" width="104" height="15" fill="rgb(233,31,28)"/><text x="1089.00" y="78.50">profile_ort ..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:37) (34 samples, 8.81%)</title><rect x="1086" y="84" width="104" height="15" fill="rgb(237,36,29)"/><text x="1089.00" y="94.50">setup_profil..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py:31) (34 samples, 8.81%)</title><rect x="1086" y="100" width="104" height="15" fill="rgb(247,212,47)"/><text x="1089.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (33 samples, 8.55%)</title><rect x="1089" y="116" width="101" height="15" fill="rgb(231,29,39)"/><text x="1092.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (31 samples, 8.03%)</title><rect x="1095" y="132" width="95" height="15" fill="rgb(214,202,3)"/><text x="1098.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (29 samples, 7.51%)</title><rect x="1101" y="148" width="89" height="15" fill="rgb(231,25,19)"/><text x="1104.00" y="158.50">run (mlpro..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.26%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(219,144,38)"/><text x="1189.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.26%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(205,1,24)"/><text x="1189.00" y="190.50"></text></g></g></svg>