<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1830" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1813.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1813.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.12%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(214,126,21)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(238,130,54)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(223,182,49)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(237,7,48)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(213,3,42)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(243,129,11)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(217,120,48)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(211,167,28)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.12%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(228,38,26)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="516" width="1" height="15" fill="rgb(209,66,48)"/><text x="13.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="532" width="1" height="15" fill="rgb(205,6,7)"/><text x="13.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="548" width="1" height="15" fill="rgb(216,71,5)"/><text x="13.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="564" width="1" height="15" fill="rgb(254,114,4)"/><text x="13.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="580" width="1" height="15" fill="rgb(229,8,34)"/><text x="13.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:1143) (1 samples, 0.12%)</title><rect x="10" y="596" width="1" height="15" fill="rgb(226,106,33)"/><text x="13.00" y="606.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="10" y="612" width="1" height="15" fill="rgb(246,13,38)"/><text x="13.00" y="622.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="10" y="628" width="1" height="15" fill="rgb(233,12,6)"/><text x="13.00" y="638.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.12%)</title><rect x="10" y="644" width="1" height="15" fill="rgb(235,219,28)"/><text x="13.00" y="654.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.12%)</title><rect x="10" y="660" width="1" height="15" fill="rgb(235,113,31)"/><text x="13.00" y="670.50"></text></g><g><title>_compile_info (sre_compile.py:540) (1 samples, 0.12%)</title><rect x="10" y="676" width="1" height="15" fill="rgb(250,21,12)"/><text x="13.00" y="686.50"></text></g><g><title>getwidth (sre_parse.py:198) (1 samples, 0.12%)</title><rect x="10" y="692" width="1" height="15" fill="rgb(242,223,48)"/><text x="13.00" y="702.50"></text></g><g><title>getwidth (sre_parse.py:220) (1 samples, 0.12%)</title><rect x="10" y="708" width="1" height="15" fill="rgb(245,54,32)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:1) (2 samples, 0.24%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(223,21,43)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(209,115,28)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(208,21,36)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(245,57,41)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(245,5,0)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(210,74,4)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.24%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(226,71,8)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.24%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(226,18,25)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(218,191,42)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(209,11,38)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(219,78,27)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(228,51,42)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(246,229,8)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(246,46,38)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:97) (1 samples, 0.12%)</title><rect x="11" y="372" width="1" height="15" fill="rgb(253,161,33)"/><text x="14.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="11" y="388" width="1" height="15" fill="rgb(235,163,11)"/><text x="14.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="11" y="404" width="1" height="15" fill="rgb(213,152,30)"/><text x="14.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="11" y="420" width="1" height="15" fill="rgb(225,146,5)"/><text x="14.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="11" y="436" width="1" height="15" fill="rgb(228,38,7)"/><text x="14.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="11" y="452" width="1" height="15" fill="rgb(220,77,50)"/><text x="14.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="11" y="468" width="1" height="15" fill="rgb(250,42,41)"/><text x="14.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="11" y="484" width="1" height="15" fill="rgb(230,33,51)"/><text x="14.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py:1364) (1 samples, 0.12%)</title><rect x="11" y="500" width="1" height="15" fill="rgb(211,22,18)"/><text x="14.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py:464) (1 samples, 0.12%)</title><rect x="11" y="516" width="1" height="15" fill="rgb(205,115,27)"/><text x="14.00" y="526.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.12%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(221,95,29)"/><text x="15.00" y="894.50"></text></g><g><title>join (posixpath.py:87) (1 samples, 0.12%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(215,180,29)"/><text x="15.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (2 samples, 0.24%)</title><rect x="12" y="148" width="3" height="15" fill="rgb(207,127,4)"/><text x="15.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="164" width="3" height="15" fill="rgb(221,99,37)"/><text x="15.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.24%)</title><rect x="12" y="180" width="3" height="15" fill="rgb(224,127,16)"/><text x="15.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="196" width="3" height="15" fill="rgb(247,211,28)"/><text x="15.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="212" width="3" height="15" fill="rgb(251,146,11)"/><text x="15.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="12" y="228" width="3" height="15" fill="rgb(229,79,42)"/><text x="15.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="12" y="244" width="3" height="15" fill="rgb(251,50,2)"/><text x="15.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="12" y="260" width="3" height="15" fill="rgb(243,172,8)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="276" width="3" height="15" fill="rgb(214,52,49)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.24%)</title><rect x="12" y="292" width="3" height="15" fill="rgb(222,155,39)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="308" width="3" height="15" fill="rgb(252,219,43)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="12" y="324" width="3" height="15" fill="rgb(251,162,14)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="12" y="340" width="3" height="15" fill="rgb(227,24,22)"/><text x="15.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="12" y="356" width="3" height="15" fill="rgb(244,117,3)"/><text x="15.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="372" width="3" height="15" fill="rgb(237,6,30)"/><text x="15.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.24%)</title><rect x="12" y="388" width="3" height="15" fill="rgb(215,53,30)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="404" width="3" height="15" fill="rgb(216,21,8)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="12" y="420" width="3" height="15" fill="rgb(232,216,13)"/><text x="15.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="12" y="436" width="3" height="15" fill="rgb(216,132,47)"/><text x="15.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="12" y="452" width="3" height="15" fill="rgb(243,103,27)"/><text x="15.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="468" width="3" height="15" fill="rgb(222,141,10)"/><text x="15.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.24%)</title><rect x="12" y="484" width="3" height="15" fill="rgb(228,1,40)"/><text x="15.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="500" width="3" height="15" fill="rgb(229,107,53)"/><text x="15.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="12" y="516" width="3" height="15" fill="rgb(249,192,37)"/><text x="15.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="12" y="532" width="3" height="15" fill="rgb(251,63,41)"/><text x="15.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="12" y="548" width="3" height="15" fill="rgb(208,151,52)"/><text x="15.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="564" width="3" height="15" fill="rgb(213,115,22)"/><text x="15.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.24%)</title><rect x="12" y="580" width="3" height="15" fill="rgb(239,185,14)"/><text x="15.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="596" width="3" height="15" fill="rgb(245,120,38)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.24%)</title><rect x="12" y="612" width="3" height="15" fill="rgb(226,201,18)"/><text x="15.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="628" width="3" height="15" fill="rgb(234,196,41)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="644" width="3" height="15" fill="rgb(216,171,2)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="12" y="660" width="3" height="15" fill="rgb(244,103,54)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="12" y="676" width="3" height="15" fill="rgb(249,197,44)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="12" y="692" width="3" height="15" fill="rgb(245,147,2)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="708" width="3" height="15" fill="rgb(238,196,10)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.24%)</title><rect x="12" y="724" width="3" height="15" fill="rgb(241,58,9)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="12" y="740" width="3" height="15" fill="rgb(245,59,48)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="12" y="756" width="3" height="15" fill="rgb(208,186,9)"/><text x="15.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="12" y="772" width="3" height="15" fill="rgb(234,165,25)"/><text x="15.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="12" y="788" width="3" height="15" fill="rgb(220,111,51)"/><text x="15.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="12" y="804" width="3" height="15" fill="rgb(217,117,40)"/><text x="15.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.24%)</title><rect x="12" y="820" width="3" height="15" fill="rgb(237,154,54)"/><text x="15.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.24%)</title><rect x="12" y="836" width="3" height="15" fill="rgb(249,89,3)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.24%)</title><rect x="12" y="852" width="3" height="15" fill="rgb(233,54,37)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.24%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(225,211,15)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.12%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(239,32,35)"/><text x="17.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.12%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(229,198,28)"/><text x="17.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.12%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(251,96,52)"/><text x="17.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.12%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(234,84,49)"/><text x="17.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.12%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(233,27,39)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.12%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(207,218,23)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1156" width="2" height="15" fill="rgb(237,118,46)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="1172" width="2" height="15" fill="rgb(205,162,43)"/><text x="18.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(220,120,49)"/><text x="18.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(212,20,30)"/><text x="18.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(208,31,23)"/><text x="18.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.12%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(215,123,51)"/><text x="18.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(254,68,15)"/><text x="18.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(254,57,42)"/><text x="18.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(227,200,31)"/><text x="18.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(220,104,49)"/><text x="18.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1316" width="2" height="15" fill="rgb(243,142,40)"/><text x="18.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.12%)</title><rect x="15" y="1332" width="2" height="15" fill="rgb(209,35,26)"/><text x="18.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1348" width="2" height="15" fill="rgb(234,131,48)"/><text x="18.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(228,7,25)"/><text x="18.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(209,219,18)"/><text x="18.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(251,168,17)"/><text x="18.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(216,141,35)"/><text x="18.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.12%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(238,38,5)"/><text x="18.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(250,37,49)"/><text x="18.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="1460" width="2" height="15" fill="rgb(210,98,15)"/><text x="18.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="1476" width="2" height="15" fill="rgb(207,97,16)"/><text x="18.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="1492" width="2" height="15" fill="rgb(238,116,26)"/><text x="18.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1508" width="2" height="15" fill="rgb(207,114,52)"/><text x="18.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:96) (1 samples, 0.12%)</title><rect x="15" y="1524" width="2" height="15" fill="rgb(236,176,50)"/><text x="18.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="15" y="1540" width="2" height="15" fill="rgb(205,194,7)"/><text x="18.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1556" width="2" height="15" fill="rgb(213,185,45)"/><text x="18.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1572" width="2" height="15" fill="rgb(235,68,5)"/><text x="18.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="1588" width="2" height="15" fill="rgb(247,4,16)"/><text x="18.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="1604" width="2" height="15" fill="rgb(229,166,24)"/><text x="18.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="1620" width="2" height="15" fill="rgb(232,211,51)"/><text x="18.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1636" width="2" height="15" fill="rgb(248,112,14)"/><text x="18.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_pslinux.py:1531) (1 samples, 0.12%)</title><rect x="15" y="1652" width="2" height="15" fill="rgb(219,51,32)"/><text x="18.00" y="1662.50"></text></g><g><title>Process (psutil/_pslinux.py:1764) (1 samples, 0.12%)</title><rect x="15" y="1668" width="2" height="15" fill="rgb(249,128,11)"/><text x="18.00" y="1678.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="15" y="1684" width="2" height="15" fill="rgb(212,141,54)"/><text x="18.00" y="1694.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="15" y="1700" width="2" height="15" fill="rgb(214,104,38)"/><text x="18.00" y="1710.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.12%)</title><rect x="15" y="1716" width="2" height="15" fill="rgb(228,3,43)"/><text x="18.00" y="1726.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.12%)</title><rect x="15" y="1732" width="2" height="15" fill="rgb(238,207,17)"/><text x="18.00" y="1742.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.12%)</title><rect x="15" y="1748" width="2" height="15" fill="rgb(227,103,16)"/><text x="18.00" y="1758.50"></text></g><g><title>_compile (sre_compile.py:130) (1 samples, 0.12%)</title><rect x="15" y="1764" width="2" height="15" fill="rgb(239,77,18)"/><text x="18.00" y="1774.50"></text></g><g><title>_compile_charset (sre_compile.py:268) (1 samples, 0.12%)</title><rect x="15" y="1780" width="2" height="15" fill="rgb(227,88,33)"/><text x="18.00" y="1790.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.24%)</title><rect x="15" y="484" width="3" height="15" fill="rgb(214,22,7)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.24%)</title><rect x="15" y="500" width="3" height="15" fill="rgb(245,75,31)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="516" width="3" height="15" fill="rgb(206,126,6)"/><text x="18.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="15" y="532" width="3" height="15" fill="rgb(218,15,24)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="15" y="548" width="3" height="15" fill="rgb(232,97,19)"/><text x="18.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="15" y="564" width="3" height="15" fill="rgb(253,229,52)"/><text x="18.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="15" y="580" width="3" height="15" fill="rgb(214,77,34)"/><text x="18.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="596" width="3" height="15" fill="rgb(254,225,12)"/><text x="18.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.24%)</title><rect x="15" y="612" width="3" height="15" fill="rgb(227,74,48)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="15" y="628" width="3" height="15" fill="rgb(234,2,49)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="15" y="644" width="3" height="15" fill="rgb(237,215,20)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="15" y="660" width="3" height="15" fill="rgb(218,107,50)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="15" y="676" width="3" height="15" fill="rgb(227,156,48)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="692" width="3" height="15" fill="rgb(237,50,19)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.24%)</title><rect x="15" y="708" width="3" height="15" fill="rgb(249,95,32)"/><text x="18.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="15" y="724" width="3" height="15" fill="rgb(222,97,40)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="15" y="740" width="3" height="15" fill="rgb(244,142,37)"/><text x="18.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="15" y="756" width="3" height="15" fill="rgb(245,149,10)"/><text x="18.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="15" y="772" width="3" height="15" fill="rgb(217,169,34)"/><text x="18.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="788" width="3" height="15" fill="rgb(208,3,27)"/><text x="18.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.24%)</title><rect x="15" y="804" width="3" height="15" fill="rgb(237,188,40)"/><text x="18.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="15" y="820" width="3" height="15" fill="rgb(231,122,39)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="15" y="836" width="3" height="15" fill="rgb(253,99,42)"/><text x="18.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="15" y="852" width="3" height="15" fill="rgb(220,192,22)"/><text x="18.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(235,32,8)"/><text x="18.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(233,36,20)"/><text x="18.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.24%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(239,64,18)"/><text x="18.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(250,194,39)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(245,8,35)"/><text x="18.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(224,90,14)"/><text x="18.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(228,75,42)"/><text x="18.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="980" width="3" height="15" fill="rgb(207,99,6)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.24%)</title><rect x="15" y="996" width="3" height="15" fill="rgb(213,69,6)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="15" y="1012" width="3" height="15" fill="rgb(249,156,10)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.24%)</title><rect x="15" y="1028" width="3" height="15" fill="rgb(242,198,12)"/><text x="18.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="1044" width="3" height="15" fill="rgb(249,138,52)"/><text x="18.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="15" y="1060" width="3" height="15" fill="rgb(240,108,4)"/><text x="18.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="15" y="1076" width="3" height="15" fill="rgb(245,127,22)"/><text x="18.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="15" y="1092" width="3" height="15" fill="rgb(246,185,12)"/><text x="18.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="15" y="1108" width="3" height="15" fill="rgb(231,217,46)"/><text x="18.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="15" y="1124" width="3" height="15" fill="rgb(253,62,47)"/><text x="18.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (1 samples, 0.12%)</title><rect x="17" y="1140" width="1" height="15" fill="rgb(217,36,51)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="17" y="1156" width="1" height="15" fill="rgb(249,226,34)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="17" y="1172" width="1" height="15" fill="rgb(252,69,31)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="17" y="1188" width="1" height="15" fill="rgb(206,131,52)"/><text x="20.00" y="1198.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:327) (1 samples, 0.12%)</title><rect x="17" y="1204" width="1" height="15" fill="rgb(228,174,50)"/><text x="20.00" y="1214.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.12%)</title><rect x="17" y="1220" width="1" height="15" fill="rgb(226,154,26)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:4) (3 samples, 0.36%)</title><rect x="15" y="148" width="5" height="15" fill="rgb(217,158,10)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="15" y="164" width="5" height="15" fill="rgb(228,112,47)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.36%)</title><rect x="15" y="180" width="5" height="15" fill="rgb(212,17,35)"/><text x="18.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="15" y="196" width="5" height="15" fill="rgb(231,152,19)"/><text x="18.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="15" y="212" width="5" height="15" fill="rgb(225,39,51)"/><text x="18.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="15" y="228" width="5" height="15" fill="rgb(249,161,10)"/><text x="18.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="15" y="244" width="5" height="15" fill="rgb(222,198,20)"/><text x="18.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="15" y="260" width="5" height="15" fill="rgb(231,160,54)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="15" y="276" width="5" height="15" fill="rgb(226,9,4)"/><text x="18.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.36%)</title><rect x="15" y="292" width="5" height="15" fill="rgb(208,168,26)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="15" y="308" width="5" height="15" fill="rgb(224,107,10)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="15" y="324" width="5" height="15" fill="rgb(254,188,7)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="15" y="340" width="5" height="15" fill="rgb(206,74,30)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="15" y="356" width="5" height="15" fill="rgb(209,142,48)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="15" y="372" width="5" height="15" fill="rgb(233,105,21)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.36%)</title><rect x="15" y="388" width="5" height="15" fill="rgb(241,67,3)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="15" y="404" width="5" height="15" fill="rgb(247,19,0)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="15" y="420" width="5" height="15" fill="rgb(214,204,6)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="15" y="436" width="5" height="15" fill="rgb(229,91,46)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="15" y="452" width="5" height="15" fill="rgb(252,141,30)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="15" y="468" width="5" height="15" fill="rgb(250,210,28)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.12%)</title><rect x="18" y="484" width="2" height="15" fill="rgb(225,160,17)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="500" width="2" height="15" fill="rgb(217,189,11)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="516" width="2" height="15" fill="rgb(210,115,20)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="532" width="2" height="15" fill="rgb(214,15,3)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="548" width="2" height="15" fill="rgb(207,169,17)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="564" width="2" height="15" fill="rgb(245,217,44)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.12%)</title><rect x="18" y="580" width="2" height="15" fill="rgb(241,73,54)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="596" width="2" height="15" fill="rgb(243,203,30)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="612" width="2" height="15" fill="rgb(251,212,13)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="628" width="2" height="15" fill="rgb(242,29,10)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="644" width="2" height="15" fill="rgb(232,146,5)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="660" width="2" height="15" fill="rgb(205,149,45)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.12%)</title><rect x="18" y="676" width="2" height="15" fill="rgb(219,171,17)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="692" width="2" height="15" fill="rgb(242,126,12)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="708" width="2" height="15" fill="rgb(251,148,38)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="724" width="2" height="15" fill="rgb(205,196,23)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="740" width="2" height="15" fill="rgb(208,76,23)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="756" width="2" height="15" fill="rgb(209,75,21)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.12%)</title><rect x="18" y="772" width="2" height="15" fill="rgb(206,121,26)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="788" width="2" height="15" fill="rgb(218,188,25)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="804" width="2" height="15" fill="rgb(252,0,35)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="820" width="2" height="15" fill="rgb(233,29,50)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="836" width="2" height="15" fill="rgb(253,182,7)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="852" width="2" height="15" fill="rgb(253,105,12)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.12%)</title><rect x="18" y="868" width="2" height="15" fill="rgb(222,23,50)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="884" width="2" height="15" fill="rgb(212,205,38)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(234,31,32)"/><text x="21.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.12%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(244,71,49)"/><text x="21.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.12%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(240,118,39)"/><text x="21.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.12%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(207,102,53)"/><text x="21.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(216,222,7)"/><text x="21.00" y="974.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(232,60,52)"/><text x="21.00" y="990.50"></text></g><g><title>0x7f197bbb6995 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(214,156,49)"/><text x="21.00" y="1006.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(209,170,53)"/><text x="21.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(232,98,4)"/><text x="21.00" y="1038.50"></text></g><g><title>0x7f197bbb6258 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(211,12,2)"/><text x="21.00" y="1054.50"></text></g><g><title>0x7f197bc03d7a (ld-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1060" width="2" height="15" fill="rgb(223,188,19)"/><text x="21.00" y="1070.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1076" width="2" height="15" fill="rgb(214,26,22)"/><text x="21.00" y="1086.50"></text></g><g><title>0x7f197bc04345 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1092" width="2" height="15" fill="rgb(217,92,28)"/><text x="21.00" y="1102.50"></text></g><g><title>0x7f197bbfcfec (ld-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1108" width="2" height="15" fill="rgb(222,186,25)"/><text x="21.00" y="1118.50"></text></g><g><title>0x7f197bbfb56b (ld-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(207,180,51)"/><text x="21.00" y="1134.50"></text></g><g><title>0x7f197bbfa913 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(233,174,6)"/><text x="21.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.12%)</title><rect x="20" y="244" width="1" height="15" fill="rgb(253,75,4)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="260" width="1" height="15" fill="rgb(242,189,14)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="276" width="1" height="15" fill="rgb(243,193,2)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="292" width="1" height="15" fill="rgb(235,222,49)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="308" width="1" height="15" fill="rgb(212,99,52)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="324" width="1" height="15" fill="rgb(248,18,52)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.12%)</title><rect x="20" y="340" width="1" height="15" fill="rgb(205,79,42)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="356" width="1" height="15" fill="rgb(246,59,10)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="20" y="372" width="1" height="15" fill="rgb(222,29,31)"/><text x="23.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="388" width="1" height="15" fill="rgb(217,158,1)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="404" width="1" height="15" fill="rgb(251,180,51)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="420" width="1" height="15" fill="rgb(232,217,30)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="436" width="1" height="15" fill="rgb(253,138,51)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="452" width="1" height="15" fill="rgb(253,58,54)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="468" width="1" height="15" fill="rgb(253,162,6)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.12%)</title><rect x="20" y="484" width="1" height="15" fill="rgb(211,6,5)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="500" width="1" height="15" fill="rgb(217,5,38)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="516" width="1" height="15" fill="rgb(254,28,53)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="532" width="1" height="15" fill="rgb(219,150,21)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="548" width="1" height="15" fill="rgb(219,150,48)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="564" width="1" height="15" fill="rgb(217,198,2)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.12%)</title><rect x="20" y="580" width="1" height="15" fill="rgb(219,38,3)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="596" width="1" height="15" fill="rgb(230,62,5)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="612" width="1" height="15" fill="rgb(206,190,50)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="628" width="1" height="15" fill="rgb(207,218,32)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="644" width="1" height="15" fill="rgb(240,53,23)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="660" width="1" height="15" fill="rgb(243,185,37)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.12%)</title><rect x="20" y="676" width="1" height="15" fill="rgb(229,209,26)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="692" width="1" height="15" fill="rgb(231,217,48)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="708" width="1" height="15" fill="rgb(225,47,36)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="724" width="1" height="15" fill="rgb(244,41,0)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="740" width="1" height="15" fill="rgb(217,8,26)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="756" width="1" height="15" fill="rgb(209,171,39)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.12%)</title><rect x="20" y="772" width="1" height="15" fill="rgb(219,100,15)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="788" width="1" height="15" fill="rgb(221,207,27)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="804" width="1" height="15" fill="rgb(234,173,54)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="820" width="1" height="15" fill="rgb(228,123,2)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="836" width="1" height="15" fill="rgb(234,33,13)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="852" width="1" height="15" fill="rgb(239,0,50)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.12%)</title><rect x="20" y="868" width="1" height="15" fill="rgb(225,227,35)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="884" width="1" height="15" fill="rgb(229,114,3)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="900" width="1" height="15" fill="rgb(233,169,46)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="916" width="1" height="15" fill="rgb(230,15,7)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="932" width="1" height="15" fill="rgb(241,225,2)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="948" width="1" height="15" fill="rgb(213,83,15)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.12%)</title><rect x="20" y="964" width="1" height="15" fill="rgb(227,126,20)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="980" width="1" height="15" fill="rgb(233,135,32)"/><text x="23.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="996" width="1" height="15" fill="rgb(236,58,0)"/><text x="23.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="1012" width="1" height="15" fill="rgb(225,61,51)"/><text x="23.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="1028" width="1" height="15" fill="rgb(242,120,42)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="1044" width="1" height="15" fill="rgb(244,114,44)"/><text x="23.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.12%)</title><rect x="20" y="1060" width="1" height="15" fill="rgb(216,3,47)"/><text x="23.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="1076" width="1" height="15" fill="rgb(215,181,30)"/><text x="23.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="20" y="1092" width="1" height="15" fill="rgb(229,90,6)"/><text x="23.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="1108" width="1" height="15" fill="rgb(219,229,17)"/><text x="23.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="1124" width="1" height="15" fill="rgb(231,23,41)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="1140" width="1" height="15" fill="rgb(206,51,9)"/><text x="23.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="1156" width="1" height="15" fill="rgb(230,126,21)"/><text x="23.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="1172" width="1" height="15" fill="rgb(245,96,53)"/><text x="23.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="1188" width="1" height="15" fill="rgb(222,207,18)"/><text x="23.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:6) (1 samples, 0.12%)</title><rect x="20" y="1204" width="1" height="15" fill="rgb(249,15,28)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="1220" width="1" height="15" fill="rgb(227,196,41)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="1236" width="1" height="15" fill="rgb(210,114,36)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(205,61,23)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(211,19,31)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(211,123,46)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/response.py:4) (1 samples, 0.12%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(207,185,22)"/><text x="23.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.12%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(228,79,18)"/><text x="23.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.12%)</title><rect x="21" y="340" width="1" height="15" fill="rgb(230,51,32)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="356" width="1" height="15" fill="rgb(212,3,11)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="21" y="372" width="1" height="15" fill="rgb(220,44,17)"/><text x="24.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="21" y="388" width="1" height="15" fill="rgb(211,70,40)"/><text x="24.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="21" y="404" width="1" height="15" fill="rgb(246,117,1)"/><text x="24.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="21" y="420" width="1" height="15" fill="rgb(205,123,30)"/><text x="24.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.12%)</title><rect x="21" y="436" width="1" height="15" fill="rgb(211,95,33)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="452" width="1" height="15" fill="rgb(236,197,2)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="21" y="468" width="1" height="15" fill="rgb(229,8,33)"/><text x="24.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="21" y="484" width="1" height="15" fill="rgb(235,216,4)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="21" y="500" width="1" height="15" fill="rgb(243,63,13)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="21" y="516" width="1" height="15" fill="rgb(209,3,43)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.12%)</title><rect x="21" y="532" width="1" height="15" fill="rgb(248,228,52)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="548" width="1" height="15" fill="rgb(228,127,54)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="21" y="564" width="1" height="15" fill="rgb(217,207,1)"/><text x="24.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="21" y="580" width="1" height="15" fill="rgb(227,60,26)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="596" width="1" height="15" fill="rgb(225,149,46)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="21" y="612" width="1" height="15" fill="rgb(208,157,22)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="21" y="628" width="1" height="15" fill="rgb(235,79,24)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="21" y="644" width="1" height="15" fill="rgb(249,153,30)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="21" y="660" width="1" height="15" fill="rgb(230,174,34)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:97) (1 samples, 0.12%)</title><rect x="21" y="676" width="1" height="15" fill="rgb(228,75,38)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="692" width="1" height="15" fill="rgb(238,184,2)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="21" y="708" width="1" height="15" fill="rgb(223,60,18)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(232,129,26)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(228,206,5)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(240,127,6)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py:13) (1 samples, 0.12%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(242,224,21)"/><text x="24.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(213,181,26)"/><text x="24.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(224,107,49)"/><text x="24.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(254,78,21)"/><text x="24.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(232,190,20)"/><text x="24.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(240,219,33)"/><text x="24.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py:10) (1 samples, 0.12%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(225,104,2)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(249,161,44)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(253,52,9)"/><text x="24.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(209,176,9)"/><text x="24.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(229,111,5)"/><text x="24.00" y="942.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.12%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(247,120,18)"/><text x="24.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.12%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(223,22,21)"/><text x="24.00" y="974.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.12%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(228,38,37)"/><text x="24.00" y="990.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.12%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(205,84,38)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.12%)</title><rect x="22" y="436" width="2" height="15" fill="rgb(252,154,28)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="452" width="2" height="15" fill="rgb(218,38,21)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="468" width="2" height="15" fill="rgb(237,168,10)"/><text x="25.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="484" width="2" height="15" fill="rgb(207,129,29)"/><text x="25.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="500" width="2" height="15" fill="rgb(243,86,10)"/><text x="25.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="516" width="2" height="15" fill="rgb(206,26,52)"/><text x="25.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.12%)</title><rect x="22" y="532" width="2" height="15" fill="rgb(209,92,43)"/><text x="25.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="548" width="2" height="15" fill="rgb(251,41,25)"/><text x="25.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="564" width="2" height="15" fill="rgb(250,208,3)"/><text x="25.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="580" width="2" height="15" fill="rgb(225,86,11)"/><text x="25.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="596" width="2" height="15" fill="rgb(224,227,8)"/><text x="25.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="612" width="2" height="15" fill="rgb(230,54,18)"/><text x="25.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.12%)</title><rect x="22" y="628" width="2" height="15" fill="rgb(247,91,11)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="644" width="2" height="15" fill="rgb(231,14,23)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="660" width="2" height="15" fill="rgb(244,0,11)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="676" width="2" height="15" fill="rgb(227,186,23)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="692" width="2" height="15" fill="rgb(253,214,11)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="708" width="2" height="15" fill="rgb(250,190,9)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.12%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(208,220,31)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="740" width="2" height="15" fill="rgb(230,132,31)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(238,39,0)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(218,154,8)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(231,59,35)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(222,52,5)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.12%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(246,47,41)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(208,93,16)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(242,171,17)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(237,59,39)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(248,142,22)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(246,40,1)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.12%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(206,83,17)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(253,134,42)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(237,91,44)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(218,95,34)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(215,137,28)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(234,83,49)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.12%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(217,155,38)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(237,128,51)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(237,142,13)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(210,76,50)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="1076" width="2" height="15" fill="rgb(249,137,6)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="1092" width="2" height="15" fill="rgb(251,105,39)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.12%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(209,82,20)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(205,215,38)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(207,149,32)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(237,60,45)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(208,88,15)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(237,123,44)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.12%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(247,179,25)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(218,161,15)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(215,173,41)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(248,28,54)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(250,55,16)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(216,125,51)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.12%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(247,88,52)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(212,133,48)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(212,30,54)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(223,78,15)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="1364" width="2" height="15" fill="rgb(243,171,30)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="1380" width="2" height="15" fill="rgb(230,139,40)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.12%)</title><rect x="22" y="1396" width="2" height="15" fill="rgb(229,10,51)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="22" y="1412" width="2" height="15" fill="rgb(238,125,15)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="22" y="1428" width="2" height="15" fill="rgb(234,56,44)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="22" y="1444" width="2" height="15" fill="rgb(223,54,38)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="22" y="1460" width="2" height="15" fill="rgb(217,69,3)"/><text x="25.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="22" y="1476" width="2" height="15" fill="rgb(229,72,15)"/><text x="25.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/multi.py:3440) (1 samples, 0.12%)</title><rect x="22" y="1492" width="2" height="15" fill="rgb(226,215,42)"/><text x="25.00" y="1502.50"></text></g><g><title>_add_numeric_methods_disabled (pandas/core/indexes/base.py:5403) (1 samples, 0.12%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(239,17,22)"/><text x="25.00" y="1518.50"></text></g><g><title>make_invalid_op (pandas/core/ops/__init__.py:193) (1 samples, 0.12%)</title><rect x="22" y="1524" width="2" height="15" fill="rgb(247,129,11)"/><text x="25.00" y="1534.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.12%)</title><rect x="24" y="1108" width="1" height="15" fill="rgb(207,9,3)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="24" y="1124" width="1" height="15" fill="rgb(254,129,38)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="24" y="1140" width="1" height="15" fill="rgb(226,214,8)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="24" y="1156" width="1" height="15" fill="rgb(243,175,19)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="24" y="1172" width="1" height="15" fill="rgb(247,101,16)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="24" y="1188" width="1" height="15" fill="rgb(235,173,44)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.12%)</title><rect x="24" y="1204" width="1" height="15" fill="rgb(208,113,48)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="24" y="1220" width="1" height="15" fill="rgb(248,159,30)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="24" y="1236" width="1" height="15" fill="rgb(215,180,52)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="24" y="1252" width="1" height="15" fill="rgb(252,122,53)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="24" y="1268" width="1" height="15" fill="rgb(254,187,27)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="24" y="1284" width="1" height="15" fill="rgb(233,134,45)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.12%)</title><rect x="24" y="1300" width="1" height="15" fill="rgb(207,131,19)"/><text x="27.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.12%)</title><rect x="24" y="1316" width="1" height="15" fill="rgb(223,13,49)"/><text x="27.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.12%)</title><rect x="24" y="1332" width="1" height="15" fill="rgb(214,206,39)"/><text x="27.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.12%)</title><rect x="24" y="1348" width="1" height="15" fill="rgb(246,128,20)"/><text x="27.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.12%)</title><rect x="24" y="1364" width="1" height="15" fill="rgb(245,97,17)"/><text x="27.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:567) (1 samples, 0.12%)</title><rect x="24" y="1380" width="1" height="15" fill="rgb(250,229,14)"/><text x="27.00" y="1390.50"></text></g><g><title>new_context (jinja2/environment.py:1063) (1 samples, 0.12%)</title><rect x="25" y="1556" width="2" height="15" fill="rgb(249,200,15)"/><text x="28.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.12%)</title><rect x="27" y="1572" width="1" height="15" fill="rgb(236,155,1)"/><text x="30.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:4) (14 samples, 1.70%)</title><rect x="10" y="52" width="20" height="15" fill="rgb(252,145,32)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 1.70%)</title><rect x="10" y="68" width="20" height="15" fill="rgb(222,96,18)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 1.70%)</title><rect x="10" y="84" width="20" height="15" fill="rgb(221,112,41)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 1.70%)</title><rect x="10" y="100" width="20" height="15" fill="rgb(224,167,20)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 1.70%)</title><rect x="10" y="116" width="20" height="15" fill="rgb(236,98,46)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 1.70%)</title><rect x="10" y="132" width="20" height="15" fill="rgb(206,88,3)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (7 samples, 0.85%)</title><rect x="20" y="148" width="10" height="15" fill="rgb(212,77,53)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.85%)</title><rect x="20" y="164" width="10" height="15" fill="rgb(235,10,9)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.85%)</title><rect x="20" y="180" width="10" height="15" fill="rgb(214,83,3)"/><text x="23.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.85%)</title><rect x="20" y="196" width="10" height="15" fill="rgb(242,35,5)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.85%)</title><rect x="20" y="212" width="10" height="15" fill="rgb(236,171,16)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.85%)</title><rect x="20" y="228" width="10" height="15" fill="rgb(205,45,25)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 0.73%)</title><rect x="21" y="244" width="9" height="15" fill="rgb(215,82,22)"/><text x="24.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.73%)</title><rect x="21" y="260" width="9" height="15" fill="rgb(239,48,49)"/><text x="24.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.73%)</title><rect x="21" y="276" width="9" height="15" fill="rgb(229,88,14)"/><text x="24.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.73%)</title><rect x="21" y="292" width="9" height="15" fill="rgb(228,229,17)"/><text x="24.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.73%)</title><rect x="21" y="308" width="9" height="15" fill="rgb(245,130,15)"/><text x="24.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.73%)</title><rect x="21" y="324" width="9" height="15" fill="rgb(252,105,34)"/><text x="24.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 0.61%)</title><rect x="22" y="340" width="8" height="15" fill="rgb(239,75,19)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.61%)</title><rect x="22" y="356" width="8" height="15" fill="rgb(234,103,43)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.61%)</title><rect x="22" y="372" width="8" height="15" fill="rgb(223,10,10)"/><text x="25.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.61%)</title><rect x="22" y="388" width="8" height="15" fill="rgb(210,55,13)"/><text x="25.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.61%)</title><rect x="22" y="404" width="8" height="15" fill="rgb(225,87,34)"/><text x="25.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.61%)</title><rect x="22" y="420" width="8" height="15" fill="rgb(228,172,20)"/><text x="25.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.49%)</title><rect x="24" y="436" width="6" height="15" fill="rgb(237,140,18)"/><text x="27.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="452" width="6" height="15" fill="rgb(228,159,50)"/><text x="27.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.49%)</title><rect x="24" y="468" width="6" height="15" fill="rgb(241,10,18)"/><text x="27.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="484" width="6" height="15" fill="rgb(220,118,1)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="500" width="6" height="15" fill="rgb(220,164,42)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.49%)</title><rect x="24" y="516" width="6" height="15" fill="rgb(230,65,47)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.49%)</title><rect x="24" y="532" width="6" height="15" fill="rgb(249,57,37)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.49%)</title><rect x="24" y="548" width="6" height="15" fill="rgb(240,162,14)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="564" width="6" height="15" fill="rgb(213,199,0)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.49%)</title><rect x="24" y="580" width="6" height="15" fill="rgb(252,174,39)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="596" width="6" height="15" fill="rgb(230,147,40)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.49%)</title><rect x="24" y="612" width="6" height="15" fill="rgb(252,119,54)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.49%)</title><rect x="24" y="628" width="6" height="15" fill="rgb(239,1,6)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.49%)</title><rect x="24" y="644" width="6" height="15" fill="rgb(224,203,6)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="660" width="6" height="15" fill="rgb(207,80,20)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.49%)</title><rect x="24" y="676" width="6" height="15" fill="rgb(210,157,30)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="692" width="6" height="15" fill="rgb(245,7,22)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.49%)</title><rect x="24" y="708" width="6" height="15" fill="rgb(253,145,35)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.49%)</title><rect x="24" y="724" width="6" height="15" fill="rgb(234,18,22)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.49%)</title><rect x="24" y="740" width="6" height="15" fill="rgb(230,15,18)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="756" width="6" height="15" fill="rgb(226,95,47)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.49%)</title><rect x="24" y="772" width="6" height="15" fill="rgb(210,152,47)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="788" width="6" height="15" fill="rgb(240,212,11)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.49%)</title><rect x="24" y="804" width="6" height="15" fill="rgb(245,176,29)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.49%)</title><rect x="24" y="820" width="6" height="15" fill="rgb(249,134,41)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.49%)</title><rect x="24" y="836" width="6" height="15" fill="rgb(230,204,45)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="852" width="6" height="15" fill="rgb(206,41,30)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.49%)</title><rect x="24" y="868" width="6" height="15" fill="rgb(251,191,46)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="884" width="6" height="15" fill="rgb(237,202,40)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.49%)</title><rect x="24" y="900" width="6" height="15" fill="rgb(231,44,41)"/><text x="27.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="916" width="6" height="15" fill="rgb(233,183,14)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="932" width="6" height="15" fill="rgb(248,84,40)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.49%)</title><rect x="24" y="948" width="6" height="15" fill="rgb(241,63,1)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.49%)</title><rect x="24" y="964" width="6" height="15" fill="rgb(231,159,29)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.49%)</title><rect x="24" y="980" width="6" height="15" fill="rgb(215,99,38)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="996" width="6" height="15" fill="rgb(237,190,13)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.49%)</title><rect x="24" y="1012" width="6" height="15" fill="rgb(224,97,7)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.49%)</title><rect x="24" y="1028" width="6" height="15" fill="rgb(209,167,36)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.49%)</title><rect x="24" y="1044" width="6" height="15" fill="rgb(209,105,45)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.49%)</title><rect x="24" y="1060" width="6" height="15" fill="rgb(216,59,10)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.49%)</title><rect x="24" y="1076" width="6" height="15" fill="rgb(240,7,22)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.49%)</title><rect x="24" y="1092" width="6" height="15" fill="rgb(232,192,29)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.36%)</title><rect x="25" y="1108" width="5" height="15" fill="rgb(232,104,39)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.36%)</title><rect x="25" y="1124" width="5" height="15" fill="rgb(230,204,36)"/><text x="28.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="25" y="1140" width="5" height="15" fill="rgb(225,44,3)"/><text x="28.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="25" y="1156" width="5" height="15" fill="rgb(232,37,19)"/><text x="28.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="25" y="1172" width="5" height="15" fill="rgb(207,16,23)"/><text x="28.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="25" y="1188" width="5" height="15" fill="rgb(234,195,15)"/><text x="28.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="25" y="1204" width="5" height="15" fill="rgb(230,193,34)"/><text x="28.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="25" y="1220" width="5" height="15" fill="rgb(238,134,40)"/><text x="28.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.36%)</title><rect x="25" y="1236" width="5" height="15" fill="rgb(243,9,3)"/><text x="28.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.36%)</title><rect x="25" y="1252" width="5" height="15" fill="rgb(240,37,36)"/><text x="28.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="25" y="1268" width="5" height="15" fill="rgb(214,154,45)"/><text x="28.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="25" y="1284" width="5" height="15" fill="rgb(219,33,17)"/><text x="28.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="25" y="1300" width="5" height="15" fill="rgb(237,211,32)"/><text x="28.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="25" y="1316" width="5" height="15" fill="rgb(250,168,45)"/><text x="28.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="25" y="1332" width="5" height="15" fill="rgb(228,9,11)"/><text x="28.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="25" y="1348" width="5" height="15" fill="rgb(209,98,29)"/><text x="28.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.36%)</title><rect x="25" y="1364" width="5" height="15" fill="rgb(238,82,2)"/><text x="28.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="25" y="1380" width="5" height="15" fill="rgb(206,73,0)"/><text x="28.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="25" y="1396" width="5" height="15" fill="rgb(210,99,49)"/><text x="28.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="25" y="1412" width="5" height="15" fill="rgb(234,0,53)"/><text x="28.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="25" y="1428" width="5" height="15" fill="rgb(251,120,42)"/><text x="28.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="25" y="1444" width="5" height="15" fill="rgb(209,208,29)"/><text x="28.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.36%)</title><rect x="25" y="1460" width="5" height="15" fill="rgb(215,33,37)"/><text x="28.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.36%)</title><rect x="25" y="1476" width="5" height="15" fill="rgb(247,218,53)"/><text x="28.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.36%)</title><rect x="25" y="1492" width="5" height="15" fill="rgb(221,133,45)"/><text x="28.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.36%)</title><rect x="25" y="1508" width="5" height="15" fill="rgb(225,153,17)"/><text x="28.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.36%)</title><rect x="25" y="1524" width="5" height="15" fill="rgb(225,122,1)"/><text x="28.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.36%)</title><rect x="25" y="1540" width="5" height="15" fill="rgb(211,169,51)"/><text x="28.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.24%)</title><rect x="27" y="1556" width="3" height="15" fill="rgb(245,202,22)"/><text x="30.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.12%)</title><rect x="28" y="1572" width="2" height="15" fill="rgb(212,192,26)"/><text x="31.00" y="1582.50"></text></g><g><title>0x7f1969c7fc58 (?) (1 samples, 0.12%)</title><rect x="28" y="1588" width="2" height="15" fill="rgb(236,125,51)"/><text x="31.00" y="1598.50"></text></g><g><title>0x7f1969d52432 (?) (1 samples, 0.12%)</title><rect x="28" y="1604" width="2" height="15" fill="rgb(238,99,6)"/><text x="31.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:40) (1 samples, 0.12%)</title><rect x="30" y="52" width="1" height="15" fill="rgb(224,21,10)"/><text x="33.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:11) (1 samples, 0.12%)</title><rect x="30" y="68" width="1" height="15" fill="rgb(206,197,41)"/><text x="33.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:39) (1 samples, 0.12%)</title><rect x="30" y="84" width="1" height="15" fill="rgb(213,194,50)"/><text x="33.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.12%)</title><rect x="30" y="100" width="1" height="15" fill="rgb(246,129,9)"/><text x="33.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:994) (1 samples, 0.12%)</title><rect x="30" y="116" width="1" height="15" fill="rgb(215,10,19)"/><text x="33.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (1 samples, 0.12%)</title><rect x="30" y="132" width="1" height="15" fill="rgb(248,135,41)"/><text x="33.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:1051) (1 samples, 0.12%)</title><rect x="30" y="148" width="1" height="15" fill="rgb(231,11,18)"/><text x="33.00" y="158.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (1 samples, 0.12%)</title><rect x="30" y="164" width="1" height="15" fill="rgb(221,74,44)"/><text x="33.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.12%)</title><rect x="30" y="180" width="1" height="15" fill="rgb(222,216,45)"/><text x="33.00" y="190.50"></text></g><g><title>0x7f1955366b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="30" y="196" width="1" height="15" fill="rgb(206,67,50)"/><text x="33.00" y="206.50"></text></g><g><title>0x7f195539810a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="30" y="212" width="1" height="15" fill="rgb(229,124,20)"/><text x="33.00" y="222.50"></text></g><g><title>0x7f19555c3d8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="30" y="228" width="1" height="15" fill="rgb(205,132,11)"/><text x="33.00" y="238.50"></text></g><g><title>0x7f19555bcd50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="30" y="244" width="1" height="15" fill="rgb(221,134,4)"/><text x="33.00" y="254.50"></text></g><g><title>0x7f19555bccd1 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="30" y="260" width="1" height="15" fill="rgb(219,22,48)"/><text x="33.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.12%)</title><rect x="31" y="196" width="1" height="15" fill="rgb(213,43,34)"/><text x="34.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.12%)</title><rect x="31" y="212" width="1" height="15" fill="rgb(232,180,46)"/><text x="34.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.24%)</title><rect x="31" y="180" width="3" height="15" fill="rgb(230,117,53)"/><text x="34.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.12%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(234,173,51)"/><text x="35.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.12%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(253,43,28)"/><text x="35.00" y="222.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (3 samples, 0.36%)</title><rect x="31" y="148" width="4" height="15" fill="rgb(232,153,38)"/><text x="34.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (3 samples, 0.36%)</title><rect x="31" y="164" width="4" height="15" fill="rgb(233,139,53)"/><text x="34.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.12%)</title><rect x="34" y="180" width="1" height="15" fill="rgb(228,10,40)"/><text x="37.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="34" y="196" width="1" height="15" fill="rgb(230,4,33)"/><text x="37.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.12%)</title><rect x="35" y="212" width="2" height="15" fill="rgb(216,193,50)"/><text x="38.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.49%)</title><rect x="45" y="244" width="6" height="15" fill="rgb(222,223,46)"/><text x="48.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (12 samples, 1.46%)</title><rect x="35" y="196" width="18" height="15" fill="rgb(231,177,53)"/><text x="38.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 1.34%)</title><rect x="37" y="212" width="16" height="15" fill="rgb(227,13,27)"/><text x="40.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 1.09%)</title><rect x="40" y="228" width="13" height="15" fill="rgb(212,22,13)"/><text x="43.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="51" y="244" width="2" height="15" fill="rgb(207,228,19)"/><text x="54.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.12%)</title><rect x="54" y="228" width="1" height="15" fill="rgb(234,80,20)"/><text x="57.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.24%)</title><rect x="55" y="228" width="3" height="15" fill="rgb(236,175,22)"/><text x="58.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.12%)</title><rect x="57" y="244" width="1" height="15" fill="rgb(239,86,23)"/><text x="60.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.24%)</title><rect x="58" y="228" width="3" height="15" fill="rgb(212,131,2)"/><text x="61.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.12%)</title><rect x="60" y="244" width="1" height="15" fill="rgb(216,52,12)"/><text x="63.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.12%)</title><rect x="61" y="244" width="2" height="15" fill="rgb(247,28,42)"/><text x="64.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.49%)</title><rect x="61" y="228" width="6" height="15" fill="rgb(239,187,48)"/><text x="64.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.36%)</title><rect x="63" y="244" width="4" height="15" fill="rgb(247,62,18)"/><text x="66.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.36%)</title><rect x="63" y="260" width="4" height="15" fill="rgb(211,35,12)"/><text x="66.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.36%)</title><rect x="67" y="228" width="4" height="15" fill="rgb(237,140,6)"/><text x="70.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.12%)</title><rect x="71" y="228" width="2" height="15" fill="rgb(214,127,15)"/><text x="74.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.12%)</title><rect x="71" y="244" width="2" height="15" fill="rgb(233,0,41)"/><text x="74.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.12%)</title><rect x="73" y="228" width="1" height="15" fill="rgb(234,43,0)"/><text x="76.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.12%)</title><rect x="73" y="244" width="1" height="15" fill="rgb(245,169,9)"/><text x="76.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.36%)</title><rect x="74" y="228" width="4" height="15" fill="rgb(246,93,38)"/><text x="77.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.36%)</title><rect x="74" y="244" width="4" height="15" fill="rgb(207,60,30)"/><text x="77.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.12%)</title><rect x="77" y="260" width="1" height="15" fill="rgb(237,55,6)"/><text x="80.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="81" y="244" width="2" height="15" fill="rgb(244,201,43)"/><text x="84.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.24%)</title><rect x="83" y="244" width="3" height="15" fill="rgb(240,11,5)"/><text x="86.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 0.85%)</title><rect x="78" y="228" width="10" height="15" fill="rgb(215,190,43)"/><text x="81.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.24%)</title><rect x="86" y="244" width="2" height="15" fill="rgb(250,128,1)"/><text x="89.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (26 samples, 3.16%)</title><rect x="53" y="212" width="37" height="15" fill="rgb(223,52,18)"/><text x="56.00" y="222.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.12%)</title><rect x="88" y="228" width="2" height="15" fill="rgb(245,61,49)"/><text x="91.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (27 samples, 3.28%)</title><rect x="53" y="196" width="38" height="15" fill="rgb(235,165,23)"/><text x="56.00" y="206.50">pre..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:393) (1 samples, 0.12%)</title><rect x="90" y="212" width="1" height="15" fill="rgb(241,177,2)"/><text x="93.00" y="222.50"></text></g><g><title>0x7f1955371f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="91" y="228" width="2" height="15" fill="rgb(234,194,50)"/><text x="94.00" y="238.50"></text></g><g><title>0x7f1955361d11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="91" y="244" width="2" height="15" fill="rgb(228,185,20)"/><text x="94.00" y="254.50"></text></g><g><title>0x7f1955380225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="93" y="260" width="1" height="15" fill="rgb(234,186,11)"/><text x="96.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.12%)</title><rect x="93" y="276" width="1" height="15" fill="rgb(217,180,28)"/><text x="96.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1488) (1 samples, 0.12%)</title><rect x="93" y="292" width="1" height="15" fill="rgb(248,181,17)"/><text x="96.00" y="302.50"></text></g><g><title>0x7f19553802df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="94" y="260" width="2" height="15" fill="rgb(208,177,2)"/><text x="97.00" y="270.50"></text></g><g><title>0x7f1955364d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="94" y="276" width="2" height="15" fill="rgb(212,194,7)"/><text x="97.00" y="286.50"></text></g><g><title>0x7f1955364666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="94" y="292" width="2" height="15" fill="rgb(247,66,21)"/><text x="97.00" y="302.50"></text></g><g><title>0x7f1955380511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="96" y="260" width="1" height="15" fill="rgb(214,76,27)"/><text x="99.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (6 samples, 0.73%)</title><rect x="97" y="276" width="9" height="15" fill="rgb(236,179,10)"/><text x="100.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.24%)</title><rect x="103" y="292" width="3" height="15" fill="rgb(244,78,54)"/><text x="106.00" y="302.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.12%)</title><rect x="106" y="340" width="1" height="15" fill="rgb(240,194,41)"/><text x="109.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.12%)</title><rect x="106" y="356" width="1" height="15" fill="rgb(220,120,30)"/><text x="109.00" y="366.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="106" y="372" width="1" height="15" fill="rgb(214,152,7)"/><text x="109.00" y="382.50"></text></g><g><title>0x7f197b94f103 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="106" y="388" width="1" height="15" fill="rgb(252,1,23)"/><text x="109.00" y="398.50"></text></g><g><title>0x7f1955380592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.97%)</title><rect x="97" y="260" width="12" height="15" fill="rgb(210,204,39)"/><text x="100.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.24%)</title><rect x="106" y="276" width="3" height="15" fill="rgb(243,180,8)"/><text x="109.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.24%)</title><rect x="106" y="292" width="3" height="15" fill="rgb(230,56,16)"/><text x="109.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.24%)</title><rect x="106" y="308" width="3" height="15" fill="rgb(217,125,9)"/><text x="109.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (2 samples, 0.24%)</title><rect x="106" y="324" width="3" height="15" fill="rgb(215,149,37)"/><text x="109.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.12%)</title><rect x="107" y="340" width="2" height="15" fill="rgb(228,39,13)"/><text x="110.00" y="350.50"></text></g><g><title>0x7f197ab50b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="107" y="356" width="2" height="15" fill="rgb(222,72,6)"/><text x="110.00" y="366.50"></text></g><g><title>0x7f19553806a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="109" y="260" width="1" height="15" fill="rgb(221,48,19)"/><text x="112.00" y="270.50"></text></g><g><title>0x7f19553806a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="110" y="260" width="1" height="15" fill="rgb(221,104,41)"/><text x="113.00" y="270.50"></text></g><g><title>0x7f19553806aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="111" y="260" width="3" height="15" fill="rgb(205,45,25)"/><text x="114.00" y="270.50"></text></g><g><title>0x7f19553806ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="114" y="260" width="3" height="15" fill="rgb(226,215,26)"/><text x="117.00" y="270.50"></text></g><g><title>0x7f19553806b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="117" y="260" width="2" height="15" fill="rgb(244,174,7)"/><text x="120.00" y="270.50"></text></g><g><title>0x7f19553807b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="119" y="260" width="1" height="15" fill="rgb(220,157,3)"/><text x="122.00" y="270.50"></text></g><g><title>0x7f1955380887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="120" y="260" width="1" height="15" fill="rgb(218,211,48)"/><text x="123.00" y="270.50"></text></g><g><title>0x7f1955358529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="121" y="276" width="2" height="15" fill="rgb(214,7,8)"/><text x="124.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.12%)</title><rect x="121" y="292" width="2" height="15" fill="rgb(219,118,30)"/><text x="124.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.12%)</title><rect x="121" y="308" width="2" height="15" fill="rgb(253,91,20)"/><text x="124.00" y="318.50"></text></g><g><title>0x7f1955381405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (22 samples, 2.68%)</title><rect x="93" y="244" width="31" height="15" fill="rgb(224,56,44)"/><text x="96.00" y="254.50">0x..</text></g><g><title>0x7f1955380c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="121" y="260" width="3" height="15" fill="rgb(249,182,17)"/><text x="124.00" y="270.50"></text></g><g><title>0x7f19553585f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="123" y="276" width="1" height="15" fill="rgb(239,174,17)"/><text x="126.00" y="286.50"></text></g><g><title>0x7f1955357f4f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="123" y="292" width="1" height="15" fill="rgb(248,207,42)"/><text x="126.00" y="302.50"></text></g><g><title>0x7f1955356178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="124" y="260" width="2" height="15" fill="rgb(245,154,52)"/><text x="127.00" y="270.50"></text></g><g><title>0x7f1955371fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 2.92%)</title><rect x="93" y="228" width="34" height="15" fill="rgb(220,67,29)"/><text x="96.00" y="238.50">0x..</text></g><g><title>0x7f1955381540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="124" y="244" width="3" height="15" fill="rgb(212,148,23)"/><text x="127.00" y="254.50"></text></g><g><title>0x7f19553562f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="126" y="260" width="1" height="15" fill="rgb(239,201,33)"/><text x="129.00" y="270.50"></text></g><g><title>0x7f19553554dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="126" y="276" width="1" height="15" fill="rgb(221,138,10)"/><text x="129.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.12%)</title><rect x="127" y="260" width="2" height="15" fill="rgb(241,117,0)"/><text x="130.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.12%)</title><rect x="127" y="276" width="2" height="15" fill="rgb(241,56,35)"/><text x="130.00" y="286.50"></text></g><g><title>0x7f195537205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="127" y="228" width="3" height="15" fill="rgb(211,226,39)"/><text x="130.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.24%)</title><rect x="127" y="244" width="3" height="15" fill="rgb(240,103,52)"/><text x="130.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.12%)</title><rect x="129" y="260" width="1" height="15" fill="rgb(212,157,44)"/><text x="132.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="129" y="276" width="1" height="15" fill="rgb(223,217,46)"/><text x="132.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="129" y="292" width="1" height="15" fill="rgb(235,103,26)"/><text x="132.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="129" y="308" width="1" height="15" fill="rgb(250,9,53)"/><text x="132.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="129" y="324" width="1" height="15" fill="rgb(210,0,26)"/><text x="132.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="129" y="340" width="1" height="15" fill="rgb(249,169,48)"/><text x="132.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="129" y="356" width="1" height="15" fill="rgb(213,225,16)"/><text x="132.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="130" y="244" width="2" height="15" fill="rgb(242,17,14)"/><text x="133.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="130" y="260" width="2" height="15" fill="rgb(209,167,46)"/><text x="133.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.12%)</title><rect x="130" y="276" width="2" height="15" fill="rgb(238,139,36)"/><text x="133.00" y="286.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.12%)</title><rect x="130" y="292" width="2" height="15" fill="rgb(219,114,34)"/><text x="133.00" y="302.50"></text></g><g><title>0x7f197b92e902 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="130" y="308" width="2" height="15" fill="rgb(225,219,44)"/><text x="133.00" y="318.50"></text></g><g><title>0x7f197b92edfb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="132" y="308" width="1" height="15" fill="rgb(227,189,28)"/><text x="135.00" y="318.50"></text></g><g><title>0x7f197b92dac7 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="132" y="324" width="1" height="15" fill="rgb(248,188,36)"/><text x="135.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (30 samples, 3.65%)</title><rect x="91" y="196" width="43" height="15" fill="rgb(244,199,50)"/><text x="94.00" y="206.50">pred..</text></g><g><title>0x7f1955372d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 3.65%)</title><rect x="91" y="212" width="43" height="15" fill="rgb(207,203,54)"/><text x="94.00" y="222.50">0x7f..</text></g><g><title>0x7f195537214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.36%)</title><rect x="130" y="228" width="4" height="15" fill="rgb(227,13,8)"/><text x="133.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (2 samples, 0.24%)</title><rect x="132" y="244" width="2" height="15" fill="rgb(235,101,54)"/><text x="135.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:147) (2 samples, 0.24%)</title><rect x="132" y="260" width="2" height="15" fill="rgb(218,146,47)"/><text x="135.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (2 samples, 0.24%)</title><rect x="132" y="276" width="2" height="15" fill="rgb(236,159,29)"/><text x="135.00" y="286.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (2 samples, 0.24%)</title><rect x="132" y="292" width="2" height="15" fill="rgb(228,96,50)"/><text x="135.00" y="302.50"></text></g><g><title>0x7f197b92ef69 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="133" y="308" width="1" height="15" fill="rgb(235,136,24)"/><text x="136.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (2 samples, 0.24%)</title><rect x="134" y="196" width="3" height="15" fill="rgb(230,44,0)"/><text x="137.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.12%)</title><rect x="136" y="212" width="1" height="15" fill="rgb(209,109,18)"/><text x="139.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (73 samples, 8.88%)</title><rect x="35" y="180" width="105" height="15" fill="rgb(234,155,12)"/><text x="38.00" y="190.50">&lt;listcomp&gt; (..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.24%)</title><rect x="137" y="196" width="3" height="15" fill="rgb(225,111,1)"/><text x="140.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.12%)</title><rect x="139" y="212" width="1" height="15" fill="rgb(247,182,24)"/><text x="142.00" y="222.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.12%)</title><rect x="140" y="180" width="2" height="15" fill="rgb(214,205,22)"/><text x="143.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.12%)</title><rect x="140" y="196" width="2" height="15" fill="rgb(242,92,20)"/><text x="143.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.12%)</title><rect x="140" y="212" width="2" height="15" fill="rgb(240,161,0)"/><text x="143.00" y="222.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:191) (1 samples, 0.12%)</title><rect x="140" y="228" width="2" height="15" fill="rgb(205,11,52)"/><text x="143.00" y="238.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (75 samples, 9.12%)</title><rect x="35" y="164" width="108" height="15" fill="rgb(237,163,27)"/><text x="38.00" y="174.50">_get_median_p..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.12%)</title><rect x="142" y="180" width="1" height="15" fill="rgb(206,17,11)"/><text x="145.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.12%)</title><rect x="142" y="196" width="1" height="15" fill="rgb(244,74,52)"/><text x="145.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.12%)</title><rect x="142" y="212" width="1" height="15" fill="rgb(210,112,1)"/><text x="145.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.12%)</title><rect x="142" y="228" width="1" height="15" fill="rgb(238,187,35)"/><text x="145.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:546) (1 samples, 0.12%)</title><rect x="142" y="244" width="1" height="15" fill="rgb(242,162,30)"/><text x="145.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c:467) (1 samples, 0.12%)</title><rect x="142" y="260" width="1" height="15" fill="rgb(240,113,19)"/><text x="145.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.12%)</title><rect x="142" y="276" width="1" height="15" fill="rgb(216,48,8)"/><text x="145.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.12%)</title><rect x="142" y="292" width="1" height="15" fill="rgb(228,192,36)"/><text x="145.00" y="302.50"></text></g><g><title>0x7f197b94ed94 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="142" y="308" width="1" height="15" fill="rgb(244,198,52)"/><text x="145.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1028) (1 samples, 0.12%)</title><rect x="143" y="276" width="1" height="15" fill="rgb(221,93,6)"/><text x="146.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1048) (2 samples, 0.24%)</title><rect x="144" y="276" width="3" height="15" fill="rgb(252,84,14)"/><text x="147.00" y="286.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src:1915) (2 samples, 0.24%)</title><rect x="144" y="292" width="3" height="15" fill="rgb(227,113,0)"/><text x="147.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:302) (2 samples, 0.24%)</title><rect x="144" y="308" width="3" height="15" fill="rgb(209,57,34)"/><text x="147.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.12%)</title><rect x="147" y="276" width="2" height="15" fill="rgb(252,182,49)"/><text x="150.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:165) (1 samples, 0.12%)</title><rect x="149" y="292" width="1" height="15" fill="rgb(224,158,40)"/><text x="152.00" y="302.50"></text></g><g><title>aquicksort_double (quicksort.c.src:175) (1 samples, 0.12%)</title><rect x="150" y="292" width="2" height="15" fill="rgb(206,69,4)"/><text x="153.00" y="302.50"></text></g><g><title>npy_get_msb (npy_sort.h.src:15) (1 samples, 0.12%)</title><rect x="150" y="308" width="2" height="15" fill="rgb(231,155,17)"/><text x="153.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (2 samples, 0.24%)</title><rect x="152" y="292" width="2" height="15" fill="rgb(234,118,19)"/><text x="155.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (2 samples, 0.24%)</title><rect x="152" y="308" width="2" height="15" fill="rgb(229,34,32)"/><text x="155.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:223) (1 samples, 0.12%)</title><rect x="154" y="292" width="2" height="15" fill="rgb(217,16,13)"/><text x="157.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (7 samples, 0.85%)</title><rect x="149" y="276" width="10" height="15" fill="rgb(231,27,39)"/><text x="152.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:237) (2 samples, 0.24%)</title><rect x="156" y="292" width="3" height="15" fill="rgb(243,55,30)"/><text x="159.00" y="302.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (13 samples, 1.58%)</title><rect x="143" y="164" width="19" height="15" fill="rgb(207,53,11)"/><text x="146.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (13 samples, 1.58%)</title><rect x="143" y="180" width="19" height="15" fill="rgb(240,143,25)"/><text x="146.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (13 samples, 1.58%)</title><rect x="143" y="196" width="19" height="15" fill="rgb(254,144,12)"/><text x="146.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (13 samples, 1.58%)</title><rect x="143" y="212" width="19" height="15" fill="rgb(225,67,13)"/><text x="146.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (13 samples, 1.58%)</title><rect x="143" y="228" width="19" height="15" fill="rgb(206,161,32)"/><text x="146.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (13 samples, 1.58%)</title><rect x="143" y="244" width="19" height="15" fill="rgb(209,182,15)"/><text x="146.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (13 samples, 1.58%)</title><rect x="143" y="260" width="19" height="15" fill="rgb(216,99,52)"/><text x="146.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (2 samples, 0.24%)</title><rect x="159" y="276" width="3" height="15" fill="rgb(211,27,47)"/><text x="162.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1521) (1 samples, 0.12%)</title><rect x="162" y="180" width="1" height="15" fill="rgb(213,67,31)"/><text x="165.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1422) (1 samples, 0.12%)</title><rect x="162" y="196" width="1" height="15" fill="rgb(249,69,35)"/><text x="165.00" y="206.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:259) (1 samples, 0.12%)</title><rect x="165" y="292" width="1" height="15" fill="rgb(231,5,30)"/><text x="168.00" y="302.50"></text></g><g><title>_get_keywords (number.c:208) (1 samples, 0.12%)</title><rect x="165" y="308" width="1" height="15" fill="rgb(244,6,17)"/><text x="168.00" y="318.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (2 samples, 0.24%)</title><rect x="166" y="340" width="3" height="15" fill="rgb(247,105,29)"/><text x="169.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1756) (2 samples, 0.24%)</title><rect x="166" y="356" width="3" height="15" fill="rgb(239,77,51)"/><text x="169.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (5 samples, 0.61%)</title><rect x="163" y="180" width="7" height="15" fill="rgb(229,185,53)"/><text x="166.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.61%)</title><rect x="163" y="196" width="7" height="15" fill="rgb(207,17,5)"/><text x="166.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.49%)</title><rect x="165" y="212" width="5" height="15" fill="rgb(228,5,45)"/><text x="168.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (4 samples, 0.49%)</title><rect x="165" y="228" width="5" height="15" fill="rgb(252,202,26)"/><text x="168.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.49%)</title><rect x="165" y="244" width="5" height="15" fill="rgb(250,123,54)"/><text x="168.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 0.49%)</title><rect x="165" y="260" width="5" height="15" fill="rgb(222,128,49)"/><text x="168.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 0.49%)</title><rect x="165" y="276" width="5" height="15" fill="rgb(245,52,13)"/><text x="168.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 0.36%)</title><rect x="166" y="292" width="4" height="15" fill="rgb(206,12,26)"/><text x="169.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (3 samples, 0.36%)</title><rect x="166" y="308" width="4" height="15" fill="rgb(252,153,17)"/><text x="169.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (3 samples, 0.36%)</title><rect x="166" y="324" width="4" height="15" fill="rgb(228,139,24)"/><text x="169.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:4006) (1 samples, 0.12%)</title><rect x="169" y="340" width="1" height="15" fill="rgb(246,1,27)"/><text x="172.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="169" y="356" width="1" height="15" fill="rgb(235,5,39)"/><text x="172.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.12%)</title><rect x="170" y="196" width="2" height="15" fill="rgb(210,10,4)"/><text x="173.00" y="206.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.12%)</title><rect x="172" y="228" width="1" height="15" fill="rgb(236,127,14)"/><text x="175.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.12%)</title><rect x="173" y="244" width="2" height="15" fill="rgb(248,46,30)"/><text x="176.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.24%)</title><rect x="175" y="340" width="2" height="15" fill="rgb(211,193,0)"/><text x="178.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.12%)</title><rect x="176" y="356" width="1" height="15" fill="rgb(215,58,33)"/><text x="179.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (2 samples, 0.24%)</title><rect x="177" y="340" width="3" height="15" fill="rgb(228,184,12)"/><text x="180.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.61%)</title><rect x="175" y="324" width="7" height="15" fill="rgb(234,107,53)"/><text x="178.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.12%)</title><rect x="180" y="340" width="2" height="15" fill="rgb(245,88,3)"/><text x="183.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (9 samples, 1.09%)</title><rect x="170" y="180" width="13" height="15" fill="rgb(242,187,10)"/><text x="173.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (8 samples, 0.97%)</title><rect x="172" y="196" width="11" height="15" fill="rgb(216,90,24)"/><text x="175.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 0.97%)</title><rect x="172" y="212" width="11" height="15" fill="rgb(216,139,6)"/><text x="175.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (7 samples, 0.85%)</title><rect x="173" y="228" width="10" height="15" fill="rgb(226,31,53)"/><text x="176.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (6 samples, 0.73%)</title><rect x="175" y="244" width="8" height="15" fill="rgb(205,161,18)"/><text x="178.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 0.73%)</title><rect x="175" y="260" width="8" height="15" fill="rgb(208,215,34)"/><text x="178.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 0.73%)</title><rect x="175" y="276" width="8" height="15" fill="rgb(243,30,35)"/><text x="178.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 0.73%)</title><rect x="175" y="292" width="8" height="15" fill="rgb(223,73,43)"/><text x="178.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.73%)</title><rect x="175" y="308" width="8" height="15" fill="rgb(210,171,45)"/><text x="178.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.12%)</title><rect x="182" y="324" width="1" height="15" fill="rgb(237,171,8)"/><text x="185.00" y="334.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (1 samples, 0.12%)</title><rect x="183" y="180" width="2" height="15" fill="rgb(250,197,52)"/><text x="186.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.12%)</title><rect x="183" y="196" width="2" height="15" fill="rgb(224,94,21)"/><text x="186.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.12%)</title><rect x="183" y="212" width="2" height="15" fill="rgb(235,111,20)"/><text x="186.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="183" y="228" width="2" height="15" fill="rgb(243,4,36)"/><text x="186.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.12%)</title><rect x="183" y="244" width="2" height="15" fill="rgb(215,212,8)"/><text x="186.00" y="254.50"></text></g><g><title>0x7f197b94edbb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="183" y="260" width="2" height="15" fill="rgb(205,118,1)"/><text x="186.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.12%)</title><rect x="193" y="244" width="2" height="15" fill="rgb(241,66,5)"/><text x="196.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.12%)</title><rect x="195" y="260" width="1" height="15" fill="rgb(234,174,17)"/><text x="198.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.12%)</title><rect x="195" y="276" width="1" height="15" fill="rgb(221,21,52)"/><text x="198.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.12%)</title><rect x="195" y="292" width="1" height="15" fill="rgb(236,10,22)"/><text x="198.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.12%)</title><rect x="195" y="308" width="1" height="15" fill="rgb(212,99,27)"/><text x="198.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.12%)</title><rect x="196" y="292" width="2" height="15" fill="rgb(245,85,15)"/><text x="199.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.12%)</title><rect x="196" y="308" width="2" height="15" fill="rgb(249,110,10)"/><text x="199.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.12%)</title><rect x="196" y="324" width="2" height="15" fill="rgb(249,200,50)"/><text x="199.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:444) (1 samples, 0.12%)</title><rect x="198" y="308" width="1" height="15" fill="rgb(208,181,8)"/><text x="201.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.12%)</title><rect x="199" y="308" width="1" height="15" fill="rgb(236,75,43)"/><text x="202.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.12%)</title><rect x="199" y="324" width="1" height="15" fill="rgb(215,167,47)"/><text x="202.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.12%)</title><rect x="199" y="340" width="1" height="15" fill="rgb(226,5,43)"/><text x="202.00" y="350.50"></text></g><g><title>0x7f197b94ed97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="199" y="356" width="1" height="15" fill="rgb(244,152,31)"/><text x="202.00" y="366.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (9 samples, 1.09%)</title><rect x="189" y="196" width="13" height="15" fill="rgb(225,157,20)"/><text x="192.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.09%)</title><rect x="189" y="212" width="13" height="15" fill="rgb(209,33,41)"/><text x="192.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (9 samples, 1.09%)</title><rect x="189" y="228" width="13" height="15" fill="rgb(251,113,47)"/><text x="192.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 0.61%)</title><rect x="195" y="244" width="7" height="15" fill="rgb(225,73,38)"/><text x="198.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 0.49%)</title><rect x="196" y="260" width="6" height="15" fill="rgb(206,154,46)"/><text x="199.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.49%)</title><rect x="196" y="276" width="6" height="15" fill="rgb(234,183,26)"/><text x="199.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.36%)</title><rect x="198" y="292" width="4" height="15" fill="rgb(249,83,15)"/><text x="201.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:563) (1 samples, 0.12%)</title><rect x="200" y="308" width="2" height="15" fill="rgb(245,226,37)"/><text x="203.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.12%)</title><rect x="200" y="324" width="2" height="15" fill="rgb(254,223,35)"/><text x="203.00" y="334.50"></text></g><g><title>isclose (numpy/core/numeric.py:2260) (1 samples, 0.12%)</title><rect x="202" y="228" width="1" height="15" fill="rgb(211,146,40)"/><text x="205.00" y="238.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.12%)</title><rect x="202" y="244" width="1" height="15" fill="rgb(230,162,26)"/><text x="205.00" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2266) (1 samples, 0.12%)</title><rect x="203" y="228" width="2" height="15" fill="rgb(214,207,52)"/><text x="206.00" y="238.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="203" y="244" width="2" height="15" fill="rgb(232,55,8)"/><text x="206.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="203" y="260" width="2" height="15" fill="rgb(218,22,45)"/><text x="206.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c:3259) (1 samples, 0.12%)</title><rect x="203" y="276" width="2" height="15" fill="rgb(252,170,48)"/><text x="206.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.12%)</title><rect x="203" y="292" width="2" height="15" fill="rgb(254,84,20)"/><text x="206.00" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2267) (1 samples, 0.12%)</title><rect x="205" y="228" width="1" height="15" fill="rgb(226,62,36)"/><text x="208.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.12%)</title><rect x="205" y="244" width="1" height="15" fill="rgb(254,40,44)"/><text x="208.00" y="254.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.12%)</title><rect x="205" y="260" width="1" height="15" fill="rgb(205,103,0)"/><text x="208.00" y="270.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (1 samples, 0.12%)</title><rect x="206" y="228" width="2" height="15" fill="rgb(227,222,17)"/><text x="209.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="206" y="244" width="2" height="15" fill="rgb(211,222,17)"/><text x="209.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="206" y="260" width="2" height="15" fill="rgb(208,112,26)"/><text x="209.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1628) (1 samples, 0.12%)</title><rect x="206" y="276" width="2" height="15" fill="rgb(237,11,7)"/><text x="209.00" y="286.50"></text></g><g><title>isclose (numpy/core/numeric.py:2270) (1 samples, 0.12%)</title><rect x="208" y="228" width="1" height="15" fill="rgb(210,167,50)"/><text x="211.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="208" y="244" width="1" height="15" fill="rgb(250,108,1)"/><text x="211.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="208" y="260" width="1" height="15" fill="rgb(250,146,28)"/><text x="211.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.12%)</title><rect x="208" y="276" width="1" height="15" fill="rgb(206,20,38)"/><text x="211.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.12%)</title><rect x="208" y="292" width="1" height="15" fill="rgb(244,77,1)"/><text x="211.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:969) (1 samples, 0.12%)</title><rect x="208" y="308" width="1" height="15" fill="rgb(236,222,14)"/><text x="211.00" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.12%)</title><rect x="209" y="292" width="1" height="15" fill="rgb(245,187,11)"/><text x="212.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.24%)</title><rect x="209" y="260" width="3" height="15" fill="rgb(223,4,41)"/><text x="212.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (2 samples, 0.24%)</title><rect x="209" y="276" width="3" height="15" fill="rgb(214,106,51)"/><text x="212.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.12%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(210,16,2)"/><text x="213.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.12%)</title><rect x="210" y="308" width="2" height="15" fill="rgb(223,106,16)"/><text x="213.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.12%)</title><rect x="210" y="324" width="2" height="15" fill="rgb(246,87,2)"/><text x="213.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.12%)</title><rect x="210" y="340" width="2" height="15" fill="rgb(251,198,52)"/><text x="213.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.12%)</title><rect x="210" y="356" width="2" height="15" fill="rgb(241,157,49)"/><text x="213.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="210" y="372" width="2" height="15" fill="rgb(211,53,5)"/><text x="213.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.12%)</title><rect x="210" y="388" width="2" height="15" fill="rgb(215,223,43)"/><text x="213.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.12%)</title><rect x="210" y="404" width="2" height="15" fill="rgb(209,152,12)"/><text x="213.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.12%)</title><rect x="210" y="420" width="2" height="15" fill="rgb(237,112,6)"/><text x="213.00" y="430.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (3 samples, 0.36%)</title><rect x="209" y="228" width="4" height="15" fill="rgb(241,124,20)"/><text x="212.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (3 samples, 0.36%)</title><rect x="209" y="244" width="4" height="15" fill="rgb(225,67,41)"/><text x="212.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:303) (1 samples, 0.12%)</title><rect x="212" y="260" width="1" height="15" fill="rgb(243,114,19)"/><text x="215.00" y="270.50"></text></g><g><title>npy_cache_import (npy_import.h:22) (1 samples, 0.12%)</title><rect x="212" y="276" width="1" height="15" fill="rgb(236,65,45)"/><text x="215.00" y="286.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (1 samples, 0.12%)</title><rect x="213" y="244" width="2" height="15" fill="rgb(241,67,17)"/><text x="216.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.12%)</title><rect x="213" y="260" width="2" height="15" fill="rgb(215,134,18)"/><text x="216.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.12%)</title><rect x="213" y="276" width="2" height="15" fill="rgb(254,50,7)"/><text x="216.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (1 samples, 0.12%)</title><rect x="213" y="292" width="2" height="15" fill="rgb(206,17,38)"/><text x="216.00" y="302.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.12%)</title><rect x="215" y="260" width="1" height="15" fill="rgb(228,156,13)"/><text x="218.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="215" y="276" width="1" height="15" fill="rgb(232,133,51)"/><text x="218.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="215" y="292" width="1" height="15" fill="rgb(217,222,42)"/><text x="218.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.12%)</title><rect x="215" y="308" width="1" height="15" fill="rgb(240,167,13)"/><text x="218.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.12%)</title><rect x="215" y="324" width="1" height="15" fill="rgb(224,49,26)"/><text x="218.00" y="334.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.12%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(246,47,13)"/><text x="219.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.12%)</title><rect x="218" y="276" width="1" height="15" fill="rgb(214,8,17)"/><text x="221.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.12%)</title><rect x="218" y="292" width="1" height="15" fill="rgb(252,107,49)"/><text x="221.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.12%)</title><rect x="218" y="308" width="1" height="15" fill="rgb(225,99,51)"/><text x="221.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.12%)</title><rect x="218" y="324" width="1" height="15" fill="rgb(253,145,23)"/><text x="221.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="219" y="292" width="2" height="15" fill="rgb(220,202,21)"/><text x="222.00" y="302.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.12%)</title><rect x="219" y="308" width="2" height="15" fill="rgb(223,74,16)"/><text x="222.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.12%)</title><rect x="219" y="324" width="2" height="15" fill="rgb(236,26,22)"/><text x="222.00" y="334.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.12%)</title><rect x="219" y="340" width="2" height="15" fill="rgb(247,34,30)"/><text x="222.00" y="350.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:969) (1 samples, 0.12%)</title><rect x="219" y="356" width="2" height="15" fill="rgb(253,126,1)"/><text x="222.00" y="366.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.36%)</title><rect x="218" y="260" width="4" height="15" fill="rgb(250,50,44)"/><text x="221.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="219" y="276" width="3" height="15" fill="rgb(220,1,16)"/><text x="222.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="221" y="292" width="1" height="15" fill="rgb(243,154,33)"/><text x="224.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.12%)</title><rect x="221" y="308" width="1" height="15" fill="rgb(218,90,50)"/><text x="224.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.12%)</title><rect x="221" y="324" width="1" height="15" fill="rgb(213,133,11)"/><text x="224.00" y="334.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.12%)</title><rect x="221" y="340" width="1" height="15" fill="rgb(249,82,33)"/><text x="224.00" y="350.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:249) (1 samples, 0.12%)</title><rect x="221" y="356" width="1" height="15" fill="rgb(221,151,19)"/><text x="224.00" y="366.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.12%)</title><rect x="221" y="372" width="1" height="15" fill="rgb(223,107,25)"/><text x="224.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.12%)</title><rect x="222" y="292" width="1" height="15" fill="rgb(219,187,17)"/><text x="225.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.12%)</title><rect x="222" y="308" width="1" height="15" fill="rgb(226,178,13)"/><text x="225.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src:1985) (1 samples, 0.12%)</title><rect x="222" y="324" width="1" height="15" fill="rgb(243,79,12)"/><text x="225.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src:195) (1 samples, 0.12%)</title><rect x="222" y="340" width="1" height="15" fill="rgb(214,219,8)"/><text x="225.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src:1057) (1 samples, 0.12%)</title><rect x="222" y="356" width="1" height="15" fill="rgb(216,134,20)"/><text x="225.00" y="366.50"></text></g><g><title>_mm_andnot_pd (emmintrin.h:321) (1 samples, 0.12%)</title><rect x="222" y="372" width="1" height="15" fill="rgb(226,225,36)"/><text x="225.00" y="382.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (44 samples, 5.35%)</title><rect x="162" y="164" width="63" height="15" fill="rgb(218,156,32)"/><text x="165.00" y="174.50">_get_m..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (28 samples, 3.41%)</title><rect x="185" y="180" width="40" height="15" fill="rgb(243,51,48)"/><text x="188.00" y="190.50">sta..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (16 samples, 1.95%)</title><rect x="202" y="196" width="23" height="15" fill="rgb(252,172,31)"/><text x="205.00" y="206.50">i..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 1.95%)</title><rect x="202" y="212" width="23" height="15" fill="rgb(205,131,46)"/><text x="205.00" y="222.50">a..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (8 samples, 0.97%)</title><rect x="213" y="228" width="12" height="15" fill="rgb(212,39,7)"/><text x="216.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (7 samples, 0.85%)</title><rect x="215" y="244" width="10" height="15" fill="rgb(229,137,49)"/><text x="218.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="222" y="260" width="3" height="15" fill="rgb(250,113,25)"/><text x="225.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="222" y="276" width="3" height="15" fill="rgb(236,214,22)"/><text x="225.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.12%)</title><rect x="223" y="292" width="2" height="15" fill="rgb(215,169,23)"/><text x="226.00" y="302.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.12%)</title><rect x="223" y="308" width="2" height="15" fill="rgb(233,182,15)"/><text x="226.00" y="318.50"></text></g><g><title>DOUBLE_less_equal (loops.c.src:1773) (1 samples, 0.12%)</title><rect x="223" y="324" width="2" height="15" fill="rgb(231,226,52)"/><text x="226.00" y="334.50"></text></g><g><title>run_binary_simd_less_equal_DOUBLE (simd.inc.src:299) (1 samples, 0.12%)</title><rect x="223" y="340" width="2" height="15" fill="rgb(245,50,43)"/><text x="226.00" y="350.50"></text></g><g><title>sse2_binary_less_equal_DOUBLE (simd.inc.src:936) (1 samples, 0.12%)</title><rect x="223" y="356" width="2" height="15" fill="rgb(218,23,27)"/><text x="226.00" y="366.50"></text></g><g><title>_mm_cmple_pd (emmintrin.h:351) (1 samples, 0.12%)</title><rect x="223" y="372" width="2" height="15" fill="rgb(229,137,37)"/><text x="226.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.12%)</title><rect x="226" y="244" width="2" height="15" fill="rgb(216,210,20)"/><text x="229.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="226" y="260" width="2" height="15" fill="rgb(232,74,24)"/><text x="229.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3077) (1 samples, 0.12%)</title><rect x="226" y="276" width="2" height="15" fill="rgb(248,185,10)"/><text x="229.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.24%)</title><rect x="226" y="180" width="3" height="15" fill="rgb(220,207,2)"/><text x="229.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="226" y="196" width="3" height="15" fill="rgb(207,210,13)"/><text x="229.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="226" y="212" width="3" height="15" fill="rgb(246,135,8)"/><text x="229.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.24%)</title><rect x="226" y="228" width="3" height="15" fill="rgb(213,136,33)"/><text x="229.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.12%)</title><rect x="228" y="244" width="1" height="15" fill="rgb(208,69,31)"/><text x="231.00" y="254.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1756) (1 samples, 0.12%)</title><rect x="228" y="260" width="1" height="15" fill="rgb(213,8,41)"/><text x="231.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.12%)</title><rect x="229" y="244" width="2" height="15" fill="rgb(205,143,24)"/><text x="232.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.12%)</title><rect x="229" y="260" width="2" height="15" fill="rgb(249,141,16)"/><text x="232.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="229" y="276" width="2" height="15" fill="rgb(222,168,7)"/><text x="232.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="229" y="292" width="2" height="15" fill="rgb(239,125,22)"/><text x="232.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.12%)</title><rect x="229" y="308" width="2" height="15" fill="rgb(252,52,36)"/><text x="232.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (5 samples, 0.61%)</title><rect x="225" y="164" width="7" height="15" fill="rgb(207,81,31)"/><text x="228.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (2 samples, 0.24%)</title><rect x="229" y="180" width="3" height="15" fill="rgb(228,117,33)"/><text x="232.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="229" y="196" width="3" height="15" fill="rgb(220,159,23)"/><text x="232.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="229" y="212" width="3" height="15" fill="rgb(229,71,10)"/><text x="232.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.24%)</title><rect x="229" y="228" width="3" height="15" fill="rgb(249,7,12)"/><text x="232.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.12%)</title><rect x="231" y="244" width="1" height="15" fill="rgb(221,4,2)"/><text x="234.00" y="254.50"></text></g><g><title>DOUBLE_greater_equal (loops.c.src:1773) (1 samples, 0.12%)</title><rect x="231" y="260" width="1" height="15" fill="rgb(226,113,41)"/><text x="234.00" y="270.50"></text></g><g><title>run_binary_simd_greater_equal_DOUBLE (simd.inc.src:299) (1 samples, 0.12%)</title><rect x="231" y="276" width="1" height="15" fill="rgb(228,73,1)"/><text x="234.00" y="286.50"></text></g><g><title>sse2_binary_greater_equal_DOUBLE (simd.inc.src:937) (1 samples, 0.12%)</title><rect x="231" y="292" width="1" height="15" fill="rgb(240,3,9)"/><text x="234.00" y="302.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:795) (1 samples, 0.12%)</title><rect x="231" y="308" width="1" height="15" fill="rgb(230,130,16)"/><text x="234.00" y="318.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h:931) (1 samples, 0.12%)</title><rect x="231" y="324" width="1" height="15" fill="rgb(234,67,13)"/><text x="234.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.12%)</title><rect x="233" y="196" width="2" height="15" fill="rgb(213,17,20)"/><text x="236.00" y="206.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src:3056) (1 samples, 0.12%)</title><rect x="233" y="212" width="2" height="15" fill="rgb(220,155,26)"/><text x="236.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (3 samples, 0.36%)</title><rect x="232" y="164" width="4" height="15" fill="rgb(220,197,4)"/><text x="235.00" y="174.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.24%)</title><rect x="233" y="180" width="3" height="15" fill="rgb(237,192,10)"/><text x="236.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.12%)</title><rect x="235" y="196" width="1" height="15" fill="rgb(248,156,51)"/><text x="238.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.49%)</title><rect x="238" y="180" width="5" height="15" fill="rgb(233,131,24)"/><text x="241.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.36%)</title><rect x="239" y="196" width="4" height="15" fill="rgb(244,60,18)"/><text x="242.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.24%)</title><rect x="241" y="212" width="2" height="15" fill="rgb(214,26,31)"/><text x="244.00" y="222.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (1 samples, 0.12%)</title><rect x="243" y="180" width="2" height="15" fill="rgb(254,138,15)"/><text x="246.00" y="190.50"></text></g><g><title>_calc_length (ctors.c:3269) (1 samples, 0.12%)</title><rect x="245" y="212" width="1" height="15" fill="rgb(229,72,3)"/><text x="248.00" y="222.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.24%)</title><rect x="245" y="180" width="3" height="15" fill="rgb(250,128,41)"/><text x="248.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (2 samples, 0.24%)</title><rect x="245" y="196" width="3" height="15" fill="rgb(245,107,35)"/><text x="248.00" y="206.50"></text></g><g><title>_calc_length (ctors.c:3315) (1 samples, 0.12%)</title><rect x="246" y="212" width="2" height="15" fill="rgb(233,20,36)"/><text x="249.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.12%)</title><rect x="248" y="228" width="1" height="15" fill="rgb(243,153,33)"/><text x="251.00" y="238.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:763) (1 samples, 0.12%)</title><rect x="248" y="244" width="1" height="15" fill="rgb(220,146,20)"/><text x="251.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.24%)</title><rect x="248" y="180" width="3" height="15" fill="rgb(246,226,23)"/><text x="251.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.24%)</title><rect x="248" y="196" width="3" height="15" fill="rgb(224,26,7)"/><text x="251.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.24%)</title><rect x="248" y="212" width="3" height="15" fill="rgb(254,1,27)"/><text x="251.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="249" y="228" width="2" height="15" fill="rgb(215,208,33)"/><text x="252.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.12%)</title><rect x="249" y="244" width="2" height="15" fill="rgb(214,185,2)"/><text x="252.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.12%)</title><rect x="249" y="260" width="2" height="15" fill="rgb(210,151,8)"/><text x="252.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="249" y="276" width="2" height="15" fill="rgb(244,71,19)"/><text x="252.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.12%)</title><rect x="249" y="292" width="2" height="15" fill="rgb(205,91,10)"/><text x="252.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="251" y="180" width="1" height="15" fill="rgb(239,105,21)"/><text x="254.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.12%)</title><rect x="251" y="196" width="1" height="15" fill="rgb(222,201,21)"/><text x="254.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (12 samples, 1.46%)</title><rect x="236" y="164" width="18" height="15" fill="rgb(231,54,24)"/><text x="239.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.12%)</title><rect x="252" y="180" width="2" height="15" fill="rgb(246,133,14)"/><text x="255.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="252" y="196" width="2" height="15" fill="rgb(210,183,43)"/><text x="255.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="254" y="180" width="1" height="15" fill="rgb(238,57,18)"/><text x="257.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.12%)</title><rect x="255" y="180" width="1" height="15" fill="rgb(216,114,46)"/><text x="258.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.12%)</title><rect x="255" y="196" width="1" height="15" fill="rgb(251,85,38)"/><text x="258.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:54) (158 samples, 19.22%)</title><rect x="31" y="52" width="227" height="15" fill="rgb(251,15,11)"/><text x="34.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegres..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:53) (158 samples, 19.22%)</title><rect x="31" y="68" width="227" height="15" fill="rgb(234,225,33)"/><text x="34.00" y="78.50">profile_skl (bench_AdaBoostReg..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:37) (158 samples, 19.22%)</title><rect x="31" y="84" width="227" height="15" fill="rgb(254,208,42)"/><text x="34.00" y="94.50">setup_profile (bench_AdaBoostR..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:31) (158 samples, 19.22%)</title><rect x="31" y="100" width="227" height="15" fill="rgb(252,224,38)"/><text x="34.00" y="110.50">profile (bench_AdaBoostRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (158 samples, 19.22%)</title><rect x="31" y="116" width="227" height="15" fill="rgb(226,201,14)"/><text x="34.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (158 samples, 19.22%)</title><rect x="31" y="132" width="227" height="15" fill="rgb(225,173,13)"/><text x="34.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (155 samples, 18.86%)</title><rect x="35" y="148" width="223" height="15" fill="rgb(240,149,6)"/><text x="38.00" y="158.50">predict (sklearn/ensemble/_we..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (3 samples, 0.36%)</title><rect x="254" y="164" width="4" height="15" fill="rgb(241,37,11)"/><text x="257.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="256" y="180" width="2" height="15" fill="rgb(212,90,33)"/><text x="259.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.12%)</title><rect x="256" y="196" width="2" height="15" fill="rgb(210,27,24)"/><text x="259.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.49%)</title><rect x="261" y="180" width="5" height="15" fill="rgb(207,10,37)"/><text x="264.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.12%)</title><rect x="265" y="196" width="1" height="15" fill="rgb(211,216,3)"/><text x="268.00" y="206.50"></text></g><g><title>recursive_tolist (convert.c:100) (1 samples, 0.12%)</title><rect x="281" y="244" width="1" height="15" fill="rgb(236,100,54)"/><text x="284.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (5 samples, 0.61%)</title><rect x="282" y="260" width="7" height="15" fill="rgb(219,200,47)"/><text x="285.00" y="270.50"></text></g><g><title>0x7f197ab51800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="288" y="276" width="1" height="15" fill="rgb(228,194,28)"/><text x="291.00" y="286.50"></text></g><g><title>recursive_tolist (convert.c:112) (3 samples, 0.36%)</title><rect x="289" y="260" width="5" height="15" fill="rgb(234,179,8)"/><text x="292.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:83) (2 samples, 0.24%)</title><rect x="294" y="260" width="3" height="15" fill="rgb(241,153,54)"/><text x="297.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:102) (12 samples, 1.46%)</title><rect x="282" y="244" width="17" height="15" fill="rgb(230,100,4)"/><text x="285.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:89) (2 samples, 0.24%)</title><rect x="297" y="260" width="2" height="15" fill="rgb(235,221,23)"/><text x="300.00" y="270.50"></text></g><g><title>PyArray_GETITEM (ndarraytypes.h:1558) (2 samples, 0.24%)</title><rect x="297" y="276" width="2" height="15" fill="rgb(244,54,25)"/><text x="300.00" y="286.50"></text></g><g><title>PyArray_ToList (convert.c:120) (14 samples, 1.70%)</title><rect x="281" y="228" width="20" height="15" fill="rgb(227,58,0)"/><text x="284.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:106) (1 samples, 0.12%)</title><rect x="299" y="244" width="2" height="15" fill="rgb(210,76,22)"/><text x="302.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (15 samples, 1.82%)</title><rect x="281" y="212" width="21" height="15" fill="rgb(223,190,41)"/><text x="284.00" y="222.50"></text></g><g><title>array_ravel (methods.c:2438) (1 samples, 0.12%)</title><rect x="301" y="228" width="1" height="15" fill="rgb(245,124,41)"/><text x="304.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.12%)</title><rect x="302" y="244" width="2" height="15" fill="rgb(247,83,35)"/><text x="305.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.12%)</title><rect x="302" y="260" width="2" height="15" fill="rgb(219,53,12)"/><text x="305.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.12%)</title><rect x="302" y="276" width="2" height="15" fill="rgb(210,69,13)"/><text x="305.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.12%)</title><rect x="304" y="276" width="1" height="15" fill="rgb(211,229,45)"/><text x="307.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:429) (1 samples, 0.12%)</title><rect x="305" y="308" width="2" height="15" fill="rgb(226,47,51)"/><text x="308.00" y="318.50"></text></g><g><title>0x7f197ab513f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="305" y="324" width="2" height="15" fill="rgb(254,27,45)"/><text x="308.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (1 samples, 0.12%)</title><rect x="307" y="308" width="1" height="15" fill="rgb(205,55,2)"/><text x="310.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (2 samples, 0.24%)</title><rect x="310" y="324" width="2" height="15" fill="rgb(231,46,53)"/><text x="313.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (7 samples, 0.85%)</title><rect x="312" y="324" width="10" height="15" fill="rgb(229,2,25)"/><text x="315.00" y="334.50"></text></g><g><title>0x7f197ab510a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="321" y="340" width="1" height="15" fill="rgb(238,71,23)"/><text x="324.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:145) (1 samples, 0.12%)</title><rect x="322" y="324" width="2" height="15" fill="rgb(205,146,51)"/><text x="325.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (1 samples, 0.12%)</title><rect x="324" y="324" width="1" height="15" fill="rgb(213,33,0)"/><text x="327.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:211) (1 samples, 0.12%)</title><rect x="325" y="324" width="2" height="15" fill="rgb(225,191,36)"/><text x="328.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (5 samples, 0.61%)</title><rect x="327" y="340" width="7" height="15" fill="rgb(230,60,30)"/><text x="330.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (5 samples, 0.61%)</title><rect x="334" y="340" width="7" height="15" fill="rgb(252,181,4)"/><text x="337.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (4 samples, 0.49%)</title><rect x="341" y="340" width="6" height="15" fill="rgb(249,153,46)"/><text x="344.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (1 samples, 0.12%)</title><rect x="345" y="356" width="2" height="15" fill="rgb(227,60,46)"/><text x="348.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.12%)</title><rect x="347" y="356" width="1" height="15" fill="rgb(210,59,7)"/><text x="350.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (19 samples, 2.31%)</title><rect x="327" y="324" width="27" height="15" fill="rgb(254,178,46)"/><text x="330.00" y="334.50">P..</text></g><g><title>_array_find_python_scalar_type (common.c:53) (5 samples, 0.61%)</title><rect x="347" y="340" width="7" height="15" fill="rgb(228,59,21)"/><text x="350.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (4 samples, 0.49%)</title><rect x="348" y="356" width="6" height="15" fill="rgb(243,19,47)"/><text x="351.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.12%)</title><rect x="354" y="340" width="1" height="15" fill="rgb(231,125,34)"/><text x="357.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (3 samples, 0.36%)</title><rect x="355" y="340" width="5" height="15" fill="rgb(232,22,3)"/><text x="358.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.12%)</title><rect x="360" y="340" width="1" height="15" fill="rgb(247,140,19)"/><text x="363.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.12%)</title><rect x="360" y="356" width="1" height="15" fill="rgb(232,163,17)"/><text x="363.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (6 samples, 0.73%)</title><rect x="354" y="324" width="9" height="15" fill="rgb(220,16,5)"/><text x="357.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1386) (1 samples, 0.12%)</title><rect x="361" y="340" width="2" height="15" fill="rgb(226,31,43)"/><text x="364.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:522) (2 samples, 0.24%)</title><rect x="363" y="324" width="3" height="15" fill="rgb(232,87,34)"/><text x="366.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (2 samples, 0.24%)</title><rect x="366" y="324" width="2" height="15" fill="rgb(235,111,19)"/><text x="369.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (45 samples, 5.47%)</title><rect x="305" y="276" width="65" height="15" fill="rgb(224,210,5)"/><text x="308.00" y="286.50">PyArray..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (45 samples, 5.47%)</title><rect x="305" y="292" width="65" height="15" fill="rgb(247,202,11)"/><text x="308.00" y="302.50">PyArray..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (43 samples, 5.23%)</title><rect x="308" y="308" width="62" height="15" fill="rgb(231,87,4)"/><text x="311.00" y="318.50">PyArra..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:537) (1 samples, 0.12%)</title><rect x="368" y="324" width="2" height="15" fill="rgb(211,26,36)"/><text x="371.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:668) (1 samples, 0.12%)</title><rect x="370" y="292" width="1" height="15" fill="rgb(213,92,48)"/><text x="373.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:878) (1 samples, 0.12%)</title><rect x="371" y="292" width="2" height="15" fill="rgb(247,100,25)"/><text x="374.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:883) (5 samples, 0.61%)</title><rect x="373" y="292" width="7" height="15" fill="rgb(221,168,41)"/><text x="376.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:668) (2 samples, 0.24%)</title><rect x="380" y="308" width="3" height="15" fill="rgb(220,115,6)"/><text x="383.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:674) (1 samples, 0.12%)</title><rect x="383" y="308" width="1" height="15" fill="rgb(210,66,9)"/><text x="386.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:679) (3 samples, 0.36%)</title><rect x="384" y="308" width="4" height="15" fill="rgb(240,61,39)"/><text x="387.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (1 samples, 0.12%)</title><rect x="388" y="308" width="2" height="15" fill="rgb(206,105,6)"/><text x="391.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:699) (7 samples, 0.85%)</title><rect x="390" y="308" width="10" height="15" fill="rgb(240,55,26)"/><text x="393.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:703) (4 samples, 0.49%)</title><rect x="400" y="308" width="6" height="15" fill="rgb(213,44,3)"/><text x="403.00" y="318.50"></text></g><g><title>0x7f197ab51a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="404" y="324" width="2" height="15" fill="rgb(240,224,30)"/><text x="407.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:884) (19 samples, 2.31%)</title><rect x="380" y="292" width="27" height="15" fill="rgb(247,97,38)"/><text x="383.00" y="302.50">d..</text></g><g><title>discover_dimensions (ctors.c:912) (1 samples, 0.12%)</title><rect x="406" y="308" width="1" height="15" fill="rgb(214,64,22)"/><text x="409.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (74 samples, 9.00%)</title><rect x="304" y="260" width="106" height="15" fill="rgb(254,90,3)"/><text x="307.00" y="270.50">PyArray_From..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (28 samples, 3.41%)</title><rect x="370" y="276" width="40" height="15" fill="rgb(251,63,11)"/><text x="373.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c:892) (2 samples, 0.24%)</title><rect x="407" y="292" width="3" height="15" fill="rgb(241,186,32)"/><text x="410.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (6 samples, 0.73%)</title><rect x="410" y="292" width="9" height="15" fill="rgb(251,84,4)"/><text x="413.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:549) (1 samples, 0.12%)</title><rect x="419" y="292" width="1" height="15" fill="rgb(214,30,0)"/><text x="422.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (2 samples, 0.24%)</title><rect x="420" y="324" width="3" height="15" fill="rgb(210,32,51)"/><text x="423.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (6 samples, 0.73%)</title><rect x="423" y="324" width="9" height="15" fill="rgb(228,21,47)"/><text x="426.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (7 samples, 0.85%)</title><rect x="432" y="340" width="10" height="15" fill="rgb(251,228,46)"/><text x="435.00" y="350.50"></text></g><g><title>0x7f197ab50740 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="440" y="356" width="2" height="15" fill="rgb(220,52,38)"/><text x="443.00" y="366.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (18 samples, 2.19%)</title><rect x="432" y="324" width="25" height="15" fill="rgb(254,184,41)"/><text x="435.00" y="334.50">L..</text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (11 samples, 1.34%)</title><rect x="442" y="340" width="15" height="15" fill="rgb(208,121,51)"/><text x="445.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (6 samples, 0.73%)</title><rect x="457" y="324" width="9" height="15" fill="rgb(231,200,30)"/><text x="460.00" y="334.50"></text></g><g><title>0x7f197ab507c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="465" y="340" width="1" height="15" fill="rgb(206,1,27)"/><text x="468.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (3 samples, 0.36%)</title><rect x="466" y="324" width="4" height="15" fill="rgb(213,131,47)"/><text x="469.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (118 samples, 14.36%)</title><rect x="302" y="228" width="170" height="15" fill="rgb(206,73,43)"/><text x="305.00" y="238.50">array_subscript (mappi..</text></g><g><title>prepare_index (mapping.c:516) (117 samples, 14.23%)</title><rect x="304" y="244" width="168" height="15" fill="rgb(236,210,43)"/><text x="307.00" y="254.50">prepare_index (mappin..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (43 samples, 5.23%)</title><rect x="410" y="260" width="62" height="15" fill="rgb(229,73,12)"/><text x="413.00" y="270.50">PyArra..</text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (43 samples, 5.23%)</title><rect x="410" y="276" width="62" height="15" fill="rgb(220,82,13)"/><text x="413.00" y="286.50">PyArra..</text></g><g><title>setArrayFromSequence (ctors.c:550) (36 samples, 4.38%)</title><rect x="420" y="292" width="52" height="15" fill="rgb(247,185,16)"/><text x="423.00" y="302.50">setAr..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (36 samples, 4.38%)</title><rect x="420" y="308" width="52" height="15" fill="rgb(227,38,50)"/><text x="423.00" y="318.50">PyArr..</text></g><g><title>LONG_setitem (arraytypes.c.src:242) (1 samples, 0.12%)</title><rect x="470" y="324" width="2" height="15" fill="rgb(249,192,12)"/><text x="473.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.12%)</title><rect x="472" y="228" width="1" height="15" fill="rgb(213,97,23)"/><text x="475.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1506) (1 samples, 0.12%)</title><rect x="473" y="244" width="2" height="15" fill="rgb(241,37,51)"/><text x="476.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1540) (1 samples, 0.12%)</title><rect x="475" y="244" width="1" height="15" fill="rgb(217,132,29)"/><text x="478.00" y="254.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="475" y="260" width="1" height="15" fill="rgb(235,59,9)"/><text x="478.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.12%)</title><rect x="476" y="244" width="1" height="15" fill="rgb(222,0,33)"/><text x="479.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (123 samples, 14.96%)</title><rect x="302" y="212" width="177" height="15" fill="rgb(222,124,44)"/><text x="305.00" y="222.50">_run (mlprodict/onnxrt/..</text></g><g><title>array_subscript (mapping.c:1676) (4 samples, 0.49%)</title><rect x="473" y="228" width="6" height="15" fill="rgb(215,158,20)"/><text x="476.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="477" y="244" width="2" height="15" fill="rgb(207,76,5)"/><text x="480.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.12%)</title><rect x="479" y="212" width="1" height="15" fill="rgb(216,215,44)"/><text x="482.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.12%)</title><rect x="479" y="228" width="1" height="15" fill="rgb(205,4,23)"/><text x="482.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.12%)</title><rect x="479" y="244" width="1" height="15" fill="rgb(216,111,50)"/><text x="482.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.12%)</title><rect x="479" y="260" width="1" height="15" fill="rgb(217,124,31)"/><text x="482.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.12%)</title><rect x="479" y="276" width="1" height="15" fill="rgb(252,0,44)"/><text x="482.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.12%)</title><rect x="479" y="292" width="1" height="15" fill="rgb(207,27,21)"/><text x="482.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.12%)</title><rect x="480" y="276" width="2" height="15" fill="rgb(220,122,35)"/><text x="483.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.12%)</title><rect x="480" y="292" width="2" height="15" fill="rgb(207,151,10)"/><text x="483.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.12%)</title><rect x="480" y="308" width="2" height="15" fill="rgb(251,109,53)"/><text x="483.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.24%)</title><rect x="480" y="260" width="3" height="15" fill="rgb(220,23,7)"/><text x="483.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.12%)</title><rect x="482" y="276" width="1" height="15" fill="rgb(208,208,15)"/><text x="485.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (1 samples, 0.12%)</title><rect x="482" y="292" width="1" height="15" fill="rgb(249,92,52)"/><text x="485.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.36%)</title><rect x="480" y="212" width="5" height="15" fill="rgb(214,70,43)"/><text x="483.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.36%)</title><rect x="480" y="228" width="5" height="15" fill="rgb(215,42,16)"/><text x="483.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.36%)</title><rect x="480" y="244" width="5" height="15" fill="rgb(243,32,44)"/><text x="483.00" y="254.50"></text></g><g><title>PyArray_CopyInto (ctors.c:2980) (1 samples, 0.12%)</title><rect x="483" y="260" width="2" height="15" fill="rgb(212,22,40)"/><text x="486.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:38) (1 samples, 0.12%)</title><rect x="485" y="212" width="1" height="15" fill="rgb(254,148,27)"/><text x="488.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.12%)</title><rect x="486" y="228" width="2" height="15" fill="rgb(213,36,26)"/><text x="489.00" y="238.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5531) (1 samples, 0.12%)</title><rect x="488" y="340" width="1" height="15" fill="rgb(216,106,22)"/><text x="491.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.12%)</title><rect x="488" y="356" width="1" height="15" fill="rgb(246,43,22)"/><text x="491.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.12%)</title><rect x="488" y="372" width="1" height="15" fill="rgb(244,155,39)"/><text x="491.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.12%)</title><rect x="488" y="388" width="1" height="15" fill="rgb(217,99,8)"/><text x="491.00" y="398.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3784) (1 samples, 0.12%)</title><rect x="489" y="372" width="1" height="15" fill="rgb(240,77,4)"/><text x="492.00" y="382.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.12%)</title><rect x="489" y="388" width="1" height="15" fill="rgb(231,44,1)"/><text x="492.00" y="398.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3922) (1 samples, 0.12%)</title><rect x="490" y="372" width="2" height="15" fill="rgb(240,115,45)"/><text x="493.00" y="382.50"></text></g><g><title>0x7f197b94ed97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="490" y="388" width="2" height="15" fill="rgb(228,114,10)"/><text x="493.00" y="398.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3925) (1 samples, 0.12%)</title><rect x="492" y="372" width="1" height="15" fill="rgb(207,142,13)"/><text x="495.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (6 samples, 0.73%)</title><rect x="486" y="212" width="9" height="15" fill="rgb(249,20,46)"/><text x="489.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (5 samples, 0.61%)</title><rect x="488" y="228" width="7" height="15" fill="rgb(244,73,26)"/><text x="491.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.61%)</title><rect x="488" y="244" width="7" height="15" fill="rgb(224,227,25)"/><text x="491.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (5 samples, 0.61%)</title><rect x="488" y="260" width="7" height="15" fill="rgb(251,145,46)"/><text x="491.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.61%)</title><rect x="488" y="276" width="7" height="15" fill="rgb(233,86,22)"/><text x="491.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (5 samples, 0.61%)</title><rect x="488" y="292" width="7" height="15" fill="rgb(239,207,20)"/><text x="491.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (5 samples, 0.61%)</title><rect x="488" y="308" width="7" height="15" fill="rgb(234,182,19)"/><text x="491.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (5 samples, 0.61%)</title><rect x="488" y="324" width="7" height="15" fill="rgb(253,58,1)"/><text x="491.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (4 samples, 0.49%)</title><rect x="489" y="340" width="6" height="15" fill="rgb(212,163,32)"/><text x="492.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (4 samples, 0.49%)</title><rect x="489" y="356" width="6" height="15" fill="rgb(213,126,10)"/><text x="492.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (1 samples, 0.12%)</title><rect x="493" y="372" width="2" height="15" fill="rgb(217,221,14)"/><text x="496.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.12%)</title><rect x="493" y="388" width="2" height="15" fill="rgb(216,77,38)"/><text x="496.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (1 samples, 0.12%)</title><rect x="495" y="212" width="1" height="15" fill="rgb(252,183,50)"/><text x="498.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="495" y="228" width="1" height="15" fill="rgb(242,83,41)"/><text x="498.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="495" y="244" width="1" height="15" fill="rgb(247,51,14)"/><text x="498.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.12%)</title><rect x="495" y="260" width="1" height="15" fill="rgb(247,136,31)"/><text x="498.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.12%)</title><rect x="495" y="276" width="1" height="15" fill="rgb(220,185,33)"/><text x="498.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.12%)</title><rect x="495" y="292" width="1" height="15" fill="rgb(221,204,2)"/><text x="498.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.12%)</title><rect x="495" y="308" width="1" height="15" fill="rgb(239,210,40)"/><text x="498.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.12%)</title><rect x="495" y="324" width="1" height="15" fill="rgb(213,170,39)"/><text x="498.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.12%)</title><rect x="495" y="340" width="1" height="15" fill="rgb(223,59,50)"/><text x="498.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.12%)</title><rect x="495" y="356" width="1" height="15" fill="rgb(211,184,2)"/><text x="498.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.12%)</title><rect x="495" y="372" width="1" height="15" fill="rgb(215,101,38)"/><text x="498.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (1 samples, 0.12%)</title><rect x="496" y="212" width="2" height="15" fill="rgb(232,91,6)"/><text x="499.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (1 samples, 0.12%)</title><rect x="496" y="228" width="2" height="15" fill="rgb(252,172,23)"/><text x="499.00" y="238.50"></text></g><g><title>_swapaxes_dispatcher (numpy/core/fromnumeric.py:549) (1 samples, 0.12%)</title><rect x="496" y="244" width="2" height="15" fill="rgb(205,50,54)"/><text x="499.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:937) (1 samples, 0.12%)</title><rect x="499" y="308" width="1" height="15" fill="rgb(206,104,37)"/><text x="502.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="499" y="324" width="1" height="15" fill="rgb(211,15,39)"/><text x="502.00" y="334.50"></text></g><g><title>0x7f197b91fab0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="499" y="340" width="1" height="15" fill="rgb(239,127,14)"/><text x="502.00" y="350.50"></text></g><g><title>0x7f197b9138a0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="499" y="356" width="1" height="15" fill="rgb(232,204,50)"/><text x="502.00" y="366.50"></text></g><g><title>0x7f197b8f9f50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="499" y="372" width="1" height="15" fill="rgb(233,64,36)"/><text x="502.00" y="382.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (2 samples, 0.24%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(237,78,28)"/><text x="502.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (2 samples, 0.24%)</title><rect x="499" y="276" width="3" height="15" fill="rgb(252,46,41)"/><text x="502.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (2 samples, 0.24%)</title><rect x="499" y="292" width="3" height="15" fill="rgb(221,168,33)"/><text x="502.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.12%)</title><rect x="500" y="308" width="2" height="15" fill="rgb(216,59,13)"/><text x="503.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.12%)</title><rect x="500" y="324" width="2" height="15" fill="rgb(247,225,53)"/><text x="503.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.12%)</title><rect x="500" y="340" width="2" height="15" fill="rgb(236,117,34)"/><text x="503.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (3 samples, 0.36%)</title><rect x="499" y="244" width="4" height="15" fill="rgb(248,139,41)"/><text x="502.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:307) (1 samples, 0.12%)</title><rect x="502" y="260" width="1" height="15" fill="rgb(209,94,15)"/><text x="505.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="506" y="388" width="2" height="15" fill="rgb(206,81,42)"/><text x="509.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (3 samples, 0.36%)</title><rect x="505" y="308" width="4" height="15" fill="rgb(226,148,30)"/><text x="508.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2150) (3 samples, 0.36%)</title><rect x="505" y="324" width="4" height="15" fill="rgb(253,223,52)"/><text x="508.00" y="334.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (2 samples, 0.24%)</title><rect x="506" y="340" width="3" height="15" fill="rgb(250,16,33)"/><text x="509.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.24%)</title><rect x="506" y="356" width="3" height="15" fill="rgb(228,182,50)"/><text x="509.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.24%)</title><rect x="506" y="372" width="3" height="15" fill="rgb(212,163,7)"/><text x="509.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="508" y="388" width="1" height="15" fill="rgb(235,223,49)"/><text x="511.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.12%)</title><rect x="509" y="340" width="1" height="15" fill="rgb(237,187,30)"/><text x="512.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.12%)</title><rect x="509" y="356" width="1" height="15" fill="rgb(215,171,47)"/><text x="512.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.12%)</title><rect x="509" y="372" width="1" height="15" fill="rgb(205,226,40)"/><text x="512.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="509" y="388" width="1" height="15" fill="rgb(223,205,5)"/><text x="512.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:709) (2 samples, 0.24%)</title><rect x="509" y="308" width="3" height="15" fill="rgb(227,5,39)"/><text x="512.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.24%)</title><rect x="509" y="324" width="3" height="15" fill="rgb(212,211,12)"/><text x="512.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.12%)</title><rect x="510" y="340" width="2" height="15" fill="rgb(223,4,27)"/><text x="513.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.12%)</title><rect x="510" y="356" width="2" height="15" fill="rgb(206,29,0)"/><text x="513.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:176) (1 samples, 0.12%)</title><rect x="510" y="372" width="2" height="15" fill="rgb(230,131,48)"/><text x="513.00" y="382.50"></text></g><g><title>PyArray_Choose (item_selection.c:757) (2 samples, 0.24%)</title><rect x="512" y="308" width="3" height="15" fill="rgb(246,148,49)"/><text x="515.00" y="318.50"></text></g><g><title>PyArray_Choose (item_selection.c:786) (3 samples, 0.36%)</title><rect x="515" y="308" width="4" height="15" fill="rgb(225,65,37)"/><text x="518.00" y="318.50"></text></g><g><title>0x7f197b94edc3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="529" y="324" width="2" height="15" fill="rgb(241,141,17)"/><text x="532.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 2.43%)</title><rect x="503" y="244" width="29" height="15" fill="rgb(240,16,35)"/><text x="506.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (20 samples, 2.43%)</title><rect x="503" y="260" width="29" height="15" fill="rgb(206,208,15)"/><text x="506.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (20 samples, 2.43%)</title><rect x="503" y="276" width="29" height="15" fill="rgb(222,134,20)"/><text x="506.00" y="286.50">_w..</text></g><g><title>array_choose (methods.c:1224) (19 samples, 2.31%)</title><rect x="505" y="292" width="27" height="15" fill="rgb(239,129,7)"/><text x="508.00" y="302.50">a..</text></g><g><title>PyArray_Choose (item_selection.c:788) (9 samples, 1.09%)</title><rect x="519" y="308" width="13" height="15" fill="rgb(242,127,10)"/><text x="522.00" y="318.50"></text></g><g><title>0x7f197b94edcb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="531" y="324" width="1" height="15" fill="rgb(223,215,12)"/><text x="534.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (25 samples, 3.04%)</title><rect x="498" y="212" width="35" height="15" fill="rgb(235,214,10)"/><text x="501.00" y="222.50">_r..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (25 samples, 3.04%)</title><rect x="498" y="228" width="35" height="15" fill="rgb(245,199,8)"/><text x="501.00" y="238.50">ch..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.12%)</title><rect x="532" y="244" width="1" height="15" fill="rgb(233,225,49)"/><text x="535.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.12%)</title><rect x="532" y="260" width="1" height="15" fill="rgb(240,94,11)"/><text x="535.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (4 samples, 0.49%)</title><rect x="533" y="212" width="6" height="15" fill="rgb(243,15,51)"/><text x="536.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="538" y="228" width="1" height="15" fill="rgb(231,40,24)"/><text x="541.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="538" y="244" width="1" height="15" fill="rgb(243,186,34)"/><text x="541.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.12%)</title><rect x="538" y="260" width="1" height="15" fill="rgb(243,113,35)"/><text x="541.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.12%)</title><rect x="538" y="276" width="1" height="15" fill="rgb(249,152,15)"/><text x="541.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:344) (1 samples, 0.12%)</title><rect x="538" y="292" width="1" height="15" fill="rgb(232,101,38)"/><text x="541.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.12%)</title><rect x="539" y="212" width="2" height="15" fill="rgb(250,69,27)"/><text x="542.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.12%)</title><rect x="539" y="228" width="2" height="15" fill="rgb(227,133,52)"/><text x="542.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.12%)</title><rect x="539" y="244" width="2" height="15" fill="rgb(228,30,46)"/><text x="542.00" y="254.50"></text></g><g><title>array_length (mapping.c:60) (1 samples, 0.12%)</title><rect x="539" y="260" width="2" height="15" fill="rgb(239,109,26)"/><text x="542.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.12%)</title><rect x="541" y="244" width="1" height="15" fill="rgb(233,164,45)"/><text x="544.00" y="254.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:4) (1 samples, 0.12%)</title><rect x="544" y="260" width="1" height="15" fill="rgb(235,33,30)"/><text x="547.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1022) (1 samples, 0.12%)</title><rect x="545" y="356" width="1" height="15" fill="rgb(214,63,28)"/><text x="548.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1027) (1 samples, 0.12%)</title><rect x="546" y="356" width="2" height="15" fill="rgb(220,153,48)"/><text x="549.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.12%)</title><rect x="548" y="356" width="1" height="15" fill="rgb(251,104,10)"/><text x="551.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1077) (1 samples, 0.12%)</title><rect x="549" y="356" width="2" height="15" fill="rgb(239,154,54)"/><text x="552.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:292) (1 samples, 0.12%)</title><rect x="551" y="372" width="1" height="15" fill="rgb(241,7,48)"/><text x="554.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:297) (1 samples, 0.12%)</title><rect x="552" y="372" width="2" height="15" fill="rgb(235,140,30)"/><text x="555.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:332) (2 samples, 0.24%)</title><rect x="554" y="372" width="2" height="15" fill="rgb(211,225,12)"/><text x="557.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (2 samples, 0.24%)</title><rect x="554" y="388" width="2" height="15" fill="rgb(222,213,15)"/><text x="557.00" y="398.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:34) (11 samples, 1.34%)</title><rect x="542" y="244" width="16" height="15" fill="rgb(213,62,16)"/><text x="545.00" y="254.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (9 samples, 1.09%)</title><rect x="545" y="260" width="13" height="15" fill="rgb(215,58,23)"/><text x="548.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.09%)</title><rect x="545" y="276" width="13" height="15" fill="rgb(248,210,41)"/><text x="548.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (9 samples, 1.09%)</title><rect x="545" y="292" width="13" height="15" fill="rgb(216,190,34)"/><text x="548.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (9 samples, 1.09%)</title><rect x="545" y="308" width="13" height="15" fill="rgb(216,40,14)"/><text x="548.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (9 samples, 1.09%)</title><rect x="545" y="324" width="13" height="15" fill="rgb(213,103,33)"/><text x="548.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (9 samples, 1.09%)</title><rect x="545" y="340" width="13" height="15" fill="rgb(241,173,11)"/><text x="548.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (5 samples, 0.61%)</title><rect x="551" y="356" width="7" height="15" fill="rgb(237,0,11)"/><text x="554.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:334) (1 samples, 0.12%)</title><rect x="556" y="372" width="2" height="15" fill="rgb(254,200,50)"/><text x="559.00" y="382.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:4) (1 samples, 0.12%)</title><rect x="559" y="260" width="2" height="15" fill="rgb(227,43,43)"/><text x="562.00" y="270.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (4 samples, 0.49%)</title><rect x="561" y="372" width="5" height="15" fill="rgb(225,30,19)"/><text x="564.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (2 samples, 0.24%)</title><rect x="564" y="388" width="2" height="15" fill="rgb(206,130,29)"/><text x="567.00" y="398.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (6 samples, 0.73%)</title><rect x="561" y="356" width="8" height="15" fill="rgb(215,45,9)"/><text x="564.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:237) (2 samples, 0.24%)</title><rect x="566" y="372" width="3" height="15" fill="rgb(227,207,34)"/><text x="569.00" y="382.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (8 samples, 0.97%)</title><rect x="561" y="260" width="11" height="15" fill="rgb(225,35,23)"/><text x="564.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 0.97%)</title><rect x="561" y="276" width="11" height="15" fill="rgb(253,16,34)"/><text x="564.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (8 samples, 0.97%)</title><rect x="561" y="292" width="11" height="15" fill="rgb(208,72,1)"/><text x="564.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (8 samples, 0.97%)</title><rect x="561" y="308" width="11" height="15" fill="rgb(252,124,24)"/><text x="564.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (8 samples, 0.97%)</title><rect x="561" y="324" width="11" height="15" fill="rgb(230,50,0)"/><text x="564.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (8 samples, 0.97%)</title><rect x="561" y="340" width="11" height="15" fill="rgb(235,173,50)"/><text x="564.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (2 samples, 0.24%)</title><rect x="569" y="356" width="3" height="15" fill="rgb(247,91,27)"/><text x="572.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="572" y="260" width="2" height="15" fill="rgb(217,70,39)"/><text x="575.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="572" y="276" width="2" height="15" fill="rgb(240,92,40)"/><text x="575.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="572" y="292" width="2" height="15" fill="rgb(242,149,43)"/><text x="575.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.12%)</title><rect x="574" y="276" width="1" height="15" fill="rgb(221,42,54)"/><text x="577.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.12%)</title><rect x="574" y="292" width="1" height="15" fill="rgb(228,121,13)"/><text x="577.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="574" y="308" width="1" height="15" fill="rgb(232,199,18)"/><text x="577.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.12%)</title><rect x="574" y="324" width="1" height="15" fill="rgb(233,112,14)"/><text x="577.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.12%)</title><rect x="575" y="340" width="2" height="15" fill="rgb(217,151,11)"/><text x="578.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.12%)</title><rect x="577" y="356" width="1" height="15" fill="rgb(220,78,32)"/><text x="580.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1656) (5 samples, 0.61%)</title><rect x="574" y="260" width="7" height="15" fill="rgb(226,156,6)"/><text x="577.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (4 samples, 0.49%)</title><rect x="575" y="276" width="6" height="15" fill="rgb(216,176,13)"/><text x="578.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (4 samples, 0.49%)</title><rect x="575" y="292" width="6" height="15" fill="rgb(239,49,35)"/><text x="578.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (4 samples, 0.49%)</title><rect x="575" y="308" width="6" height="15" fill="rgb(252,37,41)"/><text x="578.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.49%)</title><rect x="575" y="324" width="6" height="15" fill="rgb(230,209,50)"/><text x="578.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.36%)</title><rect x="577" y="340" width="4" height="15" fill="rgb(240,0,5)"/><text x="580.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.24%)</title><rect x="578" y="356" width="3" height="15" fill="rgb(238,106,4)"/><text x="581.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2493) (1 samples, 0.12%)</title><rect x="581" y="276" width="1" height="15" fill="rgb(233,99,21)"/><text x="584.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="581" y="292" width="1" height="15" fill="rgb(208,84,42)"/><text x="584.00" y="302.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.12%)</title><rect x="582" y="292" width="2" height="15" fill="rgb(242,110,19)"/><text x="585.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (3 samples, 0.36%)</title><rect x="581" y="260" width="4" height="15" fill="rgb(214,131,36)"/><text x="584.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (2 samples, 0.24%)</title><rect x="582" y="276" width="3" height="15" fill="rgb(224,42,30)"/><text x="585.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.12%)</title><rect x="584" y="292" width="1" height="15" fill="rgb(252,94,14)"/><text x="587.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.12%)</title><rect x="585" y="276" width="2" height="15" fill="rgb(230,217,33)"/><text x="588.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (2 samples, 0.24%)</title><rect x="587" y="276" width="2" height="15" fill="rgb(207,212,21)"/><text x="590.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (3 samples, 0.36%)</title><rect x="589" y="276" width="5" height="15" fill="rgb(210,104,49)"/><text x="592.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1676) (7 samples, 0.85%)</title><rect x="585" y="260" width="10" height="15" fill="rgb(231,180,49)"/><text x="588.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.12%)</title><rect x="594" y="276" width="1" height="15" fill="rgb(239,65,27)"/><text x="597.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.12%)</title><rect x="595" y="260" width="2" height="15" fill="rgb(228,90,30)"/><text x="598.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.12%)</title><rect x="595" y="276" width="2" height="15" fill="rgb(212,84,22)"/><text x="598.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.12%)</title><rect x="595" y="292" width="2" height="15" fill="rgb(248,21,32)"/><text x="598.00" y="302.50"></text></g><g><title>0x7f197b92ef71 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="595" y="308" width="2" height="15" fill="rgb(211,223,42)"/><text x="598.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.12%)</title><rect x="597" y="292" width="1" height="15" fill="rgb(215,8,32)"/><text x="600.00" y="302.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (29 samples, 3.53%)</title><rect x="558" y="244" width="42" height="15" fill="rgb(231,155,21)"/><text x="561.00" y="254.50">top..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="597" y="260" width="3" height="15" fill="rgb(239,31,25)"/><text x="600.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="597" y="276" width="3" height="15" fill="rgb(227,24,36)"/><text x="600.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.12%)</title><rect x="598" y="292" width="2" height="15" fill="rgb(211,41,30)"/><text x="601.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.12%)</title><rect x="598" y="308" width="2" height="15" fill="rgb(227,160,46)"/><text x="601.00" y="318.50"></text></g><g><title>FLOAT_negative (loops.c.src:1999) (1 samples, 0.12%)</title><rect x="598" y="324" width="2" height="15" fill="rgb(215,208,54)"/><text x="601.00" y="334.50"></text></g><g><title>run_unary_simd_negative_FLOAT (simd.inc.src:195) (1 samples, 0.12%)</title><rect x="598" y="340" width="2" height="15" fill="rgb(236,22,26)"/><text x="601.00" y="350.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src:1057) (1 samples, 0.12%)</title><rect x="598" y="356" width="2" height="15" fill="rgb(225,69,54)"/><text x="601.00" y="366.50"></text></g><g><title>_mm_xor_ps (xmmintrin.h:231) (1 samples, 0.12%)</title><rect x="598" y="372" width="2" height="15" fill="rgb(241,213,49)"/><text x="601.00" y="382.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.12%)</title><rect x="600" y="260" width="1" height="15" fill="rgb(222,100,29)"/><text x="603.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:679) (1 samples, 0.12%)</title><rect x="600" y="276" width="1" height="15" fill="rgb(224,205,6)"/><text x="603.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2157) (1 samples, 0.12%)</title><rect x="601" y="324" width="1" height="15" fill="rgb(228,101,29)"/><text x="604.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.24%)</title><rect x="601" y="260" width="3" height="15" fill="rgb(250,178,21)"/><text x="604.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (2 samples, 0.24%)</title><rect x="601" y="276" width="3" height="15" fill="rgb(224,193,54)"/><text x="604.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (2 samples, 0.24%)</title><rect x="601" y="292" width="3" height="15" fill="rgb(207,35,3)"/><text x="604.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (2 samples, 0.24%)</title><rect x="601" y="308" width="3" height="15" fill="rgb(212,177,15)"/><text x="604.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2414) (1 samples, 0.12%)</title><rect x="602" y="324" width="2" height="15" fill="rgb(210,166,28)"/><text x="605.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="604" y="260" width="1" height="15" fill="rgb(243,109,46)"/><text x="607.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2516) (1 samples, 0.12%)</title><rect x="604" y="276" width="1" height="15" fill="rgb(228,80,11)"/><text x="607.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.12%)</title><rect x="605" y="276" width="2" height="15" fill="rgb(247,218,19)"/><text x="608.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.12%)</title><rect x="607" y="276" width="1" height="15" fill="rgb(241,112,49)"/><text x="610.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (3 samples, 0.36%)</title><rect x="608" y="276" width="4" height="15" fill="rgb(249,22,8)"/><text x="611.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.12%)</title><rect x="612" y="276" width="2" height="15" fill="rgb(212,31,24)"/><text x="615.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.12%)</title><rect x="614" y="276" width="1" height="15" fill="rgb(205,153,29)"/><text x="617.00" y="286.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (53 samples, 6.45%)</title><rect x="541" y="228" width="76" height="15" fill="rgb(205,89,39)"/><text x="544.00" y="238.50">_common_..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (12 samples, 1.46%)</title><rect x="600" y="244" width="17" height="15" fill="rgb(215,59,54)"/><text x="603.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (8 samples, 0.97%)</title><rect x="605" y="260" width="12" height="15" fill="rgb(248,58,9)"/><text x="608.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.12%)</title><rect x="615" y="276" width="2" height="15" fill="rgb(227,144,10)"/><text x="618.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (238 samples, 28.95%)</title><rect x="277" y="196" width="341" height="15" fill="rgb(228,224,53)"/><text x="280.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:118)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (54 samples, 6.57%)</title><rect x="541" y="212" width="77" height="15" fill="rgb(247,131,12)"/><text x="544.00" y="222.50">_run (ml..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.12%)</title><rect x="617" y="228" width="1" height="15" fill="rgb(231,214,35)"/><text x="620.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.12%)</title><rect x="617" y="244" width="1" height="15" fill="rgb(206,54,2)"/><text x="620.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.12%)</title><rect x="617" y="260" width="1" height="15" fill="rgb(241,174,7)"/><text x="620.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.12%)</title><rect x="617" y="276" width="1" height="15" fill="rgb(212,99,17)"/><text x="620.00" y="286.50"></text></g><g><title>0x7f197b94ed94 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="617" y="292" width="1" height="15" fill="rgb(243,214,34)"/><text x="620.00" y="302.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (1 samples, 0.12%)</title><rect x="618" y="260" width="2" height="15" fill="rgb(250,191,32)"/><text x="621.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="618" y="276" width="2" height="15" fill="rgb(238,147,4)"/><text x="621.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="618" y="292" width="2" height="15" fill="rgb(219,216,15)"/><text x="621.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (2 samples, 0.24%)</title><rect x="618" y="196" width="3" height="15" fill="rgb(228,168,42)"/><text x="621.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.24%)</title><rect x="618" y="212" width="3" height="15" fill="rgb(252,112,47)"/><text x="621.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (2 samples, 0.24%)</title><rect x="618" y="228" width="3" height="15" fill="rgb(232,178,16)"/><text x="621.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (2 samples, 0.24%)</title><rect x="618" y="244" width="3" height="15" fill="rgb(224,98,34)"/><text x="621.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:16) (1 samples, 0.12%)</title><rect x="620" y="260" width="1" height="15" fill="rgb(231,50,34)"/><text x="623.00" y="270.50"></text></g><g><title>0x7f197ba0cdf0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="620" y="276" width="1" height="15" fill="rgb(239,23,43)"/><text x="623.00" y="286.50"></text></g><g><title>0x7f193c3c754f (?) (1 samples, 0.12%)</title><rect x="621" y="244" width="1" height="15" fill="rgb(246,57,36)"/><text x="624.00" y="254.50"></text></g><g><title>0x7f193c3cd65e (?) (1 samples, 0.12%)</title><rect x="621" y="260" width="1" height="15" fill="rgb(233,58,14)"/><text x="624.00" y="270.50"></text></g><g><title>0x7f193c3cd50f (?) (1 samples, 0.12%)</title><rect x="621" y="276" width="1" height="15" fill="rgb(245,102,23)"/><text x="624.00" y="286.50"></text></g><g><title>0x7f193c3d3d6c (?) (1 samples, 0.12%)</title><rect x="621" y="292" width="1" height="15" fill="rgb(247,88,0)"/><text x="624.00" y="302.50"></text></g><g><title>0x7f1945934ab9 (?) (1 samples, 0.12%)</title><rect x="621" y="308" width="1" height="15" fill="rgb(208,104,39)"/><text x="624.00" y="318.50"></text></g><g><title>0x7f1945935eab (?) (1 samples, 0.12%)</title><rect x="621" y="324" width="1" height="15" fill="rgb(231,84,50)"/><text x="624.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.12%)</title><rect x="622" y="276" width="2" height="15" fill="rgb(211,54,54)"/><text x="625.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.12%)</title><rect x="622" y="292" width="2" height="15" fill="rgb(251,207,53)"/><text x="625.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.12%)</title><rect x="622" y="308" width="2" height="15" fill="rgb(249,5,26)"/><text x="625.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.12%)</title><rect x="622" y="324" width="2" height="15" fill="rgb(223,202,48)"/><text x="625.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h:924) (1 samples, 0.12%)</title><rect x="622" y="340" width="2" height="15" fill="rgb(214,186,51)"/><text x="625.00" y="350.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::raw_array_t (numpy.h:945) (1 samples, 0.12%)</title><rect x="622" y="356" width="2" height="15" fill="rgb(234,172,22)"/><text x="625.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.12%)</title><rect x="622" y="372" width="2" height="15" fill="rgb(244,135,52)"/><text x="625.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.12%)</title><rect x="622" y="388" width="2" height="15" fill="rgb(228,68,24)"/><text x="625.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1488) (1 samples, 0.12%)</title><rect x="622" y="404" width="2" height="15" fill="rgb(210,127,48)"/><text x="625.00" y="414.50"></text></g><g><title>0x7f1945935ea0 (libgomp.so.1.0.0) (4 samples, 0.49%)</title><rect x="624" y="484" width="6" height="15" fill="rgb(249,113,34)"/><text x="627.00" y="494.50"></text></g><g><title>0x7f1945935ea9 (libgomp.so.1.0.0) (7 samples, 0.85%)</title><rect x="630" y="484" width="10" height="15" fill="rgb(236,158,8)"/><text x="633.00" y="494.50"></text></g><g><title>0x7f1945935eab (libgomp.so.1.0.0) (10 samples, 1.22%)</title><rect x="640" y="484" width="14" height="15" fill="rgb(245,208,47)"/><text x="643.00" y="494.50"></text></g><g><title>0x7f1945934ab9 (libgomp.so.1.0.0) (30 samples, 3.65%)</title><rect x="624" y="468" width="43" height="15" fill="rgb(224,72,16)"/><text x="627.00" y="478.50">0x7f..</text></g><g><title>0x7f1945935ead (libgomp.so.1.0.0) (9 samples, 1.09%)</title><rect x="654" y="484" width="13" height="15" fill="rgb(211,144,54)"/><text x="657.00" y="494.50"></text></g><g><title>0x7f1945935cf9 (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="667" y="500" width="1" height="15" fill="rgb(241,98,35)"/><text x="670.00" y="510.50"></text></g><g><title>0x7f1945935cfb (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="668" y="500" width="2" height="15" fill="rgb(233,71,50)"/><text x="671.00" y="510.50"></text></g><g><title>0x7f1945933daa (libgomp.so.1.0.0) (3 samples, 0.36%)</title><rect x="667" y="484" width="4" height="15" fill="rgb(209,95,2)"/><text x="670.00" y="494.50"></text></g><g><title>0x7f1945935cfd (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="670" y="500" width="1" height="15" fill="rgb(219,154,44)"/><text x="673.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (1 samples, 0.12%)</title><rect x="671" y="516" width="2" height="15" fill="rgb(208,17,52)"/><text x="674.00" y="526.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (37 samples, 4.50%)</title><rect x="621" y="196" width="53" height="15" fill="rgb(223,188,38)"/><text x="624.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (37 samples, 4.50%)</title><rect x="621" y="212" width="53" height="15" fill="rgb(246,53,33)"/><text x="624.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (37 samples, 4.50%)</title><rect x="621" y="228" width="53" height="15" fill="rgb(253,15,10)"/><text x="624.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (36 samples, 4.38%)</title><rect x="622" y="244" width="52" height="15" fill="rgb(222,16,2)"/><text x="625.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (36 samples, 4.38%)</title><rect x="622" y="260" width="52" height="15" fill="rgb(243,42,34)"/><text x="625.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (35 samples, 4.26%)</title><rect x="624" y="276" width="50" height="15" fill="rgb(242,134,4)"/><text x="627.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (35 samples, 4.26%)</title><rect x="624" y="292" width="50" height="15" fill="rgb(240,189,1)"/><text x="627.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (35 samples, 4.26%)</title><rect x="624" y="308" width="50" height="15" fill="rgb(250,106,52)"/><text x="627.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (35 samples, 4.26%)</title><rect x="624" y="324" width="50" height="15" fill="rgb(237,58,30)"/><text x="627.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (35 samples, 4.26%)</title><rect x="624" y="340" width="50" height="15" fill="rgb(250,165,35)"/><text x="627.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (35 samples, 4.26%)</title><rect x="624" y="356" width="50" height="15" fill="rgb(227,57,9)"/><text x="627.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (35 samples, 4.26%)</title><rect x="624" y="372" width="50" height="15" fill="rgb(222,77,40)"/><text x="627.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (35 samples, 4.26%)</title><rect x="624" y="388" width="50" height="15" fill="rgb(254,224,37)"/><text x="627.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (35 samples, 4.26%)</title><rect x="624" y="404" width="50" height="15" fill="rgb(247,178,34)"/><text x="627.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (35 samples, 4.26%)</title><rect x="624" y="420" width="50" height="15" fill="rgb(247,23,29)"/><text x="627.00" y="430.50">Runti..</text></g><g><title>pybind11::array::size (numpy.h:619) (35 samples, 4.26%)</title><rect x="624" y="436" width="50" height="15" fill="rgb(250,40,22)"/><text x="627.00" y="446.50">pybin..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (35 samples, 4.26%)</title><rect x="624" y="452" width="50" height="15" fill="rgb(233,96,23)"/><text x="627.00" y="462.50">std::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 0.61%)</title><rect x="667" y="468" width="7" height="15" fill="rgb(206,122,34)"/><text x="670.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (2 samples, 0.24%)</title><rect x="671" y="484" width="3" height="15" fill="rgb(213,139,21)"/><text x="674.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.24%)</title><rect x="671" y="500" width="3" height="15" fill="rgb(253,174,4)"/><text x="674.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:608) (1 samples, 0.12%)</title><rect x="673" y="516" width="1" height="15" fill="rgb(242,193,7)"/><text x="676.00" y="526.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.12%)</title><rect x="677" y="276" width="1" height="15" fill="rgb(242,60,51)"/><text x="680.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.12%)</title><rect x="677" y="292" width="1" height="15" fill="rgb(248,18,6)"/><text x="680.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1485) (1 samples, 0.12%)</title><rect x="677" y="308" width="1" height="15" fill="rgb(206,90,28)"/><text x="680.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.12%)</title><rect x="678" y="276" width="2" height="15" fill="rgb(252,45,39)"/><text x="681.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.12%)</title><rect x="678" y="292" width="2" height="15" fill="rgb(242,99,19)"/><text x="681.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="678" y="308" width="2" height="15" fill="rgb(206,30,20)"/><text x="681.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="678" y="324" width="2" height="15" fill="rgb(239,19,42)"/><text x="681.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.12%)</title><rect x="678" y="340" width="2" height="15" fill="rgb(209,61,22)"/><text x="681.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (5 samples, 0.61%)</title><rect x="674" y="196" width="7" height="15" fill="rgb(250,119,1)"/><text x="677.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (5 samples, 0.61%)</title><rect x="674" y="212" width="7" height="15" fill="rgb(223,27,33)"/><text x="677.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.36%)</title><rect x="677" y="228" width="4" height="15" fill="rgb(207,193,51)"/><text x="680.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.36%)</title><rect x="677" y="244" width="4" height="15" fill="rgb(241,182,35)"/><text x="680.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.36%)</title><rect x="677" y="260" width="4" height="15" fill="rgb(233,73,28)"/><text x="680.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.12%)</title><rect x="680" y="276" width="1" height="15" fill="rgb(250,86,50)"/><text x="683.00" y="286.50"></text></g><g><title>FLOAT_less (loops.c.src:1773) (1 samples, 0.12%)</title><rect x="680" y="292" width="1" height="15" fill="rgb(245,198,48)"/><text x="683.00" y="302.50"></text></g><g><title>run_binary_simd_less_FLOAT (simd.inc.src:299) (1 samples, 0.12%)</title><rect x="680" y="308" width="1" height="15" fill="rgb(211,196,6)"/><text x="683.00" y="318.50"></text></g><g><title>sse2_binary_less_FLOAT (simd.inc.src:937) (1 samples, 0.12%)</title><rect x="680" y="324" width="1" height="15" fill="rgb(236,23,8)"/><text x="683.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src:802) (1 samples, 0.12%)</title><rect x="680" y="340" width="1" height="15" fill="rgb(207,229,0)"/><text x="683.00" y="350.50"></text></g><g><title>_mm_and_si128 (emmintrin.h:1232) (1 samples, 0.12%)</title><rect x="680" y="356" width="1" height="15" fill="rgb(224,71,8)"/><text x="683.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.12%)</title><rect x="681" y="260" width="2" height="15" fill="rgb(237,139,36)"/><text x="684.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1236) (1 samples, 0.12%)</title><rect x="681" y="276" width="2" height="15" fill="rgb(230,137,33)"/><text x="684.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.12%)</title><rect x="683" y="276" width="1" height="15" fill="rgb(226,42,35)"/><text x="686.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.12%)</title><rect x="683" y="292" width="1" height="15" fill="rgb(247,31,14)"/><text x="686.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="683" y="308" width="1" height="15" fill="rgb(233,171,44)"/><text x="686.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.12%)</title><rect x="683" y="324" width="1" height="15" fill="rgb(210,23,19)"/><text x="686.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.12%)</title><rect x="683" y="340" width="1" height="15" fill="rgb(241,85,6)"/><text x="686.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (292 samples, 35.52%)</title><rect x="266" y="180" width="420" height="15" fill="rgb(228,75,6)"/><text x="269.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (3 samples, 0.36%)</title><rect x="681" y="196" width="5" height="15" fill="rgb(205,227,38)"/><text x="684.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (3 samples, 0.36%)</title><rect x="681" y="212" width="5" height="15" fill="rgb(227,88,47)"/><text x="684.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (3 samples, 0.36%)</title><rect x="681" y="228" width="5" height="15" fill="rgb(253,99,31)"/><text x="684.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.36%)</title><rect x="681" y="244" width="5" height="15" fill="rgb(235,65,19)"/><text x="684.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="683" y="260" width="3" height="15" fill="rgb(244,57,5)"/><text x="686.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.12%)</title><rect x="684" y="276" width="2" height="15" fill="rgb(205,188,39)"/><text x="687.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.12%)</title><rect x="684" y="292" width="2" height="15" fill="rgb(241,54,2)"/><text x="687.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.12%)</title><rect x="684" y="308" width="2" height="15" fill="rgb(220,167,3)"/><text x="687.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.12%)</title><rect x="686" y="180" width="1" height="15" fill="rgb(220,208,15)"/><text x="689.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (301 samples, 36.62%)</title><rect x="259" y="164" width="432" height="15" fill="rgb(239,147,9)"/><text x="262.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:4..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.36%)</title><rect x="687" y="180" width="4" height="15" fill="rgb(233,53,41)"/><text x="690.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (302 samples, 36.74%)</title><rect x="259" y="132" width="434" height="15" fill="rgb(237,63,16)"/><text x="262.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (302 samples, 36.74%)</title><rect x="259" y="148" width="434" height="15" fill="rgb(212,76,12)"/><text x="262.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.12%)</title><rect x="691" y="164" width="2" height="15" fill="rgb(218,184,29)"/><text x="694.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:61) (304 samples, 36.98%)</title><rect x="258" y="52" width="436" height="15" fill="rgb(225,94,35)"/><text x="261.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estima..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:60) (304 samples, 36.98%)</title><rect x="258" y="68" width="436" height="15" fill="rgb(240,86,27)"/><text x="261.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_es..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:37) (304 samples, 36.98%)</title><rect x="258" y="84" width="436" height="15" fill="rgb(239,31,40)"/><text x="261.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_e..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:31) (304 samples, 36.98%)</title><rect x="258" y="100" width="436" height="15" fill="rgb(213,30,23)"/><text x="261.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimat..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (304 samples, 36.98%)</title><rect x="258" y="116" width="436" height="15" fill="rgb(233,142,34)"/><text x="261.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.12%)</title><rect x="693" y="132" width="1" height="15" fill="rgb(222,202,40)"/><text x="696.00" y="142.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:36) (1 samples, 0.12%)</title><rect x="694" y="84" width="2" height="15" fill="rgb(247,193,38)"/><text x="697.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.12%)</title><rect x="694" y="100" width="2" height="15" fill="rgb(252,215,54)"/><text x="697.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.12%)</title><rect x="694" y="116" width="2" height="15" fill="rgb(233,166,8)"/><text x="697.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.12%)</title><rect x="694" y="132" width="2" height="15" fill="rgb(250,3,17)"/><text x="697.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.12%)</title><rect x="694" y="148" width="2" height="15" fill="rgb(235,5,36)"/><text x="697.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.12%)</title><rect x="694" y="164" width="2" height="15" fill="rgb(240,187,8)"/><text x="697.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="694" y="180" width="2" height="15" fill="rgb(210,219,39)"/><text x="697.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="694" y="196" width="2" height="15" fill="rgb(220,111,9)"/><text x="697.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="694" y="212" width="2" height="15" fill="rgb(215,143,15)"/><text x="697.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="694" y="228" width="2" height="15" fill="rgb(209,22,29)"/><text x="697.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="694" y="244" width="2" height="15" fill="rgb(216,131,44)"/><text x="697.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.12%)</title><rect x="694" y="260" width="2" height="15" fill="rgb(214,67,30)"/><text x="697.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="694" y="276" width="2" height="15" fill="rgb(239,185,6)"/><text x="697.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="694" y="292" width="2" height="15" fill="rgb(250,180,29)"/><text x="697.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="694" y="308" width="2" height="15" fill="rgb(241,91,13)"/><text x="697.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="694" y="324" width="2" height="15" fill="rgb(214,216,28)"/><text x="697.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="694" y="340" width="2" height="15" fill="rgb(223,182,46)"/><text x="697.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.12%)</title><rect x="694" y="356" width="2" height="15" fill="rgb(219,30,24)"/><text x="697.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="694" y="372" width="2" height="15" fill="rgb(207,206,45)"/><text x="697.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="694" y="388" width="2" height="15" fill="rgb(241,161,27)"/><text x="697.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="694" y="404" width="2" height="15" fill="rgb(254,161,16)"/><text x="697.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="694" y="420" width="2" height="15" fill="rgb(253,99,14)"/><text x="697.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="694" y="436" width="2" height="15" fill="rgb(243,50,40)"/><text x="697.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.12%)</title><rect x="694" y="452" width="2" height="15" fill="rgb(217,115,38)"/><text x="697.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="694" y="468" width="2" height="15" fill="rgb(223,146,25)"/><text x="697.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="694" y="484" width="2" height="15" fill="rgb(218,78,44)"/><text x="697.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.12%)</title><rect x="694" y="500" width="2" height="15" fill="rgb(247,52,48)"/><text x="697.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.12%)</title><rect x="694" y="516" width="2" height="15" fill="rgb(207,166,44)"/><text x="697.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.12%)</title><rect x="694" y="532" width="2" height="15" fill="rgb(247,170,12)"/><text x="697.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="694" y="548" width="2" height="15" fill="rgb(237,226,3)"/><text x="697.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="564" width="2" height="15" fill="rgb(254,148,6)"/><text x="697.00" y="574.50"></text></g><g><title>0x7f197bbb6995 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="580" width="2" height="15" fill="rgb(210,29,33)"/><text x="697.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="596" width="2" height="15" fill="rgb(210,173,39)"/><text x="697.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="612" width="2" height="15" fill="rgb(222,108,50)"/><text x="697.00" y="622.50"></text></g><g><title>0x7f197bbb6258 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="628" width="2" height="15" fill="rgb(213,222,28)"/><text x="697.00" y="638.50"></text></g><g><title>0x7f197bc03d7a (ld-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="644" width="2" height="15" fill="rgb(246,115,39)"/><text x="697.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="660" width="2" height="15" fill="rgb(213,221,52)"/><text x="697.00" y="670.50"></text></g><g><title>0x7f197bc04345 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="676" width="2" height="15" fill="rgb(211,152,31)"/><text x="697.00" y="686.50"></text></g><g><title>0x7f197bbfcfec (ld-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="692" width="2" height="15" fill="rgb(238,94,19)"/><text x="697.00" y="702.50"></text></g><g><title>0x7f197bbfb56b (ld-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="708" width="2" height="15" fill="rgb(210,55,12)"/><text x="697.00" y="718.50"></text></g><g><title>0x7f197bbfa9e5 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="724" width="2" height="15" fill="rgb(244,84,34)"/><text x="697.00" y="734.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.12%)</title><rect x="696" y="148" width="1" height="15" fill="rgb(227,93,27)"/><text x="699.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.12%)</title><rect x="697" y="196" width="2" height="15" fill="rgb(208,103,25)"/><text x="700.00" y="206.50"></text></g><g><title>0x7f193b96cff9 (?) (1 samples, 0.12%)</title><rect x="699" y="212" width="1" height="15" fill="rgb(231,210,47)"/><text x="702.00" y="222.50"></text></g><g><title>0x7f193b967ef6 (?) (1 samples, 0.12%)</title><rect x="699" y="228" width="1" height="15" fill="rgb(213,213,48)"/><text x="702.00" y="238.50"></text></g><g><title>0x7f193b95c962 (?) (1 samples, 0.12%)</title><rect x="699" y="244" width="1" height="15" fill="rgb(224,81,10)"/><text x="702.00" y="254.50"></text></g><g><title>0x7f193b9907a7 (?) (1 samples, 0.12%)</title><rect x="699" y="260" width="1" height="15" fill="rgb(208,6,48)"/><text x="702.00" y="270.50"></text></g><g><title>0x7f193b990379 (?) (1 samples, 0.12%)</title><rect x="699" y="276" width="1" height="15" fill="rgb(211,125,9)"/><text x="702.00" y="286.50"></text></g><g><title>0x7f193bdee8b8 (?) (1 samples, 0.12%)</title><rect x="699" y="292" width="1" height="15" fill="rgb(247,91,31)"/><text x="702.00" y="302.50"></text></g><g><title>0x7f193bdecc7f (?) (1 samples, 0.12%)</title><rect x="699" y="308" width="1" height="15" fill="rgb(244,143,13)"/><text x="702.00" y="318.50"></text></g><g><title>0x7f193bdff99c (?) (1 samples, 0.12%)</title><rect x="699" y="324" width="1" height="15" fill="rgb(227,227,18)"/><text x="702.00" y="334.50"></text></g><g><title>0x7f193bb2737e (?) (1 samples, 0.12%)</title><rect x="699" y="340" width="1" height="15" fill="rgb(217,28,52)"/><text x="702.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="699" y="356" width="1" height="15" fill="rgb(224,87,4)"/><text x="702.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="701" y="292" width="2" height="15" fill="rgb(247,128,43)"/><text x="704.00" y="302.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="703" y="340" width="4" height="15" fill="rgb(209,225,46)"/><text x="706.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="704" y="356" width="3" height="15" fill="rgb(252,9,38)"/><text x="707.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="706" y="372" width="1" height="15" fill="rgb(214,94,44)"/><text x="709.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="706" y="388" width="1" height="15" fill="rgb(207,59,13)"/><text x="709.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="706" y="404" width="1" height="15" fill="rgb(245,110,44)"/><text x="709.00" y="414.50"></text></g><g><title>0x7f197b92ff3f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="706" y="420" width="1" height="15" fill="rgb(248,34,26)"/><text x="709.00" y="430.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="707" y="340" width="2" height="15" fill="rgb(217,80,2)"/><text x="710.00" y="350.50"></text></g><g><title>0x7f193b933850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="716" y="372" width="1" height="15" fill="rgb(239,11,23)"/><text x="719.00" y="382.50"></text></g><g><title>0x7f197b94ed50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="717" y="372" width="2" height="15" fill="rgb(225,109,53)"/><text x="720.00" y="382.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.09%)</title><rect x="709" y="356" width="13" height="15" fill="rgb(229,208,37)"/><text x="712.00" y="366.50"></text></g><g><title>0x7f197b94edc9 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="719" y="372" width="3" height="15" fill="rgb(250,143,48)"/><text x="722.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.22%)</title><rect x="709" y="340" width="14" height="15" fill="rgb(250,79,54)"/><text x="712.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="722" y="356" width="1" height="15" fill="rgb(244,218,23)"/><text x="725.00" y="366.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.49%)</title><rect x="723" y="356" width="6" height="15" fill="rgb(243,89,30)"/><text x="726.00" y="366.50"></text></g><g><title>onnxruntime::SliceIterator&lt;float&gt;::SliceIterator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="727" y="372" width="2" height="15" fill="rgb(220,148,54)"/><text x="730.00" y="382.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="727" y="388" width="2" height="15" fill="rgb(206,95,27)"/><text x="730.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="727" y="404" width="2" height="15" fill="rgb(245,178,32)"/><text x="730.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="727" y="420" width="2" height="15" fill="rgb(234,38,29)"/><text x="730.00" y="430.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.61%)</title><rect x="723" y="340" width="7" height="15" fill="rgb(218,85,21)"/><text x="726.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="729" y="356" width="1" height="15" fill="rgb(211,61,48)"/><text x="732.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="729" y="372" width="1" height="15" fill="rgb(249,34,51)"/><text x="732.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="729" y="388" width="1" height="15" fill="rgb(213,159,52)"/><text x="732.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="730" y="340" width="2" height="15" fill="rgb(236,6,16)"/><text x="733.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="730" y="356" width="2" height="15" fill="rgb(205,200,10)"/><text x="733.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="730" y="372" width="2" height="15" fill="rgb(214,224,2)"/><text x="733.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="730" y="388" width="2" height="15" fill="rgb(243,14,53)"/><text x="733.00" y="398.50"></text></g><g><title>0x7f197b94edb3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="736" y="356" width="1" height="15" fill="rgb(241,175,41)"/><text x="739.00" y="366.50"></text></g><g><title>0x7f197b94edbf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="737" y="356" width="2" height="15" fill="rgb(243,189,46)"/><text x="740.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.09%)</title><rect x="732" y="340" width="12" height="15" fill="rgb(229,34,52)"/><text x="735.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.49%)</title><rect x="739" y="356" width="5" height="15" fill="rgb(234,140,31)"/><text x="742.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="746" y="372" width="4" height="15" fill="rgb(239,7,11)"/><text x="749.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="750" y="372" width="2" height="15" fill="rgb(252,4,40)"/><text x="753.00" y="382.50"></text></g><g><title>0x7f196b3fb7a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="750" y="388" width="2" height="15" fill="rgb(246,18,14)"/><text x="753.00" y="398.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.73%)</title><rect x="744" y="340" width="9" height="15" fill="rgb(237,19,31)"/><text x="747.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.73%)</title><rect x="744" y="356" width="9" height="15" fill="rgb(227,155,32)"/><text x="747.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2248] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="752" y="372" width="1" height="15" fill="rgb(229,44,47)"/><text x="755.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="752" y="388" width="1" height="15" fill="rgb(207,98,47)"/><text x="755.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.61%)</title><rect x="753" y="340" width="7" height="15" fill="rgb(226,143,31)"/><text x="756.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.61%)</title><rect x="753" y="356" width="7" height="15" fill="rgb(219,197,20)"/><text x="756.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.61%)</title><rect x="753" y="372" width="7" height="15" fill="rgb(210,209,27)"/><text x="756.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="757" y="388" width="3" height="15" fill="rgb(250,130,31)"/><text x="760.00" y="398.50"></text></g><g><title>0x7f196b3fb7a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="785" y="388" width="1" height="15" fill="rgb(207,184,43)"/><text x="788.00" y="398.50"></text></g><g><title>0x7f197b92e90e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="786" y="388" width="2" height="15" fill="rgb(217,12,1)"/><text x="789.00" y="398.50"></text></g><g><title>0x7f197b92e945 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="788" y="388" width="1" height="15" fill="rgb(225,181,16)"/><text x="791.00" y="398.50"></text></g><g><title>0x7f197b92e998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="789" y="388" width="1" height="15" fill="rgb(208,142,39)"/><text x="792.00" y="398.50"></text></g><g><title>0x7f197b92ebd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="790" y="388" width="2" height="15" fill="rgb(252,74,32)"/><text x="793.00" y="398.50"></text></g><g><title>0x7f197bb00e01 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="792" y="388" width="1" height="15" fill="rgb(248,82,4)"/><text x="795.00" y="398.50"></text></g><g><title>0x7f197bb00e40 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="793" y="388" width="2" height="15" fill="rgb(237,215,49)"/><text x="796.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.61%)</title><rect x="795" y="388" width="7" height="15" fill="rgb(244,50,37)"/><text x="798.00" y="398.50"></text></g><g><title>0x7f197b92e91e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="806" y="404" width="2" height="15" fill="rgb(249,165,29)"/><text x="809.00" y="414.50"></text></g><g><title>0x7f197b92e971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="808" y="404" width="1" height="15" fill="rgb(209,70,43)"/><text x="811.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.24%)</title><rect x="809" y="404" width="3" height="15" fill="rgb(246,178,45)"/><text x="812.00" y="414.50"></text></g><g><title>0x7f196b3fad50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="813" y="420" width="2" height="15" fill="rgb(236,124,19)"/><text x="816.00" y="430.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 5.72%)</title><rect x="760" y="340" width="68" height="15" fill="rgb(212,100,33)"/><text x="763.00" y="350.50">onnxrun..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 5.72%)</title><rect x="760" y="356" width="68" height="15" fill="rgb(205,139,42)"/><text x="763.00" y="366.50">onnxrun..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 5.72%)</title><rect x="760" y="372" width="68" height="15" fill="rgb(252,31,45)"/><text x="763.00" y="382.50">onnxrun..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.19%)</title><rect x="802" y="388" width="26" height="15" fill="rgb(227,166,4)"/><text x="805.00" y="398.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.34%)</title><rect x="812" y="404" width="16" height="15" fill="rgb(206,82,26)"/><text x="815.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.09%)</title><rect x="815" y="420" width="13" height="15" fill="rgb(213,195,22)"/><text x="818.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="828" y="340" width="1" height="15" fill="rgb(245,54,21)"/><text x="831.00" y="350.50"></text></g><g><title>0x7f196b3fb7a0 (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="868" y="356" width="3" height="15" fill="rgb(213,76,35)"/><text x="871.00" y="366.50"></text></g><g><title>0x7f197b92e900 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="871" y="356" width="1" height="15" fill="rgb(228,20,54)"/><text x="874.00" y="366.50"></text></g><g><title>0x7f197b92e908 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="872" y="356" width="2" height="15" fill="rgb(217,130,26)"/><text x="875.00" y="366.50"></text></g><g><title>0x7f197b92e90e (libc-2.29.so) (2 samples, 0.24%)</title><rect x="874" y="356" width="3" height="15" fill="rgb(248,187,30)"/><text x="877.00" y="366.50"></text></g><g><title>0x7f197b92e91e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="877" y="356" width="1" height="15" fill="rgb(242,49,42)"/><text x="880.00" y="366.50"></text></g><g><title>0x7f197b92e92c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="878" y="356" width="1" height="15" fill="rgb(222,44,15)"/><text x="881.00" y="366.50"></text></g><g><title>0x7f197b92e94f (libc-2.29.so) (2 samples, 0.24%)</title><rect x="879" y="356" width="3" height="15" fill="rgb(218,204,36)"/><text x="882.00" y="366.50"></text></g><g><title>0x7f197b92e961 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="882" y="356" width="3" height="15" fill="rgb(240,96,9)"/><text x="885.00" y="366.50"></text></g><g><title>0x7f197b92e965 (libc-2.29.so) (3 samples, 0.36%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(253,50,20)"/><text x="888.00" y="366.50"></text></g><g><title>0x7f197b92e991 (libc-2.29.so) (4 samples, 0.49%)</title><rect x="889" y="356" width="6" height="15" fill="rgb(232,63,12)"/><text x="892.00" y="366.50"></text></g><g><title>0x7f197b92e998 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="895" y="356" width="3" height="15" fill="rgb(211,140,3)"/><text x="898.00" y="366.50"></text></g><g><title>0x7f197b92ea4c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="898" y="356" width="2" height="15" fill="rgb(226,86,5)"/><text x="901.00" y="366.50"></text></g><g><title>0x7f197b92ea4d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="900" y="356" width="1" height="15" fill="rgb(240,135,24)"/><text x="903.00" y="366.50"></text></g><g><title>0x7f197b92ea55 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="901" y="356" width="3" height="15" fill="rgb(237,107,48)"/><text x="904.00" y="366.50"></text></g><g><title>0x7f197b92ebc0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="904" y="356" width="1" height="15" fill="rgb(215,21,33)"/><text x="907.00" y="366.50"></text></g><g><title>0x7f197b92ebe4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="905" y="356" width="2" height="15" fill="rgb(205,126,41)"/><text x="908.00" y="366.50"></text></g><g><title>0x7f197b92ebe8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="907" y="356" width="1" height="15" fill="rgb(214,155,29)"/><text x="910.00" y="366.50"></text></g><g><title>0x7f197b94f12f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="908" y="356" width="2" height="15" fill="rgb(253,35,11)"/><text x="911.00" y="366.50"></text></g><g><title>0x7f197b94f14a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="910" y="356" width="1" height="15" fill="rgb(226,166,42)"/><text x="913.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (7 samples, 0.85%)</title><rect x="911" y="356" width="10" height="15" fill="rgb(240,96,36)"/><text x="914.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.85%)</title><rect x="1023" y="388" width="10" height="15" fill="rgb(240,98,11)"/><text x="1026.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.61%)</title><rect x="1026" y="404" width="7" height="15" fill="rgb(247,188,12)"/><text x="1029.00" y="414.50"></text></g><g><title>0x7f197b94f12f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1047" y="420" width="2" height="15" fill="rgb(220,146,12)"/><text x="1050.00" y="430.50"></text></g><g><title>0x7f196b3fad50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1049" y="436" width="1" height="15" fill="rgb(225,170,22)"/><text x="1052.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.73%)</title><rect x="1046" y="404" width="9" height="15" fill="rgb(243,202,43)"/><text x="1049.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.49%)</title><rect x="1049" y="420" width="6" height="15" fill="rgb(220,216,29)"/><text x="1052.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.36%)</title><rect x="1050" y="436" width="5" height="15" fill="rgb(234,26,30)"/><text x="1053.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (142 samples, 17.27%)</title><rect x="921" y="356" width="204" height="15" fill="rgb(248,28,19)"/><text x="924.00" y="366.50">onnxruntime::ml::TreeEnsem..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 9.49%)</title><rect x="1013" y="372" width="112" height="15" fill="rgb(232,43,0)"/><text x="1016.00" y="382.50">std::_Hashtab..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 7.79%)</title><rect x="1033" y="388" width="92" height="15" fill="rgb(228,94,52)"/><text x="1036.00" y="398.50">std::_Hash..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (49 samples, 5.96%)</title><rect x="1055" y="404" width="70" height="15" fill="rgb(239,189,41)"/><text x="1058.00" y="414.50">std::__..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (27 samples, 3.28%)</title><rect x="1086" y="420" width="39" height="15" fill="rgb(208,75,4)"/><text x="1089.00" y="430.50">std..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.09%)</title><rect x="1125" y="356" width="13" height="15" fill="rgb(253,181,8)"/><text x="1128.00" y="366.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.49%)</title><rect x="1138" y="356" width="6" height="15" fill="rgb(220,24,34)"/><text x="1141.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.82%)</title><rect x="1144" y="356" width="21" height="15" fill="rgb(230,107,42)"/><text x="1147.00" y="366.50"></text></g><g><title>0x7f196b3fad50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1178" y="388" width="1" height="15" fill="rgb(250,94,50)"/><text x="1181.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (337 samples, 41.00%)</title><rect x="701" y="260" width="484" height="15" fill="rgb(219,35,54)"/><text x="704.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (337 samples, 41.00%)</title><rect x="701" y="276" width="484" height="15" fill="rgb(228,179,45)"/><text x="704.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (336 samples, 40.88%)</title><rect x="703" y="292" width="482" height="15" fill="rgb(236,22,9)"/><text x="706.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (336 samples, 40.88%)</title><rect x="703" y="308" width="482" height="15" fill="rgb(227,104,46)"/><text x="706.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (336 samples, 40.88%)</title><rect x="703" y="324" width="482" height="15" fill="rgb(230,57,23)"/><text x="706.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxrun..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (248 samples, 30.17%)</title><rect x="829" y="340" width="356" height="15" fill="rgb(205,137,5)"/><text x="832.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::C..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.70%)</title><rect x="1165" y="356" width="20" height="15" fill="rgb(219,219,8)"/><text x="1168.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.97%)</title><rect x="1174" y="372" width="11" height="15" fill="rgb(233,83,48)"/><text x="1177.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.49%)</title><rect x="1179" y="388" width="6" height="15" fill="rgb(251,14,35)"/><text x="1182.00" y="398.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(219,23,38)"/><text x="1188.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1185" y="276" width="2" height="15" fill="rgb(243,190,18)"/><text x="1188.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (340 samples, 41.36%)</title><rect x="700" y="244" width="488" height="15" fill="rgb(253,193,3)"/><text x="703.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(241,211,48)"/><text x="1190.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(207,177,52)"/><text x="1190.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(248,25,31)"/><text x="1190.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(245,34,30)"/><text x="1190.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="324" width="1" height="15" fill="rgb(220,31,0)"/><text x="1190.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="340" width="1" height="15" fill="rgb(244,94,47)"/><text x="1190.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="356" width="1" height="15" fill="rgb(240,229,6)"/><text x="1190.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="372" width="1" height="15" fill="rgb(253,111,53)"/><text x="1190.00" y="382.50"></text></g><g><title>all (822 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,166,16)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:68) (345 samples, 41.97%)</title><rect x="694" y="52" width="496" height="15" fill="rgb(208,42,45)"/><text x="697.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_100..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:67) (345 samples, 41.97%)</title><rect x="694" y="68" width="496" height="15" fill="rgb(215,183,35)"/><text x="697.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:37) (344 samples, 41.85%)</title><rect x="696" y="84" width="494" height="15" fill="rgb(217,39,52)"/><text x="699.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimator..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:31) (344 samples, 41.85%)</title><rect x="696" y="100" width="494" height="15" fill="rgb(223,147,32)"/><text x="699.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_100..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (344 samples, 41.85%)</title><rect x="696" y="116" width="494" height="15" fill="rgb(248,70,16)"/><text x="699.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (344 samples, 41.85%)</title><rect x="696" y="132" width="494" height="15" fill="rgb(228,204,51)"/><text x="699.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (343 samples, 41.73%)</title><rect x="697" y="148" width="493" height="15" fill="rgb(243,211,2)"/><text x="700.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (343 samples, 41.73%)</title><rect x="697" y="164" width="493" height="15" fill="rgb(222,127,12)"/><text x="700.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (343 samples, 41.73%)</title><rect x="697" y="180" width="493" height="15" fill="rgb(249,120,49)"/><text x="700.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (342 samples, 41.61%)</title><rect x="699" y="196" width="491" height="15" fill="rgb(243,29,18)"/><text x="702.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (341 samples, 41.48%)</title><rect x="700" y="212" width="490" height="15" fill="rgb(217,36,15)"/><text x="703.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (341 samples, 41.48%)</title><rect x="700" y="228" width="490" height="15" fill="rgb(206,145,42)"/><text x="703.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObj..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(232,75,25)"/><text x="1191.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(214,136,46)"/><text x="1191.00" y="270.50"></text></g></g></svg>