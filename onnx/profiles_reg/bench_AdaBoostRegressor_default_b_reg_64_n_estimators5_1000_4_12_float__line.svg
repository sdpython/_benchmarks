<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1894" onload="init(evt)" viewBox="0 0 1200 1894" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1894" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1877.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1877.00"> </text><g id="frames"><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(241,103,42)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(223,70,38)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:2057) (1 samples, 0.12%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(238,63,54)"/><text x="13.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py:2073) (1 samples, 0.12%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(231,168,41)"/><text x="13.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.23%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(253,146,35)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.23%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(212,145,5)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.23%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(250,93,45)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.23%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(215,97,50)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.12%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(236,20,47)"/><text x="14.00" y="926.50"></text></g><g><title>join (posixpath.py:89) (1 samples, 0.12%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(207,181,32)"/><text x="14.00" y="942.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(226,33,53)"/><text x="14.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="12" y="852" width="2" height="15" fill="rgb(213,93,5)"/><text x="15.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(208,190,28)"/><text x="15.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.12%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(230,27,30)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.12%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(244,22,51)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.12%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(228,13,8)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.12%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(220,195,43)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.12%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(205,123,26)"/><text x="15.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1375) (1 samples, 0.12%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(227,0,39)"/><text x="15.00" y="974.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.12%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(225,4,36)"/><text x="17.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.12%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(228,148,31)"/><text x="17.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(236,146,44)"/><text x="17.00" y="942.50"></text></g><g><title>0x7fe7e288f237 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(235,118,1)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (5 samples, 0.58%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(206,171,25)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(206,137,30)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.58%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(240,38,45)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(253,207,41)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(213,160,11)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.58%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(227,1,30)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.58%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(243,42,36)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.58%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(209,220,26)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(221,3,9)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.58%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(230,218,15)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(240,78,22)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.58%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(220,165,8)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.58%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(218,15,49)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.58%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(236,34,23)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(208,5,32)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.58%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(221,49,38)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(253,86,15)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.58%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(223,134,21)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.58%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(211,45,45)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.58%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(210,98,49)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(221,61,37)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.58%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(225,213,12)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(218,196,14)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.58%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(244,11,2)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.58%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(227,194,40)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.58%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(217,83,13)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(243,83,9)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.58%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(223,201,15)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(248,178,28)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.58%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(234,164,42)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(242,154,37)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(246,194,0)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.58%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(217,92,40)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.58%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(236,99,52)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.58%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(232,106,30)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(217,161,13)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.58%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(238,176,15)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.58%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(252,151,26)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.58%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(250,144,30)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.58%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(230,70,13)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.58%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(243,180,48)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.58%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(224,76,54)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.58%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(253,122,46)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.58%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(243,69,11)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.23%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(234,10,51)"/><text x="17.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.23%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(248,103,30)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.23%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(249,138,17)"/><text x="17.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.12%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(244,65,36)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.12%)</title><rect x="16" y="484" width="2" height="15" fill="rgb(225,104,15)"/><text x="19.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="16" y="500" width="2" height="15" fill="rgb(249,137,24)"/><text x="19.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="516" width="2" height="15" fill="rgb(230,14,10)"/><text x="19.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="532" width="2" height="15" fill="rgb(209,79,10)"/><text x="19.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="548" width="2" height="15" fill="rgb(216,91,47)"/><text x="19.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="564" width="2" height="15" fill="rgb(236,11,9)"/><text x="19.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(212,34,39)"/><text x="19.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(205,68,24)"/><text x="19.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.12%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(248,25,28)"/><text x="19.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(238,214,49)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(211,185,51)"/><text x="19.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(231,35,33)"/><text x="19.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(251,205,16)"/><text x="19.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(209,51,4)"/><text x="19.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.12%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(207,123,9)"/><text x="19.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(226,101,6)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="740" width="2" height="15" fill="rgb(242,108,0)"/><text x="19.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="756" width="2" height="15" fill="rgb(251,25,21)"/><text x="19.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="772" width="2" height="15" fill="rgb(213,84,48)"/><text x="19.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="788" width="2" height="15" fill="rgb(241,183,5)"/><text x="19.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.12%)</title><rect x="16" y="804" width="2" height="15" fill="rgb(245,172,15)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="820" width="2" height="15" fill="rgb(215,65,46)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(253,92,17)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(229,156,2)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(242,141,21)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(253,32,47)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:7) (1 samples, 0.12%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(229,188,11)"/><text x="19.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(231,60,0)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(234,215,53)"/><text x="19.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(247,167,7)"/><text x="19.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(209,6,7)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(239,3,50)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py:106) (1 samples, 0.12%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(249,57,38)"/><text x="19.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(239,150,0)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(239,19,1)"/><text x="19.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(251,35,19)"/><text x="19.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(221,4,2)"/><text x="19.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(242,87,26)"/><text x="19.00" y="1086.50"></text></g><g><title>&lt;module&gt; (json/decoder.py:5) (1 samples, 0.12%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(232,141,18)"/><text x="19.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="16" y="1108" width="2" height="15" fill="rgb(235,21,43)"/><text x="19.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="1124" width="2" height="15" fill="rgb(252,4,33)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="1140" width="2" height="15" fill="rgb(228,178,40)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="1156" width="2" height="15" fill="rgb(254,228,30)"/><text x="19.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="1172" width="2" height="15" fill="rgb(236,19,35)"/><text x="19.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="1188" width="2" height="15" fill="rgb(248,30,34)"/><text x="19.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="1204" width="2" height="15" fill="rgb(241,181,23)"/><text x="19.00" y="1214.50"></text></g><g><title>&lt;module&gt; (json/scanner.py:13) (1 samples, 0.12%)</title><rect x="16" y="1220" width="2" height="15" fill="rgb(217,102,37)"/><text x="19.00" y="1230.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="16" y="1236" width="2" height="15" fill="rgb(243,15,21)"/><text x="19.00" y="1246.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="16" y="1252" width="2" height="15" fill="rgb(223,111,46)"/><text x="19.00" y="1262.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="16" y="1268" width="2" height="15" fill="rgb(240,146,33)"/><text x="19.00" y="1278.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="16" y="1284" width="2" height="15" fill="rgb(223,166,34)"/><text x="19.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="16" y="1300" width="2" height="15" fill="rgb(218,29,31)"/><text x="19.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="16" y="1316" width="2" height="15" fill="rgb(214,30,5)"/><text x="19.00" y="1326.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="16" y="1332" width="2" height="15" fill="rgb(236,201,36)"/><text x="19.00" y="1342.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="16" y="1348" width="2" height="15" fill="rgb(246,53,31)"/><text x="19.00" y="1358.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="16" y="1364" width="2" height="15" fill="rgb(241,139,47)"/><text x="19.00" y="1374.50"></text></g><g><title>_parse (sre_parse.py:526) (1 samples, 0.12%)</title><rect x="16" y="1380" width="2" height="15" fill="rgb(222,117,14)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.12%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(241,23,23)"/><text x="21.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(235,203,11)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(225,202,11)"/><text x="21.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(248,22,47)"/><text x="21.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(250,184,23)"/><text x="21.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(225,116,47)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.12%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(231,160,35)"/><text x="21.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(244,115,35)"/><text x="21.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(251,12,0)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(249,174,42)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1060" width="1" height="15" fill="rgb(228,26,48)"/><text x="21.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1076" width="1" height="15" fill="rgb(239,140,40)"/><text x="21.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1092" width="1" height="15" fill="rgb(226,221,37)"/><text x="21.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1108" width="1" height="15" fill="rgb(253,84,53)"/><text x="21.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.12%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(206,187,47)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(226,210,5)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(213,199,49)"/><text x="21.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(224,64,3)"/><text x="21.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1188" width="1" height="15" fill="rgb(219,29,9)"/><text x="21.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1204" width="1" height="15" fill="rgb(235,76,30)"/><text x="21.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:19) (1 samples, 0.12%)</title><rect x="18" y="1220" width="1" height="15" fill="rgb(207,57,16)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1236" width="1" height="15" fill="rgb(253,190,37)"/><text x="21.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1252" width="1" height="15" fill="rgb(221,126,53)"/><text x="21.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1268" width="1" height="15" fill="rgb(254,17,5)"/><text x="21.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1284" width="1" height="15" fill="rgb(243,229,45)"/><text x="21.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1300" width="1" height="15" fill="rgb(217,94,46)"/><text x="21.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py:15) (1 samples, 0.12%)</title><rect x="18" y="1316" width="1" height="15" fill="rgb(212,50,2)"/><text x="21.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1332" width="1" height="15" fill="rgb(212,72,28)"/><text x="21.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1348" width="1" height="15" fill="rgb(234,194,6)"/><text x="21.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1364" width="1" height="15" fill="rgb(245,92,33)"/><text x="21.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1380" width="1" height="15" fill="rgb(225,2,13)"/><text x="21.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1396" width="1" height="15" fill="rgb(246,44,53)"/><text x="21.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py:4) (1 samples, 0.12%)</title><rect x="18" y="1412" width="1" height="15" fill="rgb(217,152,33)"/><text x="21.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1428" width="1" height="15" fill="rgb(238,34,46)"/><text x="21.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1444" width="1" height="15" fill="rgb(226,89,18)"/><text x="21.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1460" width="1" height="15" fill="rgb(247,162,16)"/><text x="21.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1476" width="1" height="15" fill="rgb(221,225,20)"/><text x="21.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1492" width="1" height="15" fill="rgb(235,173,14)"/><text x="21.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/least_squares.py:15) (1 samples, 0.12%)</title><rect x="18" y="1508" width="1" height="15" fill="rgb(214,38,7)"/><text x="21.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1524" width="1" height="15" fill="rgb(250,141,29)"/><text x="21.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1540" width="1" height="15" fill="rgb(217,191,18)"/><text x="21.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1556" width="1" height="15" fill="rgb(248,90,44)"/><text x="21.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1572" width="1" height="15" fill="rgb(244,119,17)"/><text x="21.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1588" width="1" height="15" fill="rgb(208,71,50)"/><text x="21.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/trf.py:105) (1 samples, 0.12%)</title><rect x="18" y="1604" width="1" height="15" fill="rgb(247,80,27)"/><text x="21.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1620" width="1" height="15" fill="rgb(237,23,31)"/><text x="21.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1636" width="1" height="15" fill="rgb(250,205,34)"/><text x="21.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1652" width="1" height="15" fill="rgb(235,179,14)"/><text x="21.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="18" y="1668" width="1" height="15" fill="rgb(227,65,47)"/><text x="21.00" y="1678.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="18" y="1684" width="1" height="15" fill="rgb(249,208,26)"/><text x="21.00" y="1694.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="18" y="1700" width="1" height="15" fill="rgb(225,210,36)"/><text x="21.00" y="1710.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:4) (3 samples, 0.35%)</title><rect x="16" y="148" width="4" height="15" fill="rgb(223,77,11)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="16" y="164" width="4" height="15" fill="rgb(236,53,54)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.35%)</title><rect x="16" y="180" width="4" height="15" fill="rgb(218,216,18)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="16" y="196" width="4" height="15" fill="rgb(244,183,20)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="16" y="212" width="4" height="15" fill="rgb(238,74,43)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="16" y="228" width="4" height="15" fill="rgb(221,215,38)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="16" y="244" width="4" height="15" fill="rgb(250,117,35)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="16" y="260" width="4" height="15" fill="rgb(247,74,12)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="16" y="276" width="4" height="15" fill="rgb(218,38,5)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.35%)</title><rect x="16" y="292" width="4" height="15" fill="rgb(229,105,24)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="16" y="308" width="4" height="15" fill="rgb(247,159,20)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="16" y="324" width="4" height="15" fill="rgb(219,172,7)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="16" y="340" width="4" height="15" fill="rgb(243,218,47)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="16" y="356" width="4" height="15" fill="rgb(224,72,42)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="16" y="372" width="4" height="15" fill="rgb(239,84,25)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.35%)</title><rect x="16" y="388" width="4" height="15" fill="rgb(248,47,26)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="16" y="404" width="4" height="15" fill="rgb(242,95,16)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="16" y="420" width="4" height="15" fill="rgb(235,101,43)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="16" y="436" width="4" height="15" fill="rgb(250,20,3)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="16" y="452" width="4" height="15" fill="rgb(237,48,24)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="16" y="468" width="4" height="15" fill="rgb(233,16,18)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.23%)</title><rect x="18" y="484" width="2" height="15" fill="rgb(218,25,5)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="18" y="500" width="2" height="15" fill="rgb(230,220,11)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="18" y="516" width="2" height="15" fill="rgb(207,124,40)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="18" y="532" width="2" height="15" fill="rgb(223,163,3)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="18" y="548" width="2" height="15" fill="rgb(251,133,30)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="18" y="564" width="2" height="15" fill="rgb(212,49,8)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.23%)</title><rect x="18" y="580" width="2" height="15" fill="rgb(235,28,52)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="18" y="596" width="2" height="15" fill="rgb(209,224,13)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="18" y="612" width="2" height="15" fill="rgb(208,191,40)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="18" y="628" width="2" height="15" fill="rgb(226,194,23)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="18" y="644" width="2" height="15" fill="rgb(227,19,34)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="18" y="660" width="2" height="15" fill="rgb(225,148,52)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.23%)</title><rect x="18" y="676" width="2" height="15" fill="rgb(243,100,43)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="18" y="692" width="2" height="15" fill="rgb(215,228,2)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="18" y="708" width="2" height="15" fill="rgb(206,132,3)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="18" y="724" width="2" height="15" fill="rgb(238,105,5)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="18" y="740" width="2" height="15" fill="rgb(225,35,7)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="18" y="756" width="2" height="15" fill="rgb(209,88,23)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.23%)</title><rect x="18" y="772" width="2" height="15" fill="rgb(221,51,23)"/><text x="21.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.23%)</title><rect x="18" y="788" width="2" height="15" fill="rgb(217,142,0)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="18" y="804" width="2" height="15" fill="rgb(227,207,44)"/><text x="21.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="18" y="820" width="2" height="15" fill="rgb(230,41,48)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="18" y="836" width="2" height="15" fill="rgb(205,109,22)"/><text x="21.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="18" y="852" width="2" height="15" fill="rgb(206,170,28)"/><text x="21.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="18" y="868" width="2" height="15" fill="rgb(211,39,25)"/><text x="21.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="18" y="884" width="2" height="15" fill="rgb(246,165,27)"/><text x="21.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.12%)</title><rect x="19" y="900" width="1" height="15" fill="rgb(235,33,4)"/><text x="22.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="19" y="916" width="1" height="15" fill="rgb(219,42,33)"/><text x="22.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="19" y="932" width="1" height="15" fill="rgb(253,43,32)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="19" y="948" width="1" height="15" fill="rgb(224,206,53)"/><text x="22.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="19" y="964" width="1" height="15" fill="rgb(243,143,11)"/><text x="22.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="19" y="980" width="1" height="15" fill="rgb(206,38,20)"/><text x="22.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="19" y="996" width="1" height="15" fill="rgb(231,55,41)"/><text x="22.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="19" y="1012" width="1" height="15" fill="rgb(217,137,26)"/><text x="22.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1252) (1 samples, 0.12%)</title><rect x="19" y="1028" width="1" height="15" fill="rgb(235,100,47)"/><text x="22.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1594) (1 samples, 0.12%)</title><rect x="19" y="1044" width="1" height="15" fill="rgb(224,26,18)"/><text x="22.00" y="1054.50"></text></g><g><title>__init__ (numpy/lib/function_base.py:2054) (1 samples, 0.12%)</title><rect x="19" y="1060" width="1" height="15" fill="rgb(211,177,32)"/><text x="22.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.12%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(211,185,8)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(216,218,18)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(235,163,27)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(248,221,4)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(228,205,37)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(247,170,4)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:17) (1 samples, 0.12%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(210,190,40)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(205,35,9)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(252,190,45)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(251,131,2)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(216,114,41)"/><text x="23.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(217,52,16)"/><text x="23.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(242,201,36)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="22" y="980" width="1" height="15" fill="rgb(234,179,32)"/><text x="25.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="22" y="996" width="1" height="15" fill="rgb(205,75,17)"/><text x="25.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="22" y="1012" width="1" height="15" fill="rgb(212,20,45)"/><text x="25.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.35%)</title><rect x="20" y="436" width="5" height="15" fill="rgb(235,142,7)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="20" y="452" width="5" height="15" fill="rgb(248,188,20)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="20" y="468" width="5" height="15" fill="rgb(238,54,0)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="20" y="484" width="5" height="15" fill="rgb(207,157,29)"/><text x="23.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="20" y="500" width="5" height="15" fill="rgb(244,224,8)"/><text x="23.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="20" y="516" width="5" height="15" fill="rgb(215,227,12)"/><text x="23.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.35%)</title><rect x="20" y="532" width="5" height="15" fill="rgb(206,139,26)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="20" y="548" width="5" height="15" fill="rgb(216,104,32)"/><text x="23.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="20" y="564" width="5" height="15" fill="rgb(223,53,32)"/><text x="23.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="20" y="580" width="5" height="15" fill="rgb(216,101,6)"/><text x="23.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="20" y="596" width="5" height="15" fill="rgb(250,63,26)"/><text x="23.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="20" y="612" width="5" height="15" fill="rgb(228,107,18)"/><text x="23.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.23%)</title><rect x="22" y="628" width="3" height="15" fill="rgb(217,31,21)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="22" y="644" width="3" height="15" fill="rgb(221,18,10)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="22" y="660" width="3" height="15" fill="rgb(231,195,52)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="22" y="676" width="3" height="15" fill="rgb(206,145,20)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="22" y="692" width="3" height="15" fill="rgb(247,116,33)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="22" y="708" width="3" height="15" fill="rgb(205,197,29)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.23%)</title><rect x="22" y="724" width="3" height="15" fill="rgb(223,81,20)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="22" y="740" width="3" height="15" fill="rgb(233,205,8)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="22" y="756" width="3" height="15" fill="rgb(206,131,26)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="22" y="772" width="3" height="15" fill="rgb(210,107,19)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="22" y="788" width="3" height="15" fill="rgb(252,53,14)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(247,175,3)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.23%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(224,72,0)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(233,98,17)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(247,34,4)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(227,39,50)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(212,22,26)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(217,2,30)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.23%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(214,8,3)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(216,143,32)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(250,177,27)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(236,98,10)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(217,6,12)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="996" width="2" height="15" fill="rgb(236,14,24)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.12%)</title><rect x="23" y="1012" width="2" height="15" fill="rgb(220,199,14)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1028" width="2" height="15" fill="rgb(212,65,6)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(226,54,36)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(212,119,45)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(219,0,32)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="1092" width="2" height="15" fill="rgb(246,219,28)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.12%)</title><rect x="23" y="1108" width="2" height="15" fill="rgb(209,178,11)"/><text x="26.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1124" width="2" height="15" fill="rgb(245,173,48)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1140" width="2" height="15" fill="rgb(209,203,31)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1156" width="2" height="15" fill="rgb(209,200,8)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="1172" width="2" height="15" fill="rgb(251,196,10)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="1188" width="2" height="15" fill="rgb(247,144,43)"/><text x="26.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.12%)</title><rect x="23" y="1204" width="2" height="15" fill="rgb(238,84,37)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1220" width="2" height="15" fill="rgb(217,21,6)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1236" width="2" height="15" fill="rgb(232,167,26)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1252" width="2" height="15" fill="rgb(215,38,35)"/><text x="26.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="1268" width="2" height="15" fill="rgb(215,227,21)"/><text x="26.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="1284" width="2" height="15" fill="rgb(223,73,54)"/><text x="26.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.12%)</title><rect x="23" y="1300" width="2" height="15" fill="rgb(254,162,39)"/><text x="26.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1316" width="2" height="15" fill="rgb(211,136,3)"/><text x="26.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1332" width="2" height="15" fill="rgb(222,22,5)"/><text x="26.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1348" width="2" height="15" fill="rgb(254,70,51)"/><text x="26.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="23" y="1364" width="2" height="15" fill="rgb(248,18,22)"/><text x="26.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="23" y="1380" width="2" height="15" fill="rgb(249,157,35)"/><text x="26.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.12%)</title><rect x="23" y="1396" width="2" height="15" fill="rgb(207,204,28)"/><text x="26.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="23" y="1412" width="2" height="15" fill="rgb(214,16,0)"/><text x="26.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="23" y="1428" width="2" height="15" fill="rgb(249,30,50)"/><text x="26.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="23" y="1444" width="2" height="15" fill="rgb(244,14,27)"/><text x="26.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="23" y="1460" width="2" height="15" fill="rgb(234,190,19)"/><text x="26.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="23" y="1476" width="2" height="15" fill="rgb(237,180,49)"/><text x="26.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="23" y="1492" width="2" height="15" fill="rgb(219,59,30)"/><text x="26.00" y="1502.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:41) (1 samples, 0.12%)</title><rect x="25" y="1316" width="1" height="15" fill="rgb(244,148,54)"/><text x="28.00" y="1326.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="25" y="1332" width="1" height="15" fill="rgb(237,132,44)"/><text x="28.00" y="1342.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="25" y="1348" width="1" height="15" fill="rgb(251,110,44)"/><text x="28.00" y="1358.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="25" y="1364" width="1" height="15" fill="rgb(238,191,2)"/><text x="28.00" y="1374.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="25" y="1380" width="1" height="15" fill="rgb(212,3,0)"/><text x="28.00" y="1390.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="25" y="1396" width="1" height="15" fill="rgb(213,154,30)"/><text x="28.00" y="1406.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.12%)</title><rect x="25" y="1412" width="1" height="15" fill="rgb(241,122,45)"/><text x="28.00" y="1422.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.12%)</title><rect x="25" y="1428" width="1" height="15" fill="rgb(247,224,17)"/><text x="28.00" y="1438.50"></text></g><g><title>__next (sre_parse.py:247) (1 samples, 0.12%)</title><rect x="25" y="1444" width="1" height="15" fill="rgb(250,77,4)"/><text x="28.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.23%)</title><rect x="25" y="1108" width="2" height="15" fill="rgb(230,5,20)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(214,204,20)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(243,211,9)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(240,197,4)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(246,84,15)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="25" y="1188" width="2" height="15" fill="rgb(211,141,29)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.23%)</title><rect x="25" y="1204" width="2" height="15" fill="rgb(249,19,31)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="25" y="1220" width="2" height="15" fill="rgb(214,125,37)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="25" y="1236" width="2" height="15" fill="rgb(233,155,40)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="25" y="1252" width="2" height="15" fill="rgb(226,215,44)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="25" y="1268" width="2" height="15" fill="rgb(215,39,33)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="25" y="1284" width="2" height="15" fill="rgb(253,73,4)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.23%)</title><rect x="25" y="1300" width="2" height="15" fill="rgb(244,121,21)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.12%)</title><rect x="26" y="1316" width="1" height="15" fill="rgb(216,59,49)"/><text x="29.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.12%)</title><rect x="26" y="1332" width="1" height="15" fill="rgb(240,183,6)"/><text x="29.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.12%)</title><rect x="26" y="1348" width="1" height="15" fill="rgb(251,194,43)"/><text x="29.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.12%)</title><rect x="26" y="1364" width="1" height="15" fill="rgb(253,98,11)"/><text x="29.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.12%)</title><rect x="26" y="1380" width="1" height="15" fill="rgb(243,206,53)"/><text x="29.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.12%)</title><rect x="26" y="1396" width="1" height="15" fill="rgb(215,71,24)"/><text x="29.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="26" y="1412" width="1" height="15" fill="rgb(215,168,22)"/><text x="29.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.12%)</title><rect x="26" y="1428" width="1" height="15" fill="rgb(210,121,18)"/><text x="29.00" y="1438.50"></text></g><g><title>__get__ (types.py:169) (1 samples, 0.12%)</title><rect x="26" y="1444" width="1" height="15" fill="rgb(248,132,43)"/><text x="29.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.12%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(216,104,17)"/><text x="30.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(240,96,41)"/><text x="30.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(214,155,47)"/><text x="30.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="27" y="1156" width="2" height="15" fill="rgb(237,71,54)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="27" y="1172" width="2" height="15" fill="rgb(206,137,20)"/><text x="30.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="27" y="1188" width="2" height="15" fill="rgb(232,106,18)"/><text x="30.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="27" y="1204" width="2" height="15" fill="rgb(220,181,9)"/><text x="30.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="27" y="1220" width="2" height="15" fill="rgb(210,152,39)"/><text x="30.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:31) (1 samples, 0.12%)</title><rect x="27" y="1236" width="2" height="15" fill="rgb(238,69,6)"/><text x="30.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="27" y="1252" width="2" height="15" fill="rgb(211,220,23)"/><text x="30.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="27" y="1268" width="2" height="15" fill="rgb(248,133,22)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="27" y="1284" width="2" height="15" fill="rgb(232,132,50)"/><text x="30.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="27" y="1300" width="2" height="15" fill="rgb(221,104,39)"/><text x="30.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="27" y="1316" width="2" height="15" fill="rgb(205,222,34)"/><text x="30.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="27" y="1332" width="2" height="15" fill="rgb(205,199,32)"/><text x="30.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.12%)</title><rect x="27" y="1348" width="2" height="15" fill="rgb(229,88,50)"/><text x="30.00" y="1358.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.12%)</title><rect x="27" y="1364" width="2" height="15" fill="rgb(225,19,34)"/><text x="30.00" y="1374.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="27" y="1380" width="2" height="15" fill="rgb(244,57,13)"/><text x="30.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:4) (15 samples, 1.74%)</title><rect x="10" y="52" width="20" height="15" fill="rgb(249,176,54)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 1.74%)</title><rect x="10" y="68" width="20" height="15" fill="rgb(223,81,46)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 1.74%)</title><rect x="10" y="84" width="20" height="15" fill="rgb(252,16,35)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 1.74%)</title><rect x="10" y="100" width="20" height="15" fill="rgb(234,16,13)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 1.74%)</title><rect x="10" y="116" width="20" height="15" fill="rgb(218,0,40)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 1.74%)</title><rect x="10" y="132" width="20" height="15" fill="rgb(220,218,9)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (7 samples, 0.81%)</title><rect x="20" y="148" width="10" height="15" fill="rgb(243,86,38)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.81%)</title><rect x="20" y="164" width="10" height="15" fill="rgb(247,198,43)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.81%)</title><rect x="20" y="180" width="10" height="15" fill="rgb(236,76,19)"/><text x="23.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.81%)</title><rect x="20" y="196" width="10" height="15" fill="rgb(216,55,27)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.81%)</title><rect x="20" y="212" width="10" height="15" fill="rgb(212,68,12)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.81%)</title><rect x="20" y="228" width="10" height="15" fill="rgb(242,124,7)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 0.81%)</title><rect x="20" y="244" width="10" height="15" fill="rgb(212,91,34)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.81%)</title><rect x="20" y="260" width="10" height="15" fill="rgb(230,174,43)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.81%)</title><rect x="20" y="276" width="10" height="15" fill="rgb(219,17,19)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.81%)</title><rect x="20" y="292" width="10" height="15" fill="rgb(246,179,13)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.81%)</title><rect x="20" y="308" width="10" height="15" fill="rgb(250,85,23)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.81%)</title><rect x="20" y="324" width="10" height="15" fill="rgb(232,51,45)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 0.81%)</title><rect x="20" y="340" width="10" height="15" fill="rgb(244,124,13)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.81%)</title><rect x="20" y="356" width="10" height="15" fill="rgb(254,163,38)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.81%)</title><rect x="20" y="372" width="10" height="15" fill="rgb(208,62,34)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.81%)</title><rect x="20" y="388" width="10" height="15" fill="rgb(215,72,52)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.81%)</title><rect x="20" y="404" width="10" height="15" fill="rgb(231,69,34)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.81%)</title><rect x="20" y="420" width="10" height="15" fill="rgb(240,34,26)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.46%)</title><rect x="25" y="436" width="5" height="15" fill="rgb(245,26,31)"/><text x="28.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="452" width="5" height="15" fill="rgb(231,205,13)"/><text x="28.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.46%)</title><rect x="25" y="468" width="5" height="15" fill="rgb(215,144,45)"/><text x="28.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="484" width="5" height="15" fill="rgb(215,178,44)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="500" width="5" height="15" fill="rgb(220,185,33)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="25" y="516" width="5" height="15" fill="rgb(231,21,47)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="25" y="532" width="5" height="15" fill="rgb(217,33,33)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="25" y="548" width="5" height="15" fill="rgb(211,157,8)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="564" width="5" height="15" fill="rgb(228,143,48)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.46%)</title><rect x="25" y="580" width="5" height="15" fill="rgb(224,26,14)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="596" width="5" height="15" fill="rgb(253,221,21)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="25" y="612" width="5" height="15" fill="rgb(214,112,5)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="25" y="628" width="5" height="15" fill="rgb(243,136,32)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="25" y="644" width="5" height="15" fill="rgb(216,122,14)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="660" width="5" height="15" fill="rgb(224,193,46)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.46%)</title><rect x="25" y="676" width="5" height="15" fill="rgb(215,40,29)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="692" width="5" height="15" fill="rgb(236,208,54)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="25" y="708" width="5" height="15" fill="rgb(241,216,34)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="25" y="724" width="5" height="15" fill="rgb(215,108,54)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="25" y="740" width="5" height="15" fill="rgb(250,62,6)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="756" width="5" height="15" fill="rgb(251,55,25)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.46%)</title><rect x="25" y="772" width="5" height="15" fill="rgb(214,156,46)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="788" width="5" height="15" fill="rgb(225,119,3)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="25" y="804" width="5" height="15" fill="rgb(232,34,4)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="25" y="820" width="5" height="15" fill="rgb(207,175,26)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="25" y="836" width="5" height="15" fill="rgb(253,108,42)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="852" width="5" height="15" fill="rgb(231,68,4)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.46%)</title><rect x="25" y="868" width="5" height="15" fill="rgb(248,49,44)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="884" width="5" height="15" fill="rgb(233,203,48)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.46%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(211,48,32)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(241,0,38)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(233,68,22)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(246,125,30)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(252,56,33)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="25" y="980" width="5" height="15" fill="rgb(253,70,25)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(230,101,8)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.46%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(214,227,5)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="25" y="1028" width="5" height="15" fill="rgb(238,208,3)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="25" y="1044" width="5" height="15" fill="rgb(218,14,38)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="25" y="1060" width="5" height="15" fill="rgb(213,157,10)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="25" y="1076" width="5" height="15" fill="rgb(242,148,18)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="25" y="1092" width="5" height="15" fill="rgb(241,132,42)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.12%)</title><rect x="29" y="1108" width="1" height="15" fill="rgb(249,93,51)"/><text x="32.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="29" y="1124" width="1" height="15" fill="rgb(210,124,29)"/><text x="32.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="29" y="1140" width="1" height="15" fill="rgb(241,154,26)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="29" y="1156" width="1" height="15" fill="rgb(254,48,28)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="29" y="1172" width="1" height="15" fill="rgb(223,80,30)"/><text x="32.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="29" y="1188" width="1" height="15" fill="rgb(243,51,35)"/><text x="32.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="29" y="1204" width="1" height="15" fill="rgb(225,81,54)"/><text x="32.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="29" y="1220" width="1" height="15" fill="rgb(213,52,36)"/><text x="32.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.12%)</title><rect x="29" y="1236" width="1" height="15" fill="rgb(215,194,8)"/><text x="32.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="29" y="1252" width="1" height="15" fill="rgb(250,90,6)"/><text x="32.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="29" y="1268" width="1" height="15" fill="rgb(251,15,25)"/><text x="32.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="29" y="1284" width="1" height="15" fill="rgb(208,133,5)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="29" y="1300" width="1" height="15" fill="rgb(253,79,19)"/><text x="32.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="29" y="1316" width="1" height="15" fill="rgb(207,175,43)"/><text x="32.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="29" y="1332" width="1" height="15" fill="rgb(242,129,1)"/><text x="32.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="29" y="1348" width="1" height="15" fill="rgb(232,125,52)"/><text x="32.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.12%)</title><rect x="29" y="1364" width="1" height="15" fill="rgb(250,0,6)"/><text x="32.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="29" y="1380" width="1" height="15" fill="rgb(247,27,13)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="29" y="1396" width="1" height="15" fill="rgb(205,83,33)"/><text x="32.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="29" y="1412" width="1" height="15" fill="rgb(218,130,34)"/><text x="32.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="29" y="1428" width="1" height="15" fill="rgb(206,69,11)"/><text x="32.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="29" y="1444" width="1" height="15" fill="rgb(240,135,41)"/><text x="32.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.12%)</title><rect x="29" y="1460" width="1" height="15" fill="rgb(210,103,21)"/><text x="32.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="29" y="1476" width="1" height="15" fill="rgb(241,172,41)"/><text x="32.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="29" y="1492" width="1" height="15" fill="rgb(227,22,47)"/><text x="32.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="29" y="1508" width="1" height="15" fill="rgb(224,171,24)"/><text x="32.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="29" y="1524" width="1" height="15" fill="rgb(239,2,51)"/><text x="32.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="29" y="1540" width="1" height="15" fill="rgb(220,50,36)"/><text x="32.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:281) (1 samples, 0.12%)</title><rect x="29" y="1556" width="1" height="15" fill="rgb(216,170,2)"/><text x="32.00" y="1566.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py:278) (1 samples, 0.12%)</title><rect x="29" y="1572" width="1" height="15" fill="rgb(206,48,43)"/><text x="32.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.12%)</title><rect x="29" y="1588" width="1" height="15" fill="rgb(237,171,44)"/><text x="32.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.12%)</title><rect x="29" y="1604" width="1" height="15" fill="rgb(208,100,44)"/><text x="32.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.12%)</title><rect x="29" y="1620" width="1" height="15" fill="rgb(212,95,49)"/><text x="32.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.12%)</title><rect x="29" y="1636" width="1" height="15" fill="rgb(228,126,18)"/><text x="32.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.12%)</title><rect x="29" y="1652" width="1" height="15" fill="rgb(218,42,14)"/><text x="32.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="29" y="1668" width="1" height="15" fill="rgb(221,92,20)"/><text x="32.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:744) (1 samples, 0.12%)</title><rect x="29" y="1684" width="1" height="15" fill="rgb(220,215,28)"/><text x="32.00" y="1694.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.12%)</title><rect x="29" y="1700" width="1" height="15" fill="rgb(250,67,37)"/><text x="32.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.12%)</title><rect x="29" y="1716" width="1" height="15" fill="rgb(236,141,39)"/><text x="32.00" y="1726.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.12%)</title><rect x="29" y="1732" width="1" height="15" fill="rgb(209,137,29)"/><text x="32.00" y="1742.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.12%)</title><rect x="29" y="1748" width="1" height="15" fill="rgb(251,163,9)"/><text x="32.00" y="1758.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.12%)</title><rect x="29" y="1764" width="1" height="15" fill="rgb(219,18,26)"/><text x="32.00" y="1774.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.12%)</title><rect x="29" y="1780" width="1" height="15" fill="rgb(222,159,29)"/><text x="32.00" y="1790.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.12%)</title><rect x="29" y="1796" width="1" height="15" fill="rgb(215,154,8)"/><text x="32.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.12%)</title><rect x="29" y="1812" width="1" height="15" fill="rgb(247,78,46)"/><text x="32.00" y="1822.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.12%)</title><rect x="29" y="1828" width="1" height="15" fill="rgb(224,206,53)"/><text x="32.00" y="1838.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.12%)</title><rect x="29" y="1844" width="1" height="15" fill="rgb(251,74,24)"/><text x="32.00" y="1854.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (1 samples, 0.12%)</title><rect x="30" y="148" width="1" height="15" fill="rgb(249,222,0)"/><text x="33.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="30" y="164" width="1" height="15" fill="rgb(219,223,4)"/><text x="33.00" y="174.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:78) (1 samples, 0.12%)</title><rect x="31" y="164" width="2" height="15" fill="rgb(220,218,35)"/><text x="34.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.23%)</title><rect x="33" y="180" width="3" height="15" fill="rgb(217,145,16)"/><text x="36.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.12%)</title><rect x="34" y="196" width="2" height="15" fill="rgb(212,147,53)"/><text x="37.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.23%)</title><rect x="36" y="180" width="2" height="15" fill="rgb(234,146,13)"/><text x="39.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.12%)</title><rect x="37" y="196" width="1" height="15" fill="rgb(253,175,28)"/><text x="40.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.12%)</title><rect x="37" y="212" width="1" height="15" fill="rgb(221,41,32)"/><text x="40.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.12%)</title><rect x="38" y="180" width="2" height="15" fill="rgb(210,115,17)"/><text x="41.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.12%)</title><rect x="38" y="196" width="2" height="15" fill="rgb(237,210,10)"/><text x="41.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.12%)</title><rect x="40" y="180" width="1" height="15" fill="rgb(236,94,21)"/><text x="43.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.12%)</title><rect x="40" y="196" width="1" height="15" fill="rgb(245,204,41)"/><text x="43.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.12%)</title><rect x="41" y="180" width="1" height="15" fill="rgb(215,42,43)"/><text x="44.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (9 samples, 1.04%)</title><rect x="31" y="148" width="13" height="15" fill="rgb(225,0,51)"/><text x="34.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (8 samples, 0.93%)</title><rect x="33" y="164" width="11" height="15" fill="rgb(251,207,7)"/><text x="36.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.12%)</title><rect x="42" y="180" width="2" height="15" fill="rgb(217,15,21)"/><text x="45.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.12%)</title><rect x="42" y="196" width="2" height="15" fill="rgb(241,47,7)"/><text x="45.00" y="206.50"></text></g><g><title>0x7fe7bc293d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="44" y="196" width="1" height="15" fill="rgb(230,74,33)"/><text x="47.00" y="206.50"></text></g><g><title>0x7fe7bc292fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="44" y="212" width="1" height="15" fill="rgb(211,1,51)"/><text x="47.00" y="222.50"></text></g><g><title>0x7fe7bc2a2540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="44" y="228" width="1" height="15" fill="rgb(224,129,45)"/><text x="47.00" y="238.50"></text></g><g><title>0x7fe7bc2772f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="44" y="244" width="1" height="15" fill="rgb(243,114,11)"/><text x="47.00" y="254.50"></text></g><g><title>0x7fe7bc276530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="44" y="260" width="1" height="15" fill="rgb(251,102,32)"/><text x="47.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.12%)</title><rect x="44" y="276" width="1" height="15" fill="rgb(238,56,37)"/><text x="47.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="45" y="196" width="1" height="15" fill="rgb(228,109,25)"/><text x="48.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="45" y="212" width="1" height="15" fill="rgb(242,128,21)"/><text x="48.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="45" y="228" width="1" height="15" fill="rgb(248,202,28)"/><text x="48.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.12%)</title><rect x="49" y="212" width="2" height="15" fill="rgb(245,193,42)"/><text x="52.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.12%)</title><rect x="51" y="212" width="1" height="15" fill="rgb(245,54,39)"/><text x="54.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="53" y="228" width="2" height="15" fill="rgb(250,6,49)"/><text x="56.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="59" y="244" width="1" height="15" fill="rgb(238,6,10)"/><text x="62.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (13 samples, 1.51%)</title><rect x="46" y="196" width="18" height="15" fill="rgb(224,59,42)"/><text x="49.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 1.04%)</title><rect x="52" y="212" width="12" height="15" fill="rgb(230,25,45)"/><text x="55.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 0.81%)</title><rect x="55" y="228" width="9" height="15" fill="rgb(229,15,46)"/><text x="58.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.35%)</title><rect x="60" y="244" width="4" height="15" fill="rgb(247,172,51)"/><text x="63.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.12%)</title><rect x="66" y="228" width="1" height="15" fill="rgb(222,117,18)"/><text x="69.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.12%)</title><rect x="67" y="228" width="1" height="15" fill="rgb(208,46,22)"/><text x="70.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.12%)</title><rect x="68" y="244" width="2" height="15" fill="rgb(237,106,21)"/><text x="71.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.23%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(209,0,27)"/><text x="71.00" y="238.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.12%)</title><rect x="70" y="244" width="1" height="15" fill="rgb(246,200,14)"/><text x="73.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.12%)</title><rect x="71" y="244" width="1" height="15" fill="rgb(241,215,43)"/><text x="74.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.12%)</title><rect x="72" y="244" width="2" height="15" fill="rgb(240,17,26)"/><text x="75.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.12%)</title><rect x="74" y="260" width="1" height="15" fill="rgb(217,149,46)"/><text x="77.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.12%)</title><rect x="75" y="260" width="2" height="15" fill="rgb(216,179,20)"/><text x="78.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 0.58%)</title><rect x="71" y="228" width="7" height="15" fill="rgb(226,227,6)"/><text x="74.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.35%)</title><rect x="74" y="244" width="4" height="15" fill="rgb(222,143,31)"/><text x="77.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.12%)</title><rect x="77" y="260" width="1" height="15" fill="rgb(228,125,36)"/><text x="80.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.12%)</title><rect x="78" y="228" width="1" height="15" fill="rgb(233,82,37)"/><text x="81.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.12%)</title><rect x="78" y="244" width="1" height="15" fill="rgb(234,133,13)"/><text x="81.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.12%)</title><rect x="78" y="260" width="1" height="15" fill="rgb(205,49,37)"/><text x="81.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.12%)</title><rect x="81" y="244" width="1" height="15" fill="rgb(212,129,11)"/><text x="84.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.35%)</title><rect x="79" y="228" width="4" height="15" fill="rgb(224,4,17)"/><text x="82.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.12%)</title><rect x="82" y="244" width="1" height="15" fill="rgb(238,109,20)"/><text x="85.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.12%)</title><rect x="83" y="244" width="2" height="15" fill="rgb(246,127,20)"/><text x="86.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.23%)</title><rect x="83" y="228" width="3" height="15" fill="rgb(220,121,21)"/><text x="86.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.12%)</title><rect x="85" y="244" width="1" height="15" fill="rgb(208,186,23)"/><text x="88.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.12%)</title><rect x="86" y="228" width="2" height="15" fill="rgb(217,127,47)"/><text x="89.00" y="238.50"></text></g><g><title>0x7fe7e292d134 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="93" y="260" width="1" height="15" fill="rgb(227,11,6)"/><text x="96.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 0.70%)</title><rect x="88" y="244" width="8" height="15" fill="rgb(211,67,30)"/><text x="91.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.12%)</title><rect x="94" y="260" width="2" height="15" fill="rgb(254,199,40)"/><text x="97.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 0.81%)</title><rect x="88" y="228" width="9" height="15" fill="rgb(238,222,29)"/><text x="91.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.12%)</title><rect x="96" y="244" width="1" height="15" fill="rgb(240,185,0)"/><text x="99.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="97" y="244" width="1" height="15" fill="rgb(231,213,39)"/><text x="100.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.12%)</title><rect x="98" y="244" width="2" height="15" fill="rgb(246,109,31)"/><text x="101.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (30 samples, 3.48%)</title><rect x="64" y="212" width="41" height="15" fill="rgb(221,215,34)"/><text x="67.00" y="222.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 0.70%)</title><rect x="97" y="228" width="8" height="15" fill="rgb(249,140,23)"/><text x="100.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.46%)</title><rect x="100" y="244" width="5" height="15" fill="rgb(249,87,18)"/><text x="103.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.12%)</title><rect x="104" y="260" width="1" height="15" fill="rgb(217,31,20)"/><text x="107.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.12%)</title><rect x="104" y="276" width="1" height="15" fill="rgb(238,68,27)"/><text x="107.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (31 samples, 3.60%)</title><rect x="64" y="196" width="43" height="15" fill="rgb(221,56,28)"/><text x="67.00" y="206.50">pred..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.12%)</title><rect x="105" y="212" width="2" height="15" fill="rgb(239,128,39)"/><text x="108.00" y="222.50"></text></g><g><title>0x7fe7bc293d2e (?) (1 samples, 0.12%)</title><rect x="107" y="212" width="1" height="15" fill="rgb(254,25,30)"/><text x="110.00" y="222.50"></text></g><g><title>0x7fe7bc292fa9 (?) (1 samples, 0.12%)</title><rect x="107" y="228" width="1" height="15" fill="rgb(220,122,44)"/><text x="110.00" y="238.50"></text></g><g><title>0x7fe7bc292f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="108" y="228" width="1" height="15" fill="rgb(232,203,23)"/><text x="111.00" y="238.50"></text></g><g><title>0x7fe7bc2a1225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="109" y="260" width="2" height="15" fill="rgb(215,202,15)"/><text x="112.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.12%)</title><rect x="109" y="276" width="2" height="15" fill="rgb(241,22,1)"/><text x="112.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.12%)</title><rect x="109" y="292" width="2" height="15" fill="rgb(233,0,0)"/><text x="112.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.12%)</title><rect x="109" y="308" width="2" height="15" fill="rgb(252,42,37)"/><text x="112.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.12%)</title><rect x="109" y="324" width="2" height="15" fill="rgb(213,21,5)"/><text x="112.00" y="334.50"></text></g><g><title>0x7fe7bc2a12df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="111" y="260" width="1" height="15" fill="rgb(210,178,10)"/><text x="114.00" y="270.50"></text></g><g><title>0x7fe7bc285d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="111" y="276" width="1" height="15" fill="rgb(231,16,34)"/><text x="114.00" y="286.50"></text></g><g><title>0x7fe7bc285666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="111" y="292" width="1" height="15" fill="rgb(231,205,53)"/><text x="114.00" y="302.50"></text></g><g><title>0x7fe7bc27b2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="111" y="308" width="1" height="15" fill="rgb(249,69,26)"/><text x="114.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.12%)</title><rect x="111" y="324" width="1" height="15" fill="rgb(248,194,31)"/><text x="114.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.12%)</title><rect x="111" y="340" width="1" height="15" fill="rgb(238,202,19)"/><text x="114.00" y="350.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.12%)</title><rect x="112" y="276" width="2" height="15" fill="rgb(230,93,20)"/><text x="115.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.12%)</title><rect x="112" y="292" width="2" height="15" fill="rgb(235,39,41)"/><text x="115.00" y="302.50"></text></g><g><title>array_zeros (multiarraymodule.c:1993) (1 samples, 0.12%)</title><rect x="114" y="276" width="1" height="15" fill="rgb(225,14,4)"/><text x="117.00" y="286.50"></text></g><g><title>0x7fe7bc2a1592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="112" y="260" width="4" height="15" fill="rgb(253,41,26)"/><text x="115.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.12%)</title><rect x="115" y="276" width="1" height="15" fill="rgb(251,63,27)"/><text x="118.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.12%)</title><rect x="115" y="292" width="1" height="15" fill="rgb(221,134,44)"/><text x="118.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.12%)</title><rect x="115" y="308" width="1" height="15" fill="rgb(228,4,53)"/><text x="118.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.12%)</title><rect x="115" y="324" width="1" height="15" fill="rgb(239,220,3)"/><text x="118.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.12%)</title><rect x="115" y="340" width="1" height="15" fill="rgb(221,140,5)"/><text x="118.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.12%)</title><rect x="115" y="356" width="1" height="15" fill="rgb(214,143,29)"/><text x="118.00" y="366.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="115" y="372" width="1" height="15" fill="rgb(206,223,0)"/><text x="118.00" y="382.50"></text></g><g><title>0x7fe7e2870120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="115" y="388" width="1" height="15" fill="rgb(211,30,41)"/><text x="118.00" y="398.50"></text></g><g><title>0x7fe7bc2a1644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="116" y="260" width="2" height="15" fill="rgb(245,146,35)"/><text x="119.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="116" y="276" width="2" height="15" fill="rgb(214,154,48)"/><text x="119.00" y="286.50"></text></g><g><title>0x7fe7bc2a1693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="118" y="260" width="1" height="15" fill="rgb(223,7,4)"/><text x="121.00" y="270.50"></text></g><g><title>0x7fe7bc2a1698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="119" y="260" width="3" height="15" fill="rgb(220,56,4)"/><text x="122.00" y="270.50"></text></g><g><title>0x7fe7bc2a16a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="122" y="260" width="4" height="15" fill="rgb(225,228,21)"/><text x="125.00" y="270.50"></text></g><g><title>0x7fe7bc2a16aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="126" y="260" width="3" height="15" fill="rgb(219,184,18)"/><text x="129.00" y="270.50"></text></g><g><title>0x7fe7bc2a16ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="129" y="260" width="1" height="15" fill="rgb(247,193,45)"/><text x="132.00" y="270.50"></text></g><g><title>0x7fe7bc2a16b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="130" y="260" width="1" height="15" fill="rgb(208,200,13)"/><text x="133.00" y="270.50"></text></g><g><title>0x7fe7bc2a16c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="131" y="260" width="2" height="15" fill="rgb(225,25,52)"/><text x="134.00" y="270.50"></text></g><g><title>0x7fe7bc2a16c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="133" y="260" width="1" height="15" fill="rgb(214,9,37)"/><text x="136.00" y="270.50"></text></g><g><title>0x7fe7bc2a16d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="134" y="260" width="1" height="15" fill="rgb(211,76,28)"/><text x="137.00" y="270.50"></text></g><g><title>0x7fe7bc2a16e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="135" y="260" width="2" height="15" fill="rgb(251,160,46)"/><text x="138.00" y="270.50"></text></g><g><title>0x7fe7bc292fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 2.44%)</title><rect x="109" y="228" width="29" height="15" fill="rgb(222,133,13)"/><text x="112.00" y="238.50">0x..</text></g><g><title>0x7fe7bc2a2405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 2.44%)</title><rect x="109" y="244" width="29" height="15" fill="rgb(236,228,15)"/><text x="112.00" y="254.50">0x..</text></g><g><title>0x7fe7bc2a192f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="137" y="260" width="1" height="15" fill="rgb(253,46,54)"/><text x="140.00" y="270.50"></text></g><g><title>0x7fe7bc276a78 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="137" y="276" width="1" height="15" fill="rgb(241,133,23)"/><text x="140.00" y="286.50"></text></g><g><title>0x7fe7bc292fbc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="138" y="228" width="2" height="15" fill="rgb(225,39,45)"/><text x="141.00" y="238.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.12%)</title><rect x="140" y="244" width="1" height="15" fill="rgb(205,128,39)"/><text x="143.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.12%)</title><rect x="140" y="260" width="1" height="15" fill="rgb(211,71,14)"/><text x="143.00" y="270.50"></text></g><g><title>0x7fe7bc29305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="140" y="228" width="2" height="15" fill="rgb(247,113,38)"/><text x="143.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.12%)</title><rect x="141" y="244" width="1" height="15" fill="rgb(239,218,38)"/><text x="144.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.12%)</title><rect x="141" y="260" width="1" height="15" fill="rgb(218,6,4)"/><text x="144.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="141" y="276" width="1" height="15" fill="rgb(238,176,51)"/><text x="144.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="141" y="292" width="1" height="15" fill="rgb(233,13,12)"/><text x="144.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="141" y="308" width="1" height="15" fill="rgb(231,43,30)"/><text x="144.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="141" y="324" width="1" height="15" fill="rgb(236,137,31)"/><text x="144.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="141" y="340" width="1" height="15" fill="rgb(246,54,4)"/><text x="144.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="141" y="356" width="1" height="15" fill="rgb(244,172,14)"/><text x="144.00" y="366.50"></text></g><g><title>0x7fe7e2851700 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="141" y="372" width="1" height="15" fill="rgb(225,37,27)"/><text x="144.00" y="382.50"></text></g><g><title>0x7fe7e284eaa4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="141" y="388" width="1" height="15" fill="rgb(222,132,0)"/><text x="144.00" y="398.50"></text></g><g><title>0x7fe7bc29313a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="142" y="228" width="2" height="15" fill="rgb(222,213,35)"/><text x="145.00" y="238.50"></text></g><g><title>0x7fe7bc29318f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="144" y="228" width="1" height="15" fill="rgb(220,147,2)"/><text x="147.00" y="238.50"></text></g><g><title>0x7fe7bc2931bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="145" y="228" width="1" height="15" fill="rgb(231,182,6)"/><text x="148.00" y="238.50"></text></g><g><title>PyArray_Newshape (shape.c:194) (1 samples, 0.12%)</title><rect x="146" y="276" width="2" height="15" fill="rgb(227,64,46)"/><text x="149.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (31 samples, 3.60%)</title><rect x="107" y="196" width="42" height="15" fill="rgb(247,146,23)"/><text x="110.00" y="206.50">pre..</text></g><g><title>0x7fe7bc293d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 3.48%)</title><rect x="108" y="212" width="41" height="15" fill="rgb(227,156,7)"/><text x="111.00" y="222.50">0x7..</text></g><g><title>0x7fe7bc293328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="146" y="228" width="3" height="15" fill="rgb(224,150,38)"/><text x="149.00" y="238.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.23%)</title><rect x="146" y="244" width="3" height="15" fill="rgb(212,65,50)"/><text x="149.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.23%)</title><rect x="146" y="260" width="3" height="15" fill="rgb(212,75,33)"/><text x="149.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.12%)</title><rect x="148" y="276" width="1" height="15" fill="rgb(210,88,15)"/><text x="151.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.12%)</title><rect x="148" y="292" width="1" height="15" fill="rgb(225,23,38)"/><text x="151.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.12%)</title><rect x="148" y="308" width="1" height="15" fill="rgb(244,117,5)"/><text x="151.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (78 samples, 9.05%)</title><rect x="44" y="180" width="106" height="15" fill="rgb(221,40,28)"/><text x="47.00" y="190.50">&lt;listcomp&gt; (..</text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.12%)</title><rect x="149" y="196" width="1" height="15" fill="rgb(253,45,31)"/><text x="152.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.12%)</title><rect x="150" y="180" width="2" height="15" fill="rgb(214,209,27)"/><text x="153.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.12%)</title><rect x="150" y="196" width="2" height="15" fill="rgb(245,1,16)"/><text x="153.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.12%)</title><rect x="150" y="212" width="2" height="15" fill="rgb(235,55,47)"/><text x="153.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.12%)</title><rect x="150" y="228" width="2" height="15" fill="rgb(231,105,28)"/><text x="153.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:482) (1 samples, 0.12%)</title><rect x="150" y="244" width="2" height="15" fill="rgb(241,223,38)"/><text x="153.00" y="254.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (80 samples, 9.28%)</title><rect x="44" y="164" width="109" height="15" fill="rgb(221,11,43)"/><text x="47.00" y="174.50">_get_median_p..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.12%)</title><rect x="152" y="180" width="1" height="15" fill="rgb(244,129,47)"/><text x="155.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.12%)</title><rect x="152" y="196" width="1" height="15" fill="rgb(207,161,44)"/><text x="155.00" y="206.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:4) (1 samples, 0.12%)</title><rect x="156" y="180" width="1" height="15" fill="rgb(228,68,0)"/><text x="159.00" y="190.50"></text></g><g><title>_new_argsortlike (item_selection.c:1027) (2 samples, 0.23%)</title><rect x="159" y="276" width="2" height="15" fill="rgb(207,221,28)"/><text x="162.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1048) (2 samples, 0.23%)</title><rect x="161" y="276" width="3" height="15" fill="rgb(211,87,26)"/><text x="164.00" y="286.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src:1915) (2 samples, 0.23%)</title><rect x="161" y="292" width="3" height="15" fill="rgb(225,42,37)"/><text x="164.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:317) (2 samples, 0.23%)</title><rect x="161" y="308" width="3" height="15" fill="rgb(249,8,25)"/><text x="164.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1056) (1 samples, 0.12%)</title><rect x="164" y="276" width="2" height="15" fill="rgb(223,155,52)"/><text x="167.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:217) (1 samples, 0.12%)</title><rect x="167" y="292" width="1" height="15" fill="rgb(248,68,27)"/><text x="170.00" y="302.50"></text></g><g><title>aquicksort_double (quicksort.c.src:219) (1 samples, 0.12%)</title><rect x="168" y="292" width="2" height="15" fill="rgb(251,229,17)"/><text x="171.00" y="302.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (2 samples, 0.23%)</title><rect x="170" y="292" width="2" height="15" fill="rgb(235,131,24)"/><text x="173.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (2 samples, 0.23%)</title><rect x="170" y="308" width="2" height="15" fill="rgb(207,65,51)"/><text x="173.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:223) (3 samples, 0.35%)</title><rect x="172" y="292" width="5" height="15" fill="rgb(208,193,39)"/><text x="175.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (9 samples, 1.04%)</title><rect x="166" y="276" width="12" height="15" fill="rgb(254,80,39)"/><text x="169.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:237) (1 samples, 0.12%)</title><rect x="177" y="292" width="1" height="15" fill="rgb(240,220,53)"/><text x="180.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (2 samples, 0.23%)</title><rect x="178" y="276" width="3" height="15" fill="rgb(229,141,34)"/><text x="181.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (22 samples, 2.55%)</title><rect x="153" y="164" width="30" height="15" fill="rgb(243,120,25)"/><text x="156.00" y="174.50">_g..</text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (19 samples, 2.20%)</title><rect x="157" y="180" width="26" height="15" fill="rgb(251,85,23)"/><text x="160.00" y="190.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (19 samples, 2.20%)</title><rect x="157" y="196" width="26" height="15" fill="rgb(226,45,3)"/><text x="160.00" y="206.50">a..</text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (19 samples, 2.20%)</title><rect x="157" y="212" width="26" height="15" fill="rgb(246,196,54)"/><text x="160.00" y="222.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (19 samples, 2.20%)</title><rect x="157" y="228" width="26" height="15" fill="rgb(212,4,13)"/><text x="160.00" y="238.50">_..</text></g><g><title>array_argsort (methods.c:1395) (18 samples, 2.09%)</title><rect x="159" y="244" width="24" height="15" fill="rgb(213,78,18)"/><text x="162.00" y="254.50">a..</text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (18 samples, 2.09%)</title><rect x="159" y="260" width="24" height="15" fill="rgb(208,115,4)"/><text x="162.00" y="270.50">P..</text></g><g><title>_new_argsortlike (item_selection.c:1101) (2 samples, 0.23%)</title><rect x="181" y="276" width="2" height="15" fill="rgb(230,116,39)"/><text x="184.00" y="286.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1425) (1 samples, 0.12%)</title><rect x="183" y="196" width="2" height="15" fill="rgb(246,164,46)"/><text x="186.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:127) (1 samples, 0.12%)</title><rect x="183" y="212" width="2" height="15" fill="rgb(231,141,4)"/><text x="186.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1521) (3 samples, 0.35%)</title><rect x="183" y="180" width="4" height="15" fill="rgb(217,219,19)"/><text x="186.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1439) (2 samples, 0.23%)</title><rect x="185" y="196" width="2" height="15" fill="rgb(224,46,37)"/><text x="188.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.12%)</title><rect x="187" y="212" width="2" height="15" fill="rgb(231,205,39)"/><text x="190.00" y="222.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:83) (1 samples, 0.12%)</title><rect x="187" y="228" width="2" height="15" fill="rgb(244,77,18)"/><text x="190.00" y="238.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.12%)</title><rect x="189" y="260" width="1" height="15" fill="rgb(229,135,37)"/><text x="192.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.12%)</title><rect x="189" y="276" width="1" height="15" fill="rgb(221,167,51)"/><text x="192.00" y="286.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.12%)</title><rect x="192" y="356" width="1" height="15" fill="rgb(253,182,25)"/><text x="195.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:245) (1 samples, 0.12%)</title><rect x="192" y="372" width="1" height="15" fill="rgb(244,204,42)"/><text x="195.00" y="382.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (4 samples, 0.46%)</title><rect x="190" y="292" width="6" height="15" fill="rgb(235,180,47)"/><text x="193.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (4 samples, 0.46%)</title><rect x="190" y="308" width="6" height="15" fill="rgb(248,45,31)"/><text x="193.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (4 samples, 0.46%)</title><rect x="190" y="324" width="6" height="15" fill="rgb(230,215,27)"/><text x="193.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (4 samples, 0.46%)</title><rect x="190" y="340" width="6" height="15" fill="rgb(211,24,18)"/><text x="193.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1756) (2 samples, 0.23%)</title><rect x="193" y="356" width="3" height="15" fill="rgb(232,141,32)"/><text x="196.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (7 samples, 0.81%)</title><rect x="187" y="180" width="10" height="15" fill="rgb(234,180,22)"/><text x="190.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (7 samples, 0.81%)</title><rect x="187" y="196" width="10" height="15" fill="rgb(229,35,30)"/><text x="190.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.70%)</title><rect x="189" y="212" width="8" height="15" fill="rgb(252,80,53)"/><text x="192.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (6 samples, 0.70%)</title><rect x="189" y="228" width="8" height="15" fill="rgb(215,31,3)"/><text x="192.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 0.70%)</title><rect x="189" y="244" width="8" height="15" fill="rgb(218,72,21)"/><text x="192.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (5 samples, 0.58%)</title><rect x="190" y="260" width="7" height="15" fill="rgb(214,28,4)"/><text x="193.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (5 samples, 0.58%)</title><rect x="190" y="276" width="7" height="15" fill="rgb(251,212,21)"/><text x="193.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:265) (1 samples, 0.12%)</title><rect x="196" y="292" width="1" height="15" fill="rgb(248,131,6)"/><text x="199.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.12%)</title><rect x="198" y="244" width="2" height="15" fill="rgb(232,207,37)"/><text x="201.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.12%)</title><rect x="200" y="276" width="1" height="15" fill="rgb(221,217,29)"/><text x="203.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.12%)</title><rect x="201" y="292" width="2" height="15" fill="rgb(207,95,23)"/><text x="204.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.12%)</title><rect x="201" y="308" width="2" height="15" fill="rgb(242,44,31)"/><text x="204.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:488) (1 samples, 0.12%)</title><rect x="201" y="324" width="2" height="15" fill="rgb(227,40,8)"/><text x="204.00" y="334.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.12%)</title><rect x="201" y="340" width="2" height="15" fill="rgb(220,203,34)"/><text x="204.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.12%)</title><rect x="203" y="340" width="1" height="15" fill="rgb(248,34,17)"/><text x="206.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.12%)</title><rect x="204" y="340" width="1" height="15" fill="rgb(224,199,24)"/><text x="207.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.12%)</title><rect x="204" y="356" width="1" height="15" fill="rgb(215,88,4)"/><text x="207.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (7 samples, 0.81%)</title><rect x="197" y="180" width="10" height="15" fill="rgb(236,136,19)"/><text x="200.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (7 samples, 0.81%)</title><rect x="197" y="196" width="10" height="15" fill="rgb(248,106,40)"/><text x="200.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 0.81%)</title><rect x="197" y="212" width="10" height="15" fill="rgb(237,141,12)"/><text x="200.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (7 samples, 0.81%)</title><rect x="197" y="228" width="10" height="15" fill="rgb(254,192,53)"/><text x="200.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 0.58%)</title><rect x="200" y="244" width="7" height="15" fill="rgb(212,135,29)"/><text x="203.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.58%)</title><rect x="200" y="260" width="7" height="15" fill="rgb(230,22,18)"/><text x="203.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.46%)</title><rect x="201" y="276" width="6" height="15" fill="rgb(241,69,37)"/><text x="204.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.35%)</title><rect x="203" y="292" width="4" height="15" fill="rgb(217,89,11)"/><text x="206.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.35%)</title><rect x="203" y="308" width="4" height="15" fill="rgb(214,119,27)"/><text x="206.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.35%)</title><rect x="203" y="324" width="4" height="15" fill="rgb(253,95,39)"/><text x="206.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.12%)</title><rect x="205" y="340" width="2" height="15" fill="rgb(254,2,18)"/><text x="208.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (1 samples, 0.12%)</title><rect x="207" y="180" width="1" height="15" fill="rgb(250,16,41)"/><text x="210.00" y="190.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.12%)</title><rect x="207" y="196" width="1" height="15" fill="rgb(215,128,52)"/><text x="210.00" y="206.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.12%)</title><rect x="207" y="212" width="1" height="15" fill="rgb(215,133,45)"/><text x="210.00" y="222.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.12%)</title><rect x="207" y="228" width="1" height="15" fill="rgb(239,52,12)"/><text x="210.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.12%)</title><rect x="207" y="244" width="1" height="15" fill="rgb(217,180,42)"/><text x="210.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.12%)</title><rect x="209" y="244" width="2" height="15" fill="rgb(229,91,41)"/><text x="212.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.12%)</title><rect x="212" y="292" width="1" height="15" fill="rgb(242,194,23)"/><text x="215.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.12%)</title><rect x="212" y="308" width="1" height="15" fill="rgb(221,9,6)"/><text x="215.00" y="318.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:421) (1 samples, 0.12%)</title><rect x="212" y="324" width="1" height="15" fill="rgb(218,41,33)"/><text x="215.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2072) (1 samples, 0.12%)</title><rect x="212" y="340" width="1" height="15" fill="rgb(205,175,54)"/><text x="215.00" y="350.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (4 samples, 0.46%)</title><rect x="209" y="196" width="6" height="15" fill="rgb(225,170,27)"/><text x="212.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.46%)</title><rect x="209" y="212" width="6" height="15" fill="rgb(216,74,41)"/><text x="212.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (4 samples, 0.46%)</title><rect x="209" y="228" width="6" height="15" fill="rgb(247,62,5)"/><text x="212.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.35%)</title><rect x="211" y="244" width="4" height="15" fill="rgb(214,112,38)"/><text x="214.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.23%)</title><rect x="212" y="260" width="3" height="15" fill="rgb(244,44,17)"/><text x="215.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.23%)</title><rect x="212" y="276" width="3" height="15" fill="rgb(224,182,8)"/><text x="215.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.12%)</title><rect x="213" y="292" width="2" height="15" fill="rgb(219,229,29)"/><text x="216.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.12%)</title><rect x="213" y="308" width="2" height="15" fill="rgb(235,87,45)"/><text x="216.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.12%)</title><rect x="213" y="324" width="2" height="15" fill="rgb(224,35,5)"/><text x="216.00" y="334.50"></text></g><g><title>isclose (numpy/core/numeric.py:2266) (1 samples, 0.12%)</title><rect x="215" y="228" width="1" height="15" fill="rgb(244,115,32)"/><text x="218.00" y="238.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="215" y="244" width="1" height="15" fill="rgb(247,4,26)"/><text x="218.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="215" y="260" width="1" height="15" fill="rgb(225,224,27)"/><text x="218.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c:3262) (1 samples, 0.12%)</title><rect x="215" y="276" width="1" height="15" fill="rgb(227,229,26)"/><text x="218.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="215" y="292" width="1" height="15" fill="rgb(208,101,39)"/><text x="218.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="215" y="308" width="1" height="15" fill="rgb(209,160,4)"/><text x="218.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="215" y="324" width="1" height="15" fill="rgb(241,76,12)"/><text x="218.00" y="334.50"></text></g><g><title>isclose (numpy/core/numeric.py:2267) (1 samples, 0.12%)</title><rect x="216" y="228" width="2" height="15" fill="rgb(214,117,6)"/><text x="219.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.12%)</title><rect x="216" y="244" width="2" height="15" fill="rgb(217,133,49)"/><text x="219.00" y="254.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.12%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(205,14,37)"/><text x="219.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="218" y="260" width="1" height="15" fill="rgb(223,192,46)"/><text x="221.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.12%)</title><rect x="218" y="276" width="1" height="15" fill="rgb(209,161,1)"/><text x="221.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.12%)</title><rect x="218" y="292" width="1" height="15" fill="rgb(217,198,38)"/><text x="221.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:969) (1 samples, 0.12%)</title><rect x="218" y="308" width="1" height="15" fill="rgb(235,74,52)"/><text x="221.00" y="318.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (2 samples, 0.23%)</title><rect x="218" y="228" width="2" height="15" fill="rgb(250,104,53)"/><text x="221.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.23%)</title><rect x="218" y="244" width="2" height="15" fill="rgb(244,128,1)"/><text x="221.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="219" y="260" width="1" height="15" fill="rgb(230,111,11)"/><text x="222.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.12%)</title><rect x="219" y="276" width="1" height="15" fill="rgb(222,170,41)"/><text x="222.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.12%)</title><rect x="219" y="292" width="1" height="15" fill="rgb(222,197,30)"/><text x="222.00" y="302.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src:1809) (1 samples, 0.12%)</title><rect x="219" y="308" width="1" height="15" fill="rgb(215,198,49)"/><text x="222.00" y="318.50"></text></g><g><title>run_isfinite_simd_DOUBLE (simd.inc.src:325) (1 samples, 0.12%)</title><rect x="219" y="324" width="1" height="15" fill="rgb(236,131,25)"/><text x="222.00" y="334.50"></text></g><g><title>sse2_isfinite_DOUBLE (simd.inc.src:890) (1 samples, 0.12%)</title><rect x="219" y="340" width="1" height="15" fill="rgb(218,59,0)"/><text x="222.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:796) (1 samples, 0.12%)</title><rect x="219" y="356" width="1" height="15" fill="rgb(234,94,1)"/><text x="222.00" y="366.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h:925) (1 samples, 0.12%)</title><rect x="219" y="372" width="1" height="15" fill="rgb(229,106,49)"/><text x="222.00" y="382.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (2 samples, 0.23%)</title><rect x="220" y="228" width="3" height="15" fill="rgb(243,224,21)"/><text x="223.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (2 samples, 0.23%)</title><rect x="220" y="244" width="3" height="15" fill="rgb(224,133,36)"/><text x="223.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.23%)</title><rect x="220" y="260" width="3" height="15" fill="rgb(205,19,27)"/><text x="223.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (2 samples, 0.23%)</title><rect x="220" y="276" width="3" height="15" fill="rgb(217,27,16)"/><text x="223.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.12%)</title><rect x="222" y="292" width="1" height="15" fill="rgb(237,106,10)"/><text x="225.00" y="302.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (2 samples, 0.23%)</title><rect x="223" y="244" width="3" height="15" fill="rgb(251,81,20)"/><text x="226.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.12%)</title><rect x="224" y="260" width="2" height="15" fill="rgb(228,213,50)"/><text x="227.00" y="270.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.12%)</title><rect x="227" y="260" width="2" height="15" fill="rgb(253,129,4)"/><text x="230.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.12%)</title><rect x="227" y="276" width="2" height="15" fill="rgb(227,16,47)"/><text x="230.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.12%)</title><rect x="229" y="292" width="1" height="15" fill="rgb(227,203,26)"/><text x="232.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.12%)</title><rect x="230" y="308" width="1" height="15" fill="rgb(238,210,40)"/><text x="233.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="230" y="324" width="1" height="15" fill="rgb(210,123,1)"/><text x="233.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="230" y="340" width="1" height="15" fill="rgb(225,39,30)"/><text x="233.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="230" y="356" width="1" height="15" fill="rgb(217,145,12)"/><text x="233.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="230" y="372" width="1" height="15" fill="rgb(248,149,0)"/><text x="233.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="230" y="388" width="1" height="15" fill="rgb(224,225,11)"/><text x="233.00" y="398.50"></text></g><g><title>0x7fe7e1a712d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="230" y="404" width="1" height="15" fill="rgb(209,47,10)"/><text x="233.00" y="414.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.12%)</title><rect x="231" y="324" width="2" height="15" fill="rgb(216,168,10)"/><text x="234.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.12%)</title><rect x="231" y="340" width="2" height="15" fill="rgb(227,175,17)"/><text x="234.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.23%)</title><rect x="231" y="308" width="3" height="15" fill="rgb(216,9,22)"/><text x="234.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.12%)</title><rect x="233" y="324" width="1" height="15" fill="rgb(242,121,3)"/><text x="236.00" y="334.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.12%)</title><rect x="233" y="340" width="1" height="15" fill="rgb(251,227,17)"/><text x="236.00" y="350.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.12%)</title><rect x="233" y="356" width="1" height="15" fill="rgb(216,40,34)"/><text x="236.00" y="366.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.12%)</title><rect x="233" y="372" width="1" height="15" fill="rgb(220,55,22)"/><text x="236.00" y="382.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.12%)</title><rect x="233" y="388" width="1" height="15" fill="rgb(232,62,48)"/><text x="236.00" y="398.50"></text></g><g><title>array_subtract (number.c:342) (5 samples, 0.58%)</title><rect x="229" y="260" width="6" height="15" fill="rgb(208,190,1)"/><text x="232.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.58%)</title><rect x="229" y="276" width="6" height="15" fill="rgb(230,163,53)"/><text x="232.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.46%)</title><rect x="230" y="292" width="5" height="15" fill="rgb(239,35,48)"/><text x="233.00" y="302.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.12%)</title><rect x="234" y="308" width="1" height="15" fill="rgb(222,220,24)"/><text x="237.00" y="318.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.12%)</title><rect x="234" y="324" width="1" height="15" fill="rgb(230,97,38)"/><text x="237.00" y="334.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.12%)</title><rect x="234" y="340" width="1" height="15" fill="rgb(226,58,11)"/><text x="237.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (39 samples, 4.52%)</title><rect x="183" y="164" width="54" height="15" fill="rgb(211,118,10)"/><text x="186.00" y="174.50">_get_..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (21 samples, 2.44%)</title><rect x="208" y="180" width="29" height="15" fill="rgb(236,128,35)"/><text x="211.00" y="190.50">st..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (16 samples, 1.86%)</title><rect x="215" y="196" width="22" height="15" fill="rgb(233,151,12)"/><text x="218.00" y="206.50">i..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 1.86%)</title><rect x="215" y="212" width="22" height="15" fill="rgb(240,125,23)"/><text x="218.00" y="222.50">a..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (10 samples, 1.16%)</title><rect x="223" y="228" width="14" height="15" fill="rgb(230,6,43)"/><text x="226.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (8 samples, 0.93%)</title><rect x="226" y="244" width="11" height="15" fill="rgb(243,11,15)"/><text x="229.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="235" y="260" width="2" height="15" fill="rgb(249,76,2)"/><text x="238.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="235" y="276" width="2" height="15" fill="rgb(213,92,27)"/><text x="238.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.12%)</title><rect x="235" y="292" width="2" height="15" fill="rgb(240,37,51)"/><text x="238.00" y="302.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.12%)</title><rect x="235" y="308" width="2" height="15" fill="rgb(233,94,17)"/><text x="238.00" y="318.50"></text></g><g><title>DOUBLE_less_equal (loops.c.src:1773) (1 samples, 0.12%)</title><rect x="235" y="324" width="2" height="15" fill="rgb(228,97,53)"/><text x="238.00" y="334.50"></text></g><g><title>run_binary_simd_less_equal_DOUBLE (simd.inc.src:299) (1 samples, 0.12%)</title><rect x="235" y="340" width="2" height="15" fill="rgb(230,172,16)"/><text x="238.00" y="350.50"></text></g><g><title>sse2_binary_less_equal_DOUBLE (simd.inc.src:937) (1 samples, 0.12%)</title><rect x="235" y="356" width="2" height="15" fill="rgb(234,147,6)"/><text x="238.00" y="366.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:796) (1 samples, 0.12%)</title><rect x="235" y="372" width="2" height="15" fill="rgb(207,229,52)"/><text x="238.00" y="382.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h:925) (1 samples, 0.12%)</title><rect x="235" y="388" width="2" height="15" fill="rgb(233,3,10)"/><text x="238.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.12%)</title><rect x="237" y="196" width="1" height="15" fill="rgb(234,128,15)"/><text x="240.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.12%)</title><rect x="237" y="212" width="1" height="15" fill="rgb(228,172,2)"/><text x="240.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.12%)</title><rect x="237" y="228" width="1" height="15" fill="rgb(252,218,51)"/><text x="240.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.12%)</title><rect x="238" y="244" width="1" height="15" fill="rgb(235,76,52)"/><text x="241.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.12%)</title><rect x="238" y="260" width="1" height="15" fill="rgb(248,224,16)"/><text x="241.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.12%)</title><rect x="238" y="276" width="1" height="15" fill="rgb(241,168,36)"/><text x="241.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1491) (1 samples, 0.12%)</title><rect x="238" y="292" width="1" height="15" fill="rgb(227,213,49)"/><text x="241.00" y="302.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (3 samples, 0.35%)</title><rect x="237" y="164" width="4" height="15" fill="rgb(209,203,25)"/><text x="240.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (3 samples, 0.35%)</title><rect x="237" y="180" width="4" height="15" fill="rgb(209,29,14)"/><text x="240.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.23%)</title><rect x="238" y="196" width="3" height="15" fill="rgb(207,151,14)"/><text x="241.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.23%)</title><rect x="238" y="212" width="3" height="15" fill="rgb(250,19,29)"/><text x="241.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.23%)</title><rect x="238" y="228" width="3" height="15" fill="rgb(219,154,51)"/><text x="241.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.12%)</title><rect x="239" y="244" width="2" height="15" fill="rgb(252,181,45)"/><text x="242.00" y="254.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.12%)</title><rect x="241" y="196" width="1" height="15" fill="rgb(229,30,6)"/><text x="244.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="241" y="212" width="1" height="15" fill="rgb(213,76,42)"/><text x="244.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="241" y="228" width="1" height="15" fill="rgb(251,206,47)"/><text x="244.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="241" y="244" width="1" height="15" fill="rgb(212,217,39)"/><text x="244.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="241" y="260" width="1" height="15" fill="rgb(222,213,36)"/><text x="244.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="241" y="276" width="1" height="15" fill="rgb(241,78,45)"/><text x="244.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="241" y="292" width="1" height="15" fill="rgb(241,83,20)"/><text x="244.00" y="302.50"></text></g><g><title>0x7fe7e28510bf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="241" y="308" width="1" height="15" fill="rgb(218,98,14)"/><text x="244.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (2 samples, 0.23%)</title><rect x="241" y="164" width="3" height="15" fill="rgb(208,53,4)"/><text x="244.00" y="174.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.23%)</title><rect x="241" y="180" width="3" height="15" fill="rgb(235,34,38)"/><text x="244.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.12%)</title><rect x="242" y="196" width="2" height="15" fill="rgb(254,29,21)"/><text x="245.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="246" y="180" width="2" height="15" fill="rgb(234,52,26)"/><text x="249.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.23%)</title><rect x="248" y="180" width="2" height="15" fill="rgb(237,67,46)"/><text x="251.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.23%)</title><rect x="248" y="196" width="2" height="15" fill="rgb(218,122,23)"/><text x="251.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.12%)</title><rect x="249" y="212" width="1" height="15" fill="rgb(237,153,14)"/><text x="252.00" y="222.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.12%)</title><rect x="250" y="180" width="2" height="15" fill="rgb(214,29,27)"/><text x="253.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3480) (1 samples, 0.12%)</title><rect x="250" y="196" width="2" height="15" fill="rgb(225,56,12)"/><text x="253.00" y="206.50"></text></g><g><title>LONG_fill (arraytypes.c.src:3710) (1 samples, 0.12%)</title><rect x="250" y="212" width="2" height="15" fill="rgb(240,46,7)"/><text x="253.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.23%)</title><rect x="252" y="180" width="3" height="15" fill="rgb(215,3,54)"/><text x="255.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (2 samples, 0.23%)</title><rect x="252" y="196" width="3" height="15" fill="rgb(247,16,39)"/><text x="255.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (9 samples, 1.04%)</title><rect x="244" y="164" width="12" height="15" fill="rgb(222,161,50)"/><text x="247.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.12%)</title><rect x="255" y="180" width="1" height="15" fill="rgb(218,205,53)"/><text x="258.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.12%)</title><rect x="255" y="196" width="1" height="15" fill="rgb(217,143,23)"/><text x="258.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.12%)</title><rect x="257" y="180" width="2" height="15" fill="rgb(205,211,50)"/><text x="260.00" y="190.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.12%)</title><rect x="259" y="180" width="1" height="15" fill="rgb(228,23,53)"/><text x="262.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.12%)</title><rect x="259" y="196" width="1" height="15" fill="rgb(228,223,26)"/><text x="262.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.12%)</title><rect x="259" y="212" width="1" height="15" fill="rgb(240,217,25)"/><text x="262.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.12%)</title><rect x="259" y="228" width="1" height="15" fill="rgb(227,53,5)"/><text x="262.00" y="238.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1177) (1 samples, 0.12%)</title><rect x="259" y="244" width="1" height="15" fill="rgb(223,18,16)"/><text x="262.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:54) (169 samples, 19.61%)</title><rect x="30" y="52" width="231" height="15" fill="rgb(236,91,20)"/><text x="33.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegres..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:53) (169 samples, 19.61%)</title><rect x="30" y="68" width="231" height="15" fill="rgb(239,154,36)"/><text x="33.00" y="78.50">profile_skl (bench_AdaBoostReg..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:37) (169 samples, 19.61%)</title><rect x="30" y="84" width="231" height="15" fill="rgb(217,203,9)"/><text x="33.00" y="94.50">setup_profile (bench_AdaBoostR..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:31) (169 samples, 19.61%)</title><rect x="30" y="100" width="231" height="15" fill="rgb(218,127,19)"/><text x="33.00" y="110.50">profile (bench_AdaBoostRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (169 samples, 19.61%)</title><rect x="30" y="116" width="231" height="15" fill="rgb(206,15,16)"/><text x="33.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (169 samples, 19.61%)</title><rect x="30" y="132" width="231" height="15" fill="rgb(235,163,42)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (159 samples, 18.45%)</title><rect x="44" y="148" width="217" height="15" fill="rgb(218,70,11)"/><text x="47.00" y="158.50">predict (sklearn/ensemble/_w..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (4 samples, 0.46%)</title><rect x="256" y="164" width="5" height="15" fill="rgb(222,16,47)"/><text x="259.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.12%)</title><rect x="260" y="180" width="1" height="15" fill="rgb(253,144,9)"/><text x="263.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.12%)</title><rect x="260" y="196" width="1" height="15" fill="rgb(247,197,43)"/><text x="263.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.46%)</title><rect x="261" y="180" width="6" height="15" fill="rgb(249,50,53)"/><text x="264.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.12%)</title><rect x="265" y="196" width="2" height="15" fill="rgb(221,190,9)"/><text x="268.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:38) (1 samples, 0.12%)</title><rect x="276" y="212" width="2" height="15" fill="rgb(232,107,43)"/><text x="279.00" y="222.50"></text></g><g><title>recursive_tolist (convert.c:100) (1 samples, 0.12%)</title><rect x="278" y="244" width="1" height="15" fill="rgb(209,85,8)"/><text x="281.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:191) (1 samples, 0.12%)</title><rect x="279" y="260" width="2" height="15" fill="rgb(232,182,11)"/><text x="282.00" y="270.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:196) (1 samples, 0.12%)</title><rect x="281" y="260" width="1" height="15" fill="rgb(218,6,21)"/><text x="284.00" y="270.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.12%)</title><rect x="282" y="260" width="1" height="15" fill="rgb(212,13,47)"/><text x="285.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:102) (7 samples, 0.81%)</title><rect x="279" y="244" width="10" height="15" fill="rgb(215,71,34)"/><text x="282.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:112) (4 samples, 0.46%)</title><rect x="283" y="260" width="6" height="15" fill="rgb(245,223,36)"/><text x="286.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (10 samples, 1.16%)</title><rect x="278" y="212" width="13" height="15" fill="rgb(217,56,22)"/><text x="281.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (10 samples, 1.16%)</title><rect x="278" y="228" width="13" height="15" fill="rgb(251,9,39)"/><text x="281.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:106) (2 samples, 0.23%)</title><rect x="289" y="244" width="2" height="15" fill="rgb(221,144,53)"/><text x="292.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:43) (1 samples, 0.12%)</title><rect x="291" y="212" width="2" height="15" fill="rgb(254,116,24)"/><text x="294.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.12%)</title><rect x="293" y="244" width="1" height="15" fill="rgb(225,114,43)"/><text x="296.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.12%)</title><rect x="293" y="260" width="1" height="15" fill="rgb(245,145,11)"/><text x="296.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.12%)</title><rect x="293" y="276" width="1" height="15" fill="rgb(254,2,26)"/><text x="296.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:429) (1 samples, 0.12%)</title><rect x="294" y="308" width="2" height="15" fill="rgb(242,180,40)"/><text x="297.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (2 samples, 0.23%)</title><rect x="296" y="308" width="2" height="15" fill="rgb(254,186,9)"/><text x="299.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (2 samples, 0.23%)</title><rect x="298" y="324" width="3" height="15" fill="rgb(218,158,33)"/><text x="301.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (5 samples, 0.58%)</title><rect x="301" y="324" width="7" height="15" fill="rgb(205,65,3)"/><text x="304.00" y="334.50"></text></g><g><title>0x7fe7e1a720a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="307" y="340" width="1" height="15" fill="rgb(232,214,8)"/><text x="310.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:145) (1 samples, 0.12%)</title><rect x="308" y="324" width="1" height="15" fill="rgb(245,223,45)"/><text x="311.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (2 samples, 0.23%)</title><rect x="309" y="324" width="3" height="15" fill="rgb(206,183,19)"/><text x="312.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (4 samples, 0.46%)</title><rect x="312" y="340" width="6" height="15" fill="rgb(249,202,20)"/><text x="315.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (4 samples, 0.46%)</title><rect x="318" y="340" width="5" height="15" fill="rgb(252,201,46)"/><text x="321.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (9 samples, 1.04%)</title><rect x="323" y="340" width="12" height="15" fill="rgb(227,76,32)"/><text x="326.00" y="350.50"></text></g><g><title>0x7fe7e1a71950 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="334" y="356" width="1" height="15" fill="rgb(221,94,31)"/><text x="337.00" y="366.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (3 samples, 0.35%)</title><rect x="335" y="340" width="4" height="15" fill="rgb(233,212,23)"/><text x="338.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (2 samples, 0.23%)</title><rect x="337" y="356" width="2" height="15" fill="rgb(221,16,5)"/><text x="340.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (21 samples, 2.44%)</title><rect x="312" y="324" width="29" height="15" fill="rgb(224,29,7)"/><text x="315.00" y="334.50">Py..</text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.12%)</title><rect x="339" y="340" width="2" height="15" fill="rgb(228,191,32)"/><text x="342.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (4 samples, 0.46%)</title><rect x="344" y="340" width="5" height="15" fill="rgb(224,165,45)"/><text x="347.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (7 samples, 0.81%)</title><rect x="341" y="324" width="9" height="15" fill="rgb(213,194,46)"/><text x="344.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.12%)</title><rect x="349" y="340" width="1" height="15" fill="rgb(226,16,4)"/><text x="352.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:517) (1 samples, 0.12%)</title><rect x="350" y="324" width="2" height="15" fill="rgb(241,32,5)"/><text x="353.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (1 samples, 0.12%)</title><rect x="352" y="324" width="1" height="15" fill="rgb(206,70,37)"/><text x="355.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (47 samples, 5.45%)</title><rect x="294" y="276" width="65" height="15" fill="rgb(227,106,24)"/><text x="297.00" y="286.50">PyArray..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (47 samples, 5.45%)</title><rect x="294" y="292" width="65" height="15" fill="rgb(232,87,22)"/><text x="297.00" y="302.50">PyArray..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (44 samples, 5.10%)</title><rect x="298" y="308" width="61" height="15" fill="rgb(236,144,16)"/><text x="301.00" y="318.50">PyArra..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:537) (4 samples, 0.46%)</title><rect x="353" y="324" width="6" height="15" fill="rgb(212,154,37)"/><text x="356.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:668) (1 samples, 0.12%)</title><rect x="359" y="308" width="1" height="15" fill="rgb(239,210,37)"/><text x="362.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:674) (1 samples, 0.12%)</title><rect x="360" y="308" width="1" height="15" fill="rgb(217,192,13)"/><text x="363.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:679) (3 samples, 0.35%)</title><rect x="361" y="308" width="4" height="15" fill="rgb(221,198,9)"/><text x="364.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (6 samples, 0.70%)</title><rect x="365" y="308" width="9" height="15" fill="rgb(240,157,41)"/><text x="368.00" y="318.50"></text></g><g><title>0x7fe7e1a720a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="372" y="324" width="2" height="15" fill="rgb(249,95,26)"/><text x="375.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:699) (7 samples, 0.81%)</title><rect x="374" y="308" width="9" height="15" fill="rgb(251,90,15)"/><text x="377.00" y="318.50"></text></g><g><title>0x7fe7e1a723f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="382" y="324" width="1" height="15" fill="rgb(223,136,54)"/><text x="385.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:703) (10 samples, 1.16%)</title><rect x="383" y="308" width="14" height="15" fill="rgb(214,156,49)"/><text x="386.00" y="318.50"></text></g><g><title>0x7fe7e1a72a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.46%)</title><rect x="391" y="324" width="6" height="15" fill="rgb(237,102,24)"/><text x="394.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:884) (30 samples, 3.48%)</title><rect x="359" y="292" width="41" height="15" fill="rgb(222,169,11)"/><text x="362.00" y="302.50">dis..</text></g><g><title>discover_dimensions (ctors.c:912) (2 samples, 0.23%)</title><rect x="397" y="308" width="3" height="15" fill="rgb(228,71,35)"/><text x="400.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (78 samples, 9.05%)</title><rect x="294" y="260" width="107" height="15" fill="rgb(230,146,19)"/><text x="297.00" y="270.50">PyArray_FromA..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (31 samples, 3.60%)</title><rect x="359" y="276" width="42" height="15" fill="rgb(253,198,20)"/><text x="362.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c:897) (1 samples, 0.12%)</title><rect x="400" y="292" width="1" height="15" fill="rgb(211,152,8)"/><text x="403.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:475) (1 samples, 0.12%)</title><rect x="401" y="292" width="1" height="15" fill="rgb(250,108,38)"/><text x="404.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:535) (1 samples, 0.12%)</title><rect x="402" y="292" width="2" height="15" fill="rgb(212,20,30)"/><text x="405.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (6 samples, 0.70%)</title><rect x="404" y="292" width="8" height="15" fill="rgb(248,160,3)"/><text x="407.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (1 samples, 0.12%)</title><rect x="412" y="324" width="1" height="15" fill="rgb(209,191,25)"/><text x="415.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.12%)</title><rect x="413" y="324" width="2" height="15" fill="rgb(244,127,53)"/><text x="416.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (4 samples, 0.46%)</title><rect x="415" y="340" width="5" height="15" fill="rgb(249,222,39)"/><text x="418.00" y="350.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:122) (1 samples, 0.12%)</title><rect x="420" y="340" width="2" height="15" fill="rgb(228,124,16)"/><text x="423.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (16 samples, 1.86%)</title><rect x="415" y="324" width="22" height="15" fill="rgb(229,2,7)"/><text x="418.00" y="334.50">L..</text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (11 samples, 1.28%)</title><rect x="422" y="340" width="15" height="15" fill="rgb(233,83,30)"/><text x="425.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.12%)</title><rect x="437" y="324" width="1" height="15" fill="rgb(229,128,50)"/><text x="440.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (1 samples, 0.12%)</title><rect x="438" y="324" width="1" height="15" fill="rgb(207,57,42)"/><text x="441.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (109 samples, 12.65%)</title><rect x="293" y="228" width="149" height="15" fill="rgb(250,163,50)"/><text x="296.00" y="238.50">array_subscript (ma..</text></g><g><title>prepare_index (mapping.c:516) (108 samples, 12.53%)</title><rect x="294" y="244" width="148" height="15" fill="rgb(213,182,30)"/><text x="297.00" y="254.50">prepare_index (map..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (30 samples, 3.48%)</title><rect x="401" y="260" width="41" height="15" fill="rgb(227,182,10)"/><text x="404.00" y="270.50">PyA..</text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (30 samples, 3.48%)</title><rect x="401" y="276" width="41" height="15" fill="rgb(237,100,14)"/><text x="404.00" y="286.50">PyA..</text></g><g><title>setArrayFromSequence (ctors.c:550) (22 samples, 2.55%)</title><rect x="412" y="292" width="30" height="15" fill="rgb(226,66,49)"/><text x="415.00" y="302.50">se..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (22 samples, 2.55%)</title><rect x="412" y="308" width="30" height="15" fill="rgb(232,86,54)"/><text x="415.00" y="318.50">Py..</text></g><g><title>LONG_setitem (arraytypes.c.src:242) (2 samples, 0.23%)</title><rect x="439" y="324" width="3" height="15" fill="rgb(207,69,20)"/><text x="442.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.12%)</title><rect x="442" y="244" width="1" height="15" fill="rgb(232,211,5)"/><text x="445.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.12%)</title><rect x="442" y="260" width="1" height="15" fill="rgb(211,33,54)"/><text x="445.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.12%)</title><rect x="442" y="276" width="1" height="15" fill="rgb(229,142,24)"/><text x="445.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1542) (1 samples, 0.12%)</title><rect x="442" y="292" width="1" height="15" fill="rgb(230,35,21)"/><text x="445.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2869) (1 samples, 0.12%)</title><rect x="443" y="244" width="2" height="15" fill="rgb(212,127,35)"/><text x="446.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(220,35,54)"/><text x="446.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(235,43,25)"/><text x="446.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="443" y="292" width="2" height="15" fill="rgb(219,216,26)"/><text x="446.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="443" y="308" width="2" height="15" fill="rgb(223,108,15)"/><text x="446.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="443" y="324" width="2" height="15" fill="rgb(252,60,30)"/><text x="446.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="443" y="340" width="2" height="15" fill="rgb(224,45,13)"/><text x="446.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.12%)</title><rect x="445" y="276" width="1" height="15" fill="rgb(241,119,44)"/><text x="448.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (4 samples, 0.46%)</title><rect x="442" y="228" width="6" height="15" fill="rgb(251,199,11)"/><text x="445.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (2 samples, 0.23%)</title><rect x="445" y="244" width="3" height="15" fill="rgb(210,17,39)"/><text x="448.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.23%)</title><rect x="445" y="260" width="3" height="15" fill="rgb(254,171,21)"/><text x="448.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.12%)</title><rect x="446" y="276" width="2" height="15" fill="rgb(208,133,18)"/><text x="449.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.12%)</title><rect x="446" y="292" width="2" height="15" fill="rgb(228,3,27)"/><text x="449.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1572) (1 samples, 0.12%)</title><rect x="448" y="244" width="1" height="15" fill="rgb(235,127,5)"/><text x="451.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.12%)</title><rect x="448" y="260" width="1" height="15" fill="rgb(246,214,38)"/><text x="451.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (3 samples, 0.35%)</title><rect x="449" y="244" width="4" height="15" fill="rgb(218,91,42)"/><text x="452.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (5 samples, 0.58%)</title><rect x="448" y="228" width="6" height="15" fill="rgb(211,128,31)"/><text x="451.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="453" y="244" width="1" height="15" fill="rgb(208,166,52)"/><text x="456.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (119 samples, 13.81%)</title><rect x="293" y="212" width="163" height="15" fill="rgb(250,71,6)"/><text x="296.00" y="222.50">_run (mlprodict/onnxr..</text></g><g><title>array_subscript (mapping.c:1712) (1 samples, 0.12%)</title><rect x="454" y="228" width="2" height="15" fill="rgb(242,4,19)"/><text x="457.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="454" y="244" width="2" height="15" fill="rgb(212,52,13)"/><text x="457.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.12%)</title><rect x="454" y="260" width="2" height="15" fill="rgb(210,15,25)"/><text x="457.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.12%)</title><rect x="456" y="212" width="1" height="15" fill="rgb(224,216,39)"/><text x="459.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.12%)</title><rect x="456" y="228" width="1" height="15" fill="rgb(254,204,26)"/><text x="459.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.12%)</title><rect x="456" y="244" width="1" height="15" fill="rgb(242,29,13)"/><text x="459.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 0.46%)</title><rect x="457" y="212" width="6" height="15" fill="rgb(244,155,36)"/><text x="460.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.35%)</title><rect x="459" y="228" width="4" height="15" fill="rgb(244,113,33)"/><text x="462.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.35%)</title><rect x="459" y="244" width="4" height="15" fill="rgb(211,204,52)"/><text x="462.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.35%)</title><rect x="459" y="260" width="4" height="15" fill="rgb(205,163,48)"/><text x="462.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.35%)</title><rect x="459" y="276" width="4" height="15" fill="rgb(223,211,12)"/><text x="462.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (3 samples, 0.35%)</title><rect x="459" y="292" width="4" height="15" fill="rgb(232,13,32)"/><text x="462.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:38) (1 samples, 0.12%)</title><rect x="463" y="212" width="1" height="15" fill="rgb(213,133,29)"/><text x="466.00" y="222.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.12%)</title><rect x="468" y="388" width="1" height="15" fill="rgb(216,164,20)"/><text x="471.00" y="398.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:245) (1 samples, 0.12%)</title><rect x="468" y="404" width="1" height="15" fill="rgb(209,174,31)"/><text x="471.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1756) (1 samples, 0.12%)</title><rect x="469" y="388" width="2" height="15" fill="rgb(251,18,36)"/><text x="472.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1759) (2 samples, 0.23%)</title><rect x="471" y="388" width="3" height="15" fill="rgb(228,162,3)"/><text x="474.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (8 samples, 0.93%)</title><rect x="464" y="212" width="11" height="15" fill="rgb(246,2,2)"/><text x="467.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (6 samples, 0.70%)</title><rect x="467" y="228" width="8" height="15" fill="rgb(229,65,20)"/><text x="470.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.70%)</title><rect x="467" y="244" width="8" height="15" fill="rgb(206,200,45)"/><text x="470.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (6 samples, 0.70%)</title><rect x="467" y="260" width="8" height="15" fill="rgb(239,91,35)"/><text x="470.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 0.70%)</title><rect x="467" y="276" width="8" height="15" fill="rgb(207,141,11)"/><text x="470.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (6 samples, 0.70%)</title><rect x="467" y="292" width="8" height="15" fill="rgb(208,206,7)"/><text x="470.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (6 samples, 0.70%)</title><rect x="467" y="308" width="8" height="15" fill="rgb(234,24,10)"/><text x="470.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (6 samples, 0.70%)</title><rect x="467" y="324" width="8" height="15" fill="rgb(247,71,29)"/><text x="470.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (6 samples, 0.70%)</title><rect x="467" y="340" width="8" height="15" fill="rgb(206,174,38)"/><text x="470.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (6 samples, 0.70%)</title><rect x="467" y="356" width="8" height="15" fill="rgb(208,39,24)"/><text x="470.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (6 samples, 0.70%)</title><rect x="467" y="372" width="8" height="15" fill="rgb(242,49,37)"/><text x="470.00" y="382.50"></text></g><g><title>npyiter_iternext_itflags0_dims1_iters2 (nditer_templ.c.src:80) (1 samples, 0.12%)</title><rect x="474" y="388" width="1" height="15" fill="rgb(205,31,52)"/><text x="477.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (1 samples, 0.12%)</title><rect x="475" y="212" width="1" height="15" fill="rgb(209,75,2)"/><text x="478.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="475" y="228" width="1" height="15" fill="rgb(209,218,39)"/><text x="478.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="475" y="244" width="1" height="15" fill="rgb(207,158,26)"/><text x="478.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.12%)</title><rect x="475" y="260" width="1" height="15" fill="rgb(249,138,1)"/><text x="478.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.12%)</title><rect x="476" y="244" width="2" height="15" fill="rgb(238,188,46)"/><text x="479.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:305) (1 samples, 0.12%)</title><rect x="476" y="260" width="2" height="15" fill="rgb(233,48,52)"/><text x="479.00" y="270.50"></text></g><g><title>array_choose (methods.c:1210) (1 samples, 0.12%)</title><rect x="478" y="292" width="1" height="15" fill="rgb(237,153,40)"/><text x="481.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.12%)</title><rect x="480" y="372" width="2" height="15" fill="rgb(229,218,38)"/><text x="483.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (1 samples, 0.12%)</title><rect x="480" y="388" width="2" height="15" fill="rgb(209,139,54)"/><text x="483.00" y="398.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (2 samples, 0.23%)</title><rect x="480" y="340" width="3" height="15" fill="rgb(238,94,35)"/><text x="483.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.23%)</title><rect x="480" y="356" width="3" height="15" fill="rgb(240,181,37)"/><text x="483.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.12%)</title><rect x="482" y="372" width="1" height="15" fill="rgb(207,48,44)"/><text x="485.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="482" y="388" width="1" height="15" fill="rgb(206,151,27)"/><text x="485.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (4 samples, 0.46%)</title><rect x="479" y="308" width="6" height="15" fill="rgb(251,134,47)"/><text x="482.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2150) (4 samples, 0.46%)</title><rect x="479" y="324" width="6" height="15" fill="rgb(243,215,24)"/><text x="482.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="483" y="340" width="2" height="15" fill="rgb(210,115,26)"/><text x="486.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="483" y="356" width="2" height="15" fill="rgb(251,56,49)"/><text x="486.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="483" y="372" width="2" height="15" fill="rgb(249,88,39)"/><text x="486.00" y="382.50"></text></g><g><title>PyArray_Choose (item_selection.c:696) (1 samples, 0.12%)</title><rect x="485" y="308" width="1" height="15" fill="rgb(225,31,25)"/><text x="488.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.12%)</title><rect x="485" y="324" width="1" height="15" fill="rgb(234,186,22)"/><text x="488.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2139) (1 samples, 0.12%)</title><rect x="485" y="340" width="1" height="15" fill="rgb(206,68,8)"/><text x="488.00" y="350.50"></text></g><g><title>PyArray_Choose (item_selection.c:756) (1 samples, 0.12%)</title><rect x="486" y="308" width="1" height="15" fill="rgb(214,115,9)"/><text x="489.00" y="318.50"></text></g><g><title>PyArray_Choose (item_selection.c:757) (2 samples, 0.23%)</title><rect x="487" y="308" width="3" height="15" fill="rgb(247,203,49)"/><text x="490.00" y="318.50"></text></g><g><title>PyArray_Choose (item_selection.c:786) (3 samples, 0.35%)</title><rect x="490" y="308" width="4" height="15" fill="rgb(216,221,7)"/><text x="493.00" y="318.50"></text></g><g><title>PyArray_Choose (item_selection.c:788) (9 samples, 1.04%)</title><rect x="494" y="308" width="12" height="15" fill="rgb(250,1,37)"/><text x="497.00" y="318.50"></text></g><g><title>0x7fe7e286fdc3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="505" y="324" width="1" height="15" fill="rgb(210,46,0)"/><text x="508.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (23 samples, 2.67%)</title><rect x="476" y="212" width="32" height="15" fill="rgb(249,198,46)"/><text x="479.00" y="222.50">_r..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (23 samples, 2.67%)</title><rect x="476" y="228" width="32" height="15" fill="rgb(225,119,53)"/><text x="479.00" y="238.50">ch..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (22 samples, 2.55%)</title><rect x="478" y="244" width="30" height="15" fill="rgb(235,114,40)"/><text x="481.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (22 samples, 2.55%)</title><rect x="478" y="260" width="30" height="15" fill="rgb(217,164,20)"/><text x="481.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (22 samples, 2.55%)</title><rect x="478" y="276" width="30" height="15" fill="rgb(250,155,15)"/><text x="481.00" y="286.50">_w..</text></g><g><title>array_choose (methods.c:1224) (21 samples, 2.44%)</title><rect x="479" y="292" width="29" height="15" fill="rgb(211,108,43)"/><text x="482.00" y="302.50">ar..</text></g><g><title>PyArray_Choose (item_selection.c:798) (1 samples, 0.12%)</title><rect x="506" y="308" width="2" height="15" fill="rgb(211,200,23)"/><text x="509.00" y="318.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.12%)</title><rect x="506" y="324" width="2" height="15" fill="rgb(217,92,20)"/><text x="509.00" y="334.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.12%)</title><rect x="506" y="340" width="2" height="15" fill="rgb(205,160,40)"/><text x="509.00" y="350.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.12%)</title><rect x="506" y="356" width="2" height="15" fill="rgb(246,157,14)"/><text x="509.00" y="366.50"></text></g><g><title>0x7fe7e284fd07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="506" y="372" width="2" height="15" fill="rgb(221,130,30)"/><text x="509.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (1 samples, 0.12%)</title><rect x="508" y="212" width="1" height="15" fill="rgb(231,225,40)"/><text x="511.00" y="222.50"></text></g><g><title>array_argpartition (methods.c:1414) (2 samples, 0.23%)</title><rect x="509" y="324" width="3" height="15" fill="rgb(251,212,34)"/><text x="512.00" y="334.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.12%)</title><rect x="511" y="340" width="1" height="15" fill="rgb(254,8,9)"/><text x="514.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1027) (1 samples, 0.12%)</title><rect x="512" y="356" width="1" height="15" fill="rgb(220,222,53)"/><text x="515.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (1 samples, 0.12%)</title><rect x="513" y="356" width="2" height="15" fill="rgb(233,168,3)"/><text x="516.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (2 samples, 0.23%)</title><rect x="515" y="356" width="2" height="15" fill="rgb(224,127,22)"/><text x="518.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1076) (1 samples, 0.12%)</title><rect x="517" y="356" width="2" height="15" fill="rgb(233,35,34)"/><text x="520.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:292) (1 samples, 0.12%)</title><rect x="519" y="372" width="1" height="15" fill="rgb(232,23,25)"/><text x="522.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:331) (1 samples, 0.12%)</title><rect x="520" y="372" width="1" height="15" fill="rgb(219,131,5)"/><text x="523.00" y="382.50"></text></g><g><title>aintroselect_float (selection.c.src:332) (1 samples, 0.12%)</title><rect x="521" y="372" width="2" height="15" fill="rgb(215,152,53)"/><text x="524.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (4 samples, 0.46%)</title><rect x="519" y="356" width="5" height="15" fill="rgb(219,85,50)"/><text x="522.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:405) (1 samples, 0.12%)</title><rect x="523" y="372" width="1" height="15" fill="rgb(232,17,0)"/><text x="526.00" y="382.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:34) (12 samples, 1.39%)</title><rect x="509" y="244" width="17" height="15" fill="rgb(254,107,11)"/><text x="512.00" y="254.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (12 samples, 1.39%)</title><rect x="509" y="260" width="17" height="15" fill="rgb(253,103,46)"/><text x="512.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.39%)</title><rect x="509" y="276" width="17" height="15" fill="rgb(244,5,23)"/><text x="512.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (12 samples, 1.39%)</title><rect x="509" y="292" width="17" height="15" fill="rgb(227,219,12)"/><text x="512.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (12 samples, 1.39%)</title><rect x="509" y="308" width="17" height="15" fill="rgb(254,96,10)"/><text x="512.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (10 samples, 1.16%)</title><rect x="512" y="324" width="14" height="15" fill="rgb(243,204,26)"/><text x="515.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (10 samples, 1.16%)</title><rect x="512" y="340" width="14" height="15" fill="rgb(226,167,14)"/><text x="515.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.12%)</title><rect x="524" y="356" width="2" height="15" fill="rgb(241,182,6)"/><text x="527.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:171) (1 samples, 0.12%)</title><rect x="527" y="372" width="1" height="15" fill="rgb(217,74,37)"/><text x="530.00" y="382.50"></text></g><g><title>aquicksort_float (quicksort.c.src:217) (1 samples, 0.12%)</title><rect x="528" y="372" width="2" height="15" fill="rgb(219,110,25)"/><text x="531.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (4 samples, 0.46%)</title><rect x="526" y="356" width="5" height="15" fill="rgb(246,195,10)"/><text x="529.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (1 samples, 0.12%)</title><rect x="530" y="372" width="1" height="15" fill="rgb(238,69,6)"/><text x="533.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.12%)</title><rect x="530" y="388" width="1" height="15" fill="rgb(238,136,40)"/><text x="533.00" y="398.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (5 samples, 0.58%)</title><rect x="526" y="260" width="6" height="15" fill="rgb(248,55,15)"/><text x="529.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.58%)</title><rect x="526" y="276" width="6" height="15" fill="rgb(234,58,5)"/><text x="529.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (5 samples, 0.58%)</title><rect x="526" y="292" width="6" height="15" fill="rgb(232,159,21)"/><text x="529.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.58%)</title><rect x="526" y="308" width="6" height="15" fill="rgb(245,90,19)"/><text x="529.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (5 samples, 0.58%)</title><rect x="526" y="324" width="6" height="15" fill="rgb(241,63,38)"/><text x="529.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (5 samples, 0.58%)</title><rect x="526" y="340" width="6" height="15" fill="rgb(215,212,14)"/><text x="529.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.12%)</title><rect x="531" y="356" width="1" height="15" fill="rgb(227,24,19)"/><text x="534.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.12%)</title><rect x="532" y="324" width="2" height="15" fill="rgb(244,82,41)"/><text x="535.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.12%)</title><rect x="532" y="340" width="2" height="15" fill="rgb(223,100,7)"/><text x="535.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="532" y="356" width="2" height="15" fill="rgb(252,121,0)"/><text x="535.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="532" y="372" width="2" height="15" fill="rgb(248,69,38)"/><text x="535.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="532" y="388" width="2" height="15" fill="rgb(232,75,5)"/><text x="535.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="532" y="404" width="2" height="15" fill="rgb(222,220,7)"/><text x="535.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="532" y="420" width="2" height="15" fill="rgb(222,213,47)"/><text x="535.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="532" y="436" width="2" height="15" fill="rgb(250,139,27)"/><text x="535.00" y="446.50"></text></g><g><title>0x7fe7e2850e90 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="532" y="452" width="2" height="15" fill="rgb(214,62,7)"/><text x="535.00" y="462.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.23%)</title><rect x="532" y="276" width="3" height="15" fill="rgb(208,74,28)"/><text x="535.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.23%)</title><rect x="532" y="292" width="3" height="15" fill="rgb(251,12,5)"/><text x="535.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.23%)</title><rect x="532" y="308" width="3" height="15" fill="rgb(235,17,25)"/><text x="535.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3045) (1 samples, 0.12%)</title><rect x="534" y="324" width="1" height="15" fill="rgb(229,148,45)"/><text x="537.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.35%)</title><rect x="532" y="260" width="5" height="15" fill="rgb(236,195,7)"/><text x="535.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.12%)</title><rect x="535" y="276" width="2" height="15" fill="rgb(230,132,47)"/><text x="538.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.12%)</title><rect x="535" y="292" width="2" height="15" fill="rgb(229,99,2)"/><text x="538.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.12%)</title><rect x="535" y="308" width="2" height="15" fill="rgb(251,176,31)"/><text x="538.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="535" y="324" width="2" height="15" fill="rgb(234,54,22)"/><text x="538.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.12%)</title><rect x="535" y="340" width="2" height="15" fill="rgb(234,135,44)"/><text x="538.00" y="350.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.12%)</title><rect x="537" y="292" width="1" height="15" fill="rgb(250,195,40)"/><text x="540.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.23%)</title><rect x="537" y="260" width="2" height="15" fill="rgb(212,189,43)"/><text x="540.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (2 samples, 0.23%)</title><rect x="537" y="276" width="2" height="15" fill="rgb(221,210,24)"/><text x="540.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.12%)</title><rect x="538" y="292" width="1" height="15" fill="rgb(216,63,9)"/><text x="541.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.12%)</title><rect x="539" y="276" width="2" height="15" fill="rgb(214,39,28)"/><text x="542.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (2 samples, 0.23%)</title><rect x="541" y="276" width="2" height="15" fill="rgb(240,72,46)"/><text x="544.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.12%)</title><rect x="543" y="276" width="2" height="15" fill="rgb(231,129,26)"/><text x="546.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (16 samples, 1.86%)</title><rect x="526" y="244" width="21" height="15" fill="rgb(210,162,14)"/><text x="529.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (6 samples, 0.70%)</title><rect x="539" y="260" width="8" height="15" fill="rgb(218,130,25)"/><text x="542.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (2 samples, 0.23%)</title><rect x="545" y="276" width="2" height="15" fill="rgb(213,173,34)"/><text x="548.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.12%)</title><rect x="547" y="260" width="2" height="15" fill="rgb(211,194,39)"/><text x="550.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.12%)</title><rect x="547" y="276" width="2" height="15" fill="rgb(243,222,44)"/><text x="550.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.12%)</title><rect x="547" y="292" width="2" height="15" fill="rgb(239,214,31)"/><text x="550.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:252) (1 samples, 0.12%)</title><rect x="547" y="308" width="2" height="15" fill="rgb(213,23,8)"/><text x="550.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.12%)</title><rect x="547" y="324" width="2" height="15" fill="rgb(237,70,35)"/><text x="550.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="547" y="340" width="2" height="15" fill="rgb(252,53,19)"/><text x="550.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="549" y="260" width="1" height="15" fill="rgb(223,140,10)"/><text x="552.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.12%)</title><rect x="549" y="276" width="1" height="15" fill="rgb(244,110,2)"/><text x="552.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.12%)</title><rect x="549" y="292" width="1" height="15" fill="rgb(228,143,16)"/><text x="552.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (3 samples, 0.35%)</title><rect x="550" y="276" width="4" height="15" fill="rgb(207,88,21)"/><text x="553.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.12%)</title><rect x="554" y="276" width="2" height="15" fill="rgb(208,64,46)"/><text x="557.00" y="286.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (35 samples, 4.06%)</title><rect x="509" y="228" width="48" height="15" fill="rgb(213,148,39)"/><text x="512.00" y="238.50">_com..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (7 samples, 0.81%)</title><rect x="547" y="244" width="10" height="15" fill="rgb(233,157,16)"/><text x="550.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (5 samples, 0.58%)</title><rect x="550" y="260" width="7" height="15" fill="rgb(215,105,3)"/><text x="553.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="556" y="276" width="1" height="15" fill="rgb(220,97,53)"/><text x="559.00" y="286.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.12%)</title><rect x="557" y="244" width="1" height="15" fill="rgb(241,22,42)"/><text x="560.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.12%)</title><rect x="557" y="260" width="1" height="15" fill="rgb(213,164,1)"/><text x="560.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (211 samples, 24.48%)</title><rect x="271" y="196" width="289" height="15" fill="rgb(233,211,6)"/><text x="274.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:1..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (37 samples, 4.29%)</title><rect x="509" y="212" width="51" height="15" fill="rgb(214,129,17)"/><text x="512.00" y="222.50">_run ..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (2 samples, 0.23%)</title><rect x="557" y="228" width="3" height="15" fill="rgb(216,181,53)"/><text x="560.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.12%)</title><rect x="558" y="244" width="2" height="15" fill="rgb(237,119,50)"/><text x="561.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.12%)</title><rect x="558" y="260" width="2" height="15" fill="rgb(254,18,40)"/><text x="561.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.12%)</title><rect x="558" y="276" width="2" height="15" fill="rgb(227,98,40)"/><text x="561.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.12%)</title><rect x="558" y="292" width="2" height="15" fill="rgb(221,223,31)"/><text x="561.00" y="302.50"></text></g><g><title>0x7fe7e1a724f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="558" y="308" width="2" height="15" fill="rgb(227,15,7)"/><text x="561.00" y="318.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (2 samples, 0.23%)</title><rect x="560" y="260" width="3" height="15" fill="rgb(213,182,4)"/><text x="563.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (2 samples, 0.23%)</title><rect x="560" y="276" width="3" height="15" fill="rgb(219,220,8)"/><text x="563.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.23%)</title><rect x="560" y="292" width="3" height="15" fill="rgb(236,161,48)"/><text x="563.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (2 samples, 0.23%)</title><rect x="560" y="308" width="3" height="15" fill="rgb(238,217,32)"/><text x="563.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.12%)</title><rect x="561" y="324" width="2" height="15" fill="rgb(223,180,36)"/><text x="564.00" y="334.50"></text></g><g><title>array_argmin (methods.c:317) (1 samples, 0.12%)</title><rect x="561" y="340" width="2" height="15" fill="rgb(239,190,20)"/><text x="564.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c:247) (1 samples, 0.12%)</title><rect x="561" y="356" width="2" height="15" fill="rgb(249,162,13)"/><text x="564.00" y="366.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src:3217) (1 samples, 0.12%)</title><rect x="561" y="372" width="2" height="15" fill="rgb(212,18,39)"/><text x="564.00" y="382.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (2 samples, 0.23%)</title><rect x="563" y="308" width="2" height="15" fill="rgb(225,30,34)"/><text x="566.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.12%)</title><rect x="564" y="324" width="1" height="15" fill="rgb(222,216,41)"/><text x="567.00" y="334.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:577) (1 samples, 0.12%)</title><rect x="565" y="308" width="2" height="15" fill="rgb(209,61,48)"/><text x="568.00" y="318.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (4 samples, 0.46%)</title><rect x="563" y="260" width="5" height="15" fill="rgb(245,187,39)"/><text x="566.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (4 samples, 0.46%)</title><rect x="563" y="276" width="5" height="15" fill="rgb(253,27,28)"/><text x="566.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.46%)</title><rect x="563" y="292" width="5" height="15" fill="rgb(234,136,9)"/><text x="566.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.12%)</title><rect x="567" y="308" width="1" height="15" fill="rgb(232,185,3)"/><text x="570.00" y="318.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.12%)</title><rect x="567" y="324" width="1" height="15" fill="rgb(221,32,53)"/><text x="570.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (7 samples, 0.81%)</title><rect x="560" y="196" width="9" height="15" fill="rgb(249,72,8)"/><text x="563.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 0.81%)</title><rect x="560" y="212" width="9" height="15" fill="rgb(236,204,42)"/><text x="563.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (7 samples, 0.81%)</title><rect x="560" y="228" width="9" height="15" fill="rgb(234,99,12)"/><text x="563.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (7 samples, 0.81%)</title><rect x="560" y="244" width="9" height="15" fill="rgb(240,92,52)"/><text x="563.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:16) (1 samples, 0.12%)</title><rect x="568" y="260" width="1" height="15" fill="rgb(245,77,7)"/><text x="571.00" y="270.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.12%)</title><rect x="568" y="276" width="1" height="15" fill="rgb(207,85,46)"/><text x="571.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.12%)</title><rect x="568" y="292" width="1" height="15" fill="rgb(227,225,44)"/><text x="571.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:427) (1 samples, 0.12%)</title><rect x="568" y="308" width="1" height="15" fill="rgb(223,186,43)"/><text x="571.00" y="318.50"></text></g><g><title>0x7fe7a32e854f (?) (1 samples, 0.12%)</title><rect x="571" y="244" width="1" height="15" fill="rgb(213,54,26)"/><text x="574.00" y="254.50"></text></g><g><title>0x7fe7a32ee65e (?) (1 samples, 0.12%)</title><rect x="571" y="260" width="1" height="15" fill="rgb(228,88,23)"/><text x="574.00" y="270.50"></text></g><g><title>0x7fe7a32ee50f (?) (1 samples, 0.12%)</title><rect x="571" y="276" width="1" height="15" fill="rgb(227,116,43)"/><text x="574.00" y="286.50"></text></g><g><title>0x7fe7a32f4d6c (?) (1 samples, 0.12%)</title><rect x="571" y="292" width="1" height="15" fill="rgb(227,209,2)"/><text x="574.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="571" y="308" width="1" height="15" fill="rgb(239,43,54)"/><text x="574.00" y="318.50"></text></g><g><title>0x7fe7ac854daa (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="571" y="324" width="1" height="15" fill="rgb(240,201,9)"/><text x="574.00" y="334.50"></text></g><g><title>0x7fe7ac856cfb (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="571" y="340" width="1" height="15" fill="rgb(242,183,5)"/><text x="574.00" y="350.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:528) (1 samples, 0.12%)</title><rect x="572" y="244" width="1" height="15" fill="rgb(217,66,26)"/><text x="575.00" y="254.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::push_back (stl_vector.h:924) (1 samples, 0.12%)</title><rect x="572" y="260" width="1" height="15" fill="rgb(250,150,8)"/><text x="575.00" y="270.50"></text></g><g><title>0x7fe7ac856ea0 (libgomp.so.1.0.0) (4 samples, 0.46%)</title><rect x="575" y="484" width="5" height="15" fill="rgb(254,200,10)"/><text x="578.00" y="494.50"></text></g><g><title>0x7fe7ac856ea9 (libgomp.so.1.0.0) (13 samples, 1.51%)</title><rect x="580" y="484" width="18" height="15" fill="rgb(234,134,31)"/><text x="583.00" y="494.50"></text></g><g><title>0x7fe7ac856eab (libgomp.so.1.0.0) (11 samples, 1.28%)</title><rect x="598" y="484" width="15" height="15" fill="rgb(206,80,10)"/><text x="601.00" y="494.50"></text></g><g><title>0x7fe7ac855ab9 (libgomp.so.1.0.0) (38 samples, 4.41%)</title><rect x="575" y="468" width="52" height="15" fill="rgb(225,28,3)"/><text x="578.00" y="478.50">0x7fe..</text></g><g><title>0x7fe7ac856ead (libgomp.so.1.0.0) (10 samples, 1.16%)</title><rect x="613" y="484" width="14" height="15" fill="rgb(214,177,52)"/><text x="616.00" y="494.50"></text></g><g><title>0x7fe7ac85485f (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="627" y="484" width="1" height="15" fill="rgb(232,154,1)"/><text x="630.00" y="494.50"></text></g><g><title>0x7fe7ac854daa (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="628" y="484" width="2" height="15" fill="rgb(215,195,10)"/><text x="631.00" y="494.50"></text></g><g><title>0x7fe7ac856cfb (libgomp.so.1.0.0) (1 samples, 0.12%)</title><rect x="628" y="500" width="2" height="15" fill="rgb(237,46,40)"/><text x="631.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (1 samples, 0.12%)</title><rect x="630" y="516" width="1" height="15" fill="rgb(246,46,1)"/><text x="633.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (44 samples, 5.10%)</title><rect x="573" y="420" width="61" height="15" fill="rgb(207,161,0)"/><text x="576.00" y="430.50">Runtim..</text></g><g><title>pybind11::array::size (numpy.h:619) (44 samples, 5.10%)</title><rect x="573" y="436" width="61" height="15" fill="rgb(206,18,2)"/><text x="576.00" y="446.50">pybind..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (44 samples, 5.10%)</title><rect x="573" y="452" width="61" height="15" fill="rgb(245,86,19)"/><text x="576.00" y="462.50">std::a..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 0.58%)</title><rect x="627" y="468" width="7" height="15" fill="rgb(249,96,33)"/><text x="630.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (3 samples, 0.35%)</title><rect x="630" y="484" width="4" height="15" fill="rgb(237,72,52)"/><text x="633.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (3 samples, 0.35%)</title><rect x="630" y="500" width="4" height="15" fill="rgb(246,133,24)"/><text x="633.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (2 samples, 0.23%)</title><rect x="631" y="516" width="3" height="15" fill="rgb(211,161,19)"/><text x="634.00" y="526.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (2 samples, 0.23%)</title><rect x="631" y="532" width="3" height="15" fill="rgb(248,55,20)"/><text x="634.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (2 samples, 0.23%)</title><rect x="631" y="548" width="3" height="15" fill="rgb(221,148,23)"/><text x="634.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (2 samples, 0.23%)</title><rect x="631" y="564" width="3" height="15" fill="rgb(234,70,14)"/><text x="634.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (2 samples, 0.23%)</title><rect x="631" y="580" width="3" height="15" fill="rgb(219,14,27)"/><text x="634.00" y="590.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (48 samples, 5.57%)</title><rect x="569" y="196" width="66" height="15" fill="rgb(215,186,15)"/><text x="572.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (47 samples, 5.45%)</title><rect x="571" y="212" width="64" height="15" fill="rgb(251,125,4)"/><text x="574.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (47 samples, 5.45%)</title><rect x="571" y="228" width="64" height="15" fill="rgb(252,229,35)"/><text x="574.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (45 samples, 5.22%)</title><rect x="573" y="244" width="62" height="15" fill="rgb(249,66,51)"/><text x="576.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (45 samples, 5.22%)</title><rect x="573" y="260" width="62" height="15" fill="rgb(210,167,8)"/><text x="576.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (45 samples, 5.22%)</title><rect x="573" y="276" width="62" height="15" fill="rgb(240,60,13)"/><text x="576.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (45 samples, 5.22%)</title><rect x="573" y="292" width="62" height="15" fill="rgb(242,196,33)"/><text x="576.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (45 samples, 5.22%)</title><rect x="573" y="308" width="62" height="15" fill="rgb(237,160,28)"/><text x="576.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (45 samples, 5.22%)</title><rect x="573" y="324" width="62" height="15" fill="rgb(223,203,30)"/><text x="576.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (45 samples, 5.22%)</title><rect x="573" y="340" width="62" height="15" fill="rgb(246,67,4)"/><text x="576.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (45 samples, 5.22%)</title><rect x="573" y="356" width="62" height="15" fill="rgb(233,68,36)"/><text x="576.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (45 samples, 5.22%)</title><rect x="573" y="372" width="62" height="15" fill="rgb(251,144,21)"/><text x="576.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (45 samples, 5.22%)</title><rect x="573" y="388" width="62" height="15" fill="rgb(254,132,17)"/><text x="576.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (45 samples, 5.22%)</title><rect x="573" y="404" width="62" height="15" fill="rgb(205,139,29)"/><text x="576.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:331) (1 samples, 0.12%)</title><rect x="634" y="420" width="1" height="15" fill="rgb(245,173,28)"/><text x="637.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h:867) (1 samples, 0.12%)</title><rect x="634" y="436" width="1" height="15" fill="rgb(211,164,15)"/><text x="637.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.12%)</title><rect x="634" y="452" width="1" height="15" fill="rgb(212,53,37)"/><text x="637.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.12%)</title><rect x="634" y="468" width="1" height="15" fill="rgb(250,114,35)"/><text x="637.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (1 samples, 0.12%)</title><rect x="634" y="484" width="1" height="15" fill="rgb(208,172,9)"/><text x="637.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.12%)</title><rect x="634" y="500" width="1" height="15" fill="rgb(232,51,8)"/><text x="637.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.12%)</title><rect x="634" y="516" width="1" height="15" fill="rgb(226,109,28)"/><text x="637.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.12%)</title><rect x="634" y="532" width="1" height="15" fill="rgb(205,180,48)"/><text x="637.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h:558) (1 samples, 0.12%)</title><rect x="634" y="548" width="1" height="15" fill="rgb(233,132,37)"/><text x="637.00" y="558.50"></text></g><g><title>pybind11::array::c_strides (numpy.h:789) (1 samples, 0.12%)</title><rect x="634" y="564" width="1" height="15" fill="rgb(244,140,13)"/><text x="637.00" y="574.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.12%)</title><rect x="634" y="580" width="1" height="15" fill="rgb(231,5,27)"/><text x="637.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.12%)</title><rect x="634" y="596" width="1" height="15" fill="rgb(233,142,36)"/><text x="637.00" y="606.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_create_storage (stl_vector.h:185) (1 samples, 0.12%)</title><rect x="634" y="612" width="1" height="15" fill="rgb(253,34,17)"/><text x="637.00" y="622.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="634" y="628" width="1" height="15" fill="rgb(240,147,24)"/><text x="637.00" y="638.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="634" y="644" width="1" height="15" fill="rgb(215,169,1)"/><text x="637.00" y="654.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="634" y="660" width="1" height="15" fill="rgb(253,81,5)"/><text x="637.00" y="670.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="634" y="676" width="1" height="15" fill="rgb(215,84,31)"/><text x="637.00" y="686.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="634" y="692" width="1" height="15" fill="rgb(215,49,12)"/><text x="637.00" y="702.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.12%)</title><rect x="635" y="196" width="1" height="15" fill="rgb(225,156,41)"/><text x="638.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (1 samples, 0.12%)</title><rect x="635" y="212" width="1" height="15" fill="rgb(240,124,27)"/><text x="638.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="635" y="228" width="1" height="15" fill="rgb(235,156,5)"/><text x="638.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="635" y="244" width="1" height="15" fill="rgb(208,96,23)"/><text x="638.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.12%)</title><rect x="635" y="260" width="1" height="15" fill="rgb(238,222,51)"/><text x="638.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.12%)</title><rect x="635" y="276" width="1" height="15" fill="rgb(210,3,37)"/><text x="638.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.12%)</title><rect x="635" y="292" width="1" height="15" fill="rgb(242,13,19)"/><text x="638.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="635" y="308" width="1" height="15" fill="rgb(207,48,42)"/><text x="638.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="635" y="324" width="1" height="15" fill="rgb(246,183,3)"/><text x="638.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.12%)</title><rect x="635" y="340" width="1" height="15" fill="rgb(239,155,16)"/><text x="638.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.12%)</title><rect x="636" y="228" width="2" height="15" fill="rgb(236,93,38)"/><text x="639.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.12%)</title><rect x="636" y="244" width="2" height="15" fill="rgb(252,215,26)"/><text x="639.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (272 samples, 31.55%)</title><rect x="267" y="180" width="372" height="15" fill="rgb(215,15,36)"/><text x="270.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (2 samples, 0.23%)</title><rect x="636" y="196" width="3" height="15" fill="rgb(250,48,2)"/><text x="639.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.23%)</title><rect x="636" y="212" width="3" height="15" fill="rgb(206,58,32)"/><text x="639.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.12%)</title><rect x="638" y="228" width="1" height="15" fill="rgb(211,211,31)"/><text x="641.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.12%)</title><rect x="638" y="244" width="1" height="15" fill="rgb(240,152,19)"/><text x="641.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.12%)</title><rect x="638" y="260" width="1" height="15" fill="rgb(207,78,33)"/><text x="641.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.12%)</title><rect x="638" y="276" width="1" height="15" fill="rgb(227,113,7)"/><text x="641.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.12%)</title><rect x="638" y="292" width="1" height="15" fill="rgb(243,5,48)"/><text x="641.00" y="302.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="638" y="308" width="1" height="15" fill="rgb(205,129,40)"/><text x="641.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.12%)</title><rect x="639" y="180" width="2" height="15" fill="rgb(227,89,14)"/><text x="642.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.23%)</title><rect x="641" y="180" width="2" height="15" fill="rgb(207,218,29)"/><text x="644.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (280 samples, 32.48%)</title><rect x="261" y="164" width="384" height="15" fill="rgb(211,153,23)"/><text x="264.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.12%)</title><rect x="643" y="180" width="2" height="15" fill="rgb(224,96,18)"/><text x="646.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:61) (281 samples, 32.60%)</title><rect x="261" y="52" width="385" height="15" fill="rgb(213,204,54)"/><text x="264.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:60) (281 samples, 32.60%)</title><rect x="261" y="68" width="385" height="15" fill="rgb(212,204,10)"/><text x="264.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:37) (281 samples, 32.60%)</title><rect x="261" y="84" width="385" height="15" fill="rgb(227,186,37)"/><text x="264.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:31) (281 samples, 32.60%)</title><rect x="261" y="100" width="385" height="15" fill="rgb(215,136,2)"/><text x="264.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (281 samples, 32.60%)</title><rect x="261" y="116" width="385" height="15" fill="rgb(237,135,44)"/><text x="264.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (281 samples, 32.60%)</title><rect x="261" y="132" width="385" height="15" fill="rgb(228,136,19)"/><text x="264.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (281 samples, 32.60%)</title><rect x="261" y="148" width="385" height="15" fill="rgb(231,211,41)"/><text x="264.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.12%)</title><rect x="645" y="164" width="1" height="15" fill="rgb(227,154,12)"/><text x="648.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.12%)</title><rect x="645" y="180" width="1" height="15" fill="rgb(218,90,41)"/><text x="648.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.12%)</title><rect x="645" y="196" width="1" height="15" fill="rgb(220,221,35)"/><text x="648.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.12%)</title><rect x="645" y="212" width="1" height="15" fill="rgb(212,123,45)"/><text x="648.00" y="222.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="645" y="228" width="1" height="15" fill="rgb(238,89,12)"/><text x="648.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="646" y="116" width="1" height="15" fill="rgb(225,16,10)"/><text x="649.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.12%)</title><rect x="646" y="132" width="1" height="15" fill="rgb(242,214,19)"/><text x="649.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.12%)</title><rect x="647" y="148" width="2" height="15" fill="rgb(215,113,15)"/><text x="650.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.12%)</title><rect x="649" y="196" width="1" height="15" fill="rgb(241,113,47)"/><text x="652.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.12%)</title><rect x="649" y="212" width="1" height="15" fill="rgb(206,73,6)"/><text x="652.00" y="222.50"></text></g><g><title>0x7fe7a288dff9 (?) (1 samples, 0.12%)</title><rect x="650" y="212" width="2" height="15" fill="rgb(244,169,48)"/><text x="653.00" y="222.50"></text></g><g><title>0x7fe7a2888ef6 (?) (1 samples, 0.12%)</title><rect x="650" y="228" width="2" height="15" fill="rgb(227,189,42)"/><text x="653.00" y="238.50"></text></g><g><title>0x7fe7a287d962 (?) (1 samples, 0.12%)</title><rect x="650" y="244" width="2" height="15" fill="rgb(252,92,17)"/><text x="653.00" y="254.50"></text></g><g><title>0x7fe7a28b17a7 (?) (1 samples, 0.12%)</title><rect x="650" y="260" width="2" height="15" fill="rgb(222,73,18)"/><text x="653.00" y="270.50"></text></g><g><title>0x7fe7a28b1379 (?) (1 samples, 0.12%)</title><rect x="650" y="276" width="2" height="15" fill="rgb(250,152,50)"/><text x="653.00" y="286.50"></text></g><g><title>0x7fe7a2d0f8b8 (?) (1 samples, 0.12%)</title><rect x="650" y="292" width="2" height="15" fill="rgb(242,141,41)"/><text x="653.00" y="302.50"></text></g><g><title>0x7fe7a2d0dc7f (?) (1 samples, 0.12%)</title><rect x="650" y="308" width="2" height="15" fill="rgb(222,222,51)"/><text x="653.00" y="318.50"></text></g><g><title>0x7fe7a2d2099c (?) (1 samples, 0.12%)</title><rect x="650" y="324" width="2" height="15" fill="rgb(221,215,18)"/><text x="653.00" y="334.50"></text></g><g><title>0x7fe7a2a482ab (?) (1 samples, 0.12%)</title><rect x="650" y="340" width="2" height="15" fill="rgb(210,131,39)"/><text x="653.00" y="350.50"></text></g><g><title>0x7fe7a28c23e6 (?) (1 samples, 0.12%)</title><rect x="650" y="356" width="2" height="15" fill="rgb(227,155,33)"/><text x="653.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="650" y="372" width="2" height="15" fill="rgb(244,28,27)"/><text x="653.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="650" y="388" width="2" height="15" fill="rgb(225,139,1)"/><text x="653.00" y="398.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="653" y="292" width="1" height="15" fill="rgb(226,173,24)"/><text x="656.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="653" y="308" width="1" height="15" fill="rgb(249,3,36)"/><text x="656.00" y="318.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.46%)</title><rect x="654" y="340" width="6" height="15" fill="rgb(237,219,5)"/><text x="657.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="656" y="356" width="4" height="15" fill="rgb(246,202,9)"/><text x="659.00" y="366.50"></text></g><g><title>0x7fe7e286fd97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="669" y="372" width="2" height="15" fill="rgb(215,32,19)"/><text x="672.00" y="382.50"></text></g><g><title>0x7fe7e286fdc3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="671" y="372" width="1" height="15" fill="rgb(247,19,18)"/><text x="674.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.16%)</title><rect x="660" y="340" width="13" height="15" fill="rgb(235,223,34)"/><text x="663.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.16%)</title><rect x="660" y="356" width="13" height="15" fill="rgb(225,169,13)"/><text x="663.00" y="366.50"></text></g><g><title>0x7fe7e286fdc9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="672" y="372" width="1" height="15" fill="rgb(209,170,9)"/><text x="675.00" y="382.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="673" y="356" width="2" height="15" fill="rgb(232,47,39)"/><text x="676.00" y="366.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.39%)</title><rect x="675" y="356" width="16" height="15" fill="rgb(245,181,50)"/><text x="678.00" y="366.50"></text></g><g><title>onnxruntime::SliceIterator&lt;float&gt;::SliceIterator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="688" y="372" width="3" height="15" fill="rgb(212,53,34)"/><text x="691.00" y="382.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="688" y="388" width="3" height="15" fill="rgb(209,57,34)"/><text x="691.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="690" y="404" width="1" height="15" fill="rgb(235,189,50)"/><text x="693.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="690" y="420" width="1" height="15" fill="rgb(208,169,52)"/><text x="693.00" y="430.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.62%)</title><rect x="673" y="340" width="20" height="15" fill="rgb(237,13,3)"/><text x="676.00" y="350.50"></text></g><g><title>0x7fe7e284fa4f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="691" y="356" width="2" height="15" fill="rgb(240,177,25)"/><text x="694.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="693" y="340" width="1" height="15" fill="rgb(219,29,38)"/><text x="696.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="693" y="356" width="1" height="15" fill="rgb(250,117,45)"/><text x="696.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="693" y="372" width="1" height="15" fill="rgb(253,45,13)"/><text x="696.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="693" y="388" width="1" height="15" fill="rgb(212,86,39)"/><text x="696.00" y="398.50"></text></g><g><title>0x7fe7e285e6a2 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="693" y="404" width="1" height="15" fill="rgb(205,188,34)"/><text x="696.00" y="414.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.70%)</title><rect x="694" y="340" width="8" height="15" fill="rgb(217,226,27)"/><text x="697.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="699" y="356" width="3" height="15" fill="rgb(234,113,50)"/><text x="702.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="702" y="340" width="2" height="15" fill="rgb(238,100,9)"/><text x="705.00" y="350.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="702" y="356" width="2" height="15" fill="rgb(248,154,47)"/><text x="705.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="702" y="372" width="2" height="15" fill="rgb(240,188,12)"/><text x="705.00" y="382.50"></text></g><g><title>0x7fe7e284fd07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="702" y="388" width="2" height="15" fill="rgb(238,226,19)"/><text x="705.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.46%)</title><rect x="710" y="372" width="6" height="15" fill="rgb(252,133,50)"/><text x="713.00" y="382.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.16%)</title><rect x="704" y="340" width="13" height="15" fill="rgb(242,51,9)"/><text x="707.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.16%)</title><rect x="704" y="356" width="13" height="15" fill="rgb(233,105,26)"/><text x="707.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="716" y="372" width="1" height="15" fill="rgb(212,152,42)"/><text x="719.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="716" y="388" width="1" height="15" fill="rgb(237,144,28)"/><text x="719.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="717" y="372" width="2" height="15" fill="rgb(206,224,39)"/><text x="720.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="717" y="340" width="3" height="15" fill="rgb(217,23,2)"/><text x="720.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="717" y="356" width="3" height="15" fill="rgb(247,172,46)"/><text x="720.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="372" width="1" height="15" fill="rgb(232,172,14)"/><text x="722.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="388" width="1" height="15" fill="rgb(216,228,16)"/><text x="722.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="404" width="1" height="15" fill="rgb(249,196,39)"/><text x="722.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="420" width="1" height="15" fill="rgb(252,65,9)"/><text x="722.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="436" width="1" height="15" fill="rgb(234,70,45)"/><text x="722.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="452" width="1" height="15" fill="rgb(253,86,0)"/><text x="722.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="468" width="1" height="15" fill="rgb(254,147,8)"/><text x="722.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="484" width="1" height="15" fill="rgb(248,7,43)"/><text x="722.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="719" y="500" width="1" height="15" fill="rgb(243,88,42)"/><text x="722.00" y="510.50"></text></g><g><title>0x7fe7e284f91e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="747" y="388" width="2" height="15" fill="rgb(216,11,51)"/><text x="750.00" y="398.50"></text></g><g><title>0x7fe7e284fa4c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="749" y="388" width="1" height="15" fill="rgb(229,41,20)"/><text x="752.00" y="398.50"></text></g><g><title>0x7fe7e2a21e25 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="750" y="388" width="1" height="15" fill="rgb(228,106,34)"/><text x="753.00" y="398.50"></text></g><g><title>0x7fe7e2a21e7e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="751" y="388" width="2" height="15" fill="rgb(248,94,23)"/><text x="754.00" y="398.50"></text></g><g><title>0x7fe7e2a21eb6 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="753" y="388" width="3" height="15" fill="rgb(229,182,11)"/><text x="756.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="756" y="388" width="2" height="15" fill="rgb(219,218,0)"/><text x="759.00" y="398.50"></text></g><g><title>logf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="758" y="388" width="2" height="15" fill="rgb(233,73,45)"/><text x="761.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.46%)</title><rect x="760" y="388" width="5" height="15" fill="rgb(205,201,24)"/><text x="763.00" y="398.50"></text></g><g><title>0x7fe7a2854930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="769" y="404" width="2" height="15" fill="rgb(229,71,46)"/><text x="772.00" y="414.50"></text></g><g><title>0x7fe7e284f91e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="771" y="404" width="1" height="15" fill="rgb(245,112,46)"/><text x="774.00" y="414.50"></text></g><g><title>0x7fe7e284f945 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="772" y="404" width="3" height="15" fill="rgb(209,123,23)"/><text x="775.00" y="414.50"></text></g><g><title>0x7fe7e284f982 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="775" y="404" width="1" height="15" fill="rgb(208,172,18)"/><text x="778.00" y="414.50"></text></g><g><title>0x7fe7e284fbd4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="776" y="404" width="1" height="15" fill="rgb(209,192,33)"/><text x="779.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="777" y="404" width="3" height="15" fill="rgb(223,143,46)"/><text x="780.00" y="414.50"></text></g><g><title>0x7fe7d231bd50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="782" y="420" width="1" height="15" fill="rgb(238,213,14)"/><text x="785.00" y="430.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 6.03%)</title><rect x="720" y="340" width="71" height="15" fill="rgb(241,134,38)"/><text x="723.00" y="350.50">onnxrunt..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (52 samples, 6.03%)</title><rect x="720" y="356" width="71" height="15" fill="rgb(223,215,33)"/><text x="723.00" y="366.50">onnxrunt..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 5.92%)</title><rect x="721" y="372" width="70" height="15" fill="rgb(249,102,31)"/><text x="724.00" y="382.50">onnxrun..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.20%)</title><rect x="765" y="388" width="26" height="15" fill="rgb(231,189,49)"/><text x="768.00" y="398.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.93%)</title><rect x="780" y="404" width="11" height="15" fill="rgb(218,192,47)"/><text x="783.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.70%)</title><rect x="783" y="420" width="8" height="15" fill="rgb(215,48,34)"/><text x="786.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="791" y="340" width="4" height="15" fill="rgb(210,132,1)"/><text x="794.00" y="350.50"></text></g><g><title>0x7fe7e284f906 (libc-2.29.so) (4 samples, 0.46%)</title><rect x="847" y="356" width="6" height="15" fill="rgb(205,108,40)"/><text x="850.00" y="366.50"></text></g><g><title>0x7fe7e284f90e (libc-2.29.so) (2 samples, 0.23%)</title><rect x="853" y="356" width="2" height="15" fill="rgb(218,207,7)"/><text x="856.00" y="366.50"></text></g><g><title>0x7fe7e284f91c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="855" y="356" width="2" height="15" fill="rgb(233,187,12)"/><text x="858.00" y="366.50"></text></g><g><title>0x7fe7e284f938 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="857" y="356" width="1" height="15" fill="rgb(242,183,49)"/><text x="860.00" y="366.50"></text></g><g><title>0x7fe7e284f95e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="858" y="356" width="2" height="15" fill="rgb(222,1,28)"/><text x="861.00" y="366.50"></text></g><g><title>0x7fe7e284f965 (libc-2.29.so) (3 samples, 0.35%)</title><rect x="860" y="356" width="4" height="15" fill="rgb(211,205,41)"/><text x="863.00" y="366.50"></text></g><g><title>0x7fe7e284f96a (libc-2.29.so) (3 samples, 0.35%)</title><rect x="864" y="356" width="4" height="15" fill="rgb(248,187,48)"/><text x="867.00" y="366.50"></text></g><g><title>0x7fe7e284f98c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="868" y="356" width="1" height="15" fill="rgb(243,57,12)"/><text x="871.00" y="366.50"></text></g><g><title>0x7fe7e284f991 (libc-2.29.so) (3 samples, 0.35%)</title><rect x="869" y="356" width="4" height="15" fill="rgb(248,126,7)"/><text x="872.00" y="366.50"></text></g><g><title>0x7fe7e284f998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="873" y="356" width="2" height="15" fill="rgb(248,95,53)"/><text x="876.00" y="366.50"></text></g><g><title>0x7fe7e284fa41 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="875" y="356" width="1" height="15" fill="rgb(210,39,26)"/><text x="878.00" y="366.50"></text></g><g><title>0x7fe7e284fa4d (libc-2.29.so) (2 samples, 0.23%)</title><rect x="876" y="356" width="3" height="15" fill="rgb(250,171,44)"/><text x="879.00" y="366.50"></text></g><g><title>0x7fe7e284fa55 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="879" y="356" width="1" height="15" fill="rgb(225,72,9)"/><text x="882.00" y="366.50"></text></g><g><title>0x7fe7e284fbc0 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="880" y="356" width="3" height="15" fill="rgb(221,60,10)"/><text x="883.00" y="366.50"></text></g><g><title>0x7fe7e284fbd8 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="883" y="356" width="3" height="15" fill="rgb(221,176,31)"/><text x="886.00" y="366.50"></text></g><g><title>0x7fe7e284fbe8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="886" y="356" width="1" height="15" fill="rgb(228,76,37)"/><text x="889.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (9 samples, 1.04%)</title><rect x="887" y="356" width="12" height="15" fill="rgb(240,122,44)"/><text x="890.00" y="366.50"></text></g><g><title>0x7fe7a2854930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1016" y="388" width="1" height="15" fill="rgb(234,203,38)"/><text x="1019.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.04%)</title><rect x="1017" y="388" width="12" height="15" fill="rgb(223,190,36)"/><text x="1020.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.04%)</title><rect x="1017" y="404" width="12" height="15" fill="rgb(237,116,5)"/><text x="1020.00" y="414.50"></text></g><g><title>0x7fe7e2870120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1043" y="420" width="1" height="15" fill="rgb(238,219,28)"/><text x="1046.00" y="430.50"></text></g><g><title>0x7fe7e287012f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1044" y="420" width="2" height="15" fill="rgb(213,62,38)"/><text x="1047.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.86%)</title><rect x="1036" y="404" width="22" height="15" fill="rgb(208,24,25)"/><text x="1039.00" y="414.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.04%)</title><rect x="1046" y="420" width="12" height="15" fill="rgb(216,166,52)"/><text x="1049.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.81%)</title><rect x="1049" y="436" width="9" height="15" fill="rgb(205,16,8)"/><text x="1052.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (164 samples, 19.03%)</title><rect x="899" y="356" width="225" height="15" fill="rgb(251,162,39)"/><text x="902.00" y="366.50">onnxruntime::ml::TreeEnsemble..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (93 samples, 10.79%)</title><rect x="996" y="372" width="128" height="15" fill="rgb(211,141,14)"/><text x="999.00" y="382.50">std::_Hashtable&lt;..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (69 samples, 8.00%)</title><rect x="1029" y="388" width="95" height="15" fill="rgb(236,229,42)"/><text x="1032.00" y="398.50">std::_Hasht..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (48 samples, 5.57%)</title><rect x="1058" y="404" width="66" height="15" fill="rgb(218,146,6)"/><text x="1061.00" y="414.50">std::__..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (21 samples, 2.44%)</title><rect x="1095" y="420" width="29" height="15" fill="rgb(220,169,49)"/><text x="1098.00" y="430.50">st..</text></g><g><title>0x7fe7e286fd97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1135" y="372" width="1" height="15" fill="rgb(247,9,20)"/><text x="1138.00" y="382.50"></text></g><g><title>0x7fe7e286fdbf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1136" y="372" width="1" height="15" fill="rgb(241,47,2)"/><text x="1139.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.28%)</title><rect x="1124" y="356" width="15" height="15" fill="rgb(231,153,40)"/><text x="1127.00" y="366.50"></text></g><g><title>0x7fe7e286fdc9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1137" y="372" width="2" height="15" fill="rgb(240,0,34)"/><text x="1140.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1139" y="356" width="1" height="15" fill="rgb(246,90,31)"/><text x="1142.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 2.67%)</title><rect x="1140" y="356" width="32" height="15" fill="rgb(237,191,19)"/><text x="1143.00" y="366.50">st..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (388 samples, 45.01%)</title><rect x="653" y="260" width="531" height="15" fill="rgb(224,69,28)"/><text x="656.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (388 samples, 45.01%)</title><rect x="653" y="276" width="531" height="15" fill="rgb(222,48,9)"/><text x="656.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (387 samples, 44.90%)</title><rect x="654" y="292" width="530" height="15" fill="rgb(243,192,12)"/><text x="657.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (387 samples, 44.90%)</title><rect x="654" y="308" width="530" height="15" fill="rgb(233,18,47)"/><text x="657.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (387 samples, 44.90%)</title><rect x="654" y="324" width="530" height="15" fill="rgb(251,178,11)"/><text x="657.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (284 samples, 32.95%)</title><rect x="795" y="340" width="389" height="15" fill="rgb(207,69,54)"/><text x="798.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compu..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.04%)</title><rect x="1172" y="356" width="12" height="15" fill="rgb(239,224,35)"/><text x="1175.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.58%)</title><rect x="1177" y="372" width="7" height="15" fill="rgb(216,141,2)"/><text x="1180.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1181" y="388" width="3" height="15" fill="rgb(226,124,27)"/><text x="1184.00" y="398.50"></text></g><g><title>0x7fe7e2850e07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1184" y="372" width="1" height="15" fill="rgb(240,163,42)"/><text x="1187.00" y="382.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="1184" y="260" width="3" height="15" fill="rgb(211,64,38)"/><text x="1187.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.23%)</title><rect x="1184" y="276" width="3" height="15" fill="rgb(221,94,11)"/><text x="1187.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.23%)</title><rect x="1184" y="292" width="3" height="15" fill="rgb(205,211,4)"/><text x="1187.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.23%)</title><rect x="1184" y="308" width="3" height="15" fill="rgb(254,35,9)"/><text x="1187.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.23%)</title><rect x="1184" y="324" width="3" height="15" fill="rgb(230,60,6)"/><text x="1187.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.23%)</title><rect x="1184" y="340" width="3" height="15" fill="rgb(233,149,15)"/><text x="1187.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1184" y="356" width="3" height="15" fill="rgb(229,19,40)"/><text x="1187.00" y="366.50"></text></g><g><title>0x7fe7e2851028 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1185" y="372" width="2" height="15" fill="rgb(253,188,7)"/><text x="1188.00" y="382.50"></text></g><g><title>0x7fe7e284eb9b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1185" y="388" width="2" height="15" fill="rgb(238,27,1)"/><text x="1188.00" y="398.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (394 samples, 45.71%)</title><rect x="649" y="164" width="539" height="15" fill="rgb(236,14,32)"/><text x="652.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (394 samples, 45.71%)</title><rect x="649" y="180" width="539" height="15" fill="rgb(217,86,50)"/><text x="652.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (393 samples, 45.59%)</title><rect x="650" y="196" width="538" height="15" fill="rgb(211,224,4)"/><text x="653.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (392 samples, 45.48%)</title><rect x="652" y="212" width="536" height="15" fill="rgb(230,30,14)"/><text x="655.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (392 samples, 45.48%)</title><rect x="652" y="228" width="536" height="15" fill="rgb(211,174,27)"/><text x="655.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMet..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (392 samples, 45.48%)</title><rect x="652" y="244" width="536" height="15" fill="rgb(248,200,11)"/><text x="655.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(239,204,34)"/><text x="1190.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(228,131,16)"/><text x="1190.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="292" width="1" height="15" fill="rgb(249,217,21)"/><text x="1190.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="308" width="1" height="15" fill="rgb(242,25,44)"/><text x="1190.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="324" width="1" height="15" fill="rgb(253,25,23)"/><text x="1190.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="340" width="1" height="15" fill="rgb(249,136,39)"/><text x="1190.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="356" width="1" height="15" fill="rgb(234,164,48)"/><text x="1190.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="372" width="1" height="15" fill="rgb(229,157,43)"/><text x="1190.00" y="382.50"></text></g><g><title>all (862 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,84,34)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:68) (397 samples, 46.06%)</title><rect x="646" y="52" width="544" height="15" fill="rgb(245,181,37)"/><text x="649.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:67) (397 samples, 46.06%)</title><rect x="646" y="68" width="544" height="15" fill="rgb(212,120,21)"/><text x="649.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:37) (397 samples, 46.06%)</title><rect x="646" y="84" width="544" height="15" fill="rgb(207,133,6)"/><text x="649.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_float_.py:31) (397 samples, 46.06%)</title><rect x="646" y="100" width="544" height="15" fill="rgb(217,88,21)"/><text x="649.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_4_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (396 samples, 45.94%)</title><rect x="647" y="116" width="543" height="15" fill="rgb(243,47,45)"/><text x="650.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (396 samples, 45.94%)</title><rect x="647" y="132" width="543" height="15" fill="rgb(243,216,41)"/><text x="650.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (395 samples, 45.82%)</title><rect x="649" y="148" width="541" height="15" fill="rgb(251,11,45)"/><text x="652.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.12%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(215,202,2)"/><text x="1191.00" y="174.50"></text></g></g></svg>