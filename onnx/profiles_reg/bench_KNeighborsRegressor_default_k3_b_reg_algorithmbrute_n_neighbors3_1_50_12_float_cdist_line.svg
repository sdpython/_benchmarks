<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:1) (1 samples, 0.32%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(223,179,38)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(253,63,51)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(226,182,38)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(207,3,10)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(224,31,51)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(241,179,39)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.32%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(250,111,10)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(211,107,39)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(230,142,11)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(228,111,37)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(214,134,32)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(226,45,36)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(223,117,6)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(253,41,8)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.32%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(207,137,52)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(242,15,25)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(209,60,18)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(218,41,10)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(211,76,46)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(211,14,27)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:15) (1 samples, 0.32%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(246,129,53)"/><text x="13.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(212,48,52)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(222,129,22)"/><text x="13.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(206,127,14)"/><text x="13.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(232,45,38)"/><text x="13.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(248,35,25)"/><text x="13.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py:42) (1 samples, 0.32%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(206,172,25)"/><text x="13.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(243,155,18)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(207,88,16)"/><text x="13.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(223,46,38)"/><text x="13.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(227,40,52)"/><text x="13.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(234,55,24)"/><text x="13.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py:1005) (1 samples, 0.32%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(210,209,54)"/><text x="13.00" y="670.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.32%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(209,141,48)"/><text x="13.00" y="686.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:2) (1 samples, 0.32%)</title><rect x="13" y="148" width="4" height="15" fill="rgb(210,205,52)"/><text x="16.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="164" width="4" height="15" fill="rgb(211,147,21)"/><text x="16.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(254,223,1)"/><text x="16.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(205,216,43)"/><text x="16.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="212" width="4" height="15" fill="rgb(244,100,22)"/><text x="16.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="228" width="4" height="15" fill="rgb(219,187,18)"/><text x="16.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="244" width="4" height="15" fill="rgb(241,218,43)"/><text x="16.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="260" width="4" height="15" fill="rgb(234,153,0)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="276" width="4" height="15" fill="rgb(236,73,4)"/><text x="16.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (1 samples, 0.32%)</title><rect x="13" y="292" width="4" height="15" fill="rgb(211,87,41)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="308" width="4" height="15" fill="rgb(232,201,29)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="324" width="4" height="15" fill="rgb(235,178,50)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="340" width="4" height="15" fill="rgb(217,125,4)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="356" width="4" height="15" fill="rgb(247,163,33)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="372" width="4" height="15" fill="rgb(205,125,8)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (1 samples, 0.32%)</title><rect x="13" y="388" width="4" height="15" fill="rgb(208,137,33)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="404" width="4" height="15" fill="rgb(239,54,31)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="420" width="4" height="15" fill="rgb(227,9,10)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="436" width="4" height="15" fill="rgb(251,29,15)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="452" width="4" height="15" fill="rgb(216,35,52)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="468" width="4" height="15" fill="rgb(232,121,11)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (1 samples, 0.32%)</title><rect x="13" y="484" width="4" height="15" fill="rgb(210,210,39)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="500" width="4" height="15" fill="rgb(220,167,38)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="516" width="4" height="15" fill="rgb(244,43,0)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="532" width="4" height="15" fill="rgb(242,23,38)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="548" width="4" height="15" fill="rgb(243,213,53)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="564" width="4" height="15" fill="rgb(232,63,45)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (1 samples, 0.32%)</title><rect x="13" y="580" width="4" height="15" fill="rgb(233,51,32)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="596" width="4" height="15" fill="rgb(244,92,6)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="13" y="612" width="4" height="15" fill="rgb(248,123,51)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="628" width="4" height="15" fill="rgb(247,99,18)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="644" width="4" height="15" fill="rgb(244,44,16)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="660" width="4" height="15" fill="rgb(254,83,25)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="676" width="4" height="15" fill="rgb(247,16,43)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="692" width="4" height="15" fill="rgb(205,74,46)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="708" width="4" height="15" fill="rgb(234,2,4)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (1 samples, 0.32%)</title><rect x="13" y="724" width="4" height="15" fill="rgb(205,228,26)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="740" width="4" height="15" fill="rgb(214,153,37)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="756" width="4" height="15" fill="rgb(233,148,24)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="772" width="4" height="15" fill="rgb(218,3,29)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="788" width="4" height="15" fill="rgb(244,200,36)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="804" width="4" height="15" fill="rgb(207,219,16)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:57) (1 samples, 0.32%)</title><rect x="13" y="820" width="4" height="15" fill="rgb(235,13,24)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="836" width="4" height="15" fill="rgb(247,179,19)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="852" width="4" height="15" fill="rgb(233,200,27)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(236,109,30)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(237,140,9)"/><text x="16.00" y="894.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:4) (1 samples, 0.32%)</title><rect x="17" y="148" width="4" height="15" fill="rgb(210,106,20)"/><text x="20.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="164" width="4" height="15" fill="rgb(209,194,50)"/><text x="20.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="17" y="180" width="4" height="15" fill="rgb(234,68,13)"/><text x="20.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="196" width="4" height="15" fill="rgb(212,202,49)"/><text x="20.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="212" width="4" height="15" fill="rgb(215,195,46)"/><text x="20.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="228" width="4" height="15" fill="rgb(227,150,7)"/><text x="20.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="244" width="4" height="15" fill="rgb(233,215,54)"/><text x="20.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="260" width="4" height="15" fill="rgb(226,37,6)"/><text x="20.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="276" width="4" height="15" fill="rgb(214,71,34)"/><text x="20.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.32%)</title><rect x="17" y="292" width="4" height="15" fill="rgb(250,195,49)"/><text x="20.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="308" width="4" height="15" fill="rgb(206,74,41)"/><text x="20.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="324" width="4" height="15" fill="rgb(234,80,9)"/><text x="20.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="340" width="4" height="15" fill="rgb(232,3,27)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="356" width="4" height="15" fill="rgb(207,157,7)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="372" width="4" height="15" fill="rgb(232,181,13)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.32%)</title><rect x="17" y="388" width="4" height="15" fill="rgb(251,96,26)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="404" width="4" height="15" fill="rgb(227,220,18)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="420" width="4" height="15" fill="rgb(240,208,52)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="436" width="4" height="15" fill="rgb(209,124,23)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="452" width="4" height="15" fill="rgb(205,150,52)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="468" width="4" height="15" fill="rgb(227,197,52)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.32%)</title><rect x="17" y="484" width="4" height="15" fill="rgb(231,81,48)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="500" width="4" height="15" fill="rgb(246,10,8)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="516" width="4" height="15" fill="rgb(212,100,11)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="532" width="4" height="15" fill="rgb(221,121,19)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="548" width="4" height="15" fill="rgb(240,124,30)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="564" width="4" height="15" fill="rgb(215,201,3)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.32%)</title><rect x="17" y="580" width="4" height="15" fill="rgb(215,116,51)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="596" width="4" height="15" fill="rgb(233,71,37)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="612" width="4" height="15" fill="rgb(251,222,40)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="628" width="4" height="15" fill="rgb(219,217,47)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="644" width="4" height="15" fill="rgb(218,179,39)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="660" width="4" height="15" fill="rgb(242,198,52)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.32%)</title><rect x="17" y="676" width="4" height="15" fill="rgb(213,94,41)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="692" width="4" height="15" fill="rgb(226,212,39)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="708" width="4" height="15" fill="rgb(228,168,52)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="724" width="4" height="15" fill="rgb(218,139,45)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="740" width="4" height="15" fill="rgb(229,42,52)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="756" width="4" height="15" fill="rgb(238,166,27)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.32%)</title><rect x="17" y="772" width="4" height="15" fill="rgb(253,136,3)"/><text x="20.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="17" y="788" width="4" height="15" fill="rgb(252,10,41)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="804" width="4" height="15" fill="rgb(221,202,37)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="820" width="4" height="15" fill="rgb(237,139,47)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="836" width="4" height="15" fill="rgb(240,65,50)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(221,81,47)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(205,6,31)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(216,223,47)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.32%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(248,184,39)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(213,134,8)"/><text x="20.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(239,128,41)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(235,42,0)"/><text x="20.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(234,170,48)"/><text x="20.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(205,1,26)"/><text x="20.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(241,86,37)"/><text x="20.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(227,115,48)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5513) (1 samples, 0.32%)</title><rect x="17" y="1028" width="4" height="15" fill="rgb(254,70,26)"/><text x="20.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1588) (1 samples, 0.32%)</title><rect x="17" y="1044" width="4" height="15" fill="rgb(253,196,0)"/><text x="20.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.32%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(210,127,36)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(214,22,33)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(213,104,22)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(217,229,36)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(247,6,47)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(231,42,47)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.32%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(222,123,6)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(249,95,4)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(253,205,32)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(249,101,22)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(208,61,28)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(231,68,12)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.32%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(230,138,1)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(206,172,47)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(222,4,39)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(225,78,35)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(209,99,45)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(230,172,24)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.32%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(217,83,18)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(230,4,23)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(243,62,36)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(235,109,37)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(218,5,4)"/><text x="24.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.32%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(247,1,34)"/><text x="24.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.32%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(247,50,40)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="24" y="644" width="4" height="15" fill="rgb(250,139,51)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="24" y="660" width="4" height="15" fill="rgb(247,158,7)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="24" y="676" width="4" height="15" fill="rgb(245,155,35)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="24" y="692" width="4" height="15" fill="rgb(223,16,47)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="24" y="708" width="4" height="15" fill="rgb(227,228,14)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.32%)</title><rect x="24" y="724" width="4" height="15" fill="rgb(215,14,21)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="24" y="740" width="4" height="15" fill="rgb(245,152,31)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="24" y="756" width="4" height="15" fill="rgb(208,34,40)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="24" y="772" width="4" height="15" fill="rgb(206,87,35)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="24" y="788" width="4" height="15" fill="rgb(205,23,45)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="24" y="804" width="4" height="15" fill="rgb(235,31,11)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.32%)</title><rect x="24" y="820" width="4" height="15" fill="rgb(209,15,33)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="24" y="836" width="4" height="15" fill="rgb(208,125,19)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="24" y="852" width="4" height="15" fill="rgb(240,191,53)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="24" y="868" width="4" height="15" fill="rgb(242,68,35)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.32%)</title><rect x="24" y="884" width="4" height="15" fill="rgb(229,166,48)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="24" y="900" width="4" height="15" fill="rgb(254,134,40)"/><text x="27.00" y="910.50"></text></g><g><title>0x7f032864940e (?) (1 samples, 0.32%)</title><rect x="24" y="916" width="4" height="15" fill="rgb(207,29,2)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="24" y="932" width="4" height="15" fill="rgb(216,119,43)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="24" y="948" width="4" height="15" fill="rgb(239,213,47)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="24" y="964" width="4" height="15" fill="rgb(217,58,33)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.32%)</title><rect x="24" y="980" width="4" height="15" fill="rgb(239,196,45)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="24" y="996" width="4" height="15" fill="rgb(249,10,1)"/><text x="27.00" y="1006.50"></text></g><g><title>0x7f0328402cd2 (?) (1 samples, 0.32%)</title><rect x="24" y="1012" width="4" height="15" fill="rgb(248,7,34)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="24" y="1028" width="4" height="15" fill="rgb(251,127,48)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="24" y="1044" width="4" height="15" fill="rgb(228,189,19)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="24" y="1060" width="4" height="15" fill="rgb(251,197,0)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.32%)</title><rect x="24" y="1076" width="4" height="15" fill="rgb(208,4,38)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="24" y="1092" width="4" height="15" fill="rgb(226,147,15)"/><text x="27.00" y="1102.50"></text></g><g><title>0x7f0327af80e5 (?) (1 samples, 0.32%)</title><rect x="24" y="1108" width="4" height="15" fill="rgb(218,9,48)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="24" y="1124" width="4" height="15" fill="rgb(223,226,25)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="24" y="1140" width="4" height="15" fill="rgb(226,24,16)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="24" y="1156" width="4" height="15" fill="rgb(254,129,36)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.32%)</title><rect x="24" y="1172" width="4" height="15" fill="rgb(232,212,50)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="24" y="1188" width="4" height="15" fill="rgb(224,112,4)"/><text x="27.00" y="1198.50"></text></g><g><title>0x7f032787dca4 (?) (1 samples, 0.32%)</title><rect x="24" y="1204" width="4" height="15" fill="rgb(237,201,38)"/><text x="27.00" y="1214.50"></text></g><g><title>0x7f03278851cf (?) (1 samples, 0.32%)</title><rect x="24" y="1220" width="4" height="15" fill="rgb(211,194,45)"/><text x="27.00" y="1230.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.32%)</title><rect x="24" y="1236" width="4" height="15" fill="rgb(227,178,16)"/><text x="27.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.63%)</title><rect x="24" y="628" width="8" height="15" fill="rgb(247,44,13)"/><text x="27.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="28" y="644" width="4" height="15" fill="rgb(227,63,42)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="28" y="660" width="4" height="15" fill="rgb(235,178,13)"/><text x="31.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="28" y="676" width="4" height="15" fill="rgb(228,81,12)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="28" y="692" width="4" height="15" fill="rgb(251,185,18)"/><text x="31.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="28" y="708" width="4" height="15" fill="rgb(241,127,43)"/><text x="31.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.32%)</title><rect x="28" y="724" width="4" height="15" fill="rgb(211,20,42)"/><text x="31.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="28" y="740" width="4" height="15" fill="rgb(225,91,16)"/><text x="31.00" y="750.50"></text></g><g><title>0x7f0325bdc2ff (pandas/_libs/lib.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="28" y="756" width="4" height="15" fill="rgb(208,209,12)"/><text x="31.00" y="766.50"></text></g><g><title>0x7f0325be252a (pandas/_libs/lib.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="28" y="772" width="4" height="15" fill="rgb(250,202,49)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="28" y="788" width="4" height="15" fill="rgb(251,39,0)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="28" y="804" width="4" height="15" fill="rgb(243,192,14)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="28" y="820" width="4" height="15" fill="rgb(234,170,34)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="28" y="836" width="4" height="15" fill="rgb(213,220,28)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="28" y="852" width="4" height="15" fill="rgb(252,10,38)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (fractions.py:57) (1 samples, 0.32%)</title><rect x="28" y="868" width="4" height="15" fill="rgb(250,9,17)"/><text x="31.00" y="878.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.32%)</title><rect x="28" y="884" width="4" height="15" fill="rgb(220,216,26)"/><text x="31.00" y="894.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.32%)</title><rect x="28" y="900" width="4" height="15" fill="rgb(235,171,37)"/><text x="31.00" y="910.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.32%)</title><rect x="28" y="916" width="4" height="15" fill="rgb(252,199,27)"/><text x="31.00" y="926.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.32%)</title><rect x="28" y="932" width="4" height="15" fill="rgb(214,183,48)"/><text x="31.00" y="942.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="28" y="948" width="4" height="15" fill="rgb(221,0,35)"/><text x="31.00" y="958.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.32%)</title><rect x="28" y="964" width="4" height="15" fill="rgb(231,95,3)"/><text x="31.00" y="974.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="28" y="980" width="4" height="15" fill="rgb(214,160,52)"/><text x="31.00" y="990.50"></text></g><g><title>_parse (sre_parse.py:659) (1 samples, 0.32%)</title><rect x="28" y="996" width="4" height="15" fill="rgb(224,12,1)"/><text x="31.00" y="1006.50"></text></g><g><title>match (sre_parse.py:250) (1 samples, 0.32%)</title><rect x="28" y="1012" width="4" height="15" fill="rgb(224,181,6)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.26%)</title><rect x="21" y="436" width="15" height="15" fill="rgb(254,219,48)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.26%)</title><rect x="21" y="452" width="15" height="15" fill="rgb(236,5,36)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.26%)</title><rect x="21" y="468" width="15" height="15" fill="rgb(248,18,52)"/><text x="24.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.26%)</title><rect x="21" y="484" width="15" height="15" fill="rgb(247,14,13)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.26%)</title><rect x="21" y="500" width="15" height="15" fill="rgb(248,193,33)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.26%)</title><rect x="21" y="516" width="15" height="15" fill="rgb(211,92,23)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.26%)</title><rect x="21" y="532" width="15" height="15" fill="rgb(240,140,21)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.26%)</title><rect x="21" y="548" width="15" height="15" fill="rgb(206,51,10)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.26%)</title><rect x="21" y="564" width="15" height="15" fill="rgb(208,229,51)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.26%)</title><rect x="21" y="580" width="15" height="15" fill="rgb(218,106,47)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.26%)</title><rect x="21" y="596" width="15" height="15" fill="rgb(254,167,30)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.26%)</title><rect x="21" y="612" width="15" height="15" fill="rgb(223,109,0)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.32%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(229,78,52)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(247,195,4)"/><text x="35.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(213,193,51)"/><text x="35.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(233,114,33)"/><text x="35.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(254,55,5)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(208,126,37)"/><text x="35.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.32%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(220,186,14)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(245,147,16)"/><text x="35.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="32" y="756" width="4" height="15" fill="rgb(247,123,11)"/><text x="35.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(217,171,47)"/><text x="35.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(229,205,49)"/><text x="35.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(218,35,1)"/><text x="35.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(222,61,37)"/><text x="35.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(215,73,41)"/><text x="35.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(238,87,49)"/><text x="35.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.32%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(219,86,24)"/><text x="35.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(251,162,33)"/><text x="35.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(208,33,32)"/><text x="35.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="916" width="4" height="15" fill="rgb(229,84,23)"/><text x="35.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="932" width="4" height="15" fill="rgb(216,8,51)"/><text x="35.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="948" width="4" height="15" fill="rgb(206,183,22)"/><text x="35.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:38) (1 samples, 0.32%)</title><rect x="32" y="964" width="4" height="15" fill="rgb(208,25,21)"/><text x="35.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="980" width="4" height="15" fill="rgb(208,202,34)"/><text x="35.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="996" width="4" height="15" fill="rgb(224,210,41)"/><text x="35.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="1012" width="4" height="15" fill="rgb(225,70,44)"/><text x="35.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="1028" width="4" height="15" fill="rgb(206,128,14)"/><text x="35.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="1044" width="4" height="15" fill="rgb(230,153,24)"/><text x="35.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py:74) (1 samples, 0.32%)</title><rect x="32" y="1060" width="4" height="15" fill="rgb(231,41,14)"/><text x="35.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="1076" width="4" height="15" fill="rgb(241,57,7)"/><text x="35.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="1092" width="4" height="15" fill="rgb(230,136,37)"/><text x="35.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="1108" width="4" height="15" fill="rgb(218,139,2)"/><text x="35.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="1124" width="4" height="15" fill="rgb(245,130,3)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="1140" width="4" height="15" fill="rgb(248,163,54)"/><text x="35.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/strings.py:1904) (1 samples, 0.32%)</title><rect x="32" y="1156" width="4" height="15" fill="rgb(235,201,41)"/><text x="35.00" y="1166.50"></text></g><g><title>StringMethods (pandas/core/strings.py:2934) (1 samples, 0.32%)</title><rect x="32" y="1172" width="4" height="15" fill="rgb(235,37,51)"/><text x="35.00" y="1182.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.32%)</title><rect x="32" y="1188" width="4" height="15" fill="rgb(235,137,34)"/><text x="35.00" y="1198.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.32%)</title><rect x="32" y="1204" width="4" height="15" fill="rgb(221,171,27)"/><text x="35.00" y="1214.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.32%)</title><rect x="32" y="1220" width="4" height="15" fill="rgb(206,162,34)"/><text x="35.00" y="1230.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.32%)</title><rect x="32" y="1236" width="4" height="15" fill="rgb(229,9,8)"/><text x="35.00" y="1246.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.32%)</title><rect x="32" y="1252" width="4" height="15" fill="rgb(252,85,4)"/><text x="35.00" y="1262.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.32%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(254,167,2)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(235,146,13)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(220,182,6)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(215,97,35)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(237,83,3)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(219,1,8)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.32%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(210,102,11)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(227,124,11)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(247,213,16)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(249,202,1)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1268" width="3" height="15" fill="rgb(229,123,5)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1284" width="3" height="15" fill="rgb(206,157,29)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.32%)</title><rect x="36" y="1300" width="3" height="15" fill="rgb(221,136,29)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1316" width="3" height="15" fill="rgb(224,137,30)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1332" width="3" height="15" fill="rgb(225,17,9)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1348" width="3" height="15" fill="rgb(229,19,29)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1364" width="3" height="15" fill="rgb(213,65,9)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1380" width="3" height="15" fill="rgb(229,120,3)"/><text x="39.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.32%)</title><rect x="36" y="1396" width="3" height="15" fill="rgb(210,131,13)"/><text x="39.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1412" width="3" height="15" fill="rgb(222,25,30)"/><text x="39.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1428" width="3" height="15" fill="rgb(238,31,30)"/><text x="39.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1444" width="3" height="15" fill="rgb(238,62,54)"/><text x="39.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1460" width="3" height="15" fill="rgb(233,138,0)"/><text x="39.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(221,181,13)"/><text x="39.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.32%)</title><rect x="36" y="1492" width="3" height="15" fill="rgb(207,121,39)"/><text x="39.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.32%)</title><rect x="36" y="1508" width="3" height="15" fill="rgb(209,59,51)"/><text x="39.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1524" width="3" height="15" fill="rgb(253,150,33)"/><text x="39.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1540" width="3" height="15" fill="rgb(250,25,29)"/><text x="39.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1556" width="3" height="15" fill="rgb(208,149,25)"/><text x="39.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1572" width="3" height="15" fill="rgb(205,152,51)"/><text x="39.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1588" width="3" height="15" fill="rgb(238,142,1)"/><text x="39.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1604" width="3" height="15" fill="rgb(233,214,24)"/><text x="39.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.32%)</title><rect x="36" y="1620" width="3" height="15" fill="rgb(207,210,22)"/><text x="39.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1636" width="3" height="15" fill="rgb(229,174,46)"/><text x="39.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1652" width="3" height="15" fill="rgb(250,96,3)"/><text x="39.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1668" width="3" height="15" fill="rgb(216,6,54)"/><text x="39.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1684" width="3" height="15" fill="rgb(213,36,19)"/><text x="39.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1700" width="3" height="15" fill="rgb(241,22,11)"/><text x="39.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.32%)</title><rect x="36" y="1716" width="3" height="15" fill="rgb(215,69,0)"/><text x="39.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1732" width="3" height="15" fill="rgb(239,127,38)"/><text x="39.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1748" width="3" height="15" fill="rgb(235,96,21)"/><text x="39.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1764" width="3" height="15" fill="rgb(239,20,48)"/><text x="39.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1780" width="3" height="15" fill="rgb(241,171,10)"/><text x="39.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1796" width="3" height="15" fill="rgb(230,214,44)"/><text x="39.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:6) (1 samples, 0.32%)</title><rect x="36" y="1812" width="3" height="15" fill="rgb(239,194,10)"/><text x="39.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1828" width="3" height="15" fill="rgb(237,102,50)"/><text x="39.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1844" width="3" height="15" fill="rgb(217,153,24)"/><text x="39.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1860" width="3" height="15" fill="rgb(236,22,9)"/><text x="39.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1876" width="3" height="15" fill="rgb(247,19,9)"/><text x="39.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1892" width="3" height="15" fill="rgb(221,113,48)"/><text x="39.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_isomap.py:11) (1 samples, 0.32%)</title><rect x="36" y="1908" width="3" height="15" fill="rgb(244,18,37)"/><text x="39.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1924" width="3" height="15" fill="rgb(224,168,34)"/><text x="39.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1940" width="3" height="15" fill="rgb(211,193,29)"/><text x="39.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1956" width="3" height="15" fill="rgb(209,118,24)"/><text x="39.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1972" width="3" height="15" fill="rgb(251,171,54)"/><text x="39.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1988" width="3" height="15" fill="rgb(244,26,10)"/><text x="39.00" y="1998.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/graph.py:15) (1 samples, 0.32%)</title><rect x="36" y="2004" width="3" height="15" fill="rgb(254,125,47)"/><text x="39.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="2020" width="3" height="15" fill="rgb(253,91,17)"/><text x="39.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="2036" width="3" height="15" fill="rgb(249,44,24)"/><text x="39.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.32%)</title><rect x="36" y="2052" width="3" height="15" fill="rgb(225,60,38)"/><text x="39.00" y="2062.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.32%)</title><rect x="36" y="2068" width="3" height="15" fill="rgb(246,115,5)"/><text x="39.00" y="2078.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.32%)</title><rect x="36" y="2084" width="3" height="15" fill="rgb(225,132,9)"/><text x="39.00" y="2094.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="2100" width="3" height="15" fill="rgb(252,75,47)"/><text x="39.00" y="2110.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.32%)</title><rect x="39" y="1604" width="4" height="15" fill="rgb(250,99,53)"/><text x="42.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="39" y="1620" width="4" height="15" fill="rgb(237,170,10)"/><text x="42.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="39" y="1636" width="4" height="15" fill="rgb(207,68,26)"/><text x="42.00" y="1646.50"></text></g><g><title>pybind11::detail::argument_loader&lt;pybind11::object, pybind11::object&gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; [clone .constprop.1302] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="39" y="1652" width="4" height="15" fill="rgb(229,97,9)"/><text x="42.00" y="1662.50"></text></g><g><title>root (&lt;template&gt;:100) (2 samples, 0.63%)</title><rect x="39" y="1572" width="8" height="15" fill="rgb(245,65,23)"/><text x="42.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.63%)</title><rect x="39" y="1588" width="8" height="15" fill="rgb(218,119,37)"/><text x="42.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.32%)</title><rect x="43" y="1604" width="4" height="15" fill="rgb(234,94,5)"/><text x="46.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="43" y="1620" width="4" height="15" fill="rgb(238,164,2)"/><text x="46.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="43" y="1636" width="4" height="15" fill="rgb(210,97,51)"/><text x="46.00" y="1646.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="43" y="1652" width="4" height="15" fill="rgb(205,0,51)"/><text x="46.00" y="1662.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="43" y="1668" width="4" height="15" fill="rgb(214,184,27)"/><text x="46.00" y="1678.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.95%)</title><rect x="39" y="1460" width="11" height="15" fill="rgb(252,158,43)"/><text x="42.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.95%)</title><rect x="39" y="1476" width="11" height="15" fill="rgb(247,154,43)"/><text x="42.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.95%)</title><rect x="39" y="1492" width="11" height="15" fill="rgb(250,199,22)"/><text x="42.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.95%)</title><rect x="39" y="1508" width="11" height="15" fill="rgb(244,41,8)"/><text x="42.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.95%)</title><rect x="39" y="1524" width="11" height="15" fill="rgb(205,114,30)"/><text x="42.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.95%)</title><rect x="39" y="1540" width="11" height="15" fill="rgb(213,108,18)"/><text x="42.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.95%)</title><rect x="39" y="1556" width="11" height="15" fill="rgb(251,194,8)"/><text x="42.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:95) (1 samples, 0.32%)</title><rect x="47" y="1572" width="3" height="15" fill="rgb(248,161,23)"/><text x="50.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:217) (1 samples, 0.32%)</title><rect x="47" y="1588" width="3" height="15" fill="rgb(208,152,54)"/><text x="50.00" y="1598.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:128) (1 samples, 0.32%)</title><rect x="47" y="1604" width="3" height="15" fill="rgb(245,142,53)"/><text x="50.00" y="1614.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.32%)</title><rect x="50" y="1668" width="4" height="15" fill="rgb(230,59,8)"/><text x="53.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="50" y="1684" width="4" height="15" fill="rgb(207,142,22)"/><text x="53.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="50" y="1700" width="4" height="15" fill="rgb(239,229,33)"/><text x="53.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="50" y="1716" width="4" height="15" fill="rgb(248,104,21)"/><text x="53.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.32%)</title><rect x="50" y="1732" width="4" height="15" fill="rgb(213,209,30)"/><text x="53.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.32%)</title><rect x="50" y="1748" width="4" height="15" fill="rgb(226,93,24)"/><text x="53.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.32%)</title><rect x="50" y="1764" width="4" height="15" fill="rgb(230,21,18)"/><text x="53.00" y="1774.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:4) (13 samples, 4.10%)</title><rect x="10" y="52" width="48" height="15" fill="rgb(206,118,26)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 4.10%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(247,14,50)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 4.10%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(218,103,43)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 4.10%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(246,89,46)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 4.10%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(228,169,53)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 4.10%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(210,37,2)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:7) (10 samples, 3.15%)</title><rect x="21" y="148" width="37" height="15" fill="rgb(250,58,37)"/><text x="24.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="21" y="164" width="37" height="15" fill="rgb(231,55,13)"/><text x="24.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="21" y="180" width="37" height="15" fill="rgb(209,52,14)"/><text x="24.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="21" y="196" width="37" height="15" fill="rgb(252,134,38)"/><text x="24.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="21" y="212" width="37" height="15" fill="rgb(207,190,7)"/><text x="24.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="21" y="228" width="37" height="15" fill="rgb(210,44,37)"/><text x="24.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (10 samples, 3.15%)</title><rect x="21" y="244" width="37" height="15" fill="rgb(251,114,42)"/><text x="24.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="21" y="260" width="37" height="15" fill="rgb(254,174,53)"/><text x="24.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="21" y="276" width="37" height="15" fill="rgb(217,137,49)"/><text x="24.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="21" y="292" width="37" height="15" fill="rgb(250,26,50)"/><text x="24.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="21" y="308" width="37" height="15" fill="rgb(227,204,17)"/><text x="24.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="21" y="324" width="37" height="15" fill="rgb(245,107,13)"/><text x="24.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (10 samples, 3.15%)</title><rect x="21" y="340" width="37" height="15" fill="rgb(225,201,41)"/><text x="24.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.15%)</title><rect x="21" y="356" width="37" height="15" fill="rgb(212,220,32)"/><text x="24.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.15%)</title><rect x="21" y="372" width="37" height="15" fill="rgb(251,63,24)"/><text x="24.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.15%)</title><rect x="21" y="388" width="37" height="15" fill="rgb(236,215,34)"/><text x="24.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.15%)</title><rect x="21" y="404" width="37" height="15" fill="rgb(246,117,30)"/><text x="24.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.15%)</title><rect x="21" y="420" width="37" height="15" fill="rgb(233,54,40)"/><text x="24.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 1.89%)</title><rect x="36" y="436" width="22" height="15" fill="rgb(207,151,8)"/><text x="39.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="452" width="22" height="15" fill="rgb(229,177,48)"/><text x="39.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.89%)</title><rect x="36" y="468" width="22" height="15" fill="rgb(235,125,0)"/><text x="39.00" y="478.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="484" width="22" height="15" fill="rgb(211,223,18)"/><text x="39.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="500" width="22" height="15" fill="rgb(224,9,50)"/><text x="39.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.89%)</title><rect x="36" y="516" width="22" height="15" fill="rgb(212,92,1)"/><text x="39.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.89%)</title><rect x="36" y="532" width="22" height="15" fill="rgb(221,106,25)"/><text x="39.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.89%)</title><rect x="36" y="548" width="22" height="15" fill="rgb(236,97,18)"/><text x="39.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="564" width="22" height="15" fill="rgb(245,6,31)"/><text x="39.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 1.89%)</title><rect x="36" y="580" width="22" height="15" fill="rgb(246,224,45)"/><text x="39.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="596" width="22" height="15" fill="rgb(242,65,54)"/><text x="39.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.89%)</title><rect x="36" y="612" width="22" height="15" fill="rgb(219,27,0)"/><text x="39.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.89%)</title><rect x="36" y="628" width="22" height="15" fill="rgb(212,36,1)"/><text x="39.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.89%)</title><rect x="36" y="644" width="22" height="15" fill="rgb(220,99,2)"/><text x="39.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="660" width="22" height="15" fill="rgb(244,14,0)"/><text x="39.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 1.89%)</title><rect x="36" y="676" width="22" height="15" fill="rgb(218,144,49)"/><text x="39.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="692" width="22" height="15" fill="rgb(229,96,17)"/><text x="39.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.89%)</title><rect x="36" y="708" width="22" height="15" fill="rgb(233,114,51)"/><text x="39.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.89%)</title><rect x="36" y="724" width="22" height="15" fill="rgb(208,200,30)"/><text x="39.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.89%)</title><rect x="36" y="740" width="22" height="15" fill="rgb(246,45,33)"/><text x="39.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="756" width="22" height="15" fill="rgb(238,83,21)"/><text x="39.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 1.89%)</title><rect x="36" y="772" width="22" height="15" fill="rgb(235,200,50)"/><text x="39.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="788" width="22" height="15" fill="rgb(227,15,54)"/><text x="39.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.89%)</title><rect x="36" y="804" width="22" height="15" fill="rgb(250,88,49)"/><text x="39.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.89%)</title><rect x="36" y="820" width="22" height="15" fill="rgb(244,76,22)"/><text x="39.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.89%)</title><rect x="36" y="836" width="22" height="15" fill="rgb(209,221,23)"/><text x="39.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="852" width="22" height="15" fill="rgb(221,10,3)"/><text x="39.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 1.89%)</title><rect x="36" y="868" width="22" height="15" fill="rgb(226,156,13)"/><text x="39.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="884" width="22" height="15" fill="rgb(234,143,20)"/><text x="39.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.89%)</title><rect x="36" y="900" width="22" height="15" fill="rgb(233,114,37)"/><text x="39.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="916" width="22" height="15" fill="rgb(225,144,0)"/><text x="39.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="932" width="22" height="15" fill="rgb(228,134,21)"/><text x="39.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.89%)</title><rect x="36" y="948" width="22" height="15" fill="rgb(236,27,33)"/><text x="39.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.89%)</title><rect x="36" y="964" width="22" height="15" fill="rgb(218,169,14)"/><text x="39.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.89%)</title><rect x="36" y="980" width="22" height="15" fill="rgb(231,172,2)"/><text x="39.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="996" width="22" height="15" fill="rgb(218,186,28)"/><text x="39.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 1.89%)</title><rect x="36" y="1012" width="22" height="15" fill="rgb(248,89,20)"/><text x="39.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.89%)</title><rect x="36" y="1028" width="22" height="15" fill="rgb(219,134,42)"/><text x="39.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.89%)</title><rect x="36" y="1044" width="22" height="15" fill="rgb(225,168,30)"/><text x="39.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.89%)</title><rect x="36" y="1060" width="22" height="15" fill="rgb(215,205,16)"/><text x="39.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.89%)</title><rect x="36" y="1076" width="22" height="15" fill="rgb(241,120,50)"/><text x="39.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.89%)</title><rect x="36" y="1092" width="22" height="15" fill="rgb(238,85,6)"/><text x="39.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 1.58%)</title><rect x="39" y="1108" width="19" height="15" fill="rgb(233,69,8)"/><text x="42.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.58%)</title><rect x="39" y="1124" width="19" height="15" fill="rgb(251,129,22)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="39" y="1140" width="19" height="15" fill="rgb(237,135,14)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.58%)</title><rect x="39" y="1156" width="19" height="15" fill="rgb(254,144,2)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.58%)</title><rect x="39" y="1172" width="19" height="15" fill="rgb(233,100,5)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.58%)</title><rect x="39" y="1188" width="19" height="15" fill="rgb(246,110,21)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.58%)</title><rect x="39" y="1204" width="19" height="15" fill="rgb(219,44,43)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="39" y="1220" width="19" height="15" fill="rgb(228,195,26)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (5 samples, 1.58%)</title><rect x="39" y="1236" width="19" height="15" fill="rgb(228,228,54)"/><text x="42.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.58%)</title><rect x="39" y="1252" width="19" height="15" fill="rgb(251,201,47)"/><text x="42.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="39" y="1268" width="19" height="15" fill="rgb(217,72,16)"/><text x="42.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.58%)</title><rect x="39" y="1284" width="19" height="15" fill="rgb(235,187,34)"/><text x="42.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.58%)</title><rect x="39" y="1300" width="19" height="15" fill="rgb(252,146,5)"/><text x="42.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.58%)</title><rect x="39" y="1316" width="19" height="15" fill="rgb(234,9,41)"/><text x="42.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.58%)</title><rect x="39" y="1332" width="19" height="15" fill="rgb(252,124,7)"/><text x="42.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="39" y="1348" width="19" height="15" fill="rgb(242,66,23)"/><text x="42.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (5 samples, 1.58%)</title><rect x="39" y="1364" width="19" height="15" fill="rgb(219,229,16)"/><text x="42.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.58%)</title><rect x="39" y="1380" width="19" height="15" fill="rgb(248,219,42)"/><text x="42.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.58%)</title><rect x="39" y="1396" width="19" height="15" fill="rgb(216,198,12)"/><text x="42.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.58%)</title><rect x="39" y="1412" width="19" height="15" fill="rgb(223,53,8)"/><text x="42.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.58%)</title><rect x="39" y="1428" width="19" height="15" fill="rgb(232,198,42)"/><text x="42.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.58%)</title><rect x="39" y="1444" width="19" height="15" fill="rgb(209,63,13)"/><text x="42.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.63%)</title><rect x="50" y="1460" width="8" height="15" fill="rgb(251,156,33)"/><text x="53.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="50" y="1476" width="8" height="15" fill="rgb(224,118,50)"/><text x="53.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="50" y="1492" width="8" height="15" fill="rgb(215,58,8)"/><text x="53.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="50" y="1508" width="8" height="15" fill="rgb(238,202,13)"/><text x="53.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="50" y="1524" width="8" height="15" fill="rgb(229,125,33)"/><text x="53.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="50" y="1540" width="8" height="15" fill="rgb(220,18,22)"/><text x="53.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.63%)</title><rect x="50" y="1556" width="8" height="15" fill="rgb(240,192,34)"/><text x="53.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (2 samples, 0.63%)</title><rect x="50" y="1572" width="8" height="15" fill="rgb(247,142,8)"/><text x="53.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.63%)</title><rect x="50" y="1588" width="8" height="15" fill="rgb(215,97,50)"/><text x="53.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.63%)</title><rect x="50" y="1604" width="8" height="15" fill="rgb(248,5,14)"/><text x="53.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.63%)</title><rect x="50" y="1620" width="8" height="15" fill="rgb(209,19,2)"/><text x="53.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.63%)</title><rect x="50" y="1636" width="8" height="15" fill="rgb(221,80,26)"/><text x="53.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.63%)</title><rect x="50" y="1652" width="8" height="15" fill="rgb(220,60,29)"/><text x="53.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.32%)</title><rect x="54" y="1668" width="4" height="15" fill="rgb(229,109,39)"/><text x="57.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.32%)</title><rect x="54" y="1684" width="4" height="15" fill="rgb(209,208,17)"/><text x="57.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="54" y="1700" width="4" height="15" fill="rgb(221,119,9)"/><text x="57.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="54" y="1716" width="4" height="15" fill="rgb(232,156,21)"/><text x="57.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="54" y="1732" width="4" height="15" fill="rgb(209,27,25)"/><text x="57.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="54" y="1748" width="4" height="15" fill="rgb(229,63,17)"/><text x="57.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="54" y="1764" width="4" height="15" fill="rgb(225,161,40)"/><text x="57.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.32%)</title><rect x="54" y="1780" width="4" height="15" fill="rgb(237,165,54)"/><text x="57.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="54" y="1796" width="4" height="15" fill="rgb(216,172,19)"/><text x="57.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="54" y="1812" width="4" height="15" fill="rgb(214,169,45)"/><text x="57.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="54" y="1828" width="4" height="15" fill="rgb(222,179,50)"/><text x="57.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="54" y="1844" width="4" height="15" fill="rgb(233,10,14)"/><text x="57.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="54" y="1860" width="4" height="15" fill="rgb(233,131,9)"/><text x="57.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:12) (1 samples, 0.32%)</title><rect x="54" y="1876" width="4" height="15" fill="rgb(235,145,34)"/><text x="57.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="54" y="1892" width="4" height="15" fill="rgb(250,214,48)"/><text x="57.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.32%)</title><rect x="54" y="1908" width="4" height="15" fill="rgb(226,174,30)"/><text x="57.00" y="1918.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.32%)</title><rect x="54" y="1924" width="4" height="15" fill="rgb(247,211,44)"/><text x="57.00" y="1934.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.32%)</title><rect x="54" y="1940" width="4" height="15" fill="rgb(251,28,4)"/><text x="57.00" y="1950.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.32%)</title><rect x="54" y="1956" width="4" height="15" fill="rgb(207,27,3)"/><text x="57.00" y="1966.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.32%)</title><rect x="54" y="1972" width="4" height="15" fill="rgb(211,202,3)"/><text x="57.00" y="1982.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.32%)</title><rect x="54" y="1988" width="4" height="15" fill="rgb(247,17,8)"/><text x="57.00" y="1998.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.32%)</title><rect x="54" y="2004" width="4" height="15" fill="rgb(214,133,27)"/><text x="57.00" y="2014.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.32%)</title><rect x="54" y="2020" width="4" height="15" fill="rgb(231,130,14)"/><text x="57.00" y="2030.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.32%)</title><rect x="54" y="2036" width="4" height="15" fill="rgb(234,94,27)"/><text x="57.00" y="2046.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.32%)</title><rect x="54" y="2052" width="4" height="15" fill="rgb(245,67,18)"/><text x="57.00" y="2062.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:40) (1 samples, 0.32%)</title><rect x="58" y="52" width="4" height="15" fill="rgb(238,45,47)"/><text x="61.00" y="62.50"></text></g><g><title>start (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:11) (1 samples, 0.32%)</title><rect x="58" y="68" width="4" height="15" fill="rgb(224,176,24)"/><text x="61.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:39) (1 samples, 0.32%)</title><rect x="58" y="84" width="4" height="15" fill="rgb(225,98,20)"/><text x="61.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:155) (1 samples, 0.32%)</title><rect x="58" y="100" width="4" height="15" fill="rgb(235,8,7)"/><text x="61.00" y="110.50"></text></g><g><title>_pickle_dump (_pickle.c.h:408) (1 samples, 0.32%)</title><rect x="58" y="116" width="4" height="15" fill="rgb(224,87,20)"/><text x="61.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c:7214) (1 samples, 0.32%)</title><rect x="58" y="132" width="4" height="15" fill="rgb(206,18,7)"/><text x="61.00" y="142.50"></text></g><g><title>dump (_pickle.c:4160) (1 samples, 0.32%)</title><rect x="58" y="148" width="4" height="15" fill="rgb(245,127,53)"/><text x="61.00" y="158.50"></text></g><g><title>save (_pickle.c:4006) (1 samples, 0.32%)</title><rect x="58" y="164" width="4" height="15" fill="rgb(244,87,36)"/><text x="61.00" y="174.50"></text></g><g><title>save_dict (_pickle.c:3046) (1 samples, 0.32%)</title><rect x="58" y="180" width="4" height="15" fill="rgb(227,202,1)"/><text x="61.00" y="190.50"></text></g><g><title>batch_dict_exact (_pickle.c:2992) (1 samples, 0.32%)</title><rect x="58" y="196" width="4" height="15" fill="rgb(248,210,29)"/><text x="61.00" y="206.50"></text></g><g><title>save (_pickle.c:4128) (1 samples, 0.32%)</title><rect x="58" y="212" width="4" height="15" fill="rgb(208,207,14)"/><text x="61.00" y="222.50"></text></g><g><title>save_reduce (_pickle.c:3928) (1 samples, 0.32%)</title><rect x="58" y="228" width="4" height="15" fill="rgb(234,195,36)"/><text x="61.00" y="238.50"></text></g><g><title>save (_pickle.c:4006) (1 samples, 0.32%)</title><rect x="58" y="244" width="4" height="15" fill="rgb(230,166,48)"/><text x="61.00" y="254.50"></text></g><g><title>save_dict (_pickle.c:3046) (1 samples, 0.32%)</title><rect x="58" y="260" width="4" height="15" fill="rgb(222,83,48)"/><text x="61.00" y="270.50"></text></g><g><title>batch_dict_exact (_pickle.c:2990) (1 samples, 0.32%)</title><rect x="58" y="276" width="4" height="15" fill="rgb(220,33,45)"/><text x="61.00" y="286.50"></text></g><g><title>save (_pickle.c:4002) (1 samples, 0.32%)</title><rect x="58" y="292" width="4" height="15" fill="rgb(251,29,37)"/><text x="61.00" y="302.50"></text></g><g><title>save_unicode (_pickle.c:2452) (1 samples, 0.32%)</title><rect x="58" y="308" width="4" height="15" fill="rgb(240,190,2)"/><text x="61.00" y="318.50"></text></g><g><title>memo_put (_pickle.c:1608) (1 samples, 0.32%)</title><rect x="58" y="324" width="4" height="15" fill="rgb(241,159,47)"/><text x="61.00" y="334.50"></text></g><g><title>PyMemoTable_Set (_pickle.c:912) (1 samples, 0.32%)</title><rect x="58" y="340" width="4" height="15" fill="rgb(237,204,23)"/><text x="61.00" y="350.50"></text></g><g><title>_PyMemoTable_ResizeTable (_pickle.c:841) (1 samples, 0.32%)</title><rect x="58" y="356" width="4" height="15" fill="rgb(225,190,42)"/><text x="61.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="69" y="148" width="4" height="15" fill="rgb(247,163,1)"/><text x="72.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="69" y="164" width="4" height="15" fill="rgb(211,118,15)"/><text x="72.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.32%)</title><rect x="69" y="180" width="4" height="15" fill="rgb(245,183,39)"/><text x="72.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.32%)</title><rect x="73" y="164" width="4" height="15" fill="rgb(236,164,38)"/><text x="76.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.32%)</title><rect x="77" y="164" width="3" height="15" fill="rgb(231,22,24)"/><text x="80.00" y="174.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.32%)</title><rect x="77" y="180" width="3" height="15" fill="rgb(222,229,27)"/><text x="80.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.63%)</title><rect x="80" y="164" width="8" height="15" fill="rgb(243,211,29)"/><text x="83.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.32%)</title><rect x="84" y="180" width="4" height="15" fill="rgb(218,132,50)"/><text x="87.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.32%)</title><rect x="84" y="196" width="4" height="15" fill="rgb(230,13,3)"/><text x="87.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.32%)</title><rect x="88" y="164" width="3" height="15" fill="rgb(229,223,51)"/><text x="91.00" y="174.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.32%)</title><rect x="88" y="180" width="3" height="15" fill="rgb(244,98,11)"/><text x="91.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.32%)</title><rect x="91" y="164" width="4" height="15" fill="rgb(240,225,26)"/><text x="94.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.32%)</title><rect x="95" y="164" width="4" height="15" fill="rgb(220,4,25)"/><text x="98.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.32%)</title><rect x="95" y="180" width="4" height="15" fill="rgb(227,166,35)"/><text x="98.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.32%)</title><rect x="99" y="180" width="4" height="15" fill="rgb(219,135,47)"/><text x="102.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.63%)</title><rect x="99" y="164" width="7" height="15" fill="rgb(208,145,49)"/><text x="102.00" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.32%)</title><rect x="103" y="180" width="3" height="15" fill="rgb(211,148,25)"/><text x="106.00" y="190.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.32%)</title><rect x="103" y="196" width="3" height="15" fill="rgb(238,161,47)"/><text x="106.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.95%)</title><rect x="106" y="180" width="11" height="15" fill="rgb(229,89,14)"/><text x="109.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.32%)</title><rect x="117" y="180" width="4" height="15" fill="rgb(225,39,37)"/><text x="120.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.63%)</title><rect x="121" y="180" width="8" height="15" fill="rgb(239,151,50)"/><text x="124.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.63%)</title><rect x="121" y="196" width="8" height="15" fill="rgb(240,145,1)"/><text x="124.00" y="206.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:172) (16 samples, 5.05%)</title><rect x="73" y="148" width="59" height="15" fill="rgb(214,52,40)"/><text x="76.00" y="158.50">predic..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.21%)</title><rect x="106" y="164" width="26" height="15" fill="rgb(224,145,10)"/><text x="109.00" y="174.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.32%)</title><rect x="129" y="180" width="3" height="15" fill="rgb(214,5,45)"/><text x="132.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.32%)</title><rect x="140" y="196" width="4" height="15" fill="rgb(208,120,7)"/><text x="143.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:583) (5 samples, 1.58%)</title><rect x="136" y="164" width="19" height="15" fill="rgb(237,217,19)"/><text x="139.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.58%)</title><rect x="136" y="180" width="19" height="15" fill="rgb(220,141,32)"/><text x="139.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.95%)</title><rect x="144" y="196" width="11" height="15" fill="rgb(246,206,0)"/><text x="147.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.32%)</title><rect x="158" y="180" width="4" height="15" fill="rgb(247,97,13)"/><text x="161.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.32%)</title><rect x="158" y="196" width="4" height="15" fill="rgb(253,212,26)"/><text x="161.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 0.95%)</title><rect x="162" y="180" width="11" height="15" fill="rgb(211,144,19)"/><text x="165.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.32%)</title><rect x="170" y="196" width="3" height="15" fill="rgb(223,173,12)"/><text x="173.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.32%)</title><rect x="173" y="180" width="4" height="15" fill="rgb(234,144,36)"/><text x="176.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.32%)</title><rect x="173" y="196" width="4" height="15" fill="rgb(208,66,20)"/><text x="176.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.95%)</title><rect x="177" y="180" width="11" height="15" fill="rgb(234,222,20)"/><text x="180.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.95%)</title><rect x="177" y="196" width="11" height="15" fill="rgb(225,75,28)"/><text x="180.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.32%)</title><rect x="184" y="212" width="4" height="15" fill="rgb(239,104,54)"/><text x="187.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.32%)</title><rect x="188" y="196" width="4" height="15" fill="rgb(210,34,50)"/><text x="191.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.32%)</title><rect x="192" y="196" width="4" height="15" fill="rgb(231,65,33)"/><text x="195.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:604) (12 samples, 3.79%)</title><rect x="155" y="164" width="44" height="15" fill="rgb(245,47,53)"/><text x="158.00" y="174.50">knei..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.95%)</title><rect x="188" y="180" width="11" height="15" fill="rgb(206,109,20)"/><text x="191.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.32%)</title><rect x="196" y="196" width="3" height="15" fill="rgb(212,12,51)"/><text x="199.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (2 samples, 0.63%)</title><rect x="199" y="196" width="8" height="15" fill="rgb(250,15,54)"/><text x="202.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.32%)</title><rect x="203" y="212" width="4" height="15" fill="rgb(235,196,40)"/><text x="206.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (3 samples, 0.95%)</title><rect x="199" y="180" width="12" height="15" fill="rgb(213,155,18)"/><text x="202.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.32%)</title><rect x="207" y="196" width="4" height="15" fill="rgb(250,41,12)"/><text x="210.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:620) (5 samples, 1.58%)</title><rect x="199" y="164" width="19" height="15" fill="rgb(207,72,25)"/><text x="202.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:389) (2 samples, 0.63%)</title><rect x="211" y="180" width="7" height="15" fill="rgb(215,115,14)"/><text x="214.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.32%)</title><rect x="229" y="196" width="4" height="15" fill="rgb(245,184,52)"/><text x="232.00" y="206.50"></text></g><g><title>0x7f03523aadf0 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="229" y="212" width="4" height="15" fill="rgb(234,197,23)"/><text x="232.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.32%)</title><rect x="233" y="196" width="4" height="15" fill="rgb(208,172,3)"/><text x="236.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1562) (7 samples, 2.21%)</title><rect x="222" y="180" width="26" height="15" fill="rgb(254,92,23)"/><text x="225.00" y="190.50">p..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.95%)</title><rect x="237" y="196" width="11" height="15" fill="rgb(214,180,44)"/><text x="240.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.95%)</title><rect x="237" y="212" width="11" height="15" fill="rgb(220,227,25)"/><text x="240.00" y="222.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1577) (2 samples, 0.63%)</title><rect x="248" y="180" width="7" height="15" fill="rgb(220,201,52)"/><text x="251.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.32%)</title><rect x="251" y="196" width="4" height="15" fill="rgb(219,150,8)"/><text x="254.00" y="206.50"></text></g><g><title>get_chunk_n_rows (sklearn/utils/__init__.py:958) (2 samples, 0.63%)</title><rect x="255" y="196" width="8" height="15" fill="rgb(218,137,17)"/><text x="258.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1579) (3 samples, 0.95%)</title><rect x="255" y="180" width="11" height="15" fill="rgb(232,30,24)"/><text x="258.00" y="190.50"></text></g><g><title>get_chunk_n_rows (sklearn/utils/__init__.py:960) (1 samples, 0.32%)</title><rect x="263" y="196" width="3" height="15" fill="rgb(208,116,4)"/><text x="266.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1586) (1 samples, 0.32%)</title><rect x="266" y="180" width="4" height="15" fill="rgb(246,161,20)"/><text x="269.00" y="190.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1587) (2 samples, 0.63%)</title><rect x="270" y="180" width="8" height="15" fill="rgb(213,124,18)"/><text x="273.00" y="190.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1345) (1 samples, 0.32%)</title><rect x="281" y="212" width="4" height="15" fill="rgb(232,125,10)"/><text x="284.00" y="222.50"></text></g><g><title>_return_float_dtype (sklearn/metrics/pairwise.py:42) (1 samples, 0.32%)</title><rect x="281" y="228" width="4" height="15" fill="rgb(216,92,7)"/><text x="284.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.32%)</title><rect x="285" y="244" width="4" height="15" fill="rgb(210,28,20)"/><text x="288.00" y="254.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.32%)</title><rect x="285" y="260" width="4" height="15" fill="rgb(205,107,3)"/><text x="288.00" y="270.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1347) (2 samples, 0.63%)</title><rect x="285" y="212" width="7" height="15" fill="rgb(230,56,1)"/><text x="288.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (2 samples, 0.63%)</title><rect x="285" y="228" width="7" height="15" fill="rgb(237,163,12)"/><text x="288.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.32%)</title><rect x="289" y="244" width="3" height="15" fill="rgb(216,69,47)"/><text x="292.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.32%)</title><rect x="292" y="260" width="4" height="15" fill="rgb(215,44,28)"/><text x="295.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.32%)</title><rect x="292" y="276" width="4" height="15" fill="rgb(239,221,6)"/><text x="295.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.32%)</title><rect x="292" y="292" width="4" height="15" fill="rgb(240,138,33)"/><text x="295.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.32%)</title><rect x="296" y="292" width="4" height="15" fill="rgb(223,44,38)"/><text x="299.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.63%)</title><rect x="296" y="260" width="8" height="15" fill="rgb(219,202,34)"/><text x="299.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.63%)</title><rect x="296" y="276" width="8" height="15" fill="rgb(245,217,36)"/><text x="299.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.32%)</title><rect x="300" y="292" width="4" height="15" fill="rgb(210,82,1)"/><text x="303.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.32%)</title><rect x="300" y="308" width="4" height="15" fill="rgb(239,76,19)"/><text x="303.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.32%)</title><rect x="300" y="324" width="4" height="15" fill="rgb(216,13,38)"/><text x="303.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.32%)</title><rect x="300" y="340" width="4" height="15" fill="rgb(221,30,17)"/><text x="303.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.32%)</title><rect x="300" y="356" width="4" height="15" fill="rgb(254,105,11)"/><text x="303.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.32%)</title><rect x="300" y="372" width="4" height="15" fill="rgb(245,22,34)"/><text x="303.00" y="382.50"></text></g><g><title>0x7f03522ed120 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="300" y="388" width="4" height="15" fill="rgb(235,142,44)"/><text x="303.00" y="398.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.32%)</title><rect x="304" y="260" width="3" height="15" fill="rgb(207,191,27)"/><text x="307.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.32%)</title><rect x="304" y="276" width="3" height="15" fill="rgb(230,116,0)"/><text x="307.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.32%)</title><rect x="307" y="260" width="4" height="15" fill="rgb(235,214,22)"/><text x="310.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.32%)</title><rect x="307" y="276" width="4" height="15" fill="rgb(229,58,28)"/><text x="310.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.32%)</title><rect x="311" y="260" width="4" height="15" fill="rgb(249,117,22)"/><text x="314.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.32%)</title><rect x="311" y="276" width="4" height="15" fill="rgb(214,210,15)"/><text x="314.00" y="286.50"></text></g><g><title>0x7f03523ab0e6 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="311" y="292" width="4" height="15" fill="rgb(225,54,29)"/><text x="314.00" y="302.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:141) (8 samples, 2.52%)</title><rect x="292" y="244" width="30" height="15" fill="rgb(213,228,46)"/><text x="295.00" y="254.50">ch..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.63%)</title><rect x="315" y="260" width="7" height="15" fill="rgb(222,173,28)"/><text x="318.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.63%)</title><rect x="315" y="276" width="7" height="15" fill="rgb(224,197,3)"/><text x="318.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:482) (1 samples, 0.32%)</title><rect x="322" y="260" width="4" height="15" fill="rgb(239,222,49)"/><text x="325.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.32%)</title><rect x="326" y="260" width="4" height="15" fill="rgb(248,174,22)"/><text x="329.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.32%)</title><rect x="330" y="260" width="3" height="15" fill="rgb(241,206,10)"/><text x="333.00" y="270.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.32%)</title><rect x="330" y="276" width="3" height="15" fill="rgb(250,39,43)"/><text x="333.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.32%)</title><rect x="333" y="260" width="4" height="15" fill="rgb(245,175,8)"/><text x="336.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.32%)</title><rect x="333" y="276" width="4" height="15" fill="rgb(213,14,16)"/><text x="336.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.32%)</title><rect x="333" y="292" width="4" height="15" fill="rgb(228,155,10)"/><text x="336.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.95%)</title><rect x="337" y="260" width="11" height="15" fill="rgb(213,189,2)"/><text x="340.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.95%)</title><rect x="337" y="276" width="11" height="15" fill="rgb(205,187,11)"/><text x="340.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.63%)</title><rect x="341" y="292" width="7" height="15" fill="rgb(235,147,25)"/><text x="344.00" y="302.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1366) (1 samples, 0.32%)</title><rect x="345" y="308" width="3" height="15" fill="rgb(208,146,54)"/><text x="348.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.32%)</title><rect x="348" y="260" width="4" height="15" fill="rgb(232,212,41)"/><text x="351.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.32%)</title><rect x="348" y="276" width="4" height="15" fill="rgb(242,124,22)"/><text x="351.00" y="286.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.32%)</title><rect x="352" y="292" width="4" height="15" fill="rgb(229,43,16)"/><text x="355.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.63%)</title><rect x="352" y="260" width="7" height="15" fill="rgb(243,151,4)"/><text x="355.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.63%)</title><rect x="352" y="276" width="7" height="15" fill="rgb(227,173,48)"/><text x="355.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.32%)</title><rect x="356" y="292" width="3" height="15" fill="rgb(232,97,26)"/><text x="359.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.32%)</title><rect x="359" y="276" width="4" height="15" fill="rgb(214,94,33)"/><text x="362.00" y="286.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:262) (20 samples, 6.31%)</title><rect x="292" y="228" width="75" height="15" fill="rgb(224,20,24)"/><text x="295.00" y="238.50">euclidea..</text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:144) (12 samples, 3.79%)</title><rect x="322" y="244" width="45" height="15" fill="rgb(206,171,7)"/><text x="325.00" y="254.50">chec..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.63%)</title><rect x="359" y="260" width="8" height="15" fill="rgb(238,185,32)"/><text x="362.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.32%)</title><rect x="363" y="276" width="4" height="15" fill="rgb(230,130,39)"/><text x="366.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.32%)</title><rect x="363" y="292" width="4" height="15" fill="rgb(209,103,41)"/><text x="366.00" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.32%)</title><rect x="363" y="308" width="4" height="15" fill="rgb(222,54,4)"/><text x="366.00" y="318.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:276) (2 samples, 0.63%)</title><rect x="367" y="228" width="7" height="15" fill="rgb(206,167,12)"/><text x="370.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.32%)</title><rect x="374" y="244" width="4" height="15" fill="rgb(243,43,23)"/><text x="377.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:793) (1 samples, 0.32%)</title><rect x="374" y="260" width="4" height="15" fill="rgb(230,22,5)"/><text x="377.00" y="270.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:69) (1 samples, 0.32%)</title><rect x="378" y="244" width="4" height="15" fill="rgb(248,183,54)"/><text x="381.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.32%)</title><rect x="378" y="260" width="4" height="15" fill="rgb(251,9,38)"/><text x="381.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.32%)</title><rect x="382" y="340" width="3" height="15" fill="rgb(209,210,11)"/><text x="385.00" y="350.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2269) (1 samples, 0.32%)</title><rect x="382" y="356" width="3" height="15" fill="rgb(239,154,37)"/><text x="385.00" y="366.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2768) (2 samples, 0.63%)</title><rect x="382" y="324" width="7" height="15" fill="rgb(250,53,43)"/><text x="385.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="385" y="340" width="4" height="15" fill="rgb(253,34,34)"/><text x="388.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.32%)</title><rect x="385" y="356" width="4" height="15" fill="rgb(229,191,3)"/><text x="388.00" y="366.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.32%)</title><rect x="385" y="372" width="4" height="15" fill="rgb(237,181,32)"/><text x="388.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.32%)</title><rect x="389" y="356" width="4" height="15" fill="rgb(238,17,45)"/><text x="392.00" y="366.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:940) (1 samples, 0.32%)</title><rect x="389" y="372" width="4" height="15" fill="rgb(233,166,17)"/><text x="392.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4427) (1 samples, 0.32%)</title><rect x="389" y="388" width="4" height="15" fill="rgb(229,4,50)"/><text x="392.00" y="398.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:279) (6 samples, 1.89%)</title><rect x="374" y="228" width="23" height="15" fill="rgb(245,194,29)"/><text x="377.00" y="238.50">e..</text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (4 samples, 1.26%)</title><rect x="382" y="244" width="15" height="15" fill="rgb(213,79,52)"/><text x="385.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.26%)</title><rect x="382" y="260" width="15" height="15" fill="rgb(225,36,14)"/><text x="385.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.26%)</title><rect x="382" y="276" width="15" height="15" fill="rgb(234,6,9)"/><text x="385.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (4 samples, 1.26%)</title><rect x="382" y="292" width="15" height="15" fill="rgb(243,64,13)"/><text x="385.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (4 samples, 1.26%)</title><rect x="382" y="308" width="15" height="15" fill="rgb(235,85,47)"/><text x="385.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2774) (2 samples, 0.63%)</title><rect x="389" y="324" width="8" height="15" fill="rgb(243,44,32)"/><text x="392.00" y="334.50"></text></g><g><title>PyArray_AssignZero (convert.c:542) (2 samples, 0.63%)</title><rect x="389" y="340" width="8" height="15" fill="rgb(212,148,46)"/><text x="392.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.32%)</title><rect x="393" y="356" width="4" height="15" fill="rgb(251,173,52)"/><text x="396.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.32%)</title><rect x="393" y="372" width="4" height="15" fill="rgb(214,72,5)"/><text x="396.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.32%)</title><rect x="393" y="388" width="4" height="15" fill="rgb(227,63,20)"/><text x="396.00" y="398.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.32%)</title><rect x="408" y="356" width="4" height="15" fill="rgb(229,95,5)"/><text x="411.00" y="366.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2774) (2 samples, 0.63%)</title><rect x="408" y="324" width="7" height="15" fill="rgb(241,184,0)"/><text x="411.00" y="334.50"></text></g><g><title>PyArray_AssignZero (convert.c:542) (2 samples, 0.63%)</title><rect x="408" y="340" width="7" height="15" fill="rgb(218,64,14)"/><text x="411.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.32%)</title><rect x="412" y="356" width="3" height="15" fill="rgb(231,226,14)"/><text x="415.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:50) (1 samples, 0.32%)</title><rect x="412" y="372" width="3" height="15" fill="rgb(244,91,38)"/><text x="415.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.32%)</title><rect x="412" y="388" width="3" height="15" fill="rgb(211,229,39)"/><text x="415.00" y="398.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src:647) (1 samples, 0.32%)</title><rect x="415" y="356" width="4" height="15" fill="rgb(210,110,14)"/><text x="418.00" y="366.50"></text></g><g><title>_mm_prefetch (xmmintrin.h:1192) (1 samples, 0.32%)</title><rect x="415" y="372" width="4" height="15" fill="rgb(230,118,23)"/><text x="418.00" y="382.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:295) (7 samples, 2.21%)</title><rect x="397" y="228" width="26" height="15" fill="rgb(225,84,2)"/><text x="400.00" y="238.50">e..</text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (6 samples, 1.89%)</title><rect x="400" y="244" width="23" height="15" fill="rgb(206,105,47)"/><text x="403.00" y="254.50">r..</text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (5 samples, 1.58%)</title><rect x="404" y="260" width="19" height="15" fill="rgb(249,212,3)"/><text x="407.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.26%)</title><rect x="408" y="276" width="15" height="15" fill="rgb(224,220,0)"/><text x="411.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (4 samples, 1.26%)</title><rect x="408" y="292" width="15" height="15" fill="rgb(245,58,46)"/><text x="411.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (4 samples, 1.26%)</title><rect x="408" y="308" width="15" height="15" fill="rgb(231,176,24)"/><text x="411.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2803) (2 samples, 0.63%)</title><rect x="415" y="324" width="8" height="15" fill="rgb(231,113,49)"/><text x="418.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src:2392) (2 samples, 0.63%)</title><rect x="415" y="340" width="8" height="15" fill="rgb(212,220,14)"/><text x="418.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src:650) (1 samples, 0.32%)</title><rect x="419" y="356" width="4" height="15" fill="rgb(205,135,48)"/><text x="422.00" y="366.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (1 samples, 0.32%)</title><rect x="419" y="372" width="4" height="15" fill="rgb(221,93,14)"/><text x="422.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="423" y="244" width="3" height="15" fill="rgb(250,49,54)"/><text x="426.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="423" y="260" width="3" height="15" fill="rgb(242,38,16)"/><text x="426.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.32%)</title><rect x="423" y="276" width="3" height="15" fill="rgb(235,182,10)"/><text x="426.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.32%)</title><rect x="426" y="292" width="4" height="15" fill="rgb(217,169,44)"/><text x="429.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.63%)</title><rect x="426" y="244" width="8" height="15" fill="rgb(226,53,0)"/><text x="429.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.63%)</title><rect x="426" y="260" width="8" height="15" fill="rgb(212,192,51)"/><text x="429.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.63%)</title><rect x="426" y="276" width="8" height="15" fill="rgb(246,16,43)"/><text x="429.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.32%)</title><rect x="430" y="292" width="4" height="15" fill="rgb(254,148,12)"/><text x="433.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.32%)</title><rect x="430" y="308" width="4" height="15" fill="rgb(244,125,6)"/><text x="433.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.32%)</title><rect x="430" y="324" width="4" height="15" fill="rgb(240,90,7)"/><text x="433.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2568) (1 samples, 0.32%)</title><rect x="434" y="292" width="4" height="15" fill="rgb(208,98,25)"/><text x="437.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.63%)</title><rect x="434" y="260" width="7" height="15" fill="rgb(241,112,17)"/><text x="437.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (2 samples, 0.63%)</title><rect x="434" y="276" width="7" height="15" fill="rgb(233,178,47)"/><text x="437.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.32%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(214,101,37)"/><text x="441.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="438" y="308" width="3" height="15" fill="rgb(215,162,19)"/><text x="441.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.32%)</title><rect x="438" y="324" width="3" height="15" fill="rgb(210,18,23)"/><text x="441.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.32%)</title><rect x="438" y="340" width="3" height="15" fill="rgb(217,30,29)"/><text x="441.00" y="350.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (3 samples, 0.95%)</title><rect x="434" y="244" width="11" height="15" fill="rgb(209,56,4)"/><text x="437.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.32%)</title><rect x="441" y="260" width="4" height="15" fill="rgb(223,124,23)"/><text x="444.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.32%)</title><rect x="441" y="276" width="4" height="15" fill="rgb(207,212,27)"/><text x="444.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.32%)</title><rect x="445" y="244" width="4" height="15" fill="rgb(232,92,1)"/><text x="448.00" y="254.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:303) (8 samples, 2.52%)</title><rect x="423" y="228" width="29" height="15" fill="rgb(239,168,12)"/><text x="426.00" y="238.50">eu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:156) (1 samples, 0.32%)</title><rect x="449" y="244" width="3" height="15" fill="rgb(252,162,46)"/><text x="452.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.32%)</title><rect x="452" y="260" width="4" height="15" fill="rgb(228,85,45)"/><text x="455.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.32%)</title><rect x="452" y="276" width="4" height="15" fill="rgb(212,112,37)"/><text x="455.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.32%)</title><rect x="452" y="292" width="4" height="15" fill="rgb(223,193,31)"/><text x="455.00" y="302.50"></text></g><g><title>0x7f03514edf00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="456" y="276" width="4" height="15" fill="rgb(214,57,27)"/><text x="459.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.32%)</title><rect x="460" y="308" width="4" height="15" fill="rgb(218,19,22)"/><text x="463.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1443) (1 samples, 0.32%)</title><rect x="460" y="324" width="4" height="15" fill="rgb(228,155,54)"/><text x="463.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.63%)</title><rect x="464" y="308" width="7" height="15" fill="rgb(228,21,52)"/><text x="467.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (2 samples, 0.63%)</title><rect x="464" y="324" width="7" height="15" fill="rgb(237,76,30)"/><text x="467.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.58%)</title><rect x="456" y="260" width="19" height="15" fill="rgb(216,77,4)"/><text x="459.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.26%)</title><rect x="460" y="276" width="15" height="15" fill="rgb(243,204,43)"/><text x="463.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.26%)</title><rect x="460" y="292" width="15" height="15" fill="rgb(215,132,34)"/><text x="463.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.32%)</title><rect x="471" y="308" width="4" height="15" fill="rgb(224,86,37)"/><text x="474.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3158) (1 samples, 0.32%)</title><rect x="471" y="324" width="4" height="15" fill="rgb(205,138,26)"/><text x="474.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.21%)</title><rect x="452" y="244" width="27" height="15" fill="rgb(244,20,13)"/><text x="455.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.32%)</title><rect x="475" y="260" width="4" height="15" fill="rgb(238,84,13)"/><text x="478.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.32%)</title><rect x="475" y="276" width="4" height="15" fill="rgb(228,29,5)"/><text x="478.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.32%)</title><rect x="475" y="292" width="4" height="15" fill="rgb(232,150,44)"/><text x="478.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.32%)</title><rect x="475" y="308" width="4" height="15" fill="rgb(254,79,41)"/><text x="478.00" y="318.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:304) (8 samples, 2.52%)</title><rect x="452" y="228" width="30" height="15" fill="rgb(251,172,3)"/><text x="455.00" y="238.50">eu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.32%)</title><rect x="479" y="244" width="3" height="15" fill="rgb(219,191,0)"/><text x="482.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.32%)</title><rect x="482" y="260" width="4" height="15" fill="rgb(252,11,1)"/><text x="485.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.32%)</title><rect x="482" y="276" width="4" height="15" fill="rgb(226,81,15)"/><text x="485.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.63%)</title><rect x="482" y="244" width="8" height="15" fill="rgb(233,13,0)"/><text x="485.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="486" y="260" width="4" height="15" fill="rgb(243,101,36)"/><text x="489.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.32%)</title><rect x="486" y="276" width="4" height="15" fill="rgb(209,105,44)"/><text x="489.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.32%)</title><rect x="486" y="292" width="4" height="15" fill="rgb(251,176,45)"/><text x="489.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.32%)</title><rect x="486" y="308" width="4" height="15" fill="rgb(233,129,28)"/><text x="489.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.32%)</title><rect x="486" y="324" width="4" height="15" fill="rgb(214,205,13)"/><text x="489.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="486" y="340" width="4" height="15" fill="rgb(228,144,29)"/><text x="489.00" y="350.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:305) (3 samples, 0.95%)</title><rect x="482" y="228" width="11" height="15" fill="rgb(221,98,23)"/><text x="485.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.32%)</title><rect x="490" y="244" width="3" height="15" fill="rgb(227,127,7)"/><text x="493.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.32%)</title><rect x="490" y="260" width="3" height="15" fill="rgb(250,229,30)"/><text x="493.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.32%)</title><rect x="493" y="244" width="4" height="15" fill="rgb(231,228,26)"/><text x="496.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.32%)</title><rect x="493" y="260" width="4" height="15" fill="rgb(248,22,7)"/><text x="496.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.32%)</title><rect x="493" y="276" width="4" height="15" fill="rgb(245,34,38)"/><text x="496.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.32%)</title><rect x="493" y="292" width="4" height="15" fill="rgb(235,155,11)"/><text x="496.00" y="302.50"></text></g><g><title>0x7f03522e2e50 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="493" y="308" width="4" height="15" fill="rgb(252,7,5)"/><text x="496.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.32%)</title><rect x="497" y="260" width="4" height="15" fill="rgb(207,213,50)"/><text x="500.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.32%)</title><rect x="497" y="276" width="4" height="15" fill="rgb(234,166,11)"/><text x="500.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.32%)</title><rect x="497" y="292" width="4" height="15" fill="rgb(223,180,22)"/><text x="500.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="497" y="308" width="4" height="15" fill="rgb(214,147,25)"/><text x="500.00" y="318.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1592) (61 samples, 19.24%)</title><rect x="278" y="180" width="227" height="15" fill="rgb(249,22,20)"/><text x="281.00" y="190.50">pairwise_distances_chunked (sk..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1749) (61 samples, 19.24%)</title><rect x="278" y="196" width="227" height="15" fill="rgb(242,8,12)"/><text x="281.00" y="206.50">pairwise_distances (sklearn/me..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1348) (57 samples, 17.98%)</title><rect x="292" y="212" width="213" height="15" fill="rgb(253,41,51)"/><text x="295.00" y="222.50">_parallel_pairwise (sklearn/..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:306) (3 samples, 0.95%)</title><rect x="493" y="228" width="12" height="15" fill="rgb(232,213,6)"/><text x="496.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.63%)</title><rect x="497" y="244" width="8" height="15" fill="rgb(237,34,10)"/><text x="500.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="501" y="260" width="4" height="15" fill="rgb(240,142,25)"/><text x="504.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.32%)</title><rect x="501" y="276" width="4" height="15" fill="rgb(234,122,51)"/><text x="504.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.32%)</title><rect x="501" y="292" width="4" height="15" fill="rgb(251,163,51)"/><text x="504.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.32%)</title><rect x="501" y="308" width="4" height="15" fill="rgb(213,58,9)"/><text x="504.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.32%)</title><rect x="501" y="324" width="4" height="15" fill="rgb(230,22,14)"/><text x="504.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.32%)</title><rect x="501" y="340" width="4" height="15" fill="rgb(223,184,11)"/><text x="504.00" y="350.50"></text></g><g><title>0x7f03522847a5 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="501" y="356" width="4" height="15" fill="rgb(219,45,48)"/><text x="504.00" y="366.50"></text></g><g><title>0x7f03522849fb (libc-2.29.so) (1 samples, 0.32%)</title><rect x="501" y="372" width="4" height="15" fill="rgb(251,150,24)"/><text x="504.00" y="382.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.32%)</title><rect x="516" y="228" width="3" height="15" fill="rgb(210,172,22)"/><text x="519.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3269) (1 samples, 0.32%)</title><rect x="516" y="244" width="3" height="15" fill="rgb(246,149,17)"/><text x="519.00" y="254.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:516) (5 samples, 1.58%)</title><rect x="505" y="196" width="18" height="15" fill="rgb(213,74,8)"/><text x="508.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.63%)</title><rect x="516" y="212" width="7" height="15" fill="rgb(209,12,28)"/><text x="519.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3451) (1 samples, 0.32%)</title><rect x="519" y="228" width="4" height="15" fill="rgb(220,14,22)"/><text x="522.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="519" y="244" width="4" height="15" fill="rgb(215,213,28)"/><text x="522.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.32%)</title><rect x="519" y="260" width="4" height="15" fill="rgb(231,103,22)"/><text x="522.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.32%)</title><rect x="523" y="228" width="4" height="15" fill="rgb(249,113,20)"/><text x="526.00" y="238.50"></text></g><g><title>0x7f03514edc40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="523" y="244" width="4" height="15" fill="rgb(245,105,21)"/><text x="526.00" y="254.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1365) (1 samples, 0.32%)</title><rect x="527" y="292" width="4" height="15" fill="rgb(225,145,45)"/><text x="530.00" y="302.50"></text></g><g><title>partition_prep_kth_array (item_selection.c:1197) (1 samples, 0.32%)</title><rect x="527" y="308" width="4" height="15" fill="rgb(233,209,7)"/><text x="530.00" y="318.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.32%)</title><rect x="527" y="324" width="4" height="15" fill="rgb(243,156,43)"/><text x="530.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.32%)</title><rect x="527" y="340" width="4" height="15" fill="rgb(237,21,50)"/><text x="530.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.32%)</title><rect x="527" y="356" width="4" height="15" fill="rgb(219,24,53)"/><text x="530.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:36) (1 samples, 0.32%)</title><rect x="527" y="372" width="4" height="15" fill="rgb(236,23,16)"/><text x="530.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1020) (1 samples, 0.32%)</title><rect x="531" y="308" width="3" height="15" fill="rgb(227,213,52)"/><text x="534.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="531" y="324" width="3" height="15" fill="rgb(246,37,1)"/><text x="534.00" y="334.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (4 samples, 1.26%)</title><rect x="523" y="196" width="15" height="15" fill="rgb(223,136,41)"/><text x="526.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (4 samples, 1.26%)</title><rect x="523" y="212" width="15" height="15" fill="rgb(219,152,45)"/><text x="526.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.95%)</title><rect x="527" y="228" width="11" height="15" fill="rgb(227,43,19)"/><text x="530.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (3 samples, 0.95%)</title><rect x="527" y="244" width="11" height="15" fill="rgb(236,127,51)"/><text x="530.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.95%)</title><rect x="527" y="260" width="11" height="15" fill="rgb(229,162,27)"/><text x="530.00" y="270.50"></text></g><g><title>array_argpartition (methods.c:1454) (3 samples, 0.95%)</title><rect x="527" y="276" width="11" height="15" fill="rgb(218,1,43)"/><text x="530.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (2 samples, 0.63%)</title><rect x="531" y="292" width="7" height="15" fill="rgb(216,172,33)"/><text x="534.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (1 samples, 0.32%)</title><rect x="534" y="308" width="4" height="15" fill="rgb(215,170,18)"/><text x="537.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src:322) (1 samples, 0.32%)</title><rect x="534" y="324" width="4" height="15" fill="rgb(230,65,54)"/><text x="537.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src:258) (1 samples, 0.32%)</title><rect x="534" y="340" width="4" height="15" fill="rgb(228,126,44)"/><text x="537.00" y="350.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (1 samples, 0.32%)</title><rect x="534" y="356" width="4" height="15" fill="rgb(224,118,25)"/><text x="537.00" y="366.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:518) (2 samples, 0.63%)</title><rect x="538" y="196" width="8" height="15" fill="rgb(246,51,34)"/><text x="541.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.32%)</title><rect x="542" y="212" width="4" height="15" fill="rgb(206,41,54)"/><text x="545.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.32%)</title><rect x="542" y="228" width="4" height="15" fill="rgb(221,61,25)"/><text x="545.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="549" y="212" width="4" height="15" fill="rgb(239,49,10)"/><text x="552.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="549" y="228" width="4" height="15" fill="rgb(209,178,46)"/><text x="552.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.32%)</title><rect x="549" y="244" width="4" height="15" fill="rgb(236,149,34)"/><text x="552.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.32%)</title><rect x="553" y="260" width="4" height="15" fill="rgb(235,161,21)"/><text x="556.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="553" y="276" width="4" height="15" fill="rgb(219,151,13)"/><text x="556.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.63%)</title><rect x="553" y="212" width="7" height="15" fill="rgb(240,30,37)"/><text x="556.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.63%)</title><rect x="553" y="228" width="7" height="15" fill="rgb(235,212,45)"/><text x="556.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.63%)</title><rect x="553" y="244" width="7" height="15" fill="rgb(207,216,30)"/><text x="556.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="557" y="260" width="3" height="15" fill="rgb(241,180,2)"/><text x="560.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.32%)</title><rect x="557" y="276" width="3" height="15" fill="rgb(236,144,37)"/><text x="560.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.32%)</title><rect x="557" y="292" width="3" height="15" fill="rgb(209,199,42)"/><text x="560.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="557" y="308" width="3" height="15" fill="rgb(231,178,42)"/><text x="560.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="557" y="324" width="3" height="15" fill="rgb(244,116,14)"/><text x="560.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.32%)</title><rect x="557" y="340" width="3" height="15" fill="rgb(240,23,51)"/><text x="560.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2493) (1 samples, 0.32%)</title><rect x="560" y="228" width="4" height="15" fill="rgb(227,212,53)"/><text x="563.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="560" y="244" width="4" height="15" fill="rgb(220,131,47)"/><text x="563.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.63%)</title><rect x="560" y="212" width="8" height="15" fill="rgb(210,58,9)"/><text x="563.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2569) (1 samples, 0.32%)</title><rect x="564" y="228" width="4" height="15" fill="rgb(248,68,1)"/><text x="567.00" y="238.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:521) (7 samples, 2.21%)</title><rect x="546" y="196" width="26" height="15" fill="rgb(232,202,14)"/><text x="549.00" y="206.50">_..</text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.32%)</title><rect x="568" y="212" width="4" height="15" fill="rgb(243,101,22)"/><text x="571.00" y="222.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.32%)</title><rect x="568" y="228" width="4" height="15" fill="rgb(238,219,5)"/><text x="571.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.32%)</title><rect x="568" y="244" width="4" height="15" fill="rgb(208,14,7)"/><text x="571.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="572" y="212" width="3" height="15" fill="rgb(230,35,20)"/><text x="575.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="572" y="228" width="3" height="15" fill="rgb(228,15,46)"/><text x="575.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.32%)</title><rect x="572" y="244" width="3" height="15" fill="rgb(226,60,1)"/><text x="575.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.32%)</title><rect x="575" y="228" width="4" height="15" fill="rgb(222,210,43)"/><text x="578.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.32%)</title><rect x="575" y="244" width="4" height="15" fill="rgb(235,225,2)"/><text x="578.00" y="254.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:524) (3 samples, 0.95%)</title><rect x="572" y="196" width="11" height="15" fill="rgb(247,129,1)"/><text x="575.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.63%)</title><rect x="575" y="212" width="8" height="15" fill="rgb(252,130,32)"/><text x="578.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="579" y="228" width="4" height="15" fill="rgb(215,178,44)"/><text x="582.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.32%)</title><rect x="579" y="244" width="4" height="15" fill="rgb(211,105,32)"/><text x="582.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.32%)</title><rect x="579" y="260" width="4" height="15" fill="rgb(217,192,1)"/><text x="582.00" y="270.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (22 samples, 6.94%)</title><rect x="505" y="180" width="81" height="15" fill="rgb(215,167,32)"/><text x="508.00" y="190.50">pairwise_..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.32%)</title><rect x="583" y="196" width="3" height="15" fill="rgb(249,215,43)"/><text x="586.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="583" y="212" width="3" height="15" fill="rgb(220,7,12)"/><text x="586.00" y="222.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1414) (1 samples, 0.32%)</title><rect x="594" y="196" width="4" height="15" fill="rgb(211,94,34)"/><text x="597.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.63%)</title><rect x="601" y="228" width="8" height="15" fill="rgb(224,18,51)"/><text x="604.00" y="238.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (111 samples, 35.02%)</title><rect x="218" y="164" width="413" height="15" fill="rgb(254,180,10)"/><text x="221.00" y="174.50">kneighbors (sklearn/neighbors/_base.py:642)</text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1602) (12 samples, 3.79%)</title><rect x="586" y="180" width="45" height="15" fill="rgb(243,133,24)"/><text x="589.00" y="190.50">pair..</text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1419) (9 samples, 2.84%)</title><rect x="598" y="196" width="33" height="15" fill="rgb(215,164,50)"/><text x="601.00" y="206.50">_c..</text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py:1419) (9 samples, 2.84%)</title><rect x="598" y="212" width="33" height="15" fill="rgb(242,18,7)"/><text x="601.00" y="222.50">&lt;g..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 1.89%)</title><rect x="609" y="228" width="22" height="15" fill="rgb(248,206,15)"/><text x="612.00" y="238.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.26%)</title><rect x="616" y="244" width="15" height="15" fill="rgb(214,80,4)"/><text x="619.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.32%)</title><rect x="627" y="260" width="4" height="15" fill="rgb(208,176,23)"/><text x="630.00" y="270.50"></text></g><g><title>vstack (&lt;__array_function__ internals&gt;:4) (1 samples, 0.32%)</title><rect x="631" y="180" width="4" height="15" fill="rgb(206,206,8)"/><text x="634.00" y="190.50"></text></g><g><title>0x7f03514ef780 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="635" y="212" width="4" height="15" fill="rgb(251,177,44)"/><text x="638.00" y="222.50"></text></g><g><title>vstack (numpy/core/shape_base.py:279) (2 samples, 0.63%)</title><rect x="639" y="212" width="7" height="15" fill="rgb(234,138,52)"/><text x="642.00" y="222.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (2 samples, 0.63%)</title><rect x="639" y="228" width="7" height="15" fill="rgb(209,12,28)"/><text x="642.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.63%)</title><rect x="639" y="244" width="7" height="15" fill="rgb(241,67,40)"/><text x="642.00" y="254.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:123) (2 samples, 0.63%)</title><rect x="639" y="260" width="7" height="15" fill="rgb(248,6,49)"/><text x="642.00" y="270.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c:490) (1 samples, 0.32%)</title><rect x="650" y="292" width="3" height="15" fill="rgb(216,203,16)"/><text x="653.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="650" y="308" width="3" height="15" fill="rgb(227,18,4)"/><text x="653.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="650" y="324" width="3" height="15" fill="rgb(248,72,26)"/><text x="653.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.32%)</title><rect x="650" y="340" width="3" height="15" fill="rgb(246,118,52)"/><text x="653.00" y="350.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c:510) (1 samples, 0.32%)</title><rect x="653" y="292" width="4" height="15" fill="rgb(216,31,33)"/><text x="656.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.32%)</title><rect x="653" y="308" width="4" height="15" fill="rgb(239,104,41)"/><text x="656.00" y="318.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.32%)</title><rect x="653" y="324" width="4" height="15" fill="rgb(215,5,18)"/><text x="656.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.32%)</title><rect x="653" y="340" width="4" height="15" fill="rgb(245,57,4)"/><text x="656.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.32%)</title><rect x="657" y="340" width="4" height="15" fill="rgb(221,224,2)"/><text x="660.00" y="350.50"></text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c:671) (4 samples, 1.26%)</title><rect x="650" y="276" width="15" height="15" fill="rgb(216,31,10)"/><text x="653.00" y="286.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c:522) (2 samples, 0.63%)</title><rect x="657" y="292" width="8" height="15" fill="rgb(237,74,4)"/><text x="660.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.63%)</title><rect x="657" y="308" width="8" height="15" fill="rgb(210,194,38)"/><text x="660.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.63%)</title><rect x="657" y="324" width="8" height="15" fill="rgb(224,220,20)"/><text x="660.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.32%)</title><rect x="661" y="340" width="4" height="15" fill="rgb(246,209,48)"/><text x="664.00" y="350.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (144 samples, 45.43%)</title><rect x="132" y="148" width="536" height="15" fill="rgb(220,78,41)"/><text x="135.00" y="158.50">predict (sklearn/neighbors/_regression.py:174)</text></g><g><title>kneighbors (sklearn/neighbors/_base.py:671) (10 samples, 3.15%)</title><rect x="631" y="164" width="37" height="15" fill="rgb(243,189,5)"/><text x="634.00" y="174.50">kne..</text></g><g><title>vstack (&lt;__array_function__ internals&gt;:6) (9 samples, 2.84%)</title><rect x="635" y="180" width="33" height="15" fill="rgb(224,157,20)"/><text x="638.00" y="190.50">vs..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.84%)</title><rect x="635" y="196" width="33" height="15" fill="rgb(230,84,35)"/><text x="638.00" y="206.50">ar..</text></g><g><title>vstack (numpy/core/shape_base.py:282) (6 samples, 1.89%)</title><rect x="646" y="212" width="22" height="15" fill="rgb(237,44,26)"/><text x="649.00" y="222.50">v..</text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:6) (5 samples, 1.58%)</title><rect x="650" y="228" width="18" height="15" fill="rgb(238,134,28)"/><text x="653.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.58%)</title><rect x="650" y="244" width="18" height="15" fill="rgb(211,125,29)"/><text x="653.00" y="254.50"></text></g><g><title>array_concatenate (multiarraymodule.c:2198) (5 samples, 1.58%)</title><rect x="650" y="260" width="18" height="15" fill="rgb(215,218,6)"/><text x="653.00" y="270.50"></text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c:689) (1 samples, 0.32%)</title><rect x="665" y="276" width="3" height="15" fill="rgb(249,157,48)"/><text x="668.00" y="286.50"></text></g><g><title>0x7f03522ccbd4 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="665" y="292" width="3" height="15" fill="rgb(220,150,42)"/><text x="668.00" y="302.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:180) (2 samples, 0.63%)</title><rect x="668" y="148" width="8" height="15" fill="rgb(228,212,12)"/><text x="671.00" y="158.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.32%)</title><rect x="672" y="164" width="4" height="15" fill="rgb(243,155,32)"/><text x="675.00" y="174.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.32%)</title><rect x="672" y="180" width="4" height="15" fill="rgb(216,172,48)"/><text x="675.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.32%)</title><rect x="672" y="196" width="4" height="15" fill="rgb(221,6,1)"/><text x="675.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.32%)</title><rect x="672" y="212" width="4" height="15" fill="rgb(215,50,48)"/><text x="675.00" y="222.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.32%)</title><rect x="672" y="228" width="4" height="15" fill="rgb(238,46,53)"/><text x="675.00" y="238.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:169) (1 samples, 0.32%)</title><rect x="672" y="244" width="4" height="15" fill="rgb(227,197,9)"/><text x="675.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.32%)</title><rect x="676" y="180" width="4" height="15" fill="rgb(236,47,39)"/><text x="679.00" y="190.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.32%)</title><rect x="676" y="196" width="4" height="15" fill="rgb(215,57,46)"/><text x="679.00" y="206.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="676" y="212" width="4" height="15" fill="rgb(210,43,53)"/><text x="679.00" y="222.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.32%)</title><rect x="676" y="228" width="4" height="15" fill="rgb(244,104,51)"/><text x="679.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2869) (1 samples, 0.32%)</title><rect x="680" y="180" width="3" height="15" fill="rgb(253,185,49)"/><text x="683.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="680" y="196" width="3" height="15" fill="rgb(230,7,29)"/><text x="683.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.32%)</title><rect x="680" y="212" width="3" height="15" fill="rgb(228,87,23)"/><text x="683.00" y="222.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.32%)</title><rect x="680" y="228" width="3" height="15" fill="rgb(209,134,40)"/><text x="683.00" y="238.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:176) (1 samples, 0.32%)</title><rect x="680" y="244" width="3" height="15" fill="rgb(206,8,16)"/><text x="683.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="683" y="196" width="4" height="15" fill="rgb(216,123,33)"/><text x="686.00" y="206.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.32%)</title><rect x="683" y="212" width="4" height="15" fill="rgb(231,175,16)"/><text x="686.00" y="222.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.32%)</title><rect x="683" y="228" width="4" height="15" fill="rgb(244,34,3)"/><text x="686.00" y="238.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.32%)</title><rect x="683" y="244" width="4" height="15" fill="rgb(246,138,49)"/><text x="686.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (4 samples, 1.26%)</title><rect x="676" y="164" width="15" height="15" fill="rgb(215,110,15)"/><text x="679.00" y="174.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (2 samples, 0.63%)</title><rect x="683" y="180" width="8" height="15" fill="rgb(246,183,19)"/><text x="686.00" y="190.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:249) (1 samples, 0.32%)</title><rect x="687" y="196" width="4" height="15" fill="rgb(254,218,53)"/><text x="690.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.32%)</title><rect x="691" y="164" width="3" height="15" fill="rgb(228,46,33)"/><text x="694.00" y="174.50"></text></g><g><title>0x7f03522cc902 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="691" y="180" width="3" height="15" fill="rgb(244,59,12)"/><text x="694.00" y="190.50"></text></g><g><title>_mean (numpy/core/_methods.py:140) (1 samples, 0.32%)</title><rect x="698" y="212" width="4" height="15" fill="rgb(243,44,40)"/><text x="701.00" y="222.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.63%)</title><rect x="702" y="244" width="7" height="15" fill="rgb(237,99,20)"/><text x="705.00" y="254.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.32%)</title><rect x="709" y="292" width="4" height="15" fill="rgb(206,218,33)"/><text x="712.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.32%)</title><rect x="709" y="308" width="4" height="15" fill="rgb(210,110,30)"/><text x="712.00" y="318.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (4 samples, 1.26%)</title><rect x="702" y="212" width="15" height="15" fill="rgb(243,27,1)"/><text x="705.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 1.26%)</title><rect x="702" y="228" width="15" height="15" fill="rgb(251,120,6)"/><text x="705.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.63%)</title><rect x="709" y="244" width="8" height="15" fill="rgb(243,35,46)"/><text x="712.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.63%)</title><rect x="709" y="260" width="8" height="15" fill="rgb(221,159,23)"/><text x="712.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.63%)</title><rect x="709" y="276" width="8" height="15" fill="rgb(247,8,19)"/><text x="712.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.32%)</title><rect x="713" y="292" width="4" height="15" fill="rgb(253,20,48)"/><text x="716.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.32%)</title><rect x="713" y="308" width="4" height="15" fill="rgb(237,1,38)"/><text x="716.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2004) (1 samples, 0.32%)</title><rect x="713" y="324" width="4" height="15" fill="rgb(248,106,53)"/><text x="716.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.32%)</title><rect x="717" y="260" width="3" height="15" fill="rgb(217,110,29)"/><text x="720.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.32%)</title><rect x="717" y="276" width="3" height="15" fill="rgb(221,143,51)"/><text x="720.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.32%)</title><rect x="717" y="292" width="3" height="15" fill="rgb(228,19,48)"/><text x="720.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.32%)</title><rect x="717" y="308" width="3" height="15" fill="rgb(216,199,31)"/><text x="720.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.63%)</title><rect x="717" y="244" width="7" height="15" fill="rgb(241,5,28)"/><text x="720.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.32%)</title><rect x="720" y="260" width="4" height="15" fill="rgb(248,47,39)"/><text x="723.00" y="270.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:927) (1 samples, 0.32%)</title><rect x="720" y="276" width="4" height="15" fill="rgb(239,193,14)"/><text x="723.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.32%)</title><rect x="724" y="244" width="4" height="15" fill="rgb(243,43,15)"/><text x="727.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.32%)</title><rect x="724" y="260" width="4" height="15" fill="rgb(205,19,48)"/><text x="727.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.32%)</title><rect x="724" y="276" width="4" height="15" fill="rgb(205,228,21)"/><text x="727.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.32%)</title><rect x="724" y="292" width="4" height="15" fill="rgb(214,138,42)"/><text x="727.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.32%)</title><rect x="724" y="308" width="4" height="15" fill="rgb(234,162,15)"/><text x="727.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.32%)</title><rect x="724" y="324" width="4" height="15" fill="rgb(207,77,49)"/><text x="727.00" y="334.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.32%)</title><rect x="724" y="340" width="4" height="15" fill="rgb(244,183,43)"/><text x="727.00" y="350.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (179 samples, 56.47%)</title><rect x="65" y="132" width="667" height="15" fill="rgb(225,75,43)"/><text x="68.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neighbors/_regression.py:183) (15 samples, 4.73%)</title><rect x="676" y="148" width="56" height="15" fill="rgb(229,190,39)"/><text x="679.00" y="158.50">predi..</text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (10 samples, 3.15%)</title><rect x="694" y="164" width="38" height="15" fill="rgb(224,29,25)"/><text x="697.00" y="174.50">mea..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 3.15%)</title><rect x="694" y="180" width="38" height="15" fill="rgb(241,132,11)"/><text x="697.00" y="190.50">arr..</text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (10 samples, 3.15%)</title><rect x="694" y="196" width="38" height="15" fill="rgb(240,125,48)"/><text x="697.00" y="206.50">mea..</text></g><g><title>_mean (numpy/core/_methods.py:154) (4 samples, 1.26%)</title><rect x="717" y="212" width="15" height="15" fill="rgb(219,35,38)"/><text x="720.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.26%)</title><rect x="717" y="228" width="15" height="15" fill="rgb(248,142,51)"/><text x="720.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="728" y="244" width="4" height="15" fill="rgb(223,78,28)"/><text x="731.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.32%)</title><rect x="728" y="260" width="4" height="15" fill="rgb(210,170,31)"/><text x="731.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.32%)</title><rect x="728" y="276" width="4" height="15" fill="rgb(215,43,29)"/><text x="731.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.32%)</title><rect x="728" y="292" width="4" height="15" fill="rgb(231,46,28)"/><text x="731.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1660) (1 samples, 0.32%)</title><rect x="728" y="308" width="4" height="15" fill="rgb(242,197,25)"/><text x="731.00" y="318.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.32%)</title><rect x="732" y="132" width="3" height="15" fill="rgb(226,198,16)"/><text x="735.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:54) (183 samples, 57.73%)</title><rect x="62" y="52" width="681" height="15" fill="rgb(207,24,13)"/><text x="65.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float..</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:53) (183 samples, 57.73%)</title><rect x="62" y="68" width="681" height="15" fill="rgb(241,16,19)"/><text x="65.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_fl..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:37) (183 samples, 57.73%)</title><rect x="62" y="84" width="681" height="15" fill="rgb(224,103,46)"/><text x="65.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:31) (183 samples, 57.73%)</title><rect x="62" y="100" width="681" height="15" fill="rgb(243,135,27)"/><text x="65.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (183 samples, 57.73%)</title><rect x="62" y="116" width="681" height="15" fill="rgb(249,66,26)"/><text x="65.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.63%)</title><rect x="735" y="132" width="8" height="15" fill="rgb(232,185,22)"/><text x="738.00" y="142.50"></text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:36) (1 samples, 0.32%)</title><rect x="743" y="84" width="4" height="15" fill="rgb(253,151,35)"/><text x="746.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.32%)</title><rect x="743" y="100" width="4" height="15" fill="rgb(215,43,33)"/><text x="746.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.32%)</title><rect x="743" y="116" width="4" height="15" fill="rgb(222,113,38)"/><text x="746.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.32%)</title><rect x="743" y="132" width="4" height="15" fill="rgb(242,218,0)"/><text x="746.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.32%)</title><rect x="743" y="148" width="4" height="15" fill="rgb(220,126,49)"/><text x="746.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.32%)</title><rect x="743" y="164" width="4" height="15" fill="rgb(224,143,6)"/><text x="746.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.32%)</title><rect x="743" y="180" width="4" height="15" fill="rgb(225,151,1)"/><text x="746.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.32%)</title><rect x="743" y="196" width="4" height="15" fill="rgb(249,182,15)"/><text x="746.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="743" y="212" width="4" height="15" fill="rgb(249,38,40)"/><text x="746.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="743" y="228" width="4" height="15" fill="rgb(217,217,27)"/><text x="746.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="743" y="244" width="4" height="15" fill="rgb(225,25,30)"/><text x="746.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="743" y="260" width="4" height="15" fill="rgb(227,189,27)"/><text x="746.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="743" y="276" width="4" height="15" fill="rgb(249,126,45)"/><text x="746.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.32%)</title><rect x="743" y="292" width="4" height="15" fill="rgb(211,8,36)"/><text x="746.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="743" y="308" width="4" height="15" fill="rgb(245,60,6)"/><text x="746.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="743" y="324" width="4" height="15" fill="rgb(212,49,14)"/><text x="746.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="743" y="340" width="4" height="15" fill="rgb(238,26,29)"/><text x="746.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="743" y="356" width="4" height="15" fill="rgb(243,60,11)"/><text x="746.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="743" y="372" width="4" height="15" fill="rgb(247,98,49)"/><text x="746.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.32%)</title><rect x="743" y="388" width="4" height="15" fill="rgb(212,76,25)"/><text x="746.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="743" y="404" width="4" height="15" fill="rgb(224,172,3)"/><text x="746.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="743" y="420" width="4" height="15" fill="rgb(248,44,16)"/><text x="746.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="743" y="436" width="4" height="15" fill="rgb(250,186,15)"/><text x="746.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="743" y="452" width="4" height="15" fill="rgb(242,59,2)"/><text x="746.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="743" y="468" width="4" height="15" fill="rgb(227,80,41)"/><text x="746.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.32%)</title><rect x="743" y="484" width="4" height="15" fill="rgb(235,222,0)"/><text x="746.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.32%)</title><rect x="743" y="500" width="4" height="15" fill="rgb(247,60,42)"/><text x="746.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.32%)</title><rect x="743" y="516" width="4" height="15" fill="rgb(207,217,46)"/><text x="746.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.32%)</title><rect x="743" y="532" width="4" height="15" fill="rgb(225,155,35)"/><text x="746.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.32%)</title><rect x="743" y="548" width="4" height="15" fill="rgb(212,89,46)"/><text x="746.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.32%)</title><rect x="743" y="564" width="4" height="15" fill="rgb(248,110,3)"/><text x="746.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.32%)</title><rect x="743" y="580" width="4" height="15" fill="rgb(245,112,14)"/><text x="746.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.32%)</title><rect x="743" y="596" width="4" height="15" fill="rgb(239,229,33)"/><text x="746.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.32%)</title><rect x="743" y="612" width="4" height="15" fill="rgb(237,171,30)"/><text x="746.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:191) (1 samples, 0.32%)</title><rect x="743" y="628" width="4" height="15" fill="rgb(242,6,7)"/><text x="746.00" y="638.50"></text></g><g><title>parse_assign_target (jinja2/parser.py:421) (1 samples, 0.32%)</title><rect x="743" y="644" width="4" height="15" fill="rgb(229,110,17)"/><text x="746.00" y="654.50"></text></g><g><title>can_assign (jinja2/nodes.py:464) (1 samples, 0.32%)</title><rect x="743" y="660" width="4" height="15" fill="rgb(223,42,24)"/><text x="746.00" y="670.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.32%)</title><rect x="747" y="148" width="3" height="15" fill="rgb(231,3,28)"/><text x="750.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.32%)</title><rect x="750" y="164" width="4" height="15" fill="rgb(252,186,33)"/><text x="753.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.26%)</title><rect x="765" y="180" width="15" height="15" fill="rgb(251,204,45)"/><text x="768.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.32%)</title><rect x="776" y="196" width="4" height="15" fill="rgb(235,33,42)"/><text x="779.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.32%)</title><rect x="791" y="212" width="4" height="15" fill="rgb(235,97,48)"/><text x="794.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="791" y="228" width="4" height="15" fill="rgb(209,84,39)"/><text x="794.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="791" y="244" width="4" height="15" fill="rgb(230,126,18)"/><text x="794.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.32%)</title><rect x="791" y="260" width="4" height="15" fill="rgb(232,151,38)"/><text x="794.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:40) (1 samples, 0.32%)</title><rect x="795" y="212" width="4" height="15" fill="rgb(248,18,24)"/><text x="798.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.32%)</title><rect x="799" y="260" width="3" height="15" fill="rgb(205,32,39)"/><text x="802.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.32%)</title><rect x="799" y="276" width="3" height="15" fill="rgb(209,114,39)"/><text x="802.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.32%)</title><rect x="799" y="292" width="3" height="15" fill="rgb(230,66,21)"/><text x="802.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.32%)</title><rect x="799" y="308" width="3" height="15" fill="rgb(247,89,36)"/><text x="802.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.32%)</title><rect x="799" y="324" width="3" height="15" fill="rgb(253,31,44)"/><text x="802.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:40) (1 samples, 0.32%)</title><rect x="799" y="340" width="3" height="15" fill="rgb(206,37,52)"/><text x="802.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.63%)</title><rect x="799" y="228" width="7" height="15" fill="rgb(237,147,12)"/><text x="802.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.63%)</title><rect x="799" y="244" width="7" height="15" fill="rgb(227,80,53)"/><text x="802.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.32%)</title><rect x="802" y="260" width="4" height="15" fill="rgb(239,17,11)"/><text x="805.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.32%)</title><rect x="802" y="276" width="4" height="15" fill="rgb(220,214,25)"/><text x="805.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.32%)</title><rect x="802" y="292" width="4" height="15" fill="rgb(241,154,39)"/><text x="805.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.32%)</title><rect x="806" y="228" width="4" height="15" fill="rgb(207,50,31)"/><text x="809.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.32%)</title><rect x="806" y="244" width="4" height="15" fill="rgb(213,70,22)"/><text x="809.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.32%)</title><rect x="810" y="260" width="4" height="15" fill="rgb(211,26,26)"/><text x="813.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (5 samples, 1.58%)</title><rect x="799" y="212" width="18" height="15" fill="rgb(244,70,14)"/><text x="802.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.63%)</title><rect x="810" y="228" width="7" height="15" fill="rgb(230,177,9)"/><text x="813.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (2 samples, 0.63%)</title><rect x="810" y="244" width="7" height="15" fill="rgb(252,219,33)"/><text x="813.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:328) (1 samples, 0.32%)</title><rect x="814" y="260" width="3" height="15" fill="rgb(225,85,50)"/><text x="817.00" y="270.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.32%)</title><rect x="817" y="308" width="4" height="15" fill="rgb(234,125,0)"/><text x="820.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (2 samples, 0.63%)</title><rect x="817" y="276" width="8" height="15" fill="rgb(234,17,39)"/><text x="820.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (2 samples, 0.63%)</title><rect x="817" y="292" width="8" height="15" fill="rgb(238,186,8)"/><text x="820.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.32%)</title><rect x="821" y="308" width="4" height="15" fill="rgb(239,213,25)"/><text x="824.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.95%)</title><rect x="817" y="212" width="11" height="15" fill="rgb(233,45,4)"/><text x="820.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.95%)</title><rect x="817" y="228" width="11" height="15" fill="rgb(206,89,10)"/><text x="820.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.95%)</title><rect x="817" y="244" width="11" height="15" fill="rgb(229,90,27)"/><text x="820.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.95%)</title><rect x="817" y="260" width="11" height="15" fill="rgb(219,183,19)"/><text x="820.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.32%)</title><rect x="825" y="276" width="3" height="15" fill="rgb(213,50,25)"/><text x="828.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3998) (1 samples, 0.32%)</title><rect x="825" y="292" width="3" height="15" fill="rgb(209,144,3)"/><text x="828.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.63%)</title><rect x="828" y="212" width="8" height="15" fill="rgb(223,111,19)"/><text x="831.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.32%)</title><rect x="832" y="228" width="4" height="15" fill="rgb(229,181,18)"/><text x="835.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py:18) (1 samples, 0.32%)</title><rect x="836" y="212" width="4" height="15" fill="rgb(209,88,11)"/><text x="839.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.32%)</title><rect x="836" y="228" width="4" height="15" fill="rgb(249,3,11)"/><text x="839.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.32%)</title><rect x="836" y="244" width="4" height="15" fill="rgb(207,206,5)"/><text x="839.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.32%)</title><rect x="836" y="260" width="4" height="15" fill="rgb(234,160,25)"/><text x="839.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.32%)</title><rect x="836" y="276" width="4" height="15" fill="rgb(238,9,14)"/><text x="839.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.32%)</title><rect x="836" y="292" width="4" height="15" fill="rgb(228,44,3)"/><text x="839.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:448) (1 samples, 0.32%)</title><rect x="836" y="308" width="4" height="15" fill="rgb(212,215,13)"/><text x="839.00" y="318.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:73) (2 samples, 0.63%)</title><rect x="843" y="228" width="8" height="15" fill="rgb(249,6,50)"/><text x="846.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1549) (2 samples, 0.63%)</title><rect x="843" y="244" width="8" height="15" fill="rgb(235,78,16)"/><text x="846.00" y="254.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.32%)</title><rect x="847" y="260" width="4" height="15" fill="rgb(228,76,40)"/><text x="850.00" y="270.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:129) (1 samples, 0.32%)</title><rect x="847" y="276" width="4" height="15" fill="rgb(223,169,46)"/><text x="850.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:26) (2 samples, 0.63%)</title><rect x="851" y="244" width="7" height="15" fill="rgb(223,84,8)"/><text x="854.00" y="254.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.32%)</title><rect x="854" y="260" width="4" height="15" fill="rgb(220,16,52)"/><text x="857.00" y="270.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3277) (1 samples, 0.32%)</title><rect x="854" y="276" width="4" height="15" fill="rgb(234,146,52)"/><text x="857.00" y="286.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:4) (1 samples, 0.32%)</title><rect x="862" y="260" width="4" height="15" fill="rgb(212,215,47)"/><text x="865.00" y="270.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:28) (6 samples, 1.89%)</title><rect x="858" y="244" width="23" height="15" fill="rgb(208,163,27)"/><text x="861.00" y="254.50">t..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (4 samples, 1.26%)</title><rect x="866" y="260" width="15" height="15" fill="rgb(231,168,36)"/><text x="869.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.26%)</title><rect x="866" y="276" width="15" height="15" fill="rgb(212,224,26)"/><text x="869.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (4 samples, 1.26%)</title><rect x="866" y="292" width="15" height="15" fill="rgb(206,198,27)"/><text x="869.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.32%)</title><rect x="877" y="308" width="4" height="15" fill="rgb(208,20,32)"/><text x="880.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (1 samples, 0.32%)</title><rect x="877" y="324" width="4" height="15" fill="rgb(248,45,22)"/><text x="880.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (1 samples, 0.32%)</title><rect x="877" y="340" width="4" height="15" fill="rgb(241,5,18)"/><text x="880.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1020) (1 samples, 0.32%)</title><rect x="877" y="356" width="4" height="15" fill="rgb(243,200,25)"/><text x="880.00" y="366.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:29) (1 samples, 0.32%)</title><rect x="881" y="244" width="3" height="15" fill="rgb(244,53,13)"/><text x="884.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.32%)</title><rect x="881" y="260" width="3" height="15" fill="rgb(227,109,23)"/><text x="884.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.32%)</title><rect x="881" y="276" width="3" height="15" fill="rgb(212,201,43)"/><text x="884.00" y="286.50"></text></g><g><title>0x7f03522ed134 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="884" y="260" width="4" height="15" fill="rgb(220,82,14)"/><text x="887.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.32%)</title><rect x="888" y="308" width="4" height="15" fill="rgb(234,168,47)"/><text x="891.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (2 samples, 0.63%)</title><rect x="888" y="260" width="7" height="15" fill="rgb(226,152,14)"/><text x="891.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.63%)</title><rect x="888" y="276" width="7" height="15" fill="rgb(205,202,37)"/><text x="891.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (2 samples, 0.63%)</title><rect x="888" y="292" width="7" height="15" fill="rgb(253,181,38)"/><text x="891.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.32%)</title><rect x="892" y="308" width="3" height="15" fill="rgb(234,109,50)"/><text x="895.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.32%)</title><rect x="892" y="324" width="3" height="15" fill="rgb(226,117,42)"/><text x="895.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.32%)</title><rect x="892" y="340" width="3" height="15" fill="rgb(215,115,48)"/><text x="895.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1117) (1 samples, 0.32%)</title><rect x="892" y="356" width="3" height="15" fill="rgb(217,120,9)"/><text x="895.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="895" y="260" width="4" height="15" fill="rgb(229,124,42)"/><text x="898.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="895" y="276" width="4" height="15" fill="rgb(238,50,22)"/><text x="898.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.32%)</title><rect x="895" y="292" width="4" height="15" fill="rgb(227,91,6)"/><text x="898.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.32%)</title><rect x="899" y="260" width="4" height="15" fill="rgb(244,22,33)"/><text x="902.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:397) (1 samples, 0.32%)</title><rect x="899" y="276" width="4" height="15" fill="rgb(216,58,38)"/><text x="902.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2662) (1 samples, 0.32%)</title><rect x="903" y="276" width="4" height="15" fill="rgb(240,167,15)"/><text x="906.00" y="286.50"></text></g><g><title>mapiter_fill_info (mapping.c:2355) (1 samples, 0.32%)</title><rect x="903" y="292" width="4" height="15" fill="rgb(246,109,12)"/><text x="906.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.63%)</title><rect x="903" y="260" width="7" height="15" fill="rgb(212,0,16)"/><text x="906.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.32%)</title><rect x="907" y="276" width="3" height="15" fill="rgb(248,86,23)"/><text x="910.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.32%)</title><rect x="907" y="292" width="3" height="15" fill="rgb(231,124,49)"/><text x="910.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="907" y="308" width="3" height="15" fill="rgb(246,40,9)"/><text x="910.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.32%)</title><rect x="907" y="324" width="3" height="15" fill="rgb(211,211,33)"/><text x="910.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.32%)</title><rect x="907" y="340" width="3" height="15" fill="rgb(214,66,20)"/><text x="910.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.32%)</title><rect x="907" y="356" width="3" height="15" fill="rgb(212,27,27)"/><text x="910.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.32%)</title><rect x="907" y="372" width="3" height="15" fill="rgb(249,28,30)"/><text x="910.00" y="382.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.32%)</title><rect x="910" y="260" width="4" height="15" fill="rgb(216,81,28)"/><text x="913.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1781) (1 samples, 0.32%)</title><rect x="910" y="276" width="4" height="15" fill="rgb(247,85,52)"/><text x="913.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:32) (9 samples, 2.84%)</title><rect x="884" y="244" width="34" height="15" fill="rgb(251,72,42)"/><text x="887.00" y="254.50">to..</text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.32%)</title><rect x="914" y="260" width="4" height="15" fill="rgb(242,219,51)"/><text x="917.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.32%)</title><rect x="914" y="276" width="4" height="15" fill="rgb(221,106,36)"/><text x="917.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:675) (1 samples, 0.32%)</title><rect x="914" y="292" width="4" height="15" fill="rgb(249,101,46)"/><text x="917.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.32%)</title><rect x="918" y="260" width="3" height="15" fill="rgb(219,132,19)"/><text x="921.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.32%)</title><rect x="918" y="276" width="3" height="15" fill="rgb(207,141,8)"/><text x="921.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.32%)</title><rect x="918" y="292" width="3" height="15" fill="rgb(227,82,16)"/><text x="921.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="918" y="308" width="3" height="15" fill="rgb(225,137,8)"/><text x="921.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.32%)</title><rect x="918" y="324" width="3" height="15" fill="rgb(228,137,28)"/><text x="921.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.32%)</title><rect x="918" y="340" width="3" height="15" fill="rgb(240,67,50)"/><text x="921.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.32%)</title><rect x="918" y="356" width="3" height="15" fill="rgb(205,113,12)"/><text x="921.00" y="366.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (20 samples, 6.31%)</title><rect x="851" y="228" width="74" height="15" fill="rgb(238,227,0)"/><text x="854.00" y="238.50">_common_..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (2 samples, 0.63%)</title><rect x="918" y="244" width="7" height="15" fill="rgb(225,150,48)"/><text x="921.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.32%)</title><rect x="921" y="260" width="4" height="15" fill="rgb(217,20,16)"/><text x="924.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2569) (1 samples, 0.32%)</title><rect x="921" y="276" width="4" height="15" fill="rgb(252,176,54)"/><text x="924.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (39 samples, 12.30%)</title><rect x="784" y="196" width="145" height="15" fill="rgb(232,121,39)"/><text x="787.00" y="206.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (24 samples, 7.57%)</title><rect x="840" y="212" width="89" height="15" fill="rgb(230,141,40)"/><text x="843.00" y="222.50">_run (mlpr..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.32%)</title><rect x="925" y="228" width="4" height="15" fill="rgb(226,103,29)"/><text x="928.00" y="238.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.32%)</title><rect x="925" y="244" width="4" height="15" fill="rgb(240,225,42)"/><text x="928.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.32%)</title><rect x="925" y="260" width="4" height="15" fill="rgb(207,81,24)"/><text x="928.00" y="270.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:287) (1 samples, 0.32%)</title><rect x="929" y="244" width="4" height="15" fill="rgb(241,19,18)"/><text x="932.00" y="254.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.32%)</title><rect x="929" y="260" width="4" height="15" fill="rgb(212,32,33)"/><text x="932.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.32%)</title><rect x="929" y="276" width="4" height="15" fill="rgb(220,144,38)"/><text x="932.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4428) (1 samples, 0.32%)</title><rect x="929" y="292" width="4" height="15" fill="rgb(249,54,37)"/><text x="932.00" y="302.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src:179) (2 samples, 0.63%)</title><rect x="929" y="228" width="7" height="15" fill="rgb(251,100,41)"/><text x="932.00" y="238.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.32%)</title><rect x="933" y="244" width="3" height="15" fill="rgb(227,144,51)"/><text x="936.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.32%)</title><rect x="933" y="260" width="3" height="15" fill="rgb(232,201,30)"/><text x="936.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.32%)</title><rect x="933" y="276" width="3" height="15" fill="rgb(242,111,47)"/><text x="936.00" y="286.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src:183) (1 samples, 0.32%)</title><rect x="936" y="228" width="4" height="15" fill="rgb(228,209,27)"/><text x="939.00" y="238.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src:188) (1 samples, 0.32%)</title><rect x="940" y="228" width="4" height="15" fill="rgb(242,88,15)"/><text x="943.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.32%)</title><rect x="940" y="244" width="4" height="15" fill="rgb(230,89,50)"/><text x="943.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1251) (1 samples, 0.32%)</title><rect x="940" y="260" width="4" height="15" fill="rgb(205,168,21)"/><text x="943.00" y="270.50"></text></g><g><title>PyArray_DIMS (ndarraytypes.h:1498) (1 samples, 0.32%)</title><rect x="940" y="276" width="4" height="15" fill="rgb(248,110,29)"/><text x="943.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.32%)</title><rect x="944" y="276" width="4" height="15" fill="rgb(216,61,29)"/><text x="947.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.32%)</title><rect x="948" y="292" width="3" height="15" fill="rgb(220,131,37)"/><text x="951.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.32%)</title><rect x="948" y="308" width="3" height="15" fill="rgb(246,66,4)"/><text x="951.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.32%)</title><rect x="948" y="324" width="3" height="15" fill="rgb(220,164,30)"/><text x="951.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.32%)</title><rect x="948" y="340" width="3" height="15" fill="rgb(254,72,20)"/><text x="951.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (3 samples, 0.95%)</title><rect x="951" y="308" width="11" height="15" fill="rgb(208,190,32)"/><text x="954.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (2 samples, 0.63%)</title><rect x="962" y="340" width="8" height="15" fill="rgb(244,149,36)"/><text x="965.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (3 samples, 0.95%)</title><rect x="962" y="324" width="12" height="15" fill="rgb(230,209,8)"/><text x="965.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.32%)</title><rect x="970" y="340" width="4" height="15" fill="rgb(223,196,46)"/><text x="973.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.32%)</title><rect x="970" y="356" width="4" height="15" fill="rgb(243,193,34)"/><text x="973.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.32%)</title><rect x="970" y="372" width="4" height="15" fill="rgb(218,167,23)"/><text x="973.00" y="382.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (1 samples, 0.32%)</title><rect x="970" y="388" width="4" height="15" fill="rgb(233,140,33)"/><text x="973.00" y="398.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.32%)</title><rect x="970" y="404" width="4" height="15" fill="rgb(239,158,46)"/><text x="973.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.32%)</title><rect x="970" y="420" width="4" height="15" fill="rgb(230,151,26)"/><text x="973.00" y="430.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4520) (4 samples, 1.26%)</title><rect x="962" y="308" width="15" height="15" fill="rgb(213,150,16)"/><text x="965.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.32%)</title><rect x="974" y="324" width="3" height="15" fill="rgb(211,98,32)"/><text x="977.00" y="334.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.32%)</title><rect x="974" y="340" width="3" height="15" fill="rgb(233,163,16)"/><text x="977.00" y="350.50"></text></g><g><title>setArrayFromSequence (ctors.c:519) (1 samples, 0.32%)</title><rect x="974" y="356" width="3" height="15" fill="rgb(229,102,35)"/><text x="977.00" y="366.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.32%)</title><rect x="974" y="372" width="3" height="15" fill="rgb(212,209,10)"/><text x="977.00" y="382.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (1 samples, 0.32%)</title><rect x="974" y="388" width="3" height="15" fill="rgb(230,179,19)"/><text x="977.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4550) (1 samples, 0.32%)</title><rect x="977" y="308" width="4" height="15" fill="rgb(214,142,46)"/><text x="980.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.32%)</title><rect x="981" y="308" width="4" height="15" fill="rgb(214,141,54)"/><text x="984.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.32%)</title><rect x="981" y="324" width="4" height="15" fill="rgb(209,193,36)"/><text x="984.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.32%)</title><rect x="981" y="340" width="4" height="15" fill="rgb(253,85,23)"/><text x="984.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.32%)</title><rect x="981" y="356" width="4" height="15" fill="rgb(252,47,17)"/><text x="984.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1466) (1 samples, 0.32%)</title><rect x="981" y="372" width="4" height="15" fill="rgb(234,208,38)"/><text x="984.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:24) (16 samples, 5.05%)</title><rect x="929" y="212" width="59" height="15" fill="rgb(206,88,8)"/><text x="932.00" y="222.50">_run (..</text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (12 samples, 3.79%)</title><rect x="944" y="228" width="44" height="15" fill="rgb(250,103,6)"/><text x="947.00" y="238.50">prod..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 3.79%)</title><rect x="944" y="244" width="44" height="15" fill="rgb(247,130,2)"/><text x="947.00" y="254.50">arra..</text></g><g><title>prod (numpy/core/fromnumeric.py:2911) (12 samples, 3.79%)</title><rect x="944" y="260" width="44" height="15" fill="rgb(222,123,37)"/><text x="947.00" y="270.50">prod..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (11 samples, 3.47%)</title><rect x="948" y="276" width="40" height="15" fill="rgb(239,13,12)"/><text x="951.00" y="286.50">_wr..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 3.15%)</title><rect x="951" y="292" width="37" height="15" fill="rgb(222,181,31)"/><text x="954.00" y="302.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4683) (1 samples, 0.32%)</title><rect x="985" y="308" width="3" height="15" fill="rgb(206,141,12)"/><text x="988.00" y="318.50"></text></g><g><title>0x7f03522e2e54 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="985" y="324" width="3" height="15" fill="rgb(214,41,26)"/><text x="988.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 5.36%)</title><rect x="929" y="196" width="63" height="15" fill="rgb(244,1,9)"/><text x="932.00" y="206.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:25) (1 samples, 0.32%)</title><rect x="988" y="212" width="4" height="15" fill="rgb(215,96,43)"/><text x="991.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.32%)</title><rect x="988" y="228" width="4" height="15" fill="rgb(221,64,48)"/><text x="991.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.32%)</title><rect x="988" y="244" width="4" height="15" fill="rgb(221,157,36)"/><text x="991.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.32%)</title><rect x="988" y="260" width="4" height="15" fill="rgb(250,79,47)"/><text x="991.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.32%)</title><rect x="988" y="276" width="4" height="15" fill="rgb(209,40,18)"/><text x="991.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.32%)</title><rect x="988" y="292" width="4" height="15" fill="rgb(232,133,42)"/><text x="991.00" y="302.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3248) (1 samples, 0.32%)</title><rect x="992" y="276" width="4" height="15" fill="rgb(214,137,10)"/><text x="995.00" y="286.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3256) (1 samples, 0.32%)</title><rect x="996" y="276" width="4" height="15" fill="rgb(251,136,17)"/><text x="999.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:135) (1 samples, 0.32%)</title><rect x="1003" y="292" width="4" height="15" fill="rgb(210,53,10)"/><text x="1006.00" y="302.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.32%)</title><rect x="1003" y="308" width="4" height="15" fill="rgb(209,178,34)"/><text x="1006.00" y="318.50"></text></g><g><title>_mean (numpy/core/_methods.py:138) (2 samples, 0.63%)</title><rect x="1007" y="292" width="8" height="15" fill="rgb(209,121,26)"/><text x="1010.00" y="302.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py:57) (1 samples, 0.32%)</title><rect x="1011" y="308" width="4" height="15" fill="rgb(227,151,39)"/><text x="1014.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.32%)</title><rect x="1015" y="388" width="3" height="15" fill="rgb(209,97,36)"/><text x="1018.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (8 samples, 2.52%)</title><rect x="992" y="196" width="30" height="15" fill="rgb(235,5,14)"/><text x="995.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 2.52%)</title><rect x="992" y="212" width="30" height="15" fill="rgb(219,103,4)"/><text x="995.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py:29) (8 samples, 2.52%)</title><rect x="992" y="228" width="30" height="15" fill="rgb(228,134,13)"/><text x="995.00" y="238.50">_r..</text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (8 samples, 2.52%)</title><rect x="992" y="244" width="30" height="15" fill="rgb(221,101,39)"/><text x="995.00" y="254.50">me..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 2.52%)</title><rect x="992" y="260" width="30" height="15" fill="rgb(218,11,51)"/><text x="995.00" y="270.50">ar..</text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (6 samples, 1.89%)</title><rect x="1000" y="276" width="22" height="15" fill="rgb(249,63,18)"/><text x="1003.00" y="286.50">m..</text></g><g><title>_mean (numpy/core/_methods.py:151) (2 samples, 0.63%)</title><rect x="1015" y="292" width="7" height="15" fill="rgb(253,167,40)"/><text x="1018.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.63%)</title><rect x="1015" y="308" width="7" height="15" fill="rgb(254,199,19)"/><text x="1018.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.63%)</title><rect x="1015" y="324" width="7" height="15" fill="rgb(250,32,16)"/><text x="1018.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.63%)</title><rect x="1015" y="340" width="7" height="15" fill="rgb(244,168,40)"/><text x="1018.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.63%)</title><rect x="1015" y="356" width="7" height="15" fill="rgb(246,104,6)"/><text x="1018.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.63%)</title><rect x="1015" y="372" width="7" height="15" fill="rgb(238,189,34)"/><text x="1018.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.32%)</title><rect x="1018" y="388" width="4" height="15" fill="rgb(242,138,33)"/><text x="1021.00" y="398.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2708) (1 samples, 0.32%)</title><rect x="1022" y="244" width="4" height="15" fill="rgb(247,198,23)"/><text x="1025.00" y="254.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2710) (1 samples, 0.32%)</title><rect x="1026" y="244" width="3" height="15" fill="rgb(229,101,32)"/><text x="1029.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.32%)</title><rect x="1026" y="260" width="3" height="15" fill="rgb(228,223,45)"/><text x="1029.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.32%)</title><rect x="1026" y="276" width="3" height="15" fill="rgb(206,144,25)"/><text x="1029.00" y="286.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2729) (1 samples, 0.32%)</title><rect x="1029" y="244" width="4" height="15" fill="rgb(231,69,43)"/><text x="1032.00" y="254.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (1 samples, 0.32%)</title><rect x="1029" y="260" width="4" height="15" fill="rgb(248,88,25)"/><text x="1032.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.32%)</title><rect x="1029" y="276" width="4" height="15" fill="rgb(221,172,6)"/><text x="1032.00" y="286.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2756) (1 samples, 0.32%)</title><rect x="1033" y="244" width="4" height="15" fill="rgb(254,24,37)"/><text x="1036.00" y="254.50"></text></g><g><title>callable (scipy/_lib/six.py:131) (1 samples, 0.32%)</title><rect x="1033" y="260" width="4" height="15" fill="rgb(223,124,3)"/><text x="1036.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (scipy/_lib/six.py:131) (1 samples, 0.32%)</title><rect x="1033" y="276" width="4" height="15" fill="rgb(214,37,21)"/><text x="1036.00" y="286.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2771) (1 samples, 0.32%)</title><rect x="1037" y="244" width="4" height="15" fill="rgb(212,87,46)"/><text x="1040.00" y="254.50"></text></g><g><title>_select_weighted_metric (scipy/spatial/distance.py:1720) (1 samples, 0.32%)</title><rect x="1037" y="260" width="4" height="15" fill="rgb(253,19,13)"/><text x="1040.00" y="270.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:248) (1 samples, 0.32%)</title><rect x="1041" y="260" width="3" height="15" fill="rgb(224,110,23)"/><text x="1044.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.32%)</title><rect x="1041" y="276" width="3" height="15" fill="rgb(212,151,40)"/><text x="1044.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (1 samples, 0.32%)</title><rect x="1041" y="292" width="3" height="15" fill="rgb(233,113,39)"/><text x="1044.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1694) (1 samples, 0.32%)</title><rect x="1041" y="308" width="3" height="15" fill="rgb(217,66,30)"/><text x="1044.00" y="318.50"></text></g><g><title>0x7f035239b949 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1041" y="324" width="3" height="15" fill="rgb(246,53,1)"/><text x="1044.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1505) (1 samples, 0.32%)</title><rect x="1044" y="356" width="4" height="15" fill="rgb(253,181,16)"/><text x="1047.00" y="366.50"></text></g><g><title>_check_for_commastring (descriptor.c:181) (1 samples, 0.32%)</title><rect x="1044" y="372" width="4" height="15" fill="rgb(240,98,40)"/><text x="1047.00" y="382.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.63%)</title><rect x="1044" y="308" width="8" height="15" fill="rgb(249,126,2)"/><text x="1047.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (2 samples, 0.63%)</title><rect x="1044" y="324" width="8" height="15" fill="rgb(242,80,37)"/><text x="1047.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (2 samples, 0.63%)</title><rect x="1044" y="340" width="8" height="15" fill="rgb(238,105,18)"/><text x="1047.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1668) (1 samples, 0.32%)</title><rect x="1048" y="356" width="4" height="15" fill="rgb(235,50,4)"/><text x="1051.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.32%)</title><rect x="1052" y="388" width="3" height="15" fill="rgb(224,132,28)"/><text x="1055.00" y="398.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.32%)</title><rect x="1052" y="404" width="3" height="15" fill="rgb(249,43,45)"/><text x="1055.00" y="414.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.32%)</title><rect x="1055" y="388" width="4" height="15" fill="rgb(205,93,42)"/><text x="1058.00" y="398.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.32%)</title><rect x="1059" y="388" width="4" height="15" fill="rgb(208,182,48)"/><text x="1062.00" y="398.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:250) (6 samples, 1.89%)</title><rect x="1044" y="260" width="23" height="15" fill="rgb(222,25,41)"/><text x="1047.00" y="270.50">_..</text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (6 samples, 1.89%)</title><rect x="1044" y="276" width="23" height="15" fill="rgb(247,22,47)"/><text x="1047.00" y="286.50">_..</text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (6 samples, 1.89%)</title><rect x="1044" y="292" width="23" height="15" fill="rgb(245,198,44)"/><text x="1047.00" y="302.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (4 samples, 1.26%)</title><rect x="1052" y="308" width="15" height="15" fill="rgb(209,136,16)"/><text x="1055.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (4 samples, 1.26%)</title><rect x="1052" y="324" width="15" height="15" fill="rgb(247,138,21)"/><text x="1055.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (4 samples, 1.26%)</title><rect x="1052" y="340" width="15" height="15" fill="rgb(232,47,44)"/><text x="1055.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (4 samples, 1.26%)</title><rect x="1052" y="356" width="15" height="15" fill="rgb(227,206,38)"/><text x="1055.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 1.26%)</title><rect x="1052" y="372" width="15" height="15" fill="rgb(247,198,49)"/><text x="1055.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.32%)</title><rect x="1063" y="388" width="4" height="15" fill="rgb(206,178,40)"/><text x="1066.00" y="398.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.32%)</title><rect x="1063" y="404" width="4" height="15" fill="rgb(228,187,13)"/><text x="1066.00" y="414.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.32%)</title><rect x="1063" y="420" width="4" height="15" fill="rgb(215,166,24)"/><text x="1066.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.32%)</title><rect x="1067" y="308" width="3" height="15" fill="rgb(253,0,53)"/><text x="1070.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.32%)</title><rect x="1067" y="324" width="3" height="15" fill="rgb(222,34,26)"/><text x="1070.00" y="334.50"></text></g><g><title>0x7f03523aadf0 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1067" y="340" width="3" height="15" fill="rgb(254,80,30)"/><text x="1070.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.32%)</title><rect x="1070" y="388" width="4" height="15" fill="rgb(216,143,54)"/><text x="1073.00" y="398.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.32%)</title><rect x="1070" y="404" width="4" height="15" fill="rgb(219,137,14)"/><text x="1073.00" y="414.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.32%)</title><rect x="1074" y="388" width="4" height="15" fill="rgb(222,208,17)"/><text x="1077.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="1074" y="404" width="4" height="15" fill="rgb(242,188,47)"/><text x="1077.00" y="414.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:251) (4 samples, 1.26%)</title><rect x="1067" y="260" width="15" height="15" fill="rgb(208,225,48)"/><text x="1070.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (4 samples, 1.26%)</title><rect x="1067" y="276" width="15" height="15" fill="rgb(206,90,5)"/><text x="1070.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (4 samples, 1.26%)</title><rect x="1067" y="292" width="15" height="15" fill="rgb(219,214,38)"/><text x="1070.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 0.95%)</title><rect x="1070" y="308" width="12" height="15" fill="rgb(207,158,6)"/><text x="1073.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 0.95%)</title><rect x="1070" y="324" width="12" height="15" fill="rgb(208,1,51)"/><text x="1073.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (3 samples, 0.95%)</title><rect x="1070" y="340" width="12" height="15" fill="rgb(224,14,13)"/><text x="1073.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (3 samples, 0.95%)</title><rect x="1070" y="356" width="12" height="15" fill="rgb(248,73,15)"/><text x="1073.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.95%)</title><rect x="1070" y="372" width="12" height="15" fill="rgb(254,29,48)"/><text x="1073.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.32%)</title><rect x="1078" y="388" width="4" height="15" fill="rgb(238,128,50)"/><text x="1081.00" y="398.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.32%)</title><rect x="1078" y="404" width="4" height="15" fill="rgb(236,44,27)"/><text x="1081.00" y="414.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1078" y="420" width="4" height="15" fill="rgb(221,59,28)"/><text x="1081.00" y="430.50"></text></g><g><title>0x7f03522ecd50 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1078" y="436" width="4" height="15" fill="rgb(226,190,54)"/><text x="1081.00" y="446.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2776) (12 samples, 3.79%)</title><rect x="1041" y="244" width="44" height="15" fill="rgb(233,181,41)"/><text x="1044.00" y="254.50">cdis..</text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:254) (1 samples, 0.32%)</title><rect x="1082" y="260" width="3" height="15" fill="rgb(244,85,34)"/><text x="1085.00" y="270.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2778) (1 samples, 0.32%)</title><rect x="1085" y="244" width="4" height="15" fill="rgb(236,203,10)"/><text x="1088.00" y="254.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2779) (2 samples, 0.63%)</title><rect x="1089" y="244" width="7" height="15" fill="rgb(244,56,28)"/><text x="1092.00" y="254.50"></text></g><g><title>0x7f032f4f298a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1096" y="260" width="4" height="15" fill="rgb(208,137,13)"/><text x="1099.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (87 samples, 27.44%)</title><rect x="780" y="180" width="324" height="15" fill="rgb(235,107,14)"/><text x="783.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (22 samples, 6.94%)</title><rect x="1022" y="196" width="82" height="15" fill="rgb(233,48,28)"/><text x="1025.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (22 samples, 6.94%)</title><rect x="1022" y="212" width="82" height="15" fill="rgb(235,54,26)"/><text x="1025.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:27) (22 samples, 6.94%)</title><rect x="1022" y="228" width="82" height="15" fill="rgb(215,89,7)"/><text x="1025.00" y="238.50">_run (mlp..</text></g><g><title>cdist (scipy/spatial/distance.py:2780) (2 samples, 0.63%)</title><rect x="1096" y="244" width="8" height="15" fill="rgb(220,49,11)"/><text x="1099.00" y="254.50"></text></g><g><title>0x7f032f4f2a5a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1100" y="260" width="4" height="15" fill="rgb(244,123,13)"/><text x="1103.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.95%)</title><rect x="1104" y="180" width="11" height="15" fill="rgb(234,75,14)"/><text x="1107.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:61) (103 samples, 32.49%)</title><rect x="743" y="52" width="383" height="15" fill="rgb(254,46,7)"/><text x="746.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg..</text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:60) (103 samples, 32.49%)</title><rect x="743" y="68" width="383" height="15" fill="rgb(213,25,4)"/><text x="746.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_b..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:37) (102 samples, 32.18%)</title><rect x="747" y="84" width="379" height="15" fill="rgb(227,62,35)"/><text x="750.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:31) (102 samples, 32.18%)</title><rect x="747" y="100" width="379" height="15" fill="rgb(239,18,7)"/><text x="750.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (102 samples, 32.18%)</title><rect x="747" y="116" width="379" height="15" fill="rgb(207,187,7)"/><text x="750.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (102 samples, 32.18%)</title><rect x="747" y="132" width="379" height="15" fill="rgb(226,212,18)"/><text x="750.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (101 samples, 31.86%)</title><rect x="750" y="148" width="376" height="15" fill="rgb(241,138,7)"/><text x="753.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (100 samples, 31.55%)</title><rect x="754" y="164" width="372" height="15" fill="rgb(225,108,14)"/><text x="757.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.95%)</title><rect x="1115" y="180" width="11" height="15" fill="rgb(224,84,8)"/><text x="1118.00" y="190.50"></text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:36) (1 samples, 0.32%)</title><rect x="1126" y="84" width="4" height="15" fill="rgb(230,10,32)"/><text x="1129.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.32%)</title><rect x="1126" y="100" width="4" height="15" fill="rgb(245,187,45)"/><text x="1129.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.32%)</title><rect x="1126" y="116" width="4" height="15" fill="rgb(213,199,42)"/><text x="1129.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.32%)</title><rect x="1126" y="132" width="4" height="15" fill="rgb(207,28,45)"/><text x="1129.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.32%)</title><rect x="1126" y="148" width="4" height="15" fill="rgb(236,84,13)"/><text x="1129.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.32%)</title><rect x="1126" y="164" width="4" height="15" fill="rgb(224,60,41)"/><text x="1129.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:252) (1 samples, 0.32%)</title><rect x="1126" y="180" width="4" height="15" fill="rgb(219,167,7)"/><text x="1129.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:196) (1 samples, 0.32%)</title><rect x="1126" y="196" width="4" height="15" fill="rgb(210,129,42)"/><text x="1129.00" y="206.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.32%)</title><rect x="1126" y="212" width="4" height="15" fill="rgb(219,67,36)"/><text x="1129.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.32%)</title><rect x="1126" y="228" width="4" height="15" fill="rgb(248,169,54)"/><text x="1129.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.32%)</title><rect x="1126" y="244" width="4" height="15" fill="rgb(224,54,16)"/><text x="1129.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.32%)</title><rect x="1126" y="260" width="4" height="15" fill="rgb(213,48,6)"/><text x="1129.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.32%)</title><rect x="1126" y="276" width="4" height="15" fill="rgb(228,126,27)"/><text x="1129.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.32%)</title><rect x="1126" y="292" width="4" height="15" fill="rgb(234,152,32)"/><text x="1129.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:448) (1 samples, 0.32%)</title><rect x="1126" y="308" width="4" height="15" fill="rgb(215,196,41)"/><text x="1129.00" y="318.50"></text></g><g><title>0x7f03406167c9 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1126" y="324" width="4" height="15" fill="rgb(212,1,28)"/><text x="1129.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1126" y="340" width="4" height="15" fill="rgb(242,45,31)"/><text x="1129.00" y="350.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;float&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1126" y="356" width="4" height="15" fill="rgb(229,98,12)"/><text x="1129.00" y="366.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1126" y="372" width="4" height="15" fill="rgb(218,202,11)"/><text x="1129.00" y="382.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="1126" y="388" width="4" height="15" fill="rgb(237,114,41)"/><text x="1129.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="1130" y="116" width="4" height="15" fill="rgb(239,61,54)"/><text x="1133.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.32%)</title><rect x="1130" y="132" width="4" height="15" fill="rgb(211,131,51)"/><text x="1133.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.32%)</title><rect x="1137" y="148" width="4" height="15" fill="rgb(253,133,2)"/><text x="1140.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.32%)</title><rect x="1141" y="196" width="4" height="15" fill="rgb(237,13,11)"/><text x="1144.00" y="206.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1149" y="244" width="3" height="15" fill="rgb(242,100,0)"/><text x="1152.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="1149" y="260" width="3" height="15" fill="rgb(254,78,8)"/><text x="1152.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.95%)</title><rect x="1145" y="196" width="11" height="15" fill="rgb(218,167,38)"/><text x="1148.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.95%)</title><rect x="1145" y="212" width="11" height="15" fill="rgb(215,2,43)"/><text x="1148.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="1149" y="228" width="7" height="15" fill="rgb(214,136,31)"/><text x="1152.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1152" y="244" width="4" height="15" fill="rgb(213,5,39)"/><text x="1155.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1152" y="260" width="4" height="15" fill="rgb(214,2,32)"/><text x="1155.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1152" y="276" width="4" height="15" fill="rgb(213,124,34)"/><text x="1155.00" y="286.50"></text></g><g><title>0x7f03122ffff9 (?) (1 samples, 0.32%)</title><rect x="1156" y="212" width="4" height="15" fill="rgb(222,37,23)"/><text x="1159.00" y="222.50"></text></g><g><title>0x7f03122faef6 (?) (1 samples, 0.32%)</title><rect x="1156" y="228" width="4" height="15" fill="rgb(229,142,46)"/><text x="1159.00" y="238.50"></text></g><g><title>0x7f03122ef962 (?) (1 samples, 0.32%)</title><rect x="1156" y="244" width="4" height="15" fill="rgb(229,54,27)"/><text x="1159.00" y="254.50"></text></g><g><title>0x7f03123237a7 (?) (1 samples, 0.32%)</title><rect x="1156" y="260" width="4" height="15" fill="rgb(240,26,42)"/><text x="1159.00" y="270.50"></text></g><g><title>0x7f0312323379 (?) (1 samples, 0.32%)</title><rect x="1156" y="276" width="4" height="15" fill="rgb(217,139,8)"/><text x="1159.00" y="286.50"></text></g><g><title>0x7f03127818b8 (?) (1 samples, 0.32%)</title><rect x="1156" y="292" width="4" height="15" fill="rgb(242,100,6)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7f031277fc7f (?) (1 samples, 0.32%)</title><rect x="1156" y="308" width="4" height="15" fill="rgb(207,44,19)"/><text x="1159.00" y="318.50"></text></g><g><title>0x7f031279299c (?) (1 samples, 0.32%)</title><rect x="1156" y="324" width="4" height="15" fill="rgb(228,216,30)"/><text x="1159.00" y="334.50"></text></g><g><title>0x7f031244ae79 (?) (1 samples, 0.32%)</title><rect x="1156" y="340" width="4" height="15" fill="rgb(245,69,7)"/><text x="1159.00" y="350.50"></text></g><g><title>0x7f0312448ffc (?) (1 samples, 0.32%)</title><rect x="1156" y="356" width="4" height="15" fill="rgb(254,32,26)"/><text x="1159.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.32%)</title><rect x="1160" y="260" width="3" height="15" fill="rgb(208,29,28)"/><text x="1163.00" y="270.50"></text></g><g><title>onnxruntime::Flatten::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1167" y="340" width="4" height="15" fill="rgb(213,212,6)"/><text x="1170.00" y="350.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1171" y="340" width="4" height="15" fill="rgb(248,112,4)"/><text x="1174.00" y="350.50"></text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1171" y="356" width="4" height="15" fill="rgb(227,15,6)"/><text x="1174.00" y="366.50"></text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1175" y="340" width="3" height="15" fill="rgb(231,88,49)"/><text x="1178.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::EuclideanWithEigen&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1175" y="356" width="3" height="15" fill="rgb(222,79,6)"/><text x="1178.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1175" y="372" width="3" height="15" fill="rgb(237,40,31)"/><text x="1178.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1175" y="388" width="3" height="15" fill="rgb(217,140,43)"/><text x="1178.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), onnxruntime::contrib::CDistOneBlock&lt;float, onnxruntime::EuclideanWithEigen&lt;float&gt; &gt; &gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1175" y="404" width="3" height="15" fill="rgb(225,201,9)"/><text x="1178.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.58%)</title><rect x="1163" y="260" width="19" height="15" fill="rgb(208,183,37)"/><text x="1166.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="1167" y="276" width="15" height="15" fill="rgb(248,140,9)"/><text x="1170.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="1167" y="292" width="15" height="15" fill="rgb(238,217,8)"/><text x="1170.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="1167" y="308" width="15" height="15" fill="rgb(215,229,4)"/><text x="1170.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.26%)</title><rect x="1167" y="324" width="15" height="15" fill="rgb(205,63,1)"/><text x="1170.00" y="334.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="340" width="4" height="15" fill="rgb(241,198,54)"/><text x="1181.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="356" width="4" height="15" fill="rgb(206,152,48)"/><text x="1181.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="372" width="4" height="15" fill="rgb(252,81,33)"/><text x="1181.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="388" width="4" height="15" fill="rgb(231,218,25)"/><text x="1181.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="404" width="4" height="15" fill="rgb(248,69,34)"/><text x="1181.00" y="414.50"></text></g><g><title>all (317 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,212,14)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:68) (17 samples, 5.36%)</title><rect x="1126" y="52" width="64" height="15" fill="rgb(226,42,1)"/><text x="1129.00" y="62.50">&lt;module..</text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:67) (17 samples, 5.36%)</title><rect x="1126" y="68" width="64" height="15" fill="rgb(226,73,48)"/><text x="1129.00" y="78.50">profile..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:37) (16 samples, 5.05%)</title><rect x="1130" y="84" width="60" height="15" fill="rgb(232,99,45)"/><text x="1133.00" y="94.50">setup_..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:31) (16 samples, 5.05%)</title><rect x="1130" y="100" width="60" height="15" fill="rgb(254,74,14)"/><text x="1133.00" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (15 samples, 4.73%)</title><rect x="1134" y="116" width="56" height="15" fill="rgb(254,228,15)"/><text x="1137.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (15 samples, 4.73%)</title><rect x="1134" y="132" width="56" height="15" fill="rgb(248,164,38)"/><text x="1137.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (13 samples, 4.10%)</title><rect x="1141" y="148" width="49" height="15" fill="rgb(216,173,45)"/><text x="1144.00" y="158.50">run ..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (13 samples, 4.10%)</title><rect x="1141" y="164" width="49" height="15" fill="rgb(216,193,8)"/><text x="1144.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (13 samples, 4.10%)</title><rect x="1141" y="180" width="49" height="15" fill="rgb(205,121,32)"/><text x="1144.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py:136) (9 samples, 2.84%)</title><rect x="1156" y="196" width="34" height="15" fill="rgb(238,133,10)"/><text x="1159.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.52%)</title><rect x="1160" y="212" width="30" height="15" fill="rgb(253,80,33)"/><text x="1163.00" y="222.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.52%)</title><rect x="1160" y="228" width="30" height="15" fill="rgb(215,170,47)"/><text x="1163.00" y="238.50">vo..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.52%)</title><rect x="1160" y="244" width="30" height="15" fill="rgb(249,165,49)"/><text x="1163.00" y="254.50">on..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.63%)</title><rect x="1182" y="260" width="8" height="15" fill="rgb(240,4,14)"/><text x="1185.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(254,212,29)"/><text x="1189.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(248,101,9)"/><text x="1189.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(205,209,41)"/><text x="1189.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(210,168,13)"/><text x="1189.00" y="334.50"></text></g></g></svg>