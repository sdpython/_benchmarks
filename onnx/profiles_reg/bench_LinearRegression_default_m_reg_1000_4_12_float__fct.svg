<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1638" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1621.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1621.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(254,176,18)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(241,32,11)"/><text x="13.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(213,177,22)"/><text x="13.00" y="942.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="16" y="932" width="13" height="15" fill="rgb(206,83,2)"/><text x="19.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="22" y="948" width="7" height="15" fill="rgb(207,47,51)"/><text x="25.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="22" y="964" width="7" height="15" fill="rgb(244,70,42)"/><text x="25.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="22" y="980" width="7" height="15" fill="rgb(216,136,6)"/><text x="25.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="22" y="996" width="7" height="15" fill="rgb(222,55,34)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (4 samples, 2.16%)</title><rect x="10" y="868" width="25" height="15" fill="rgb(216,8,35)"/><text x="13.00" y="878.50">&lt;..</text></g><g><title>activate (pkg_resources/__init__.py) (4 samples, 2.16%)</title><rect x="10" y="884" width="25" height="15" fill="rgb(222,184,39)"/><text x="13.00" y="894.50">a..</text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 1.62%)</title><rect x="16" y="900" width="19" height="15" fill="rgb(248,104,26)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 1.62%)</title><rect x="16" y="916" width="19" height="15" fill="rgb(245,4,22)"/><text x="19.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.54%)</title><rect x="29" y="932" width="6" height="15" fill="rgb(206,204,10)"/><text x="32.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.54%)</title><rect x="29" y="948" width="6" height="15" fill="rgb(235,186,23)"/><text x="32.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="35" y="932" width="6" height="15" fill="rgb(212,127,21)"/><text x="38.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="35" y="948" width="6" height="15" fill="rgb(244,70,36)"/><text x="38.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.54%)</title><rect x="35" y="964" width="6" height="15" fill="rgb(225,107,41)"/><text x="38.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.54%)</title><rect x="35" y="980" width="6" height="15" fill="rgb(239,11,54)"/><text x="38.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 3.24%)</title><rect x="10" y="836" width="38" height="15" fill="rgb(230,159,30)"/><text x="13.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 3.24%)</title><rect x="10" y="852" width="38" height="15" fill="rgb(209,45,12)"/><text x="13.00" y="862.50">_in..</text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 1.08%)</title><rect x="35" y="868" width="13" height="15" fill="rgb(234,206,41)"/><text x="38.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 1.08%)</title><rect x="35" y="884" width="13" height="15" fill="rgb(241,77,1)"/><text x="38.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 1.08%)</title><rect x="35" y="900" width="13" height="15" fill="rgb(241,128,53)"/><text x="38.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 1.08%)</title><rect x="35" y="916" width="13" height="15" fill="rgb(230,46,11)"/><text x="38.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="41" y="932" width="7" height="15" fill="rgb(216,208,48)"/><text x="44.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="41" y="948" width="7" height="15" fill="rgb(252,175,18)"/><text x="44.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="41" y="964" width="7" height="15" fill="rgb(252,118,51)"/><text x="44.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.54%)</title><rect x="41" y="980" width="7" height="15" fill="rgb(246,152,8)"/><text x="44.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.54%)</title><rect x="41" y="996" width="7" height="15" fill="rgb(234,216,49)"/><text x="44.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.54%)</title><rect x="48" y="916" width="6" height="15" fill="rgb(223,51,12)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="932" width="6" height="15" fill="rgb(217,222,1)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="948" width="6" height="15" fill="rgb(251,13,35)"/><text x="51.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="964" width="6" height="15" fill="rgb(246,221,51)"/><text x="51.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="980" width="6" height="15" fill="rgb(242,112,0)"/><text x="51.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.54%)</title><rect x="48" y="996" width="6" height="15" fill="rgb(224,22,25)"/><text x="51.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="1012" width="6" height="15" fill="rgb(209,52,19)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="1028" width="6" height="15" fill="rgb(231,120,29)"/><text x="51.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="1044" width="6" height="15" fill="rgb(207,139,25)"/><text x="51.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="48" y="1060" width="6" height="15" fill="rgb(226,207,17)"/><text x="51.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="48" y="1076" width="6" height="15" fill="rgb(230,229,29)"/><text x="51.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1092" width="6" height="15" fill="rgb(225,116,27)"/><text x="51.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1108" width="6" height="15" fill="rgb(222,165,44)"/><text x="51.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1124" width="6" height="15" fill="rgb(229,123,0)"/><text x="51.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1140" width="6" height="15" fill="rgb(243,81,51)"/><text x="51.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1156" width="6" height="15" fill="rgb(236,143,23)"/><text x="51.00" y="1166.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1172" width="6" height="15" fill="rgb(211,109,46)"/><text x="51.00" y="1182.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1188" width="6" height="15" fill="rgb(219,84,50)"/><text x="51.00" y="1198.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1204" width="6" height="15" fill="rgb(222,54,3)"/><text x="51.00" y="1214.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1220" width="6" height="15" fill="rgb(224,145,40)"/><text x="51.00" y="1230.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.54%)</title><rect x="48" y="1236" width="6" height="15" fill="rgb(247,218,37)"/><text x="51.00" y="1246.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 4.32%)</title><rect x="10" y="292" width="51" height="15" fill="rgb(218,145,2)"/><text x="13.00" y="302.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="308" width="51" height="15" fill="rgb(228,41,38)"/><text x="13.00" y="318.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="324" width="51" height="15" fill="rgb(224,122,11)"/><text x="13.00" y="334.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="340" width="51" height="15" fill="rgb(238,18,33)"/><text x="13.00" y="350.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 4.32%)</title><rect x="10" y="356" width="51" height="15" fill="rgb(250,80,21)"/><text x="13.00" y="366.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="372" width="51" height="15" fill="rgb(225,64,21)"/><text x="13.00" y="382.50">_call..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 4.32%)</title><rect x="10" y="388" width="51" height="15" fill="rgb(238,72,54)"/><text x="13.00" y="398.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="404" width="51" height="15" fill="rgb(214,177,48)"/><text x="13.00" y="414.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="420" width="51" height="15" fill="rgb(245,91,3)"/><text x="13.00" y="430.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="436" width="51" height="15" fill="rgb(219,209,20)"/><text x="13.00" y="446.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 4.32%)</title><rect x="10" y="452" width="51" height="15" fill="rgb(216,202,8)"/><text x="13.00" y="462.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="468" width="51" height="15" fill="rgb(238,64,1)"/><text x="13.00" y="478.50">_call..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 4.32%)</title><rect x="10" y="484" width="51" height="15" fill="rgb(206,164,14)"/><text x="13.00" y="494.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="500" width="51" height="15" fill="rgb(229,204,44)"/><text x="13.00" y="510.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="516" width="51" height="15" fill="rgb(229,56,24)"/><text x="13.00" y="526.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="532" width="51" height="15" fill="rgb(239,211,0)"/><text x="13.00" y="542.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 4.32%)</title><rect x="10" y="548" width="51" height="15" fill="rgb(209,57,12)"/><text x="13.00" y="558.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="564" width="51" height="15" fill="rgb(210,202,13)"/><text x="13.00" y="574.50">_call..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 4.32%)</title><rect x="10" y="580" width="51" height="15" fill="rgb(208,113,47)"/><text x="13.00" y="590.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="596" width="51" height="15" fill="rgb(245,107,37)"/><text x="13.00" y="606.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="612" width="51" height="15" fill="rgb(207,112,3)"/><text x="13.00" y="622.50">_find..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="628" width="51" height="15" fill="rgb(209,202,52)"/><text x="13.00" y="638.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="644" width="51" height="15" fill="rgb(243,219,35)"/><text x="13.00" y="654.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="660" width="51" height="15" fill="rgb(223,140,26)"/><text x="13.00" y="670.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="676" width="51" height="15" fill="rgb(250,33,2)"/><text x="13.00" y="686.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 4.32%)</title><rect x="10" y="692" width="51" height="15" fill="rgb(227,135,49)"/><text x="13.00" y="702.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="708" width="51" height="15" fill="rgb(233,8,1)"/><text x="13.00" y="718.50">_call..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 4.32%)</title><rect x="10" y="724" width="51" height="15" fill="rgb(206,112,36)"/><text x="13.00" y="734.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="740" width="51" height="15" fill="rgb(246,61,13)"/><text x="13.00" y="750.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="756" width="51" height="15" fill="rgb(219,40,40)"/><text x="13.00" y="766.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="772" width="51" height="15" fill="rgb(213,23,39)"/><text x="13.00" y="782.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 4.32%)</title><rect x="10" y="788" width="51" height="15" fill="rgb(230,219,10)"/><text x="13.00" y="798.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="10" y="804" width="51" height="15" fill="rgb(219,170,46)"/><text x="13.00" y="814.50">_call..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 4.32%)</title><rect x="10" y="820" width="51" height="15" fill="rgb(215,120,9)"/><text x="13.00" y="830.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="48" y="836" width="13" height="15" fill="rgb(227,124,17)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="48" y="852" width="13" height="15" fill="rgb(238,132,21)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="48" y="868" width="13" height="15" fill="rgb(233,190,40)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="48" y="884" width="13" height="15" fill="rgb(254,28,41)"/><text x="51.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="48" y="900" width="13" height="15" fill="rgb(205,157,23)"/><text x="51.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.54%)</title><rect x="54" y="916" width="7" height="15" fill="rgb(221,229,25)"/><text x="57.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.54%)</title><rect x="54" y="932" width="7" height="15" fill="rgb(208,211,44)"/><text x="57.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.54%)</title><rect x="54" y="948" width="7" height="15" fill="rgb(231,13,25)"/><text x="57.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.54%)</title><rect x="54" y="964" width="7" height="15" fill="rgb(222,16,35)"/><text x="57.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="54" y="980" width="7" height="15" fill="rgb(220,117,48)"/><text x="57.00" y="990.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.54%)</title><rect x="54" y="996" width="7" height="15" fill="rgb(228,0,52)"/><text x="57.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="54" y="1012" width="7" height="15" fill="rgb(240,81,15)"/><text x="57.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="54" y="1028" width="7" height="15" fill="rgb(233,159,6)"/><text x="57.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="54" y="1044" width="7" height="15" fill="rgb(212,104,6)"/><text x="57.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="54" y="1060" width="7" height="15" fill="rgb(239,16,9)"/><text x="57.00" y="1070.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.54%)</title><rect x="54" y="1076" width="7" height="15" fill="rgb(223,172,21)"/><text x="57.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.86%)</title><rect x="10" y="196" width="57" height="15" fill="rgb(252,196,14)"/><text x="13.00" y="206.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.86%)</title><rect x="10" y="212" width="57" height="15" fill="rgb(240,77,36)"/><text x="13.00" y="222.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.86%)</title><rect x="10" y="228" width="57" height="15" fill="rgb(224,7,46)"/><text x="13.00" y="238.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.86%)</title><rect x="10" y="244" width="57" height="15" fill="rgb(208,48,43)"/><text x="13.00" y="254.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.86%)</title><rect x="10" y="260" width="57" height="15" fill="rgb(210,189,37)"/><text x="13.00" y="270.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.86%)</title><rect x="10" y="276" width="57" height="15" fill="rgb(208,74,47)"/><text x="13.00" y="286.50">_call_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.54%)</title><rect x="61" y="292" width="6" height="15" fill="rgb(229,46,42)"/><text x="64.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="308" width="6" height="15" fill="rgb(251,33,33)"/><text x="64.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="324" width="6" height="15" fill="rgb(253,137,8)"/><text x="64.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="340" width="6" height="15" fill="rgb(239,211,42)"/><text x="64.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="61" y="356" width="6" height="15" fill="rgb(245,62,30)"/><text x="64.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="372" width="6" height="15" fill="rgb(205,25,51)"/><text x="64.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.54%)</title><rect x="61" y="388" width="6" height="15" fill="rgb(246,88,16)"/><text x="64.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="404" width="6" height="15" fill="rgb(226,121,14)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="420" width="6" height="15" fill="rgb(215,16,49)"/><text x="64.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="436" width="6" height="15" fill="rgb(241,115,12)"/><text x="64.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="61" y="452" width="6" height="15" fill="rgb(205,162,28)"/><text x="64.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="468" width="6" height="15" fill="rgb(210,33,8)"/><text x="64.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.54%)</title><rect x="61" y="484" width="6" height="15" fill="rgb(233,190,28)"/><text x="64.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="500" width="6" height="15" fill="rgb(250,57,7)"/><text x="64.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="516" width="6" height="15" fill="rgb(246,17,53)"/><text x="64.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="532" width="6" height="15" fill="rgb(230,192,53)"/><text x="64.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="61" y="548" width="6" height="15" fill="rgb(241,207,41)"/><text x="64.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="564" width="6" height="15" fill="rgb(246,104,3)"/><text x="64.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.54%)</title><rect x="61" y="580" width="6" height="15" fill="rgb(253,120,24)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="596" width="6" height="15" fill="rgb(238,228,4)"/><text x="64.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="612" width="6" height="15" fill="rgb(207,146,41)"/><text x="64.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="628" width="6" height="15" fill="rgb(237,192,32)"/><text x="64.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="61" y="644" width="6" height="15" fill="rgb(249,29,0)"/><text x="64.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="660" width="6" height="15" fill="rgb(206,52,25)"/><text x="64.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.54%)</title><rect x="61" y="676" width="6" height="15" fill="rgb(212,148,45)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="692" width="6" height="15" fill="rgb(213,93,52)"/><text x="64.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="708" width="6" height="15" fill="rgb(254,158,19)"/><text x="64.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="724" width="6" height="15" fill="rgb(218,157,6)"/><text x="64.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="61" y="740" width="6" height="15" fill="rgb(239,111,21)"/><text x="64.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="756" width="6" height="15" fill="rgb(215,127,14)"/><text x="64.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.54%)</title><rect x="61" y="772" width="6" height="15" fill="rgb(225,16,43)"/><text x="64.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="788" width="6" height="15" fill="rgb(228,98,31)"/><text x="64.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="804" width="6" height="15" fill="rgb(246,17,42)"/><text x="64.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="820" width="6" height="15" fill="rgb(227,23,52)"/><text x="64.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="836" width="6" height="15" fill="rgb(234,141,50)"/><text x="64.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="852" width="6" height="15" fill="rgb(222,141,37)"/><text x="64.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="61" y="868" width="6" height="15" fill="rgb(245,99,7)"/><text x="64.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="884" width="6" height="15" fill="rgb(248,113,44)"/><text x="64.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.54%)</title><rect x="61" y="900" width="6" height="15" fill="rgb(218,81,16)"/><text x="64.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="916" width="6" height="15" fill="rgb(213,15,4)"/><text x="64.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="932" width="6" height="15" fill="rgb(240,174,47)"/><text x="64.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="948" width="6" height="15" fill="rgb(229,98,43)"/><text x="64.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="964" width="6" height="15" fill="rgb(234,147,49)"/><text x="64.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="980" width="6" height="15" fill="rgb(215,96,41)"/><text x="64.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="61" y="996" width="6" height="15" fill="rgb(218,99,33)"/><text x="64.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="61" y="1012" width="6" height="15" fill="rgb(235,202,0)"/><text x="64.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.54%)</title><rect x="61" y="1028" width="6" height="15" fill="rgb(226,190,52)"/><text x="64.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.54%)</title><rect x="61" y="1044" width="6" height="15" fill="rgb(226,174,14)"/><text x="64.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.54%)</title><rect x="61" y="1060" width="6" height="15" fill="rgb(206,116,27)"/><text x="64.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.54%)</title><rect x="61" y="1076" width="6" height="15" fill="rgb(235,46,42)"/><text x="64.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.54%)</title><rect x="61" y="1092" width="6" height="15" fill="rgb(212,179,13)"/><text x="64.00" y="1102.50"></text></g><g><title>findsource (inspect.py) (1 samples, 0.54%)</title><rect x="67" y="1364" width="6" height="15" fill="rgb(241,134,32)"/><text x="70.00" y="1374.50"></text></g><g><title>getsourcefile (inspect.py) (1 samples, 0.54%)</title><rect x="67" y="1380" width="6" height="15" fill="rgb(237,178,13)"/><text x="70.00" y="1390.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.54%)</title><rect x="67" y="1396" width="6" height="15" fill="rgb(227,63,26)"/><text x="70.00" y="1406.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.54%)</title><rect x="67" y="1412" width="6" height="15" fill="rgb(240,121,12)"/><text x="70.00" y="1422.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.54%)</title><rect x="67" y="1428" width="6" height="15" fill="rgb(247,28,25)"/><text x="70.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="484" width="13" height="15" fill="rgb(254,6,21)"/><text x="70.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="500" width="13" height="15" fill="rgb(250,151,54)"/><text x="70.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="516" width="13" height="15" fill="rgb(254,133,28)"/><text x="70.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="532" width="13" height="15" fill="rgb(248,150,36)"/><text x="70.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="548" width="13" height="15" fill="rgb(217,87,34)"/><text x="70.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="564" width="13" height="15" fill="rgb(206,171,44)"/><text x="70.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 1.08%)</title><rect x="67" y="580" width="13" height="15" fill="rgb(229,9,48)"/><text x="70.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="596" width="13" height="15" fill="rgb(223,142,14)"/><text x="70.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="612" width="13" height="15" fill="rgb(207,67,40)"/><text x="70.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="628" width="13" height="15" fill="rgb(211,121,36)"/><text x="70.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="644" width="13" height="15" fill="rgb(212,19,0)"/><text x="70.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="660" width="13" height="15" fill="rgb(217,67,39)"/><text x="70.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 1.08%)</title><rect x="67" y="676" width="13" height="15" fill="rgb(217,0,15)"/><text x="70.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="692" width="13" height="15" fill="rgb(235,141,26)"/><text x="70.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="708" width="13" height="15" fill="rgb(223,150,2)"/><text x="70.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="724" width="13" height="15" fill="rgb(253,204,20)"/><text x="70.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="740" width="13" height="15" fill="rgb(239,156,14)"/><text x="70.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="756" width="13" height="15" fill="rgb(223,128,46)"/><text x="70.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 1.08%)</title><rect x="67" y="772" width="13" height="15" fill="rgb(223,201,7)"/><text x="70.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="788" width="13" height="15" fill="rgb(217,124,11)"/><text x="70.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="804" width="13" height="15" fill="rgb(211,52,25)"/><text x="70.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="820" width="13" height="15" fill="rgb(229,127,49)"/><text x="70.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="836" width="13" height="15" fill="rgb(219,163,28)"/><text x="70.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="852" width="13" height="15" fill="rgb(205,167,11)"/><text x="70.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 1.08%)</title><rect x="67" y="868" width="13" height="15" fill="rgb(250,64,37)"/><text x="70.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="884" width="13" height="15" fill="rgb(209,178,7)"/><text x="70.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="900" width="13" height="15" fill="rgb(205,139,19)"/><text x="70.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="916" width="13" height="15" fill="rgb(247,42,36)"/><text x="70.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="932" width="13" height="15" fill="rgb(214,15,11)"/><text x="70.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="948" width="13" height="15" fill="rgb(243,124,28)"/><text x="70.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="964" width="13" height="15" fill="rgb(225,173,20)"/><text x="70.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="980" width="13" height="15" fill="rgb(210,106,30)"/><text x="70.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="996" width="13" height="15" fill="rgb(210,0,48)"/><text x="70.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 1.08%)</title><rect x="67" y="1012" width="13" height="15" fill="rgb(212,12,29)"/><text x="70.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1028" width="13" height="15" fill="rgb(208,94,22)"/><text x="70.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1044" width="13" height="15" fill="rgb(207,71,44)"/><text x="70.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1060" width="13" height="15" fill="rgb(240,227,51)"/><text x="70.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="1076" width="13" height="15" fill="rgb(207,225,54)"/><text x="70.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1092" width="13" height="15" fill="rgb(249,195,17)"/><text x="70.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 1.08%)</title><rect x="67" y="1108" width="13" height="15" fill="rgb(230,149,39)"/><text x="70.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1124" width="13" height="15" fill="rgb(252,24,45)"/><text x="70.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1140" width="13" height="15" fill="rgb(221,185,43)"/><text x="70.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1156" width="13" height="15" fill="rgb(221,166,43)"/><text x="70.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="1172" width="13" height="15" fill="rgb(254,226,28)"/><text x="70.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1188" width="13" height="15" fill="rgb(213,221,10)"/><text x="70.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 1.08%)</title><rect x="67" y="1204" width="13" height="15" fill="rgb(229,64,20)"/><text x="70.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1220" width="13" height="15" fill="rgb(248,218,32)"/><text x="70.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1236" width="13" height="15" fill="rgb(252,176,38)"/><text x="70.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1252" width="13" height="15" fill="rgb(217,7,39)"/><text x="70.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="67" y="1268" width="13" height="15" fill="rgb(215,166,42)"/><text x="70.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="67" y="1284" width="13" height="15" fill="rgb(235,44,1)"/><text x="70.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 1.08%)</title><rect x="67" y="1300" width="13" height="15" fill="rgb(233,21,32)"/><text x="70.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 1.08%)</title><rect x="67" y="1316" width="13" height="15" fill="rgb(242,20,29)"/><text x="70.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 1.08%)</title><rect x="67" y="1332" width="13" height="15" fill="rgb(206,111,17)"/><text x="70.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 1.08%)</title><rect x="67" y="1348" width="13" height="15" fill="rgb(206,188,34)"/><text x="70.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.54%)</title><rect x="73" y="1364" width="7" height="15" fill="rgb(214,205,46)"/><text x="76.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.54%)</title><rect x="73" y="1380" width="7" height="15" fill="rgb(216,171,40)"/><text x="76.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="772" width="6" height="15" fill="rgb(222,96,38)"/><text x="83.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="788" width="6" height="15" fill="rgb(227,86,46)"/><text x="83.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="804" width="6" height="15" fill="rgb(240,189,25)"/><text x="83.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="820" width="6" height="15" fill="rgb(214,56,44)"/><text x="83.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="80" y="836" width="6" height="15" fill="rgb(233,26,7)"/><text x="83.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="852" width="6" height="15" fill="rgb(205,206,37)"/><text x="83.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.54%)</title><rect x="80" y="868" width="6" height="15" fill="rgb(241,162,12)"/><text x="83.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="884" width="6" height="15" fill="rgb(254,11,18)"/><text x="83.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="900" width="6" height="15" fill="rgb(240,101,35)"/><text x="83.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="916" width="6" height="15" fill="rgb(244,190,32)"/><text x="83.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="80" y="932" width="6" height="15" fill="rgb(211,9,11)"/><text x="83.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="948" width="6" height="15" fill="rgb(236,34,32)"/><text x="83.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.54%)</title><rect x="80" y="964" width="6" height="15" fill="rgb(234,155,39)"/><text x="83.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="980" width="6" height="15" fill="rgb(210,49,11)"/><text x="83.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="996" width="6" height="15" fill="rgb(213,113,18)"/><text x="83.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1012" width="6" height="15" fill="rgb(213,34,37)"/><text x="83.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="80" y="1028" width="6" height="15" fill="rgb(221,3,29)"/><text x="83.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1044" width="6" height="15" fill="rgb(232,179,14)"/><text x="83.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.54%)</title><rect x="80" y="1060" width="6" height="15" fill="rgb(242,115,37)"/><text x="83.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1076" width="6" height="15" fill="rgb(233,34,39)"/><text x="83.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1092" width="6" height="15" fill="rgb(217,36,39)"/><text x="83.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1108" width="6" height="15" fill="rgb(209,87,54)"/><text x="83.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="80" y="1124" width="6" height="15" fill="rgb(250,192,8)"/><text x="83.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1140" width="6" height="15" fill="rgb(222,40,12)"/><text x="83.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py) (1 samples, 0.54%)</title><rect x="80" y="1156" width="6" height="15" fill="rgb(222,182,31)"/><text x="83.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1172" width="6" height="15" fill="rgb(248,143,42)"/><text x="83.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1188" width="6" height="15" fill="rgb(242,185,23)"/><text x="83.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="80" y="1204" width="6" height="15" fill="rgb(239,45,48)"/><text x="83.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="80" y="1220" width="6" height="15" fill="rgb(222,210,7)"/><text x="83.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="80" y="1236" width="6" height="15" fill="rgb(226,200,2)"/><text x="83.00" y="1246.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="80" y="1252" width="6" height="15" fill="rgb(227,65,8)"/><text x="83.00" y="1262.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.54%)</title><rect x="80" y="1268" width="6" height="15" fill="rgb(220,156,11)"/><text x="83.00" y="1278.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 2.16%)</title><rect x="67" y="340" width="25" height="15" fill="rgb(215,95,27)"/><text x="70.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.16%)</title><rect x="67" y="356" width="25" height="15" fill="rgb(220,129,25)"/><text x="70.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.16%)</title><rect x="67" y="372" width="25" height="15" fill="rgb(246,206,12)"/><text x="70.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.16%)</title><rect x="67" y="388" width="25" height="15" fill="rgb(236,30,17)"/><text x="70.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.16%)</title><rect x="67" y="404" width="25" height="15" fill="rgb(238,63,39)"/><text x="70.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.16%)</title><rect x="67" y="420" width="25" height="15" fill="rgb(245,130,11)"/><text x="70.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 2.16%)</title><rect x="67" y="436" width="25" height="15" fill="rgb(231,67,18)"/><text x="70.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.16%)</title><rect x="67" y="452" width="25" height="15" fill="rgb(234,128,36)"/><text x="70.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.16%)</title><rect x="67" y="468" width="25" height="15" fill="rgb(212,24,16)"/><text x="70.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="484" width="12" height="15" fill="rgb(245,7,38)"/><text x="83.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="80" y="500" width="12" height="15" fill="rgb(252,1,21)"/><text x="83.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="516" width="12" height="15" fill="rgb(247,128,7)"/><text x="83.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 1.08%)</title><rect x="80" y="532" width="12" height="15" fill="rgb(251,178,12)"/><text x="83.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="548" width="12" height="15" fill="rgb(247,174,1)"/><text x="83.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="564" width="12" height="15" fill="rgb(207,175,52)"/><text x="83.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="580" width="12" height="15" fill="rgb(243,207,35)"/><text x="83.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="80" y="596" width="12" height="15" fill="rgb(224,145,40)"/><text x="83.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="612" width="12" height="15" fill="rgb(239,74,6)"/><text x="83.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 1.08%)</title><rect x="80" y="628" width="12" height="15" fill="rgb(244,183,3)"/><text x="83.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="644" width="12" height="15" fill="rgb(210,52,40)"/><text x="83.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="660" width="12" height="15" fill="rgb(231,161,32)"/><text x="83.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="676" width="12" height="15" fill="rgb(229,63,19)"/><text x="83.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="80" y="692" width="12" height="15" fill="rgb(212,163,28)"/><text x="83.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="708" width="12" height="15" fill="rgb(235,94,18)"/><text x="83.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 1.08%)</title><rect x="80" y="724" width="12" height="15" fill="rgb(230,74,23)"/><text x="83.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="740" width="12" height="15" fill="rgb(246,185,43)"/><text x="83.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="80" y="756" width="12" height="15" fill="rgb(241,113,22)"/><text x="83.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="772" width="6" height="15" fill="rgb(244,180,50)"/><text x="89.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="86" y="788" width="6" height="15" fill="rgb(227,118,19)"/><text x="89.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="804" width="6" height="15" fill="rgb(208,165,26)"/><text x="89.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.54%)</title><rect x="86" y="820" width="6" height="15" fill="rgb(252,103,47)"/><text x="89.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="836" width="6" height="15" fill="rgb(238,211,1)"/><text x="89.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="852" width="6" height="15" fill="rgb(248,66,40)"/><text x="89.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="868" width="6" height="15" fill="rgb(218,200,20)"/><text x="89.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="86" y="884" width="6" height="15" fill="rgb(223,99,34)"/><text x="89.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="900" width="6" height="15" fill="rgb(224,182,46)"/><text x="89.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.54%)</title><rect x="86" y="916" width="6" height="15" fill="rgb(225,149,43)"/><text x="89.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="932" width="6" height="15" fill="rgb(221,180,49)"/><text x="89.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="948" width="6" height="15" fill="rgb(242,39,1)"/><text x="89.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="964" width="6" height="15" fill="rgb(213,32,4)"/><text x="89.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="86" y="980" width="6" height="15" fill="rgb(211,66,36)"/><text x="89.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="996" width="6" height="15" fill="rgb(224,96,27)"/><text x="89.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.54%)</title><rect x="86" y="1012" width="6" height="15" fill="rgb(216,214,35)"/><text x="89.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="1028" width="6" height="15" fill="rgb(230,216,37)"/><text x="89.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="1044" width="6" height="15" fill="rgb(240,125,47)"/><text x="89.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="1060" width="6" height="15" fill="rgb(246,223,40)"/><text x="89.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="86" y="1076" width="6" height="15" fill="rgb(215,49,5)"/><text x="89.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="86" y="1092" width="6" height="15" fill="rgb(206,221,29)"/><text x="89.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.54%)</title><rect x="86" y="1108" width="6" height="15" fill="rgb(231,8,30)"/><text x="89.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.54%)</title><rect x="86" y="1124" width="6" height="15" fill="rgb(248,105,48)"/><text x="89.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.54%)</title><rect x="86" y="1140" width="6" height="15" fill="rgb(246,43,47)"/><text x="89.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.54%)</title><rect x="86" y="1156" width="6" height="15" fill="rgb(219,23,30)"/><text x="89.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.54%)</title><rect x="86" y="1172" width="6" height="15" fill="rgb(247,3,19)"/><text x="89.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.54%)</title><rect x="86" y="1188" width="6" height="15" fill="rgb(222,18,26)"/><text x="89.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.54%)</title><rect x="86" y="1204" width="6" height="15" fill="rgb(235,59,11)"/><text x="89.00" y="1214.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.54%)</title><rect x="86" y="1220" width="6" height="15" fill="rgb(247,91,47)"/><text x="89.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="788" width="7" height="15" fill="rgb(231,143,16)"/><text x="95.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="804" width="7" height="15" fill="rgb(244,209,5)"/><text x="95.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="820" width="7" height="15" fill="rgb(211,53,7)"/><text x="95.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="92" y="836" width="7" height="15" fill="rgb(236,210,8)"/><text x="95.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="852" width="7" height="15" fill="rgb(252,97,6)"/><text x="95.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.54%)</title><rect x="92" y="868" width="7" height="15" fill="rgb(217,88,5)"/><text x="95.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="884" width="7" height="15" fill="rgb(214,158,15)"/><text x="95.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="900" width="7" height="15" fill="rgb(233,224,47)"/><text x="95.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="916" width="7" height="15" fill="rgb(212,223,14)"/><text x="95.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="92" y="932" width="7" height="15" fill="rgb(233,15,17)"/><text x="95.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="948" width="7" height="15" fill="rgb(253,34,17)"/><text x="95.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.54%)</title><rect x="92" y="964" width="7" height="15" fill="rgb(242,207,45)"/><text x="95.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="980" width="7" height="15" fill="rgb(222,43,11)"/><text x="95.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="996" width="7" height="15" fill="rgb(215,26,4)"/><text x="95.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1012" width="7" height="15" fill="rgb(214,220,15)"/><text x="95.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="92" y="1028" width="7" height="15" fill="rgb(254,140,0)"/><text x="95.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1044" width="7" height="15" fill="rgb(217,93,18)"/><text x="95.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.54%)</title><rect x="92" y="1060" width="7" height="15" fill="rgb(251,86,20)"/><text x="95.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1076" width="7" height="15" fill="rgb(243,74,27)"/><text x="95.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1092" width="7" height="15" fill="rgb(220,206,31)"/><text x="95.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1108" width="7" height="15" fill="rgb(211,7,10)"/><text x="95.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1124" width="7" height="15" fill="rgb(213,72,33)"/><text x="95.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1140" width="7" height="15" fill="rgb(233,5,20)"/><text x="95.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1156" width="7" height="15" fill="rgb(222,176,42)"/><text x="95.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="92" y="1172" width="7" height="15" fill="rgb(205,191,44)"/><text x="95.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1188" width="7" height="15" fill="rgb(232,2,28)"/><text x="95.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.54%)</title><rect x="92" y="1204" width="7" height="15" fill="rgb(207,195,21)"/><text x="95.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1220" width="7" height="15" fill="rgb(228,104,29)"/><text x="95.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1236" width="7" height="15" fill="rgb(235,90,14)"/><text x="95.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1252" width="7" height="15" fill="rgb(221,97,27)"/><text x="95.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="92" y="1268" width="7" height="15" fill="rgb(253,228,22)"/><text x="95.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1284" width="7" height="15" fill="rgb(211,82,15)"/><text x="95.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.54%)</title><rect x="92" y="1300" width="7" height="15" fill="rgb(241,176,9)"/><text x="95.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1316" width="7" height="15" fill="rgb(237,180,21)"/><text x="95.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1332" width="7" height="15" fill="rgb(218,32,42)"/><text x="95.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1348" width="7" height="15" fill="rgb(233,229,0)"/><text x="95.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="92" y="1364" width="7" height="15" fill="rgb(217,33,7)"/><text x="95.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="92" y="1380" width="7" height="15" fill="rgb(219,173,44)"/><text x="95.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.54%)</title><rect x="92" y="1396" width="7" height="15" fill="rgb(214,30,42)"/><text x="95.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.54%)</title><rect x="92" y="1412" width="7" height="15" fill="rgb(246,40,40)"/><text x="95.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.54%)</title><rect x="92" y="1428" width="7" height="15" fill="rgb(253,12,23)"/><text x="95.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="92" y="1444" width="7" height="15" fill="rgb(240,217,18)"/><text x="95.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1460" width="7" height="15" fill="rgb(225,140,12)"/><text x="95.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1476" width="7" height="15" fill="rgb(208,136,29)"/><text x="95.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1492" width="7" height="15" fill="rgb(232,96,49)"/><text x="95.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1508" width="7" height="15" fill="rgb(213,206,47)"/><text x="95.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1524" width="7" height="15" fill="rgb(213,73,41)"/><text x="95.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1540" width="7" height="15" fill="rgb(209,15,31)"/><text x="95.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1556" width="7" height="15" fill="rgb(208,202,48)"/><text x="95.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1572" width="7" height="15" fill="rgb(242,201,30)"/><text x="95.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.54%)</title><rect x="92" y="1588" width="7" height="15" fill="rgb(237,215,5)"/><text x="95.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 3.24%)</title><rect x="67" y="244" width="38" height="15" fill="rgb(218,75,13)"/><text x="70.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.24%)</title><rect x="67" y="260" width="38" height="15" fill="rgb(227,227,11)"/><text x="70.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.24%)</title><rect x="67" y="276" width="38" height="15" fill="rgb(254,103,3)"/><text x="70.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.24%)</title><rect x="67" y="292" width="38" height="15" fill="rgb(215,105,45)"/><text x="70.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.24%)</title><rect x="67" y="308" width="38" height="15" fill="rgb(214,227,52)"/><text x="70.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.24%)</title><rect x="67" y="324" width="38" height="15" fill="rgb(214,194,31)"/><text x="70.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 1.08%)</title><rect x="92" y="340" width="13" height="15" fill="rgb(252,67,23)"/><text x="95.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="356" width="13" height="15" fill="rgb(213,207,29)"/><text x="95.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="372" width="13" height="15" fill="rgb(242,203,34)"/><text x="95.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="388" width="13" height="15" fill="rgb(208,34,26)"/><text x="95.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="404" width="13" height="15" fill="rgb(214,158,1)"/><text x="95.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="420" width="13" height="15" fill="rgb(247,65,10)"/><text x="95.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="436" width="13" height="15" fill="rgb(207,61,23)"/><text x="95.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="92" y="452" width="13" height="15" fill="rgb(253,36,16)"/><text x="95.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="468" width="13" height="15" fill="rgb(238,174,2)"/><text x="95.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 1.08%)</title><rect x="92" y="484" width="13" height="15" fill="rgb(230,172,19)"/><text x="95.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="500" width="13" height="15" fill="rgb(243,85,7)"/><text x="95.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="516" width="13" height="15" fill="rgb(233,184,0)"/><text x="95.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="532" width="13" height="15" fill="rgb(235,77,10)"/><text x="95.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="92" y="548" width="13" height="15" fill="rgb(217,209,0)"/><text x="95.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="564" width="13" height="15" fill="rgb(205,51,23)"/><text x="95.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 1.08%)</title><rect x="92" y="580" width="13" height="15" fill="rgb(248,133,21)"/><text x="95.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="596" width="13" height="15" fill="rgb(216,198,22)"/><text x="95.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="612" width="13" height="15" fill="rgb(218,41,36)"/><text x="95.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="628" width="13" height="15" fill="rgb(223,161,19)"/><text x="95.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="92" y="644" width="13" height="15" fill="rgb(229,77,9)"/><text x="95.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="660" width="13" height="15" fill="rgb(232,93,45)"/><text x="95.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 1.08%)</title><rect x="92" y="676" width="13" height="15" fill="rgb(232,128,45)"/><text x="95.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="692" width="13" height="15" fill="rgb(247,196,46)"/><text x="95.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="708" width="13" height="15" fill="rgb(217,77,44)"/><text x="95.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="724" width="13" height="15" fill="rgb(232,28,34)"/><text x="95.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="92" y="740" width="13" height="15" fill="rgb(213,78,53)"/><text x="95.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="92" y="756" width="13" height="15" fill="rgb(246,57,51)"/><text x="95.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 1.08%)</title><rect x="92" y="772" width="13" height="15" fill="rgb(230,188,17)"/><text x="95.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="788" width="6" height="15" fill="rgb(249,177,37)"/><text x="102.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="804" width="6" height="15" fill="rgb(219,25,35)"/><text x="102.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="820" width="6" height="15" fill="rgb(216,216,54)"/><text x="102.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="836" width="6" height="15" fill="rgb(236,50,1)"/><text x="102.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="852" width="6" height="15" fill="rgb(226,87,41)"/><text x="102.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="99" y="868" width="6" height="15" fill="rgb(214,61,12)"/><text x="102.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="884" width="6" height="15" fill="rgb(208,47,17)"/><text x="102.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.54%)</title><rect x="99" y="900" width="6" height="15" fill="rgb(217,26,21)"/><text x="102.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="916" width="6" height="15" fill="rgb(246,145,8)"/><text x="102.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="932" width="6" height="15" fill="rgb(214,111,52)"/><text x="102.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="948" width="6" height="15" fill="rgb(230,10,18)"/><text x="102.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="964" width="6" height="15" fill="rgb(225,172,53)"/><text x="102.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="980" width="6" height="15" fill="rgb(227,218,30)"/><text x="102.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="996" width="6" height="15" fill="rgb(220,11,54)"/><text x="102.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="99" y="1012" width="6" height="15" fill="rgb(212,159,1)"/><text x="102.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1028" width="6" height="15" fill="rgb(237,100,21)"/><text x="102.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.54%)</title><rect x="99" y="1044" width="6" height="15" fill="rgb(245,115,28)"/><text x="102.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1060" width="6" height="15" fill="rgb(205,115,20)"/><text x="102.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1076" width="6" height="15" fill="rgb(247,176,28)"/><text x="102.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1092" width="6" height="15" fill="rgb(247,172,45)"/><text x="102.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1108" width="6" height="15" fill="rgb(216,81,16)"/><text x="102.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1124" width="6" height="15" fill="rgb(241,82,15)"/><text x="102.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="99" y="1140" width="6" height="15" fill="rgb(215,218,4)"/><text x="102.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1156" width="6" height="15" fill="rgb(224,197,41)"/><text x="102.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.54%)</title><rect x="99" y="1172" width="6" height="15" fill="rgb(218,116,51)"/><text x="102.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1188" width="6" height="15" fill="rgb(216,147,27)"/><text x="102.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1204" width="6" height="15" fill="rgb(228,65,30)"/><text x="102.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1220" width="6" height="15" fill="rgb(220,197,1)"/><text x="102.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="99" y="1236" width="6" height="15" fill="rgb(241,10,50)"/><text x="102.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1252" width="6" height="15" fill="rgb(215,43,22)"/><text x="102.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.54%)</title><rect x="99" y="1268" width="6" height="15" fill="rgb(235,139,47)"/><text x="102.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1284" width="6" height="15" fill="rgb(225,104,39)"/><text x="102.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1300" width="6" height="15" fill="rgb(253,174,22)"/><text x="102.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1316" width="6" height="15" fill="rgb(210,67,3)"/><text x="102.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="99" y="1332" width="6" height="15" fill="rgb(229,147,6)"/><text x="102.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="99" y="1348" width="6" height="15" fill="rgb(218,31,23)"/><text x="102.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.54%)</title><rect x="99" y="1364" width="6" height="15" fill="rgb(238,186,18)"/><text x="102.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.54%)</title><rect x="99" y="1380" width="6" height="15" fill="rgb(222,164,9)"/><text x="102.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.54%)</title><rect x="99" y="1396" width="6" height="15" fill="rgb(247,195,53)"/><text x="102.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.54%)</title><rect x="99" y="1412" width="6" height="15" fill="rgb(241,138,3)"/><text x="102.00" y="1422.50"></text></g><g><title>0x7f3552231ebd (?) (1 samples, 0.54%)</title><rect x="99" y="1428" width="6" height="15" fill="rgb(221,210,12)"/><text x="102.00" y="1438.50"></text></g><g><title>0x7f3552231c48 (?) (1 samples, 0.54%)</title><rect x="99" y="1444" width="6" height="15" fill="rgb(210,187,19)"/><text x="102.00" y="1454.50"></text></g><g><title>0x7f3552231129 (?) (1 samples, 0.54%)</title><rect x="99" y="1460" width="6" height="15" fill="rgb(245,41,18)"/><text x="102.00" y="1470.50"></text></g><g><title>0x7f355222cb27 (?) (1 samples, 0.54%)</title><rect x="99" y="1476" width="6" height="15" fill="rgb(248,16,34)"/><text x="102.00" y="1486.50"></text></g><g><title>0x7f355222cdef (?) (1 samples, 0.54%)</title><rect x="99" y="1492" width="6" height="15" fill="rgb(239,39,28)"/><text x="102.00" y="1502.50"></text></g><g><title>0x7f355222ca1d (?) (1 samples, 0.54%)</title><rect x="99" y="1508" width="6" height="15" fill="rgb(252,13,51)"/><text x="102.00" y="1518.50"></text></g><g><title>0x7f355222e87c (?) (1 samples, 0.54%)</title><rect x="99" y="1524" width="6" height="15" fill="rgb(220,192,29)"/><text x="102.00" y="1534.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.54%)</title><rect x="105" y="500" width="7" height="15" fill="rgb(224,43,12)"/><text x="108.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="516" width="7" height="15" fill="rgb(221,31,25)"/><text x="108.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="532" width="7" height="15" fill="rgb(206,100,33)"/><text x="108.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="548" width="7" height="15" fill="rgb(251,112,4)"/><text x="108.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="105" y="564" width="7" height="15" fill="rgb(231,225,18)"/><text x="108.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="580" width="7" height="15" fill="rgb(219,39,26)"/><text x="108.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.54%)</title><rect x="105" y="596" width="7" height="15" fill="rgb(227,115,29)"/><text x="108.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="612" width="7" height="15" fill="rgb(247,4,6)"/><text x="108.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="628" width="7" height="15" fill="rgb(234,136,23)"/><text x="108.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="644" width="7" height="15" fill="rgb(232,181,27)"/><text x="108.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="105" y="660" width="7" height="15" fill="rgb(251,122,38)"/><text x="108.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="676" width="7" height="15" fill="rgb(222,208,17)"/><text x="108.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.54%)</title><rect x="105" y="692" width="7" height="15" fill="rgb(242,129,33)"/><text x="108.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="708" width="7" height="15" fill="rgb(239,58,30)"/><text x="108.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="724" width="7" height="15" fill="rgb(215,106,11)"/><text x="108.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="740" width="7" height="15" fill="rgb(208,78,38)"/><text x="108.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="105" y="756" width="7" height="15" fill="rgb(227,137,1)"/><text x="108.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="772" width="7" height="15" fill="rgb(225,156,30)"/><text x="108.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (1 samples, 0.54%)</title><rect x="105" y="788" width="7" height="15" fill="rgb(241,114,41)"/><text x="108.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="804" width="7" height="15" fill="rgb(243,191,30)"/><text x="108.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="820" width="7" height="15" fill="rgb(226,61,37)"/><text x="108.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="836" width="7" height="15" fill="rgb(252,34,49)"/><text x="108.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="105" y="852" width="7" height="15" fill="rgb(251,114,4)"/><text x="108.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="868" width="7" height="15" fill="rgb(245,39,9)"/><text x="108.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py) (1 samples, 0.54%)</title><rect x="105" y="884" width="7" height="15" fill="rgb(240,20,39)"/><text x="108.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="900" width="7" height="15" fill="rgb(238,150,14)"/><text x="108.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="916" width="7" height="15" fill="rgb(241,78,33)"/><text x="108.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="932" width="7" height="15" fill="rgb(242,75,46)"/><text x="108.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="105" y="948" width="7" height="15" fill="rgb(245,138,38)"/><text x="108.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="964" width="7" height="15" fill="rgb(225,40,33)"/><text x="108.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py) (1 samples, 0.54%)</title><rect x="105" y="980" width="7" height="15" fill="rgb(216,101,2)"/><text x="108.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="996" width="7" height="15" fill="rgb(249,217,24)"/><text x="108.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="1012" width="7" height="15" fill="rgb(247,89,15)"/><text x="108.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="1028" width="7" height="15" fill="rgb(224,147,35)"/><text x="108.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="105" y="1044" width="7" height="15" fill="rgb(254,190,12)"/><text x="108.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="105" y="1060" width="7" height="15" fill="rgb(247,128,0)"/><text x="108.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py) (1 samples, 0.54%)</title><rect x="105" y="1076" width="7" height="15" fill="rgb(249,23,24)"/><text x="108.00" y="1086.50"></text></g><g><title>compile (re.py) (1 samples, 0.54%)</title><rect x="105" y="1092" width="7" height="15" fill="rgb(214,57,28)"/><text x="108.00" y="1102.50"></text></g><g><title>_compile (re.py) (1 samples, 0.54%)</title><rect x="105" y="1108" width="7" height="15" fill="rgb(247,149,2)"/><text x="108.00" y="1118.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="105" y="1124" width="7" height="15" fill="rgb(224,77,29)"/><text x="108.00" y="1134.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.54%)</title><rect x="105" y="1140" width="7" height="15" fill="rgb(236,196,16)"/><text x="108.00" y="1150.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="105" y="1156" width="7" height="15" fill="rgb(223,191,50)"/><text x="108.00" y="1166.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="105" y="1172" width="7" height="15" fill="rgb(218,47,54)"/><text x="108.00" y="1182.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.54%)</title><rect x="105" y="1188" width="7" height="15" fill="rgb(231,163,46)"/><text x="108.00" y="1198.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.54%)</title><rect x="105" y="1204" width="7" height="15" fill="rgb(233,217,30)"/><text x="108.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 9.19%)</title><rect x="10" y="68" width="108" height="15" fill="rgb(226,226,20)"/><text x="13.00" y="78.50">_find_and_loa..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 9.19%)</title><rect x="10" y="84" width="108" height="15" fill="rgb(213,183,42)"/><text x="13.00" y="94.50">_find_and_loa..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 9.19%)</title><rect x="10" y="100" width="108" height="15" fill="rgb(212,56,40)"/><text x="13.00" y="110.50">_load_unlocke..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 9.19%)</title><rect x="10" y="116" width="108" height="15" fill="rgb(207,1,31)"/><text x="13.00" y="126.50">exec_module (..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 9.19%)</title><rect x="10" y="132" width="108" height="15" fill="rgb(219,208,7)"/><text x="13.00" y="142.50">_call_with_fr..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (17 samples, 9.19%)</title><rect x="10" y="148" width="108" height="15" fill="rgb(227,18,0)"/><text x="13.00" y="158.50">&lt;module&gt; (pro..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 9.19%)</title><rect x="10" y="164" width="108" height="15" fill="rgb(249,103,14)"/><text x="13.00" y="174.50">_find_and_loa..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 9.19%)</title><rect x="10" y="180" width="108" height="15" fill="rgb(236,211,37)"/><text x="13.00" y="190.50">_find_and_loa..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="67" y="196" width="51" height="15" fill="rgb(219,103,2)"/><text x="70.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 4.32%)</title><rect x="67" y="212" width="51" height="15" fill="rgb(215,0,40)"/><text x="70.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 4.32%)</title><rect x="67" y="228" width="51" height="15" fill="rgb(218,213,41)"/><text x="70.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 1.08%)</title><rect x="105" y="244" width="13" height="15" fill="rgb(223,29,29)"/><text x="108.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="260" width="13" height="15" fill="rgb(212,205,19)"/><text x="108.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="276" width="13" height="15" fill="rgb(235,26,31)"/><text x="108.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="292" width="13" height="15" fill="rgb(254,103,24)"/><text x="108.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="308" width="13" height="15" fill="rgb(237,143,41)"/><text x="108.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="324" width="13" height="15" fill="rgb(245,214,3)"/><text x="108.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="105" y="340" width="13" height="15" fill="rgb(218,98,1)"/><text x="108.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="356" width="13" height="15" fill="rgb(216,225,40)"/><text x="108.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 1.08%)</title><rect x="105" y="372" width="13" height="15" fill="rgb(226,26,26)"/><text x="108.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="388" width="13" height="15" fill="rgb(237,144,33)"/><text x="108.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="404" width="13" height="15" fill="rgb(224,4,21)"/><text x="108.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="420" width="13" height="15" fill="rgb(227,210,7)"/><text x="108.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="436" width="13" height="15" fill="rgb(245,12,31)"/><text x="108.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="452" width="13" height="15" fill="rgb(232,107,50)"/><text x="108.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.08%)</title><rect x="105" y="468" width="13" height="15" fill="rgb(230,105,33)"/><text x="108.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="105" y="484" width="13" height="15" fill="rgb(247,120,35)"/><text x="108.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numerictypes.py) (1 samples, 0.54%)</title><rect x="112" y="500" width="6" height="15" fill="rgb(248,128,41)"/><text x="115.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="112" y="516" width="6" height="15" fill="rgb(214,170,15)"/><text x="115.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="112" y="532" width="6" height="15" fill="rgb(248,226,34)"/><text x="115.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="112" y="548" width="6" height="15" fill="rgb(252,180,7)"/><text x="115.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="112" y="564" width="6" height="15" fill="rgb(232,68,25)"/><text x="115.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="112" y="580" width="6" height="15" fill="rgb(208,176,15)"/><text x="115.00" y="590.50"></text></g><g><title>&lt;module&gt; (numpy/core/_type_aliases.py) (1 samples, 0.54%)</title><rect x="112" y="596" width="6" height="15" fill="rgb(218,173,16)"/><text x="115.00" y="606.50"></text></g><g><title>_add_aliases (numpy/core/_type_aliases.py) (1 samples, 0.54%)</title><rect x="112" y="612" width="6" height="15" fill="rgb(228,66,32)"/><text x="115.00" y="622.50"></text></g><g><title>bitname (numpy/core/_type_aliases.py) (1 samples, 0.54%)</title><rect x="112" y="628" width="6" height="15" fill="rgb(218,79,30)"/><text x="115.00" y="638.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.54%)</title><rect x="112" y="644" width="6" height="15" fill="rgb(207,148,28)"/><text x="115.00" y="654.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.54%)</title><rect x="112" y="660" width="6" height="15" fill="rgb(247,104,44)"/><text x="115.00" y="670.50"></text></g><g><title>profile0_skl (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (1 samples, 0.54%)</title><rect x="118" y="68" width="6" height="15" fill="rgb(207,96,34)"/><text x="121.00" y="78.50"></text></g><g><title>setup_profile0 (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (1 samples, 0.54%)</title><rect x="118" y="84" width="6" height="15" fill="rgb(235,171,34)"/><text x="121.00" y="94.50"></text></g><g><title>profile0 (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (1 samples, 0.54%)</title><rect x="118" y="100" width="6" height="15" fill="rgb(208,75,47)"/><text x="121.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.54%)</title><rect x="118" y="116" width="6" height="15" fill="rgb(239,102,23)"/><text x="121.00" y="126.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.54%)</title><rect x="118" y="132" width="6" height="15" fill="rgb(242,201,48)"/><text x="121.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.54%)</title><rect x="124" y="116" width="7" height="15" fill="rgb(226,139,2)"/><text x="127.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.54%)</title><rect x="124" y="132" width="7" height="15" fill="rgb(252,102,24)"/><text x="127.00" y="142.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.62%)</title><rect x="156" y="212" width="19" height="15" fill="rgb(244,24,51)"/><text x="159.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="169" y="228" width="6" height="15" fill="rgb(233,169,42)"/><text x="172.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="169" y="244" width="6" height="15" fill="rgb(210,123,19)"/><text x="172.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="169" y="260" width="6" height="15" fill="rgb(231,107,5)"/><text x="172.00" y="270.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.54%)</title><rect x="175" y="212" width="7" height="15" fill="rgb(225,109,29)"/><text x="178.00" y="222.50"></text></g><g><title>0x7ffdb92c3b1f ([vdso]) (1 samples, 0.54%)</title><rect x="175" y="228" width="7" height="15" fill="rgb(248,68,4)"/><text x="178.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="188" y="292" width="6" height="15" fill="rgb(253,81,20)"/><text x="191.00" y="302.50"></text></g><g><title>0x7f35767267a0 (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="271" y="356" width="6" height="15" fill="rgb(245,133,37)"/><text x="274.00" y="366.50"></text></g><g><title>0x7f3586c59906 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="277" y="356" width="7" height="15" fill="rgb(250,208,19)"/><text x="280.00" y="366.50"></text></g><g><title>0x7f3586c59991 (libc-2.29.so) (3 samples, 1.62%)</title><rect x="284" y="356" width="19" height="15" fill="rgb(208,27,40)"/><text x="287.00" y="366.50"></text></g><g><title>0x7f3586c59a41 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="303" y="356" width="6" height="15" fill="rgb(224,44,51)"/><text x="306.00" y="366.50"></text></g><g><title>0x7f3586c59a4d (libc-2.29.so) (1 samples, 0.54%)</title><rect x="309" y="356" width="7" height="15" fill="rgb(224,138,32)"/><text x="312.00" y="366.50"></text></g><g><title>0x7f3586c79d97 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="316" y="356" width="6" height="15" fill="rgb(236,183,50)"/><text x="319.00" y="366.50"></text></g><g><title>0x7f3586c79dbf (libc-2.29.so) (2 samples, 1.08%)</title><rect x="322" y="356" width="13" height="15" fill="rgb(234,148,41)"/><text x="325.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 2.16%)</title><rect x="335" y="356" width="25" height="15" fill="rgb(220,94,14)"/><text x="338.00" y="366.50">f..</text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="360" y="452" width="7" height="15" fill="rgb(230,161,30)"/><text x="363.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="360" y="468" width="7" height="15" fill="rgb(240,207,11)"/><text x="363.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="360" y="484" width="7" height="15" fill="rgb(237,198,1)"/><text x="363.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="360" y="500" width="7" height="15" fill="rgb(246,58,7)"/><text x="363.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="360" y="516" width="7" height="15" fill="rgb(223,186,13)"/><text x="363.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.08%)</title><rect x="360" y="356" width="13" height="15" fill="rgb(229,0,52)"/><text x="363.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.08%)</title><rect x="360" y="372" width="13" height="15" fill="rgb(244,5,21)"/><text x="363.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.08%)</title><rect x="360" y="388" width="13" height="15" fill="rgb(231,20,15)"/><text x="363.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.08%)</title><rect x="360" y="404" width="13" height="15" fill="rgb(246,202,50)"/><text x="363.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.08%)</title><rect x="360" y="420" width="13" height="15" fill="rgb(214,82,38)"/><text x="363.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.08%)</title><rect x="360" y="436" width="13" height="15" fill="rgb(218,192,19)"/><text x="363.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="367" y="452" width="6" height="15" fill="rgb(220,140,41)"/><text x="370.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="367" y="468" width="6" height="15" fill="rgb(247,195,34)"/><text x="370.00" y="478.50"></text></g><g><title>0x7f3586c5b81e (libc-2.29.so) (1 samples, 0.54%)</title><rect x="367" y="484" width="6" height="15" fill="rgb(249,36,35)"/><text x="370.00" y="494.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="373" y="356" width="6" height="15" fill="rgb(247,132,28)"/><text x="376.00" y="366.50"></text></g><g><title>0x7f3576725d50 (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="443" y="388" width="7" height="15" fill="rgb(206,211,10)"/><text x="446.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (46 samples, 24.86%)</title><rect x="188" y="260" width="294" height="15" fill="rgb(224,22,25)"/><text x="191.00" y="270.50">onnxruntime::InferenceSession::Run (onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (46 samples, 24.86%)</title><rect x="188" y="276" width="294" height="15" fill="rgb(251,147,31)"/><text x="191.00" y="286.50">onnxruntime::InferenceSession::Run (onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (45 samples, 24.32%)</title><rect x="194" y="292" width="288" height="15" fill="rgb(222,205,10)"/><text x="197.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (45 samples, 24.32%)</title><rect x="194" y="308" width="288" height="15" fill="rgb(227,145,29)"/><text x="197.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (45 samples, 24.32%)</title><rect x="194" y="324" width="288" height="15" fill="rgb(224,206,9)"/><text x="197.00" y="334.50">onnxruntime::SequentialExecutor::Execu..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (45 samples, 24.32%)</title><rect x="194" y="340" width="288" height="15" fill="rgb(248,168,11)"/><text x="197.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;float..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 8.65%)</title><rect x="379" y="356" width="103" height="15" fill="rgb(254,106,20)"/><text x="382.00" y="366.50">std::vector&lt;..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 4.32%)</title><rect x="430" y="372" width="52" height="15" fill="rgb(238,46,10)"/><text x="433.00" y="382.50">opera..</text></g><g><title>malloc (libc-2.29.so) (5 samples, 2.70%)</title><rect x="450" y="388" width="32" height="15" fill="rgb(233,17,23)"/><text x="453.00" y="398.50">ma..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="482" y="260" width="6" height="15" fill="rgb(249,68,51)"/><text x="485.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="482" y="276" width="6" height="15" fill="rgb(224,85,29)"/><text x="485.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="482" y="292" width="6" height="15" fill="rgb(207,60,14)"/><text x="485.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="482" y="308" width="6" height="15" fill="rgb(225,132,40)"/><text x="485.00" y="318.50"></text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (58 samples, 31.35%)</title><rect x="124" y="100" width="370" height="15" fill="rgb(253,129,12)"/><text x="127.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (57 samples, 30.81%)</title><rect x="131" y="116" width="363" height="15" fill="rgb(209,130,20)"/><text x="134.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (56 samples, 30.27%)</title><rect x="137" y="132" width="357" height="15" fill="rgb(254,164,1)"/><text x="140.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (56 samples, 30.27%)</title><rect x="137" y="148" width="357" height="15" fill="rgb(217,186,14)"/><text x="140.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (56 samples, 30.27%)</title><rect x="137" y="164" width="357" height="15" fill="rgb(213,26,27)"/><text x="140.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (54 samples, 29.19%)</title><rect x="150" y="180" width="344" height="15" fill="rgb(210,42,13)"/><text x="153.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (54 samples, 29.19%)</title><rect x="150" y="196" width="344" height="15" fill="rgb(224,71,28)"/><text x="153.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 26.49%)</title><rect x="182" y="212" width="312" height="15" fill="rgb(243,45,22)"/><text x="185.00" y="222.50">pybind11::cpp_function::dispatcher (onnxru..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 26.49%)</title><rect x="182" y="228" width="312" height="15" fill="rgb(224,170,47)"/><text x="185.00" y="238.50">void pybind11::cpp_function::initialize&lt;on..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 26.49%)</title><rect x="182" y="244" width="312" height="15" fill="rgb(220,44,34)"/><text x="185.00" y="254.50">onnxruntime::python::addObjectMethods(pybi..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="488" y="260" width="6" height="15" fill="rgb(221,60,24)"/><text x="491.00" y="270.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="488" y="276" width="6" height="15" fill="rgb(246,142,39)"/><text x="491.00" y="286.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (59 samples, 31.89%)</title><rect x="124" y="68" width="377" height="15" fill="rgb(241,99,43)"/><text x="127.00" y="78.50">profile_ort (bench_LinearRegression_default_m_reg_1..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (59 samples, 31.89%)</title><rect x="124" y="84" width="377" height="15" fill="rgb(210,153,41)"/><text x="127.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.54%)</title><rect x="494" y="100" width="7" height="15" fill="rgb(213,137,16)"/><text x="497.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.54%)</title><rect x="494" y="116" width="7" height="15" fill="rgb(217,167,0)"/><text x="497.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.54%)</title><rect x="494" y="132" width="7" height="15" fill="rgb(225,92,49)"/><text x="497.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.54%)</title><rect x="494" y="148" width="7" height="15" fill="rgb(222,49,27)"/><text x="497.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.54%)</title><rect x="494" y="164" width="7" height="15" fill="rgb(240,17,35)"/><text x="497.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.54%)</title><rect x="494" y="180" width="7" height="15" fill="rgb(251,180,9)"/><text x="497.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py) (1 samples, 0.54%)</title><rect x="494" y="196" width="7" height="15" fill="rgb(219,48,41)"/><text x="497.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py) (1 samples, 0.54%)</title><rect x="494" y="212" width="7" height="15" fill="rgb(209,168,38)"/><text x="497.00" y="222.50"></text></g><g><title>0x7f3544c89ff9 (?) (1 samples, 0.54%)</title><rect x="494" y="228" width="7" height="15" fill="rgb(226,146,53)"/><text x="497.00" y="238.50"></text></g><g><title>0x7f3544c8457e (?) (1 samples, 0.54%)</title><rect x="494" y="244" width="7" height="15" fill="rgb(234,77,10)"/><text x="497.00" y="254.50"></text></g><g><title>0x7f3544cb1426 (?) (1 samples, 0.54%)</title><rect x="494" y="260" width="7" height="15" fill="rgb(221,32,12)"/><text x="497.00" y="270.50"></text></g><g><title>0x7f35450d50b2 (?) (1 samples, 0.54%)</title><rect x="494" y="276" width="7" height="15" fill="rgb(205,37,8)"/><text x="497.00" y="286.50"></text></g><g><title>0x7f3544d2a9fc (?) (1 samples, 0.54%)</title><rect x="494" y="292" width="7" height="15" fill="rgb(237,226,24)"/><text x="497.00" y="302.50"></text></g><g><title>0x7f3544d2a6a4 (?) (1 samples, 0.54%)</title><rect x="494" y="308" width="7" height="15" fill="rgb(236,132,36)"/><text x="497.00" y="318.50"></text></g><g><title>0x7f3544d2a1c1 (?) (1 samples, 0.54%)</title><rect x="494" y="324" width="7" height="15" fill="rgb(223,76,38)"/><text x="497.00" y="334.50"></text></g><g><title>0x7f35450cdb61 (?) (1 samples, 0.54%)</title><rect x="494" y="340" width="7" height="15" fill="rgb(235,201,45)"/><text x="497.00" y="350.50"></text></g><g><title>0x7f35450cc713 (?) (1 samples, 0.54%)</title><rect x="494" y="356" width="7" height="15" fill="rgb(233,112,0)"/><text x="497.00" y="366.50"></text></g><g><title>0x7f3586d37ee3 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="494" y="372" width="7" height="15" fill="rgb(242,97,7)"/><text x="497.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.54%)</title><rect x="507" y="116" width="6" height="15" fill="rgb(254,167,22)"/><text x="510.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.54%)</title><rect x="507" y="132" width="6" height="15" fill="rgb(219,39,54)"/><text x="510.00" y="142.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (7 samples, 3.78%)</title><rect x="603" y="244" width="44" height="15" fill="rgb(207,100,25)"/><text x="606.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (6 samples, 3.24%)</title><rect x="609" y="260" width="38" height="15" fill="rgb(253,141,13)"/><text x="612.00" y="270.50">dot..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 2.70%)</title><rect x="615" y="276" width="32" height="15" fill="rgb(206,224,15)"/><text x="618.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 2.16%)</title><rect x="622" y="292" width="25" height="15" fill="rgb(233,174,10)"/><text x="625.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 2.16%)</title><rect x="622" y="308" width="25" height="15" fill="rgb(220,90,40)"/><text x="625.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 2.16%)</title><rect x="622" y="324" width="25" height="15" fill="rgb(236,172,32)"/><text x="625.00" y="334.50">c..</text></g><g><title>gemv (cblasfuncs.c) (4 samples, 2.16%)</title><rect x="622" y="340" width="25" height="15" fill="rgb(243,80,21)"/><text x="625.00" y="350.50">g..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 2.16%)</title><rect x="622" y="356" width="25" height="15" fill="rgb(234,32,33)"/><text x="625.00" y="366.50">c..</text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 2.16%)</title><rect x="622" y="372" width="25" height="15" fill="rgb(232,77,44)"/><text x="625.00" y="382.50">s..</text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.62%)</title><rect x="628" y="388" width="19" height="15" fill="rgb(250,94,47)"/><text x="631.00" y="398.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.54%)</title><rect x="647" y="276" width="7" height="15" fill="rgb(223,229,34)"/><text x="650.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.54%)</title><rect x="647" y="292" width="7" height="15" fill="rgb(241,221,33)"/><text x="650.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.54%)</title><rect x="647" y="308" width="7" height="15" fill="rgb(251,144,17)"/><text x="650.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.54%)</title><rect x="654" y="276" width="6" height="15" fill="rgb(232,110,5)"/><text x="657.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.54%)</title><rect x="654" y="292" width="6" height="15" fill="rgb(213,56,53)"/><text x="657.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.54%)</title><rect x="654" y="308" width="6" height="15" fill="rgb(246,203,32)"/><text x="657.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.54%)</title><rect x="654" y="324" width="6" height="15" fill="rgb(219,220,9)"/><text x="657.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_add_FLOAT (simd.inc.src) (1 samples, 0.54%)</title><rect x="654" y="340" width="6" height="15" fill="rgb(214,63,9)"/><text x="657.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.54%)</title><rect x="654" y="356" width="6" height="15" fill="rgb(211,102,54)"/><text x="657.00" y="366.50"></text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (26 samples, 14.05%)</title><rect x="501" y="100" width="165" height="15" fill="rgb(231,204,30)"/><text x="504.00" y="110.50">profile (bench_Linear..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (24 samples, 12.97%)</title><rect x="513" y="116" width="153" height="15" fill="rgb(242,196,36)"/><text x="516.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (23 samples, 12.43%)</title><rect x="520" y="132" width="146" height="15" fill="rgb(232,161,54)"/><text x="523.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (22 samples, 11.89%)</title><rect x="526" y="148" width="140" height="15" fill="rgb(215,58,37)"/><text x="529.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (21 samples, 11.35%)</title><rect x="533" y="164" width="133" height="15" fill="rgb(212,24,20)"/><text x="536.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (15 samples, 8.11%)</title><rect x="571" y="180" width="95" height="15" fill="rgb(245,219,39)"/><text x="574.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (13 samples, 7.03%)</title><rect x="584" y="196" width="82" height="15" fill="rgb(238,15,51)"/><text x="587.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (12 samples, 6.49%)</title><rect x="590" y="212" width="76" height="15" fill="rgb(222,184,23)"/><text x="593.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (11 samples, 5.95%)</title><rect x="596" y="228" width="70" height="15" fill="rgb(247,208,50)"/><text x="599.00" y="238.50">_run (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.62%)</title><rect x="647" y="244" width="19" height="15" fill="rgb(243,67,17)"/><text x="650.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.62%)</title><rect x="647" y="260" width="19" height="15" fill="rgb(223,76,7)"/><text x="650.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.54%)</title><rect x="660" y="276" width="6" height="15" fill="rgb(233,186,50)"/><text x="663.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.54%)</title><rect x="660" y="292" width="6" height="15" fill="rgb(245,130,30)"/><text x="663.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.54%)</title><rect x="660" y="308" width="6" height="15" fill="rgb(218,69,8)"/><text x="663.00" y="318.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (27 samples, 14.59%)</title><rect x="501" y="68" width="172" height="15" fill="rgb(245,86,3)"/><text x="504.00" y="78.50">profile_pyrt (bench_Li..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (27 samples, 14.59%)</title><rect x="501" y="84" width="172" height="15" fill="rgb(252,92,35)"/><text x="504.00" y="94.50">setup_profile (bench_L..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.54%)</title><rect x="666" y="100" width="7" height="15" fill="rgb(236,5,17)"/><text x="669.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.54%)</title><rect x="666" y="116" width="7" height="15" fill="rgb(231,155,14)"/><text x="669.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.54%)</title><rect x="666" y="132" width="7" height="15" fill="rgb(254,50,53)"/><text x="669.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.54%)</title><rect x="666" y="148" width="7" height="15" fill="rgb(205,109,12)"/><text x="669.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.54%)</title><rect x="666" y="164" width="7" height="15" fill="rgb(251,9,39)"/><text x="669.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.54%)</title><rect x="666" y="180" width="7" height="15" fill="rgb(247,7,50)"/><text x="669.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.54%)</title><rect x="666" y="196" width="7" height="15" fill="rgb(208,10,19)"/><text x="669.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="212" width="7" height="15" fill="rgb(226,122,31)"/><text x="669.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="228" width="7" height="15" fill="rgb(206,167,34)"/><text x="669.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="244" width="7" height="15" fill="rgb(250,20,45)"/><text x="669.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="666" y="260" width="7" height="15" fill="rgb(241,9,3)"/><text x="669.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="276" width="7" height="15" fill="rgb(207,224,5)"/><text x="669.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.54%)</title><rect x="666" y="292" width="7" height="15" fill="rgb(217,26,24)"/><text x="669.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="308" width="7" height="15" fill="rgb(236,100,6)"/><text x="669.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="324" width="7" height="15" fill="rgb(244,180,6)"/><text x="669.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="340" width="7" height="15" fill="rgb(226,134,5)"/><text x="669.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="666" y="356" width="7" height="15" fill="rgb(217,138,38)"/><text x="669.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="372" width="7" height="15" fill="rgb(236,90,19)"/><text x="669.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.54%)</title><rect x="666" y="388" width="7" height="15" fill="rgb(233,160,54)"/><text x="669.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="404" width="7" height="15" fill="rgb(249,47,51)"/><text x="669.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="420" width="7" height="15" fill="rgb(221,88,36)"/><text x="669.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="436" width="7" height="15" fill="rgb(242,86,33)"/><text x="669.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.54%)</title><rect x="666" y="452" width="7" height="15" fill="rgb(235,142,2)"/><text x="669.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="666" y="468" width="7" height="15" fill="rgb(211,217,6)"/><text x="669.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.54%)</title><rect x="666" y="484" width="7" height="15" fill="rgb(244,46,13)"/><text x="669.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.54%)</title><rect x="666" y="500" width="7" height="15" fill="rgb(219,45,26)"/><text x="669.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.54%)</title><rect x="666" y="516" width="7" height="15" fill="rgb(235,19,18)"/><text x="669.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.54%)</title><rect x="666" y="532" width="7" height="15" fill="rgb(223,158,37)"/><text x="669.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.54%)</title><rect x="666" y="548" width="7" height="15" fill="rgb(235,167,33)"/><text x="669.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.54%)</title><rect x="666" y="564" width="7" height="15" fill="rgb(227,190,11)"/><text x="669.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.54%)</title><rect x="666" y="580" width="7" height="15" fill="rgb(211,168,13)"/><text x="669.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="596" width="7" height="15" fill="rgb(235,65,6)"/><text x="669.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.54%)</title><rect x="666" y="612" width="7" height="15" fill="rgb(226,166,32)"/><text x="669.00" y="622.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.54%)</title><rect x="666" y="628" width="7" height="15" fill="rgb(219,43,54)"/><text x="669.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="644" width="7" height="15" fill="rgb(207,16,21)"/><text x="669.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="660" width="7" height="15" fill="rgb(229,117,32)"/><text x="669.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="676" width="7" height="15" fill="rgb(229,72,22)"/><text x="669.00" y="686.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="692" width="7" height="15" fill="rgb(253,199,16)"/><text x="669.00" y="702.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="708" width="7" height="15" fill="rgb(221,229,38)"/><text x="669.00" y="718.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="724" width="7" height="15" fill="rgb(254,188,36)"/><text x="669.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="740" width="7" height="15" fill="rgb(254,68,23)"/><text x="669.00" y="750.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="756" width="7" height="15" fill="rgb(253,157,49)"/><text x="669.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.54%)</title><rect x="666" y="772" width="7" height="15" fill="rgb(237,55,40)"/><text x="669.00" y="782.50"></text></g><g><title>PyArray_Transpose (shape.c) (3 samples, 1.62%)</title><rect x="698" y="180" width="20" height="15" fill="rgb(233,8,44)"/><text x="701.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 1.08%)</title><rect x="705" y="196" width="13" height="15" fill="rgb(246,63,34)"/><text x="708.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.08%)</title><rect x="705" y="212" width="13" height="15" fill="rgb(207,186,13)"/><text x="708.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.54%)</title><rect x="711" y="228" width="7" height="15" fill="rgb(251,13,14)"/><text x="714.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.54%)</title><rect x="718" y="212" width="6" height="15" fill="rgb(228,195,43)"/><text x="721.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.54%)</title><rect x="718" y="228" width="6" height="15" fill="rgb(223,57,48)"/><text x="721.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.54%)</title><rect x="718" y="244" width="6" height="15" fill="rgb(225,70,26)"/><text x="721.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.54%)</title><rect x="718" y="260" width="6" height="15" fill="rgb(214,228,33)"/><text x="721.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.54%)</title><rect x="718" y="276" width="6" height="15" fill="rgb(216,205,14)"/><text x="721.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 1.08%)</title><rect x="730" y="228" width="13" height="15" fill="rgb(249,86,54)"/><text x="733.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.54%)</title><rect x="743" y="228" width="6" height="15" fill="rgb(246,152,7)"/><text x="746.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.54%)</title><rect x="749" y="228" width="7" height="15" fill="rgb(221,152,2)"/><text x="752.00" y="238.50"></text></g><g><title>array_add (number.c) (7 samples, 3.78%)</title><rect x="718" y="180" width="44" height="15" fill="rgb(243,140,9)"/><text x="721.00" y="190.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 3.78%)</title><rect x="718" y="196" width="44" height="15" fill="rgb(227,45,45)"/><text x="721.00" y="206.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 3.24%)</title><rect x="724" y="212" width="38" height="15" fill="rgb(228,165,32)"/><text x="727.00" y="222.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.54%)</title><rect x="756" y="228" width="6" height="15" fill="rgb(250,85,8)"/><text x="759.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.54%)</title><rect x="756" y="244" width="6" height="15" fill="rgb(226,83,8)"/><text x="759.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.54%)</title><rect x="756" y="260" width="6" height="15" fill="rgb(209,221,8)"/><text x="759.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.54%)</title><rect x="756" y="276" width="6" height="15" fill="rgb(239,122,23)"/><text x="759.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.54%)</title><rect x="756" y="292" width="6" height="15" fill="rgb(220,11,20)"/><text x="759.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.54%)</title><rect x="756" y="308" width="6" height="15" fill="rgb(210,175,15)"/><text x="759.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.54%)</title><rect x="762" y="180" width="7" height="15" fill="rgb(253,102,46)"/><text x="765.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.54%)</title><rect x="762" y="196" width="7" height="15" fill="rgb(227,10,10)"/><text x="765.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.54%)</title><rect x="762" y="212" width="7" height="15" fill="rgb(220,122,28)"/><text x="765.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 2.16%)</title><rect x="813" y="196" width="26" height="15" fill="rgb(220,37,20)"/><text x="816.00" y="206.50">_..</text></g><g><title>__exit__ (warnings.py) (3 samples, 1.62%)</title><rect x="839" y="196" width="19" height="15" fill="rgb(226,212,27)"/><text x="842.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.54%)</title><rect x="858" y="196" width="6" height="15" fill="rgb(231,63,42)"/><text x="861.00" y="206.50"></text></g><g><title>0x7f3586d380e6 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="883" y="212" width="7" height="15" fill="rgb(254,219,16)"/><text x="886.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.08%)</title><rect x="890" y="212" width="12" height="15" fill="rgb(251,44,29)"/><text x="893.00" y="222.50"></text></g><g><title>0x7f3586c6fe7a (libc-2.29.so) (1 samples, 0.54%)</title><rect x="896" y="228" width="6" height="15" fill="rgb(236,89,31)"/><text x="899.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.54%)</title><rect x="902" y="212" width="7" height="15" fill="rgb(244,122,38)"/><text x="905.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 4.32%)</title><rect x="864" y="196" width="51" height="15" fill="rgb(247,209,19)"/><text x="867.00" y="206.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.54%)</title><rect x="909" y="212" width="6" height="15" fill="rgb(209,29,4)"/><text x="912.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 1.08%)</title><rect x="915" y="196" width="13" height="15" fill="rgb(231,125,14)"/><text x="918.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 3.24%)</title><rect x="928" y="196" width="38" height="15" fill="rgb(235,178,48)"/><text x="931.00" y="206.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.62%)</title><rect x="947" y="212" width="19" height="15" fill="rgb(207,200,19)"/><text x="950.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.54%)</title><rect x="960" y="228" width="6" height="15" fill="rgb(235,64,6)"/><text x="963.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 1.08%)</title><rect x="966" y="196" width="13" height="15" fill="rgb(211,124,44)"/><text x="969.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.54%)</title><rect x="985" y="212" width="7" height="15" fill="rgb(229,43,14)"/><text x="988.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (4 samples, 2.16%)</title><rect x="979" y="196" width="26" height="15" fill="rgb(206,24,54)"/><text x="982.00" y="206.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 1.08%)</title><rect x="992" y="212" width="13" height="15" fill="rgb(248,171,8)"/><text x="995.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (40 samples, 21.62%)</title><rect x="769" y="180" width="255" height="15" fill="rgb(250,45,20)"/><text x="772.00" y="190.50">check_array (sklearn/utils/validat..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.62%)</title><rect x="1005" y="196" width="19" height="15" fill="rgb(244,222,1)"/><text x="1008.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 1.62%)</title><rect x="1005" y="212" width="19" height="15" fill="rgb(211,33,11)"/><text x="1008.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 3.78%)</title><rect x="1024" y="180" width="44" height="15" fill="rgb(211,125,33)"/><text x="1027.00" y="190.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 3.24%)</title><rect x="1030" y="196" width="38" height="15" fill="rgb(206,168,52)"/><text x="1033.00" y="206.50">&lt;li..</text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.62%)</title><rect x="1049" y="212" width="19" height="15" fill="rgb(234,105,18)"/><text x="1052.00" y="222.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 1.08%)</title><rect x="1087" y="196" width="13" height="15" fill="rgb(249,73,7)"/><text x="1090.00" y="206.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.54%)</title><rect x="1107" y="244" width="6" height="15" fill="rgb(250,83,38)"/><text x="1110.00" y="254.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.54%)</title><rect x="1107" y="260" width="6" height="15" fill="rgb(226,82,29)"/><text x="1110.00" y="270.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.54%)</title><rect x="1107" y="276" width="6" height="15" fill="rgb(211,50,41)"/><text x="1110.00" y="286.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.54%)</title><rect x="1107" y="292" width="6" height="15" fill="rgb(220,158,48)"/><text x="1110.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.54%)</title><rect x="1119" y="292" width="7" height="15" fill="rgb(245,196,9)"/><text x="1122.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.54%)</title><rect x="1119" y="308" width="7" height="15" fill="rgb(228,176,49)"/><text x="1122.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.54%)</title><rect x="1119" y="324" width="7" height="15" fill="rgb(229,15,22)"/><text x="1122.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.54%)</title><rect x="1119" y="340" width="7" height="15" fill="rgb(246,23,3)"/><text x="1122.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.54%)</title><rect x="1126" y="308" width="6" height="15" fill="rgb(251,17,26)"/><text x="1129.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.54%)</title><rect x="1126" y="324" width="6" height="15" fill="rgb(222,223,4)"/><text x="1129.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.54%)</title><rect x="1126" y="340" width="6" height="15" fill="rgb(247,155,27)"/><text x="1129.00" y="350.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.54%)</title><rect x="1132" y="308" width="6" height="15" fill="rgb(245,83,32)"/><text x="1135.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 2.16%)</title><rect x="1119" y="276" width="26" height="15" fill="rgb(230,54,27)"/><text x="1122.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 1.62%)</title><rect x="1126" y="292" width="19" height="15" fill="rgb(228,37,48)"/><text x="1129.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.54%)</title><rect x="1138" y="308" width="7" height="15" fill="rgb(243,53,4)"/><text x="1141.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 2.70%)</title><rect x="1119" y="260" width="32" height="15" fill="rgb(226,159,4)"/><text x="1122.00" y="270.50">np..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.54%)</title><rect x="1145" y="276" width="6" height="15" fill="rgb(234,191,53)"/><text x="1148.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.54%)</title><rect x="1145" y="292" width="6" height="15" fill="rgb(241,194,12)"/><text x="1148.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.54%)</title><rect x="1145" y="308" width="6" height="15" fill="rgb(218,170,45)"/><text x="1148.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.54%)</title><rect x="1145" y="324" width="6" height="15" fill="rgb(222,221,21)"/><text x="1148.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.54%)</title><rect x="1145" y="340" width="6" height="15" fill="rgb(214,228,0)"/><text x="1148.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.54%)</title><rect x="1145" y="356" width="6" height="15" fill="rgb(228,157,34)"/><text x="1148.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="1145" y="372" width="6" height="15" fill="rgb(251,53,14)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7f3586c5ac9e (libc-2.29.so) (1 samples, 0.54%)</title><rect x="1145" y="388" width="6" height="15" fill="rgb(246,79,39)"/><text x="1148.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 3.78%)</title><rect x="1113" y="244" width="45" height="15" fill="rgb(229,94,48)"/><text x="1116.00" y="254.50">NpyI..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.54%)</title><rect x="1151" y="260" width="7" height="15" fill="rgb(230,207,8)"/><text x="1154.00" y="270.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.54%)</title><rect x="1151" y="276" width="7" height="15" fill="rgb(213,108,4)"/><text x="1154.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 1.08%)</title><rect x="1158" y="276" width="12" height="15" fill="rgb(253,222,34)"/><text x="1161.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 1.08%)</title><rect x="1158" y="292" width="12" height="15" fill="rgb(230,45,0)"/><text x="1161.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (3 samples, 1.62%)</title><rect x="1158" y="244" width="19" height="15" fill="rgb(241,9,36)"/><text x="1161.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.62%)</title><rect x="1158" y="260" width="19" height="15" fill="rgb(206,149,32)"/><text x="1161.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.54%)</title><rect x="1170" y="276" width="7" height="15" fill="rgb(226,100,46)"/><text x="1173.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.54%)</title><rect x="1170" y="292" width="7" height="15" fill="rgb(220,174,26)"/><text x="1173.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.54%)</title><rect x="1170" y="308" width="7" height="15" fill="rgb(214,66,33)"/><text x="1173.00" y="318.50"></text></g><g><title>0x7f3586c59f39 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="1170" y="324" width="7" height="15" fill="rgb(219,65,46)"/><text x="1173.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (78 samples, 42.16%)</title><rect x="686" y="132" width="497" height="15" fill="rgb(221,214,32)"/><text x="689.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (78 samples, 42.16%)</title><rect x="686" y="148" width="497" height="15" fill="rgb(248,158,24)"/><text x="689.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (78 samples, 42.16%)</title><rect x="686" y="164" width="497" height="15" fill="rgb(231,174,12)"/><text x="689.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 9.73%)</title><rect x="1068" y="180" width="115" height="15" fill="rgb(229,129,32)"/><text x="1071.00" y="190.50">safe_sparse_do..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 7.03%)</title><rect x="1100" y="196" width="83" height="15" fill="rgb(216,186,7)"/><text x="1103.00" y="206.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 7.03%)</title><rect x="1100" y="212" width="83" height="15" fill="rgb(216,138,6)"/><text x="1103.00" y="222.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (13 samples, 7.03%)</title><rect x="1100" y="228" width="83" height="15" fill="rgb(236,162,8)"/><text x="1103.00" y="238.50">PyUFunc_G..</text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.54%)</title><rect x="1177" y="244" width="6" height="15" fill="rgb(226,97,21)"/><text x="1180.00" y="254.50"></text></g><g><title>all (185 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,44,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (185 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(248,69,5)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (81 samples, 43.78%)</title><rect x="673" y="68" width="517" height="15" fill="rgb(207,28,17)"/><text x="676.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (81 samples, 43.78%)</title><rect x="673" y="84" width="517" height="15" fill="rgb(226,40,42)"/><text x="676.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py) (81 samples, 43.78%)</title><rect x="673" y="100" width="517" height="15" fill="rgb(229,103,14)"/><text x="676.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (80 samples, 43.24%)</title><rect x="679" y="116" width="511" height="15" fill="rgb(226,91,6)"/><text x="682.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.54%)</title><rect x="1183" y="132" width="7" height="15" fill="rgb(222,190,7)"/><text x="1186.00" y="142.50"></text></g></g></svg>