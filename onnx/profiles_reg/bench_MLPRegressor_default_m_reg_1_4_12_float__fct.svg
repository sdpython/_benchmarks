<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(223,229,13)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(225,48,39)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(232,180,19)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(246,5,32)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(206,3,1)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(210,33,35)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(212,8,6)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(237,97,34)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(253,173,46)"/><text x="15.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(254,211,39)"/><text x="15.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(253,116,11)"/><text x="15.00" y="1038.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.75%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(228,34,19)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.75%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(235,224,22)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(234,182,40)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(218,44,43)"/><text x="18.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(249,80,53)"/><text x="18.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(226,14,37)"/><text x="18.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(209,133,51)"/><text x="18.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(247,84,37)"/><text x="18.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.25%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(250,28,7)"/><text x="18.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(243,152,39)"/><text x="21.00" y="894.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.25%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(238,65,44)"/><text x="21.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(234,82,10)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(251,216,0)"/><text x="21.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(216,220,32)"/><text x="21.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(249,86,4)"/><text x="21.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="18" y="980" width="3" height="15" fill="rgb(237,189,34)"/><text x="21.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="18" y="996" width="3" height="15" fill="rgb(233,221,53)"/><text x="21.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="18" y="1012" width="3" height="15" fill="rgb(213,101,29)"/><text x="21.00" y="1022.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="18" y="1028" width="3" height="15" fill="rgb(230,109,36)"/><text x="21.00" y="1038.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="18" y="1044" width="3" height="15" fill="rgb(248,73,8)"/><text x="21.00" y="1054.50"></text></g><g><title>0x7f79dd8dc124 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="18" y="1060" width="3" height="15" fill="rgb(213,177,47)"/><text x="21.00" y="1070.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.25%)</title><rect x="10" y="292" width="14" height="15" fill="rgb(231,206,39)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="308" width="14" height="15" fill="rgb(241,67,32)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="324" width="14" height="15" fill="rgb(254,130,27)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="340" width="14" height="15" fill="rgb(224,137,40)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="10" y="356" width="14" height="15" fill="rgb(229,103,2)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="372" width="14" height="15" fill="rgb(248,208,14)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.25%)</title><rect x="10" y="388" width="14" height="15" fill="rgb(230,127,8)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="404" width="14" height="15" fill="rgb(211,189,8)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="420" width="14" height="15" fill="rgb(216,109,3)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="436" width="14" height="15" fill="rgb(218,105,0)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="10" y="452" width="14" height="15" fill="rgb(214,211,5)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="468" width="14" height="15" fill="rgb(219,14,12)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.25%)</title><rect x="10" y="484" width="14" height="15" fill="rgb(238,189,22)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="500" width="14" height="15" fill="rgb(207,35,19)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="516" width="14" height="15" fill="rgb(224,7,41)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="532" width="14" height="15" fill="rgb(234,181,24)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="10" y="548" width="14" height="15" fill="rgb(235,178,43)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="564" width="14" height="15" fill="rgb(244,159,37)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.25%)</title><rect x="10" y="580" width="14" height="15" fill="rgb(214,0,48)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="596" width="14" height="15" fill="rgb(231,169,36)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="612" width="14" height="15" fill="rgb(215,174,41)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="628" width="14" height="15" fill="rgb(212,165,54)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="644" width="14" height="15" fill="rgb(207,164,27)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="660" width="14" height="15" fill="rgb(247,71,32)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="676" width="14" height="15" fill="rgb(245,127,24)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="10" y="692" width="14" height="15" fill="rgb(247,190,2)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="708" width="14" height="15" fill="rgb(251,81,48)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.25%)</title><rect x="10" y="724" width="14" height="15" fill="rgb(229,184,34)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="740" width="14" height="15" fill="rgb(209,86,27)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="756" width="14" height="15" fill="rgb(217,100,45)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="772" width="14" height="15" fill="rgb(250,82,9)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="10" y="788" width="14" height="15" fill="rgb(239,23,22)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="10" y="804" width="14" height="15" fill="rgb(235,219,17)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.25%)</title><rect x="10" y="820" width="14" height="15" fill="rgb(223,87,18)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="18" y="836" width="6" height="15" fill="rgb(215,37,54)"/><text x="21.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="18" y="852" width="6" height="15" fill="rgb(249,93,23)"/><text x="21.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="18" y="868" width="6" height="15" fill="rgb(249,213,26)"/><text x="21.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(209,48,39)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(209,165,11)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.25%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(209,122,36)"/><text x="24.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="10" y="196" width="17" height="15" fill="rgb(248,7,30)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="10" y="212" width="17" height="15" fill="rgb(245,152,22)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="10" y="228" width="17" height="15" fill="rgb(216,104,42)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="10" y="244" width="17" height="15" fill="rgb(248,98,43)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="10" y="260" width="17" height="15" fill="rgb(214,147,26)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="10" y="276" width="17" height="15" fill="rgb(230,193,17)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="292" width="3" height="15" fill="rgb(247,185,31)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="308" width="3" height="15" fill="rgb(243,149,25)"/><text x="27.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="324" width="3" height="15" fill="rgb(210,81,45)"/><text x="27.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="340" width="3" height="15" fill="rgb(249,129,44)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="356" width="3" height="15" fill="rgb(225,205,35)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="372" width="3" height="15" fill="rgb(246,168,51)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.25%)</title><rect x="24" y="388" width="3" height="15" fill="rgb(249,89,17)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="404" width="3" height="15" fill="rgb(210,31,11)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="420" width="3" height="15" fill="rgb(250,31,6)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="436" width="3" height="15" fill="rgb(211,68,44)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="452" width="3" height="15" fill="rgb(233,189,19)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="468" width="3" height="15" fill="rgb(244,73,40)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="484" width="3" height="15" fill="rgb(236,32,37)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="500" width="3" height="15" fill="rgb(207,131,41)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="516" width="3" height="15" fill="rgb(223,127,20)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="532" width="3" height="15" fill="rgb(206,182,18)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="548" width="3" height="15" fill="rgb(219,228,2)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="564" width="3" height="15" fill="rgb(254,73,20)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.25%)</title><rect x="24" y="580" width="3" height="15" fill="rgb(230,18,1)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="596" width="3" height="15" fill="rgb(229,198,8)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="612" width="3" height="15" fill="rgb(220,213,5)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="628" width="3" height="15" fill="rgb(250,129,38)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="644" width="3" height="15" fill="rgb(224,213,8)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="660" width="3" height="15" fill="rgb(215,118,41)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="676" width="3" height="15" fill="rgb(242,67,26)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="692" width="3" height="15" fill="rgb(209,95,6)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="708" width="3" height="15" fill="rgb(250,74,26)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="724" width="3" height="15" fill="rgb(246,219,47)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="740" width="3" height="15" fill="rgb(205,204,27)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="756" width="3" height="15" fill="rgb(254,186,51)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.25%)</title><rect x="24" y="772" width="3" height="15" fill="rgb(234,45,10)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="788" width="3" height="15" fill="rgb(207,91,38)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="804" width="3" height="15" fill="rgb(251,114,39)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="820" width="3" height="15" fill="rgb(221,150,12)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(220,72,40)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(251,107,28)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(225,152,0)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(211,215,29)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(253,119,54)"/><text x="27.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(251,214,9)"/><text x="27.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(212,185,7)"/><text x="27.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(211,216,12)"/><text x="27.00" y="958.50"></text></g><g><title>0x7f79c8b866c0 (?) (1 samples, 0.25%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(226,50,41)"/><text x="27.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(243,197,17)"/><text x="27.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(206,6,44)"/><text x="27.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(238,78,25)"/><text x="27.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(233,200,13)"/><text x="27.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(234,25,29)"/><text x="27.00" y="1054.50"></text></g><g><title>0x7f79bf286270 (?) (1 samples, 0.25%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(208,30,36)"/><text x="27.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(226,47,10)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(211,189,8)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(207,54,10)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(225,138,54)"/><text x="30.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(236,136,54)"/><text x="30.00" y="1198.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(253,33,41)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1476" width="3" height="15" fill="rgb(211,87,10)"/><text x="33.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1492" width="3" height="15" fill="rgb(223,17,50)"/><text x="33.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1508" width="3" height="15" fill="rgb(227,63,26)"/><text x="33.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1524" width="3" height="15" fill="rgb(236,67,46)"/><text x="33.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1540" width="3" height="15" fill="rgb(224,225,45)"/><text x="33.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="30" y="1556" width="3" height="15" fill="rgb(241,22,7)"/><text x="33.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="30" y="1572" width="3" height="15" fill="rgb(239,13,4)"/><text x="33.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1588" width="3" height="15" fill="rgb(221,203,30)"/><text x="33.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1604" width="3" height="15" fill="rgb(221,154,33)"/><text x="33.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1620" width="3" height="15" fill="rgb(226,177,1)"/><text x="33.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1636" width="3" height="15" fill="rgb(229,163,7)"/><text x="33.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1652" width="3" height="15" fill="rgb(209,217,1)"/><text x="33.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.25%)</title><rect x="30" y="1668" width="3" height="15" fill="rgb(238,23,27)"/><text x="33.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1684" width="3" height="15" fill="rgb(243,11,33)"/><text x="33.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1700" width="3" height="15" fill="rgb(251,175,16)"/><text x="33.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1716" width="3" height="15" fill="rgb(241,83,38)"/><text x="33.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1732" width="3" height="15" fill="rgb(214,194,45)"/><text x="33.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1748" width="3" height="15" fill="rgb(211,143,13)"/><text x="33.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="30" y="1764" width="3" height="15" fill="rgb(240,137,41)"/><text x="33.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1780" width="3" height="15" fill="rgb(254,193,6)"/><text x="33.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1796" width="3" height="15" fill="rgb(253,93,23)"/><text x="33.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1812" width="3" height="15" fill="rgb(249,39,6)"/><text x="33.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1828" width="3" height="15" fill="rgb(207,145,44)"/><text x="33.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1844" width="3" height="15" fill="rgb(247,183,40)"/><text x="33.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/compiler.py) (1 samples, 0.25%)</title><rect x="30" y="1860" width="3" height="15" fill="rgb(253,105,11)"/><text x="33.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1876" width="3" height="15" fill="rgb(224,119,47)"/><text x="33.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1892" width="3" height="15" fill="rgb(213,2,30)"/><text x="33.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1908" width="3" height="15" fill="rgb(212,35,19)"/><text x="33.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1924" width="3" height="15" fill="rgb(240,168,0)"/><text x="33.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1940" width="3" height="15" fill="rgb(239,80,0)"/><text x="33.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1956" width="3" height="15" fill="rgb(231,112,40)"/><text x="33.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="484" width="9" height="15" fill="rgb(252,100,2)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="500" width="9" height="15" fill="rgb(252,212,1)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="516" width="9" height="15" fill="rgb(222,37,24)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="532" width="9" height="15" fill="rgb(209,49,0)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="27" y="548" width="9" height="15" fill="rgb(247,145,29)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="564" width="9" height="15" fill="rgb(216,177,9)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.75%)</title><rect x="27" y="580" width="9" height="15" fill="rgb(234,54,8)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="596" width="9" height="15" fill="rgb(243,185,28)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="612" width="9" height="15" fill="rgb(236,154,1)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="628" width="9" height="15" fill="rgb(206,184,21)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="27" y="644" width="9" height="15" fill="rgb(236,163,6)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="660" width="9" height="15" fill="rgb(208,79,44)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.75%)</title><rect x="27" y="676" width="9" height="15" fill="rgb(222,76,23)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="692" width="9" height="15" fill="rgb(247,39,45)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="708" width="9" height="15" fill="rgb(240,75,25)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="724" width="9" height="15" fill="rgb(227,159,22)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="27" y="740" width="9" height="15" fill="rgb(252,217,28)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="756" width="9" height="15" fill="rgb(241,110,5)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.75%)</title><rect x="27" y="772" width="9" height="15" fill="rgb(250,105,8)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="788" width="9" height="15" fill="rgb(247,170,34)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="804" width="9" height="15" fill="rgb(248,59,10)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="820" width="9" height="15" fill="rgb(206,226,42)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="27" y="836" width="9" height="15" fill="rgb(248,126,34)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="852" width="9" height="15" fill="rgb(212,147,29)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.75%)</title><rect x="27" y="868" width="9" height="15" fill="rgb(229,69,19)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="884" width="9" height="15" fill="rgb(205,113,47)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="900" width="9" height="15" fill="rgb(222,113,8)"/><text x="30.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="916" width="9" height="15" fill="rgb(234,189,3)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="932" width="9" height="15" fill="rgb(232,36,11)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="948" width="9" height="15" fill="rgb(246,91,1)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="964" width="9" height="15" fill="rgb(234,62,37)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="27" y="980" width="9" height="15" fill="rgb(224,56,40)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="996" width="9" height="15" fill="rgb(245,172,26)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.75%)</title><rect x="27" y="1012" width="9" height="15" fill="rgb(246,100,34)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1028" width="9" height="15" fill="rgb(241,219,5)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1044" width="9" height="15" fill="rgb(244,127,37)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1060" width="9" height="15" fill="rgb(214,55,24)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="27" y="1076" width="9" height="15" fill="rgb(219,79,17)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="27" y="1092" width="9" height="15" fill="rgb(241,175,48)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.75%)</title><rect x="27" y="1108" width="9" height="15" fill="rgb(238,111,5)"/><text x="30.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1124" width="6" height="15" fill="rgb(253,191,15)"/><text x="33.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1140" width="6" height="15" fill="rgb(221,197,45)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1156" width="6" height="15" fill="rgb(247,167,26)"/><text x="33.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1172" width="6" height="15" fill="rgb(218,187,33)"/><text x="33.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1188" width="6" height="15" fill="rgb(206,218,46)"/><text x="33.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="30" y="1204" width="6" height="15" fill="rgb(244,138,21)"/><text x="33.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1220" width="6" height="15" fill="rgb(218,144,17)"/><text x="33.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.50%)</title><rect x="30" y="1236" width="6" height="15" fill="rgb(235,67,29)"/><text x="33.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1252" width="6" height="15" fill="rgb(236,157,51)"/><text x="33.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1268" width="6" height="15" fill="rgb(251,209,45)"/><text x="33.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1284" width="6" height="15" fill="rgb(227,69,14)"/><text x="33.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1300" width="6" height="15" fill="rgb(209,110,20)"/><text x="33.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1316" width="6" height="15" fill="rgb(229,213,54)"/><text x="33.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="30" y="1332" width="6" height="15" fill="rgb(221,190,25)"/><text x="33.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1348" width="6" height="15" fill="rgb(249,197,24)"/><text x="33.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.50%)</title><rect x="30" y="1364" width="6" height="15" fill="rgb(233,6,15)"/><text x="33.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1380" width="6" height="15" fill="rgb(209,186,37)"/><text x="33.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1396" width="6" height="15" fill="rgb(230,125,7)"/><text x="33.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1412" width="6" height="15" fill="rgb(226,100,5)"/><text x="33.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="30" y="1428" width="6" height="15" fill="rgb(236,0,39)"/><text x="33.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1444" width="6" height="15" fill="rgb(208,129,11)"/><text x="33.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.50%)</title><rect x="30" y="1460" width="6" height="15" fill="rgb(245,110,41)"/><text x="33.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.25%)</title><rect x="33" y="1476" width="3" height="15" fill="rgb(251,135,19)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.25%)</title><rect x="33" y="1492" width="3" height="15" fill="rgb(253,68,29)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="33" y="1508" width="3" height="15" fill="rgb(247,194,20)"/><text x="36.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.25%)</title><rect x="33" y="1524" width="3" height="15" fill="rgb(227,30,13)"/><text x="36.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="33" y="1540" width="3" height="15" fill="rgb(244,73,14)"/><text x="36.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="33" y="1556" width="3" height="15" fill="rgb(243,130,24)"/><text x="36.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.25%)</title><rect x="33" y="1572" width="3" height="15" fill="rgb(223,26,52)"/><text x="36.00" y="1582.50"></text></g><g><title>0x7f79b44f382d (?) (1 samples, 0.25%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(230,41,10)"/><text x="39.00" y="926.50"></text></g><g><title>0x7f79b51282fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(221,42,1)"/><text x="42.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1316" width="3" height="15" fill="rgb(246,186,12)"/><text x="42.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1332" width="3" height="15" fill="rgb(207,5,39)"/><text x="42.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(226,2,8)"/><text x="42.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(209,207,27)"/><text x="42.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1380" width="3" height="15" fill="rgb(227,96,27)"/><text x="42.00" y="1390.50"></text></g><g><title>0x7f79b4f0c153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1396" width="3" height="15" fill="rgb(249,197,22)"/><text x="42.00" y="1406.50"></text></g><g><title>0x7f79b4f0ac13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1412" width="3" height="15" fill="rgb(229,169,6)"/><text x="42.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1428" width="3" height="15" fill="rgb(216,140,29)"/><text x="42.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1444" width="3" height="15" fill="rgb(205,34,7)"/><text x="42.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1460" width="3" height="15" fill="rgb(236,11,53)"/><text x="42.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="1476" width="3" height="15" fill="rgb(232,144,51)"/><text x="42.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="1492" width="3" height="15" fill="rgb(221,132,19)"/><text x="42.00" y="1502.50"></text></g><g><title>0x7f79b4c67181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1508" width="3" height="15" fill="rgb(219,152,51)"/><text x="42.00" y="1518.50"></text></g><g><title>0x7f79b4c6a1c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1524" width="3" height="15" fill="rgb(208,55,37)"/><text x="42.00" y="1534.50"></text></g><g><title>0x7f79b4c96167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1540" width="3" height="15" fill="rgb(231,126,29)"/><text x="42.00" y="1550.50"></text></g><g><title>0x7f79b4c91b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1556" width="3" height="15" fill="rgb(247,24,26)"/><text x="42.00" y="1566.50"></text></g><g><title>0x7f79b4c7507b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="39" y="1572" width="3" height="15" fill="rgb(244,123,4)"/><text x="42.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.25%)</title><rect x="39" y="1588" width="3" height="15" fill="rgb(215,50,53)"/><text x="42.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.25%)</title><rect x="39" y="1604" width="3" height="15" fill="rgb(219,193,12)"/><text x="42.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.25%)</title><rect x="39" y="1620" width="3" height="15" fill="rgb(236,55,40)"/><text x="42.00" y="1630.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="39" y="1636" width="3" height="15" fill="rgb(245,167,48)"/><text x="42.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 0.75%)</title><rect x="36" y="724" width="9" height="15" fill="rgb(239,133,53)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="740" width="9" height="15" fill="rgb(223,128,31)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="756" width="9" height="15" fill="rgb(251,25,53)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="772" width="9" height="15" fill="rgb(251,116,37)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="36" y="788" width="9" height="15" fill="rgb(248,148,51)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="804" width="9" height="15" fill="rgb(225,72,53)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 0.75%)</title><rect x="36" y="820" width="9" height="15" fill="rgb(243,126,46)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="836" width="9" height="15" fill="rgb(217,168,7)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="852" width="9" height="15" fill="rgb(224,213,5)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="868" width="9" height="15" fill="rgb(227,6,20)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="36" y="884" width="9" height="15" fill="rgb(236,122,41)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="36" y="900" width="9" height="15" fill="rgb(239,214,20)"/><text x="39.00" y="910.50"></text></g><g><title>0x7f79b616440e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="39" y="916" width="6" height="15" fill="rgb(232,204,22)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="932" width="6" height="15" fill="rgb(233,57,14)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="948" width="6" height="15" fill="rgb(245,193,50)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="964" width="6" height="15" fill="rgb(247,100,4)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="39" y="980" width="6" height="15" fill="rgb(240,156,7)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="996" width="6" height="15" fill="rgb(222,92,45)"/><text x="42.00" y="1006.50"></text></g><g><title>0x7f79b5f1dcd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="39" y="1012" width="6" height="15" fill="rgb(227,103,27)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1028" width="6" height="15" fill="rgb(247,4,47)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1044" width="6" height="15" fill="rgb(223,24,9)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1060" width="6" height="15" fill="rgb(244,160,16)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="39" y="1076" width="6" height="15" fill="rgb(238,142,14)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1092" width="6" height="15" fill="rgb(244,43,11)"/><text x="42.00" y="1102.50"></text></g><g><title>0x7f79b56130e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="39" y="1108" width="6" height="15" fill="rgb(223,123,42)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1124" width="6" height="15" fill="rgb(246,199,10)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1140" width="6" height="15" fill="rgb(208,66,38)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1156" width="6" height="15" fill="rgb(235,25,24)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="39" y="1172" width="6" height="15" fill="rgb(219,125,28)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1188" width="6" height="15" fill="rgb(212,162,38)"/><text x="42.00" y="1198.50"></text></g><g><title>0x7f79b5397e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="39" y="1204" width="6" height="15" fill="rgb(235,105,4)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1220" width="6" height="15" fill="rgb(227,180,2)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1236" width="6" height="15" fill="rgb(241,47,43)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1252" width="6" height="15" fill="rgb(214,192,44)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="39" y="1268" width="6" height="15" fill="rgb(234,170,16)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="39" y="1284" width="6" height="15" fill="rgb(214,10,29)"/><text x="42.00" y="1294.50"></text></g><g><title>0x7f79b5128824 (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="42" y="1300" width="3" height="15" fill="rgb(218,117,31)"/><text x="45.00" y="1310.50"></text></g><g><title>0x7f79b5130bda (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="42" y="1316" width="3" height="15" fill="rgb(222,88,35)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1332" width="3" height="15" fill="rgb(238,228,49)"/><text x="45.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1348" width="3" height="15" fill="rgb(214,211,53)"/><text x="45.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1364" width="3" height="15" fill="rgb(234,55,18)"/><text x="45.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="1380" width="3" height="15" fill="rgb(237,141,13)"/><text x="45.00" y="1390.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="1396" width="3" height="15" fill="rgb(220,106,19)"/><text x="45.00" y="1406.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="1412" width="3" height="15" fill="rgb(218,220,15)"/><text x="45.00" y="1422.50"></text></g><g><title>DataFrame (pandas/core/frame.py) (1 samples, 0.25%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(207,40,15)"/><text x="51.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.25%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(232,45,19)"/><text x="51.00" y="1054.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.25%)</title><rect x="48" y="1060" width="3" height="15" fill="rgb(251,208,45)"/><text x="51.00" y="1070.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.25%)</title><rect x="48" y="1076" width="3" height="15" fill="rgb(231,113,44)"/><text x="51.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.25%)</title><rect x="48" y="1092" width="3" height="15" fill="rgb(207,38,9)"/><text x="51.00" y="1102.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.25%)</title><rect x="51" y="1124" width="3" height="15" fill="rgb(222,16,3)"/><text x="54.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.25%)</title><rect x="51" y="1140" width="3" height="15" fill="rgb(232,191,24)"/><text x="54.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.25%)</title><rect x="51" y="1156" width="3" height="15" fill="rgb(205,226,23)"/><text x="54.00" y="1166.50"></text></g><g><title>sub (re.py) (1 samples, 0.25%)</title><rect x="51" y="1172" width="3" height="15" fill="rgb(212,26,21)"/><text x="54.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.25%)</title><rect x="51" y="1188" width="3" height="15" fill="rgb(247,174,35)"/><text x="54.00" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.25%)</title><rect x="51" y="1204" width="3" height="15" fill="rgb(246,23,44)"/><text x="54.00" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.25%)</title><rect x="51" y="1220" width="3" height="15" fill="rgb(238,42,54)"/><text x="54.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 0.50%)</title><rect x="51" y="1108" width="6" height="15" fill="rgb(220,56,2)"/><text x="54.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1124" width="3" height="15" fill="rgb(245,92,17)"/><text x="57.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1140" width="3" height="15" fill="rgb(246,41,41)"/><text x="57.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1156" width="3" height="15" fill="rgb(224,212,47)"/><text x="57.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="54" y="1172" width="3" height="15" fill="rgb(208,166,33)"/><text x="57.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1188" width="3" height="15" fill="rgb(234,111,19)"/><text x="57.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.25%)</title><rect x="54" y="1204" width="3" height="15" fill="rgb(236,42,17)"/><text x="57.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1220" width="3" height="15" fill="rgb(205,210,52)"/><text x="57.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1236" width="3" height="15" fill="rgb(209,63,40)"/><text x="57.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1252" width="3" height="15" fill="rgb(220,210,9)"/><text x="57.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="54" y="1268" width="3" height="15" fill="rgb(244,154,8)"/><text x="57.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1284" width="3" height="15" fill="rgb(206,60,16)"/><text x="57.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.25%)</title><rect x="54" y="1300" width="3" height="15" fill="rgb(218,198,49)"/><text x="57.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1316" width="3" height="15" fill="rgb(230,112,28)"/><text x="57.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1332" width="3" height="15" fill="rgb(212,216,8)"/><text x="57.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1348" width="3" height="15" fill="rgb(233,78,53)"/><text x="57.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="54" y="1364" width="3" height="15" fill="rgb(237,133,51)"/><text x="57.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1380" width="3" height="15" fill="rgb(217,22,45)"/><text x="57.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/period.py) (1 samples, 0.25%)</title><rect x="54" y="1396" width="3" height="15" fill="rgb(222,66,12)"/><text x="57.00" y="1406.50"></text></g><g><title>add_delegate_accessors (pandas/core/accessor.py) (1 samples, 0.25%)</title><rect x="54" y="1412" width="3" height="15" fill="rgb(225,183,41)"/><text x="57.00" y="1422.50"></text></g><g><title>_add_delegate_accessors (pandas/core/accessor.py) (1 samples, 0.25%)</title><rect x="54" y="1428" width="3" height="15" fill="rgb(212,35,47)"/><text x="57.00" y="1438.50"></text></g><g><title>_create_delegator_property (pandas/core/accessor.py) (1 samples, 0.25%)</title><rect x="54" y="1444" width="3" height="15" fill="rgb(214,214,15)"/><text x="57.00" y="1454.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (5 samples, 1.25%)</title><rect x="45" y="724" width="15" height="15" fill="rgb(211,159,31)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="740" width="15" height="15" fill="rgb(211,66,31)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="756" width="15" height="15" fill="rgb(239,151,21)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="772" width="15" height="15" fill="rgb(218,210,8)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="45" y="788" width="15" height="15" fill="rgb(246,125,37)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="804" width="15" height="15" fill="rgb(234,202,31)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (5 samples, 1.25%)</title><rect x="45" y="820" width="15" height="15" fill="rgb(206,167,5)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="836" width="15" height="15" fill="rgb(245,187,38)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="852" width="15" height="15" fill="rgb(252,59,40)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="868" width="15" height="15" fill="rgb(224,227,51)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="45" y="884" width="15" height="15" fill="rgb(244,8,39)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="900" width="15" height="15" fill="rgb(228,134,53)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (5 samples, 1.25%)</title><rect x="45" y="916" width="15" height="15" fill="rgb(225,120,35)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="48" y="932" width="12" height="15" fill="rgb(214,43,40)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="48" y="948" width="12" height="15" fill="rgb(237,94,7)"/><text x="51.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="48" y="964" width="12" height="15" fill="rgb(213,45,23)"/><text x="51.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="48" y="980" width="12" height="15" fill="rgb(220,124,22)"/><text x="51.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="48" y="996" width="12" height="15" fill="rgb(226,31,54)"/><text x="51.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.00%)</title><rect x="48" y="1012" width="12" height="15" fill="rgb(212,30,47)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="51" y="1028" width="9" height="15" fill="rgb(232,219,25)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="51" y="1044" width="9" height="15" fill="rgb(215,137,53)"/><text x="54.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="51" y="1060" width="9" height="15" fill="rgb(233,7,45)"/><text x="54.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="51" y="1076" width="9" height="15" fill="rgb(241,11,9)"/><text x="54.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="51" y="1092" width="9" height="15" fill="rgb(230,109,34)"/><text x="54.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.25%)</title><rect x="57" y="1108" width="3" height="15" fill="rgb(237,91,21)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1124" width="3" height="15" fill="rgb(213,39,26)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1140" width="3" height="15" fill="rgb(212,108,21)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1156" width="3" height="15" fill="rgb(243,114,24)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1172" width="3" height="15" fill="rgb(220,11,38)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1188" width="3" height="15" fill="rgb(218,140,22)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.25%)</title><rect x="57" y="1204" width="3" height="15" fill="rgb(250,219,20)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1220" width="3" height="15" fill="rgb(232,201,39)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1236" width="3" height="15" fill="rgb(212,178,1)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1252" width="3" height="15" fill="rgb(205,109,9)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1268" width="3" height="15" fill="rgb(224,207,54)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1284" width="3" height="15" fill="rgb(249,144,44)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.25%)</title><rect x="57" y="1300" width="3" height="15" fill="rgb(231,223,33)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1316" width="3" height="15" fill="rgb(206,122,16)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1332" width="3" height="15" fill="rgb(207,204,7)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1348" width="3" height="15" fill="rgb(213,196,34)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1364" width="3" height="15" fill="rgb(249,108,32)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1380" width="3" height="15" fill="rgb(206,153,51)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.25%)</title><rect x="57" y="1396" width="3" height="15" fill="rgb(213,199,13)"/><text x="60.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1412" width="3" height="15" fill="rgb(206,87,25)"/><text x="60.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1428" width="3" height="15" fill="rgb(211,84,3)"/><text x="60.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1444" width="3" height="15" fill="rgb(223,97,41)"/><text x="60.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1460" width="3" height="15" fill="rgb(211,163,34)"/><text x="60.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1476" width="3" height="15" fill="rgb(251,63,26)"/><text x="60.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.25%)</title><rect x="57" y="1492" width="3" height="15" fill="rgb(232,196,0)"/><text x="60.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1508" width="3" height="15" fill="rgb(243,167,34)"/><text x="60.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1524" width="3" height="15" fill="rgb(240,133,9)"/><text x="60.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1540" width="3" height="15" fill="rgb(237,158,23)"/><text x="60.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1556" width="3" height="15" fill="rgb(215,3,13)"/><text x="60.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1572" width="3" height="15" fill="rgb(213,102,45)"/><text x="60.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1588" width="3" height="15" fill="rgb(214,50,12)"/><text x="60.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1604" width="3" height="15" fill="rgb(231,70,42)"/><text x="60.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1620" width="3" height="15" fill="rgb(226,112,34)"/><text x="60.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.25%)</title><rect x="57" y="1636" width="3" height="15" fill="rgb(250,179,28)"/><text x="60.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1652" width="3" height="15" fill="rgb(250,190,22)"/><text x="60.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1668" width="3" height="15" fill="rgb(229,156,17)"/><text x="60.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1684" width="3" height="15" fill="rgb(223,96,31)"/><text x="60.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1700" width="3" height="15" fill="rgb(213,89,18)"/><text x="60.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1716" width="3" height="15" fill="rgb(238,93,29)"/><text x="60.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1732" width="3" height="15" fill="rgb(245,7,42)"/><text x="60.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1748" width="3" height="15" fill="rgb(227,134,0)"/><text x="60.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.25%)</title><rect x="57" y="1764" width="3" height="15" fill="rgb(228,50,32)"/><text x="60.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1780" width="3" height="15" fill="rgb(221,54,24)"/><text x="60.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1796" width="3" height="15" fill="rgb(218,154,17)"/><text x="60.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1812" width="3" height="15" fill="rgb(233,24,38)"/><text x="60.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1828" width="3" height="15" fill="rgb(222,146,33)"/><text x="60.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="57" y="1844" width="3" height="15" fill="rgb(215,30,44)"/><text x="60.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.25%)</title><rect x="57" y="1860" width="3" height="15" fill="rgb(226,193,20)"/><text x="60.00" y="1870.50"></text></g><g><title>__init__ (matplotlib/fontconfig_pattern.py) (1 samples, 0.25%)</title><rect x="57" y="1876" width="3" height="15" fill="rgb(215,52,14)"/><text x="60.00" y="1886.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.25%)</title><rect x="57" y="1892" width="3" height="15" fill="rgb(233,26,44)"/><text x="60.00" y="1902.50"></text></g><g><title>compile (re.py) (1 samples, 0.25%)</title><rect x="57" y="1908" width="3" height="15" fill="rgb(249,21,14)"/><text x="60.00" y="1918.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="57" y="1924" width="3" height="15" fill="rgb(224,19,7)"/><text x="60.00" y="1934.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="57" y="1940" width="3" height="15" fill="rgb(218,144,46)"/><text x="60.00" y="1950.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="57" y="1956" width="3" height="15" fill="rgb(219,165,52)"/><text x="60.00" y="1966.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="57" y="1972" width="3" height="15" fill="rgb(242,134,47)"/><text x="60.00" y="1982.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="57" y="1988" width="3" height="15" fill="rgb(227,35,2)"/><text x="60.00" y="1998.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="57" y="2004" width="3" height="15" fill="rgb(227,61,16)"/><text x="60.00" y="2014.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="57" y="2020" width="3" height="15" fill="rgb(214,114,22)"/><text x="60.00" y="2030.50"></text></g><g><title>&lt;module&gt; (pandas/core/config_init.py) (1 samples, 0.25%)</title><rect x="60" y="724" width="2" height="15" fill="rgb(222,225,13)"/><text x="63.00" y="734.50"></text></g><g><title>inner (pandas/_config/config.py) (1 samples, 0.25%)</title><rect x="60" y="740" width="2" height="15" fill="rgb(217,171,39)"/><text x="63.00" y="750.50"></text></g><g><title>register_option (pandas/_config/config.py) (1 samples, 0.25%)</title><rect x="60" y="756" width="2" height="15" fill="rgb(219,3,19)"/><text x="63.00" y="766.50"></text></g><g><title>match (re.py) (1 samples, 0.25%)</title><rect x="60" y="772" width="2" height="15" fill="rgb(240,39,28)"/><text x="63.00" y="782.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="60" y="788" width="2" height="15" fill="rgb(213,163,34)"/><text x="63.00" y="798.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 3.24%)</title><rect x="27" y="340" width="38" height="15" fill="rgb(214,11,23)"/><text x="30.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.24%)</title><rect x="27" y="356" width="38" height="15" fill="rgb(222,41,16)"/><text x="30.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.24%)</title><rect x="27" y="372" width="38" height="15" fill="rgb(234,33,46)"/><text x="30.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.24%)</title><rect x="27" y="388" width="38" height="15" fill="rgb(248,192,44)"/><text x="30.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.24%)</title><rect x="27" y="404" width="38" height="15" fill="rgb(217,119,47)"/><text x="30.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.24%)</title><rect x="27" y="420" width="38" height="15" fill="rgb(230,191,40)"/><text x="30.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (13 samples, 3.24%)</title><rect x="27" y="436" width="38" height="15" fill="rgb(207,8,39)"/><text x="30.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.24%)</title><rect x="27" y="452" width="38" height="15" fill="rgb(230,176,14)"/><text x="30.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.24%)</title><rect x="27" y="468" width="38" height="15" fill="rgb(233,183,28)"/><text x="30.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="484" width="29" height="15" fill="rgb(210,178,23)"/><text x="39.00" y="494.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.49%)</title><rect x="36" y="500" width="29" height="15" fill="rgb(235,166,29)"/><text x="39.00" y="510.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="516" width="29" height="15" fill="rgb(234,42,53)"/><text x="39.00" y="526.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (10 samples, 2.49%)</title><rect x="36" y="532" width="29" height="15" fill="rgb(239,15,44)"/><text x="39.00" y="542.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="548" width="29" height="15" fill="rgb(211,17,11)"/><text x="39.00" y="558.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="564" width="29" height="15" fill="rgb(231,210,15)"/><text x="39.00" y="574.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="580" width="29" height="15" fill="rgb(239,210,37)"/><text x="39.00" y="590.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.49%)</title><rect x="36" y="596" width="29" height="15" fill="rgb(226,32,12)"/><text x="39.00" y="606.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="612" width="29" height="15" fill="rgb(236,176,45)"/><text x="39.00" y="622.50">_c..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (10 samples, 2.49%)</title><rect x="36" y="628" width="29" height="15" fill="rgb(209,55,49)"/><text x="39.00" y="638.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="644" width="29" height="15" fill="rgb(245,184,22)"/><text x="39.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="660" width="29" height="15" fill="rgb(243,222,13)"/><text x="39.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="676" width="29" height="15" fill="rgb(233,144,43)"/><text x="39.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.49%)</title><rect x="36" y="692" width="29" height="15" fill="rgb(250,96,21)"/><text x="39.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.49%)</title><rect x="36" y="708" width="29" height="15" fill="rgb(221,12,29)"/><text x="39.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/reshape/api.py) (1 samples, 0.25%)</title><rect x="62" y="724" width="3" height="15" fill="rgb(218,178,37)"/><text x="65.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="62" y="740" width="3" height="15" fill="rgb(244,71,36)"/><text x="65.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="62" y="756" width="3" height="15" fill="rgb(221,164,0)"/><text x="65.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="62" y="772" width="3" height="15" fill="rgb(207,59,43)"/><text x="65.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="62" y="788" width="3" height="15" fill="rgb(223,70,28)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="62" y="804" width="3" height="15" fill="rgb(226,175,17)"/><text x="65.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/reshape/melt.py) (1 samples, 0.25%)</title><rect x="62" y="820" width="3" height="15" fill="rgb(229,42,51)"/><text x="65.00" y="830.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.25%)</title><rect x="62" y="836" width="3" height="15" fill="rgb(228,198,28)"/><text x="65.00" y="846.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.25%)</title><rect x="62" y="852" width="3" height="15" fill="rgb(223,33,52)"/><text x="65.00" y="862.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.25%)</title><rect x="62" y="868" width="3" height="15" fill="rgb(234,121,43)"/><text x="65.00" y="878.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.25%)</title><rect x="62" y="884" width="3" height="15" fill="rgb(237,15,31)"/><text x="65.00" y="894.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.25%)</title><rect x="62" y="900" width="3" height="15" fill="rgb(215,47,6)"/><text x="65.00" y="910.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.25%)</title><rect x="62" y="916" width="3" height="15" fill="rgb(239,75,0)"/><text x="65.00" y="926.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.25%)</title><rect x="65" y="580" width="3" height="15" fill="rgb(240,131,7)"/><text x="68.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="596" width="3" height="15" fill="rgb(214,123,27)"/><text x="68.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="612" width="3" height="15" fill="rgb(241,52,23)"/><text x="68.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="628" width="3" height="15" fill="rgb(254,175,0)"/><text x="68.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="65" y="644" width="3" height="15" fill="rgb(252,96,2)"/><text x="68.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="660" width="3" height="15" fill="rgb(218,185,4)"/><text x="68.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.25%)</title><rect x="65" y="676" width="3" height="15" fill="rgb(217,226,23)"/><text x="68.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="692" width="3" height="15" fill="rgb(208,101,12)"/><text x="68.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="708" width="3" height="15" fill="rgb(249,76,44)"/><text x="68.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="724" width="3" height="15" fill="rgb(215,20,2)"/><text x="68.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="65" y="740" width="3" height="15" fill="rgb(244,98,5)"/><text x="68.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="65" y="756" width="3" height="15" fill="rgb(248,76,5)"/><text x="68.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.25%)</title><rect x="65" y="772" width="3" height="15" fill="rgb(226,156,8)"/><text x="68.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (15 samples, 3.74%)</title><rect x="27" y="244" width="44" height="15" fill="rgb(243,82,2)"/><text x="30.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.74%)</title><rect x="27" y="260" width="44" height="15" fill="rgb(253,184,51)"/><text x="30.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.74%)</title><rect x="27" y="276" width="44" height="15" fill="rgb(254,36,27)"/><text x="30.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.74%)</title><rect x="27" y="292" width="44" height="15" fill="rgb(216,187,43)"/><text x="30.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 3.74%)</title><rect x="27" y="308" width="44" height="15" fill="rgb(243,177,53)"/><text x="30.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.74%)</title><rect x="27" y="324" width="44" height="15" fill="rgb(242,212,32)"/><text x="30.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.50%)</title><rect x="65" y="340" width="6" height="15" fill="rgb(248,160,36)"/><text x="68.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="356" width="6" height="15" fill="rgb(244,0,47)"/><text x="68.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="372" width="6" height="15" fill="rgb(243,25,49)"/><text x="68.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="388" width="6" height="15" fill="rgb(226,157,44)"/><text x="68.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="404" width="6" height="15" fill="rgb(243,59,31)"/><text x="68.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="420" width="6" height="15" fill="rgb(221,26,21)"/><text x="68.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="436" width="6" height="15" fill="rgb(249,99,8)"/><text x="68.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="65" y="452" width="6" height="15" fill="rgb(251,79,39)"/><text x="68.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="468" width="6" height="15" fill="rgb(206,97,51)"/><text x="68.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.50%)</title><rect x="65" y="484" width="6" height="15" fill="rgb(254,146,0)"/><text x="68.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="500" width="6" height="15" fill="rgb(248,72,51)"/><text x="68.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="516" width="6" height="15" fill="rgb(206,70,5)"/><text x="68.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="532" width="6" height="15" fill="rgb(216,71,17)"/><text x="68.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="65" y="548" width="6" height="15" fill="rgb(219,107,34)"/><text x="68.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="65" y="564" width="6" height="15" fill="rgb(229,178,23)"/><text x="68.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.25%)</title><rect x="68" y="580" width="3" height="15" fill="rgb(236,16,25)"/><text x="71.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="596" width="3" height="15" fill="rgb(216,10,42)"/><text x="71.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="612" width="3" height="15" fill="rgb(217,159,20)"/><text x="71.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="628" width="3" height="15" fill="rgb(224,53,22)"/><text x="71.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="644" width="3" height="15" fill="rgb(243,25,20)"/><text x="71.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="660" width="3" height="15" fill="rgb(230,219,33)"/><text x="71.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.25%)</title><rect x="68" y="676" width="3" height="15" fill="rgb(254,102,50)"/><text x="71.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="692" width="3" height="15" fill="rgb(253,20,33)"/><text x="71.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="708" width="3" height="15" fill="rgb(205,11,32)"/><text x="71.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="724" width="3" height="15" fill="rgb(217,55,33)"/><text x="71.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="740" width="3" height="15" fill="rgb(249,151,15)"/><text x="71.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="756" width="3" height="15" fill="rgb(213,128,13)"/><text x="71.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.25%)</title><rect x="68" y="772" width="3" height="15" fill="rgb(246,117,52)"/><text x="71.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="788" width="3" height="15" fill="rgb(219,76,21)"/><text x="71.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="804" width="3" height="15" fill="rgb(215,109,10)"/><text x="71.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="820" width="3" height="15" fill="rgb(219,210,30)"/><text x="71.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="836" width="3" height="15" fill="rgb(209,173,33)"/><text x="71.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="852" width="3" height="15" fill="rgb(221,103,53)"/><text x="71.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.25%)</title><rect x="68" y="868" width="3" height="15" fill="rgb(213,54,27)"/><text x="71.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="884" width="3" height="15" fill="rgb(212,24,12)"/><text x="71.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="900" width="3" height="15" fill="rgb(216,91,34)"/><text x="71.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="916" width="3" height="15" fill="rgb(245,112,14)"/><text x="71.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="932" width="3" height="15" fill="rgb(227,184,0)"/><text x="71.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="948" width="3" height="15" fill="rgb(243,174,11)"/><text x="71.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.25%)</title><rect x="68" y="964" width="3" height="15" fill="rgb(206,160,32)"/><text x="71.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="980" width="3" height="15" fill="rgb(218,52,52)"/><text x="71.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="996" width="3" height="15" fill="rgb(232,218,47)"/><text x="71.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1012" width="3" height="15" fill="rgb(249,75,1)"/><text x="71.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="1028" width="3" height="15" fill="rgb(245,15,3)"/><text x="71.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1044" width="3" height="15" fill="rgb(252,149,42)"/><text x="71.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py) (1 samples, 0.25%)</title><rect x="68" y="1060" width="3" height="15" fill="rgb(225,195,2)"/><text x="71.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1076" width="3" height="15" fill="rgb(232,142,43)"/><text x="71.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1092" width="3" height="15" fill="rgb(215,7,9)"/><text x="71.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1108" width="3" height="15" fill="rgb(212,53,16)"/><text x="71.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="1124" width="3" height="15" fill="rgb(221,81,35)"/><text x="71.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1140" width="3" height="15" fill="rgb(229,136,51)"/><text x="71.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py) (1 samples, 0.25%)</title><rect x="68" y="1156" width="3" height="15" fill="rgb(226,180,40)"/><text x="71.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1172" width="3" height="15" fill="rgb(205,94,22)"/><text x="71.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1188" width="3" height="15" fill="rgb(228,166,36)"/><text x="71.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1204" width="3" height="15" fill="rgb(232,139,22)"/><text x="71.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="1220" width="3" height="15" fill="rgb(220,76,14)"/><text x="71.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1236" width="3" height="15" fill="rgb(238,216,32)"/><text x="71.00" y="1246.50"></text></g><g><title>&lt;module&gt; (chardet/chardistribution.py) (1 samples, 0.25%)</title><rect x="68" y="1252" width="3" height="15" fill="rgb(206,7,54)"/><text x="71.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1268" width="3" height="15" fill="rgb(248,181,1)"/><text x="71.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1284" width="3" height="15" fill="rgb(248,89,21)"/><text x="71.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="68" y="1300" width="3" height="15" fill="rgb(223,169,14)"/><text x="71.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="1316" width="3" height="15" fill="rgb(246,168,4)"/><text x="71.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="1332" width="3" height="15" fill="rgb(248,171,19)"/><text x="71.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="68" y="1348" width="3" height="15" fill="rgb(235,94,24)"/><text x="71.00" y="1358.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.25%)</title><rect x="71" y="372" width="3" height="15" fill="rgb(254,151,49)"/><text x="74.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="388" width="3" height="15" fill="rgb(215,135,2)"/><text x="74.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="404" width="3" height="15" fill="rgb(239,202,21)"/><text x="74.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="420" width="3" height="15" fill="rgb(227,55,40)"/><text x="74.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="71" y="436" width="3" height="15" fill="rgb(214,20,43)"/><text x="74.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="452" width="3" height="15" fill="rgb(236,221,11)"/><text x="74.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.25%)</title><rect x="71" y="468" width="3" height="15" fill="rgb(226,52,9)"/><text x="74.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="484" width="3" height="15" fill="rgb(252,88,53)"/><text x="74.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="500" width="3" height="15" fill="rgb(231,66,29)"/><text x="74.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="516" width="3" height="15" fill="rgb(214,80,8)"/><text x="74.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="71" y="532" width="3" height="15" fill="rgb(242,81,9)"/><text x="74.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="71" y="548" width="3" height="15" fill="rgb(233,161,35)"/><text x="74.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/stride_tricks.py) (1 samples, 0.25%)</title><rect x="71" y="564" width="3" height="15" fill="rgb(214,194,39)"/><text x="74.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.74%)</title><rect x="10" y="68" width="67" height="15" fill="rgb(238,51,42)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.74%)</title><rect x="10" y="84" width="67" height="15" fill="rgb(250,40,32)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.74%)</title><rect x="10" y="100" width="67" height="15" fill="rgb(228,164,14)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (23 samples, 5.74%)</title><rect x="10" y="116" width="67" height="15" fill="rgb(240,154,47)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.74%)</title><rect x="10" y="132" width="67" height="15" fill="rgb(239,5,32)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py) (23 samples, 5.74%)</title><rect x="10" y="148" width="67" height="15" fill="rgb(218,132,4)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.74%)</title><rect x="10" y="164" width="67" height="15" fill="rgb(252,199,19)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (23 samples, 5.74%)</title><rect x="10" y="180" width="67" height="15" fill="rgb(250,222,42)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.24%)</title><rect x="27" y="196" width="50" height="15" fill="rgb(230,227,30)"/><text x="30.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 4.24%)</title><rect x="27" y="212" width="50" height="15" fill="rgb(217,203,41)"/><text x="30.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.24%)</title><rect x="27" y="228" width="50" height="15" fill="rgb(254,221,48)"/><text x="30.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.50%)</title><rect x="71" y="244" width="6" height="15" fill="rgb(242,222,47)"/><text x="74.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="71" y="260" width="6" height="15" fill="rgb(215,181,11)"/><text x="74.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="71" y="276" width="6" height="15" fill="rgb(247,129,40)"/><text x="74.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="71" y="292" width="6" height="15" fill="rgb(234,203,16)"/><text x="74.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="71" y="308" width="6" height="15" fill="rgb(213,41,47)"/><text x="74.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="71" y="324" width="6" height="15" fill="rgb(246,5,15)"/><text x="74.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="71" y="340" width="6" height="15" fill="rgb(209,140,52)"/><text x="74.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="71" y="356" width="6" height="15" fill="rgb(228,59,24)"/><text x="74.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py) (1 samples, 0.25%)</title><rect x="74" y="372" width="3" height="15" fill="rgb(232,190,23)"/><text x="77.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="74" y="388" width="3" height="15" fill="rgb(254,183,29)"/><text x="77.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="74" y="404" width="3" height="15" fill="rgb(208,192,6)"/><text x="77.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="74" y="420" width="3" height="15" fill="rgb(206,202,33)"/><text x="77.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="74" y="436" width="3" height="15" fill="rgb(248,222,24)"/><text x="77.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="74" y="452" width="3" height="15" fill="rgb(251,223,32)"/><text x="77.00" y="462.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="74" y="468" width="3" height="15" fill="rgb(214,133,47)"/><text x="77.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="74" y="484" width="3" height="15" fill="rgb(241,87,16)"/><text x="77.00" y="494.50"></text></g><g><title>0x7f79dd8bd8a4 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="74" y="500" width="3" height="15" fill="rgb(224,82,50)"/><text x="77.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="80" y="116" width="3" height="15" fill="rgb(245,102,9)"/><text x="83.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="80" y="132" width="3" height="15" fill="rgb(242,179,52)"/><text x="83.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="80" y="148" width="3" height="15" fill="rgb(227,95,33)"/><text x="83.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="92" y="180" width="3" height="15" fill="rgb(235,74,4)"/><text x="95.00" y="190.50"></text></g><g><title>0x7f799b93eff9 (?) (1 samples, 0.25%)</title><rect x="124" y="212" width="3" height="15" fill="rgb(232,28,29)"/><text x="127.00" y="222.50"></text></g><g><title>0x7f799b939ef6 (?) (1 samples, 0.25%)</title><rect x="124" y="228" width="3" height="15" fill="rgb(248,216,29)"/><text x="127.00" y="238.50"></text></g><g><title>0x7f799b92e962 (?) (1 samples, 0.25%)</title><rect x="124" y="244" width="3" height="15" fill="rgb(218,120,0)"/><text x="127.00" y="254.50"></text></g><g><title>0x7f799b9627a7 (?) (1 samples, 0.25%)</title><rect x="124" y="260" width="3" height="15" fill="rgb(239,131,14)"/><text x="127.00" y="270.50"></text></g><g><title>0x7f799b962379 (?) (1 samples, 0.25%)</title><rect x="124" y="276" width="3" height="15" fill="rgb(210,68,16)"/><text x="127.00" y="286.50"></text></g><g><title>0x7f799bdc08b8 (?) (1 samples, 0.25%)</title><rect x="124" y="292" width="3" height="15" fill="rgb(254,52,31)"/><text x="127.00" y="302.50"></text></g><g><title>0x7f799bdbec7f (?) (1 samples, 0.25%)</title><rect x="124" y="308" width="3" height="15" fill="rgb(252,102,21)"/><text x="127.00" y="318.50"></text></g><g><title>0x7f799bdd199c (?) (1 samples, 0.25%)</title><rect x="124" y="324" width="3" height="15" fill="rgb(231,53,9)"/><text x="127.00" y="334.50"></text></g><g><title>0x7f799ba55ee0 (?) (1 samples, 0.25%)</title><rect x="124" y="340" width="3" height="15" fill="rgb(214,94,16)"/><text x="127.00" y="350.50"></text></g><g><title>0x7f799bd8d5e6 (?) (1 samples, 0.25%)</title><rect x="124" y="356" width="3" height="15" fill="rgb(206,145,27)"/><text x="127.00" y="366.50"></text></g><g><title>0x7f799bd8d486 (?) (1 samples, 0.25%)</title><rect x="124" y="372" width="3" height="15" fill="rgb(254,14,41)"/><text x="127.00" y="382.50"></text></g><g><title>0x7f799bd77c8d (?) (1 samples, 0.25%)</title><rect x="124" y="388" width="3" height="15" fill="rgb(254,65,30)"/><text x="127.00" y="398.50"></text></g><g><title>0x7f799bd77202 (?) (1 samples, 0.25%)</title><rect x="124" y="404" width="3" height="15" fill="rgb(242,3,33)"/><text x="127.00" y="414.50"></text></g><g><title>0x7f799bd76913 (?) (1 samples, 0.25%)</title><rect x="124" y="420" width="3" height="15" fill="rgb(236,118,19)"/><text x="127.00" y="430.50"></text></g><g><title>0x7f799bd75daf (?) (1 samples, 0.25%)</title><rect x="124" y="436" width="3" height="15" fill="rgb(213,67,29)"/><text x="127.00" y="446.50"></text></g><g><title>0x7f799bd7078f (?) (1 samples, 0.25%)</title><rect x="124" y="452" width="3" height="15" fill="rgb(233,59,10)"/><text x="127.00" y="462.50"></text></g><g><title>0x7f799bda5e78 (?) (1 samples, 0.25%)</title><rect x="124" y="468" width="3" height="15" fill="rgb(207,113,9)"/><text x="127.00" y="478.50"></text></g><g><title>0x7f799bda5b3d (?) (1 samples, 0.25%)</title><rect x="124" y="484" width="3" height="15" fill="rgb(246,22,53)"/><text x="127.00" y="494.50"></text></g><g><title>0x7f799ba5a413 (?) (1 samples, 0.25%)</title><rect x="124" y="500" width="3" height="15" fill="rgb(236,136,41)"/><text x="127.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="124" y="516" width="3" height="15" fill="rgb(239,126,5)"/><text x="127.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="124" y="532" width="3" height="15" fill="rgb(245,82,39)"/><text x="127.00" y="542.50"></text></g><g><title>0x7ffc6b25da01 ([vdso]) (1 samples, 0.25%)</title><rect x="127" y="212" width="3" height="15" fill="rgb(232,129,20)"/><text x="130.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="133" y="260" width="3" height="15" fill="rgb(243,7,0)"/><text x="136.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="136" y="292" width="3" height="15" fill="rgb(225,113,33)"/><text x="139.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="136" y="308" width="3" height="15" fill="rgb(223,205,39)"/><text x="139.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="136" y="324" width="3" height="15" fill="rgb(234,219,39)"/><text x="139.00" y="334.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="139" y="356" width="3" height="15" fill="rgb(222,21,9)"/><text x="142.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="139" y="372" width="3" height="15" fill="rgb(252,66,5)"/><text x="142.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputArgIndex (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="139" y="388" width="3" height="15" fill="rgb(228,201,30)"/><text x="142.00" y="398.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.25%)</title><rect x="139" y="340" width="15" height="15" fill="rgb(208,163,43)"/><text x="142.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.00%)</title><rect x="142" y="356" width="12" height="15" fill="rgb(227,3,14)"/><text x="145.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.00%)</title><rect x="142" y="372" width="12" height="15" fill="rgb(210,143,10)"/><text x="145.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.00%)</title><rect x="142" y="388" width="12" height="15" fill="rgb(252,17,19)"/><text x="145.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.00%)</title><rect x="142" y="404" width="12" height="15" fill="rgb(228,199,15)"/><text x="145.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.75%)</title><rect x="145" y="420" width="9" height="15" fill="rgb(224,85,41)"/><text x="148.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.75%)</title><rect x="145" y="436" width="9" height="15" fill="rgb(252,213,16)"/><text x="148.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="151" y="452" width="3" height="15" fill="rgb(220,107,26)"/><text x="154.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="151" y="468" width="3" height="15" fill="rgb(250,128,36)"/><text x="154.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="151" y="484" width="3" height="15" fill="rgb(223,211,47)"/><text x="154.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="151" y="500" width="3" height="15" fill="rgb(228,206,8)"/><text x="154.00" y="510.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="154" y="340" width="3" height="15" fill="rgb(241,142,1)"/><text x="157.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="154" y="356" width="3" height="15" fill="rgb(247,59,5)"/><text x="157.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="154" y="372" width="3" height="15" fill="rgb(252,119,36)"/><text x="157.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="154" y="388" width="3" height="15" fill="rgb(254,149,16)"/><text x="157.00" y="398.50"></text></g><g><title>onnxruntime::GemmHelper::GemmHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="157" y="356" width="3" height="15" fill="rgb(220,217,13)"/><text x="160.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.50%)</title><rect x="160" y="356" width="5" height="15" fill="rgb(218,180,41)"/><text x="163.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.50%)</title><rect x="160" y="372" width="5" height="15" fill="rgb(206,1,16)"/><text x="163.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.50%)</title><rect x="160" y="388" width="5" height="15" fill="rgb(239,170,37)"/><text x="163.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.50%)</title><rect x="160" y="404" width="5" height="15" fill="rgb(246,38,1)"/><text x="163.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="163" y="420" width="2" height="15" fill="rgb(233,211,31)"/><text x="166.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="163" y="436" width="2" height="15" fill="rgb(222,99,47)"/><text x="166.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="163" y="452" width="2" height="15" fill="rgb(239,12,18)"/><text x="166.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="163" y="468" width="2" height="15" fill="rgb(248,195,22)"/><text x="166.00" y="478.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.00%)</title><rect x="157" y="340" width="11" height="15" fill="rgb(218,105,2)"/><text x="160.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="165" y="356" width="3" height="15" fill="rgb(244,108,27)"/><text x="168.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.25%)</title><rect x="165" y="372" width="3" height="15" fill="rgb(213,147,35)"/><text x="168.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.25%)</title><rect x="165" y="388" width="3" height="15" fill="rgb(234,179,10)"/><text x="168.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.25%)</title><rect x="165" y="404" width="3" height="15" fill="rgb(248,57,6)"/><text x="168.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.25%)</title><rect x="165" y="420" width="3" height="15" fill="rgb(212,39,13)"/><text x="168.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.25%)</title><rect x="165" y="436" width="3" height="15" fill="rgb(211,46,36)"/><text x="168.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.25%)</title><rect x="165" y="452" width="3" height="15" fill="rgb(220,212,52)"/><text x="168.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.99%)</title><rect x="136" y="276" width="35" height="15" fill="rgb(213,121,54)"/><text x="139.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.74%)</title><rect x="139" y="292" width="32" height="15" fill="rgb(232,141,18)"/><text x="142.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.74%)</title><rect x="139" y="308" width="32" height="15" fill="rgb(216,31,31)"/><text x="142.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.74%)</title><rect x="139" y="324" width="32" height="15" fill="rgb(253,118,15)"/><text x="142.00" y="334.50">on..</text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="168" y="340" width="3" height="15" fill="rgb(228,211,44)"/><text x="171.00" y="350.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="171" y="276" width="3" height="15" fill="rgb(216,143,8)"/><text x="174.00" y="286.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.49%)</title><rect x="136" y="260" width="41" height="15" fill="rgb(241,69,42)"/><text x="139.00" y="270.50">onn..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="174" y="276" width="3" height="15" fill="rgb(244,142,43)"/><text x="177.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.99%)</title><rect x="133" y="244" width="47" height="15" fill="rgb(228,219,50)"/><text x="136.00" y="254.50">onnx..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="177" y="260" width="3" height="15" fill="rgb(210,145,13)"/><text x="180.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="177" y="276" width="3" height="15" fill="rgb(213,162,28)"/><text x="180.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="177" y="292" width="3" height="15" fill="rgb(225,41,24)"/><text x="180.00" y="302.50"></text></g><g><title>0x7f79dd8bb9c1 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="177" y="308" width="3" height="15" fill="rgb(239,204,26)"/><text x="180.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="180" y="244" width="3" height="15" fill="rgb(248,100,40)"/><text x="183.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="180" y="260" width="3" height="15" fill="rgb(240,77,16)"/><text x="183.00" y="270.50"></text></g><g><title>profile_ort (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (37 samples, 9.23%)</title><rect x="77" y="68" width="109" height="15" fill="rgb(254,48,17)"/><text x="80.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (37 samples, 9.23%)</title><rect x="77" y="84" width="109" height="15" fill="rgb(247,12,35)"/><text x="80.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (37 samples, 9.23%)</title><rect x="77" y="100" width="109" height="15" fill="rgb(219,167,34)"/><text x="80.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 8.73%)</title><rect x="83" y="116" width="103" height="15" fill="rgb(242,71,0)"/><text x="86.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 8.73%)</title><rect x="83" y="132" width="103" height="15" fill="rgb(218,64,9)"/><text x="86.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (34 samples, 8.48%)</title><rect x="86" y="148" width="100" height="15" fill="rgb(223,52,1)"/><text x="89.00" y="158.50">run (mlprodi..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (32 samples, 7.98%)</title><rect x="92" y="164" width="94" height="15" fill="rgb(218,46,17)"/><text x="95.00" y="174.50">_run_whole_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (31 samples, 7.73%)</title><rect x="95" y="180" width="91" height="15" fill="rgb(221,15,50)"/><text x="98.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py) (27 samples, 6.73%)</title><rect x="107" y="196" width="79" height="15" fill="rgb(241,136,11)"/><text x="110.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 4.74%)</title><rect x="130" y="212" width="56" height="15" fill="rgb(235,134,24)"/><text x="133.00" y="222.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 4.74%)</title><rect x="130" y="228" width="56" height="15" fill="rgb(250,139,20)"/><text x="133.00" y="238.50">void ..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="183" y="244" width="3" height="15" fill="rgb(225,161,12)"/><text x="186.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="186" y="116" width="3" height="15" fill="rgb(245,212,9)"/><text x="189.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="186" y="132" width="3" height="15" fill="rgb(219,41,43)"/><text x="189.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="186" y="148" width="3" height="15" fill="rgb(247,170,16)"/><text x="189.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="186" y="164" width="3" height="15" fill="rgb(212,72,28)"/><text x="189.00" y="174.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="369" y="292" width="2" height="15" fill="rgb(216,106,29)"/><text x="372.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.50%)</title><rect x="369" y="212" width="5" height="15" fill="rgb(227,110,9)"/><text x="372.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.50%)</title><rect x="369" y="228" width="5" height="15" fill="rgb(253,190,44)"/><text x="372.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.50%)</title><rect x="369" y="244" width="5" height="15" fill="rgb(246,152,0)"/><text x="372.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.50%)</title><rect x="369" y="260" width="5" height="15" fill="rgb(211,163,18)"/><text x="372.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.50%)</title><rect x="369" y="276" width="5" height="15" fill="rgb(250,189,12)"/><text x="372.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="371" y="292" width="3" height="15" fill="rgb(228,22,28)"/><text x="374.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.25%)</title><rect x="374" y="212" width="3" height="15" fill="rgb(219,171,46)"/><text x="377.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.25%)</title><rect x="374" y="228" width="3" height="15" fill="rgb(252,178,31)"/><text x="377.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.25%)</title><rect x="374" y="244" width="3" height="15" fill="rgb(209,200,29)"/><text x="377.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.25%)</title><rect x="374" y="260" width="3" height="15" fill="rgb(224,203,37)"/><text x="377.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.25%)</title><rect x="374" y="276" width="3" height="15" fill="rgb(220,1,10)"/><text x="377.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.25%)</title><rect x="374" y="292" width="3" height="15" fill="rgb(223,120,26)"/><text x="377.00" y="302.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.25%)</title><rect x="392" y="244" width="3" height="15" fill="rgb(215,20,35)"/><text x="395.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.25%)</title><rect x="401" y="308" width="3" height="15" fill="rgb(214,140,10)"/><text x="404.00" y="318.50"></text></g><g><title>0x7f79dd999134 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="401" y="324" width="3" height="15" fill="rgb(245,49,12)"/><text x="404.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.00%)</title><rect x="395" y="260" width="12" height="15" fill="rgb(218,13,1)"/><text x="398.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.00%)</title><rect x="395" y="276" width="12" height="15" fill="rgb(228,91,16)"/><text x="398.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.50%)</title><rect x="401" y="292" width="6" height="15" fill="rgb(237,142,48)"/><text x="404.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="404" y="308" width="3" height="15" fill="rgb(247,28,50)"/><text x="407.00" y="318.50"></text></g><g><title>0x7f79dd8bb902 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="413" y="340" width="3" height="15" fill="rgb(224,143,13)"/><text x="416.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="416" y="356" width="3" height="15" fill="rgb(241,23,7)"/><text x="419.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="416" y="372" width="3" height="15" fill="rgb(230,93,7)"/><text x="419.00" y="382.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (2 samples, 0.50%)</title><rect x="419" y="356" width="5" height="15" fill="rgb(227,160,11)"/><text x="422.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (2 samples, 0.50%)</title><rect x="419" y="372" width="5" height="15" fill="rgb(235,191,48)"/><text x="422.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (6 samples, 1.50%)</title><rect x="410" y="292" width="17" height="15" fill="rgb(247,5,35)"/><text x="413.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (5 samples, 1.25%)</title><rect x="413" y="308" width="14" height="15" fill="rgb(232,190,9)"/><text x="416.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (5 samples, 1.25%)</title><rect x="413" y="324" width="14" height="15" fill="rgb(218,58,27)"/><text x="416.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (4 samples, 1.00%)</title><rect x="416" y="340" width="11" height="15" fill="rgb(222,203,33)"/><text x="419.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="424" y="356" width="3" height="15" fill="rgb(227,12,12)"/><text x="427.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="424" y="372" width="3" height="15" fill="rgb(241,1,11)"/><text x="427.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="427" y="324" width="3" height="15" fill="rgb(248,100,31)"/><text x="430.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.25%)</title><rect x="430" y="324" width="3" height="15" fill="rgb(225,227,44)"/><text x="433.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.25%)</title><rect x="433" y="324" width="3" height="15" fill="rgb(208,151,9)"/><text x="436.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.00%)</title><rect x="427" y="308" width="12" height="15" fill="rgb(238,0,9)"/><text x="430.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.25%)</title><rect x="436" y="324" width="3" height="15" fill="rgb(228,155,54)"/><text x="439.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 2.74%)</title><rect x="410" y="276" width="32" height="15" fill="rgb(206,83,27)"/><text x="413.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.25%)</title><rect x="427" y="292" width="15" height="15" fill="rgb(251,169,15)"/><text x="430.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.25%)</title><rect x="439" y="308" width="3" height="15" fill="rgb(244,19,54)"/><text x="442.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (20 samples, 4.99%)</title><rect x="386" y="228" width="59" height="15" fill="rgb(220,181,40)"/><text x="389.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 4.24%)</title><rect x="395" y="244" width="50" height="15" fill="rgb(225,75,14)"/><text x="398.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 3.24%)</title><rect x="407" y="260" width="38" height="15" fill="rgb(226,99,20)"/><text x="410.00" y="270.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="442" y="276" width="3" height="15" fill="rgb(225,77,8)"/><text x="445.00" y="286.50"></text></g><g><title>0x7f79dd8dc120 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="463" y="260" width="3" height="15" fill="rgb(236,88,34)"/><text x="466.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.25%)</title><rect x="466" y="260" width="3" height="15" fill="rgb(253,40,29)"/><text x="469.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (4 samples, 1.00%)</title><rect x="469" y="276" width="11" height="15" fill="rgb(235,107,40)"/><text x="472.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.25%)</title><rect x="477" y="292" width="3" height="15" fill="rgb(249,134,46)"/><text x="480.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="477" y="308" width="3" height="15" fill="rgb(235,113,36)"/><text x="480.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="477" y="324" width="3" height="15" fill="rgb(223,186,0)"/><text x="480.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (6 samples, 1.50%)</title><rect x="469" y="260" width="17" height="15" fill="rgb(242,78,9)"/><text x="472.00" y="270.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.50%)</title><rect x="480" y="276" width="6" height="15" fill="rgb(249,10,17)"/><text x="483.00" y="286.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.25%)</title><rect x="483" y="292" width="3" height="15" fill="rgb(218,36,40)"/><text x="486.00" y="302.50"></text></g><g><title>unpack_tuple (mapping.c) (1 samples, 0.25%)</title><rect x="483" y="308" width="3" height="15" fill="rgb(251,92,40)"/><text x="486.00" y="318.50"></text></g><g><title>arrayflags_getitem (flagsobject.c) (1 samples, 0.25%)</title><rect x="486" y="260" width="3" height="15" fill="rgb(254,176,0)"/><text x="489.00" y="270.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.25%)</title><rect x="501" y="340" width="3" height="15" fill="rgb(224,144,10)"/><text x="504.00" y="350.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (3 samples, 0.75%)</title><rect x="498" y="324" width="9" height="15" fill="rgb(246,97,30)"/><text x="501.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.25%)</title><rect x="504" y="340" width="3" height="15" fill="rgb(252,91,46)"/><text x="507.00" y="350.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c) (2 samples, 0.50%)</title><rect x="507" y="340" width="6" height="15" fill="rgb(240,200,34)"/><text x="510.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c) (2 samples, 0.50%)</title><rect x="507" y="356" width="6" height="15" fill="rgb(211,123,49)"/><text x="510.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.25%)</title><rect x="510" y="372" width="3" height="15" fill="rgb(228,80,30)"/><text x="513.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.25%)</title><rect x="510" y="388" width="3" height="15" fill="rgb(216,125,51)"/><text x="513.00" y="398.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="510" y="404" width="3" height="15" fill="rgb(224,39,40)"/><text x="513.00" y="414.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.25%)</title><rect x="510" y="420" width="3" height="15" fill="rgb(254,207,18)"/><text x="513.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.50%)</title><rect x="513" y="340" width="6" height="15" fill="rgb(253,30,21)"/><text x="516.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.50%)</title><rect x="513" y="356" width="6" height="15" fill="rgb(247,84,37)"/><text x="516.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="516" y="372" width="3" height="15" fill="rgb(249,154,22)"/><text x="519.00" y="382.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.25%)</title><rect x="519" y="340" width="3" height="15" fill="rgb(239,20,8)"/><text x="522.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="519" y="356" width="3" height="15" fill="rgb(228,6,1)"/><text x="522.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="519" y="372" width="3" height="15" fill="rgb(247,142,49)"/><text x="522.00" y="382.50"></text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="519" y="388" width="3" height="15" fill="rgb(239,133,47)"/><text x="522.00" y="398.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.25%)</title><rect x="522" y="356" width="2" height="15" fill="rgb(215,200,1)"/><text x="525.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="522" y="372" width="2" height="15" fill="rgb(216,138,49)"/><text x="525.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="522" y="388" width="2" height="15" fill="rgb(237,91,23)"/><text x="525.00" y="398.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.25%)</title><rect x="524" y="372" width="3" height="15" fill="rgb(234,153,10)"/><text x="527.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.25%)</title><rect x="524" y="388" width="3" height="15" fill="rgb(253,130,30)"/><text x="527.00" y="398.50"></text></g><g><title>0x7f79dd8737c2 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="524" y="404" width="3" height="15" fill="rgb(232,167,34)"/><text x="527.00" y="414.50"></text></g><g><title>0x7f79dd8dbd50 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="524" y="420" width="3" height="15" fill="rgb(227,83,32)"/><text x="527.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (29 samples, 7.23%)</title><rect x="445" y="228" width="85" height="15" fill="rgb(220,17,25)"/><text x="448.00" y="238.50">_run (mlpr..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (27 samples, 6.73%)</title><rect x="451" y="244" width="79" height="15" fill="rgb(209,62,39)"/><text x="454.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (14 samples, 3.49%)</title><rect x="489" y="260" width="41" height="15" fill="rgb(243,21,28)"/><text x="492.00" y="270.50">dot..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 2.99%)</title><rect x="495" y="276" width="35" height="15" fill="rgb(218,86,54)"/><text x="498.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (11 samples, 2.74%)</title><rect x="498" y="292" width="32" height="15" fill="rgb(215,170,8)"/><text x="501.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (11 samples, 2.74%)</title><rect x="498" y="308" width="32" height="15" fill="rgb(248,193,27)"/><text x="501.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (8 samples, 2.00%)</title><rect x="507" y="324" width="23" height="15" fill="rgb(238,62,7)"/><text x="510.00" y="334.50">c..</text></g><g><title>new_array_for_sum (common.c) (3 samples, 0.75%)</title><rect x="522" y="340" width="8" height="15" fill="rgb(208,11,16)"/><text x="525.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.50%)</title><rect x="524" y="356" width="6" height="15" fill="rgb(237,111,20)"/><text x="527.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.25%)</title><rect x="527" y="372" width="3" height="15" fill="rgb(211,132,47)"/><text x="530.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="530" y="276" width="3" height="15" fill="rgb(230,204,49)"/><text x="533.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.25%)</title><rect x="530" y="292" width="3" height="15" fill="rgb(212,226,6)"/><text x="533.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.25%)</title><rect x="530" y="308" width="3" height="15" fill="rgb(225,10,22)"/><text x="533.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.25%)</title><rect x="530" y="324" width="3" height="15" fill="rgb(214,180,48)"/><text x="533.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (116 samples, 28.93%)</title><rect x="195" y="132" width="341" height="15" fill="rgb(235,211,10)"/><text x="198.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (115 samples, 28.68%)</title><rect x="198" y="148" width="338" height="15" fill="rgb(214,8,25)"/><text x="201.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (113 samples, 28.18%)</title><rect x="204" y="164" width="332" height="15" fill="rgb(244,105,46)"/><text x="207.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (102 samples, 25.44%)</title><rect x="236" y="180" width="300" height="15" fill="rgb(248,93,0)"/><text x="239.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (64 samples, 15.96%)</title><rect x="348" y="196" width="188" height="15" fill="rgb(234,5,1)"/><text x="351.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (54 samples, 13.47%)</title><rect x="377" y="212" width="159" height="15" fill="rgb(205,6,37)"/><text x="380.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (2 samples, 0.50%)</title><rect x="530" y="228" width="6" height="15" fill="rgb(205,192,36)"/><text x="533.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.50%)</title><rect x="530" y="244" width="6" height="15" fill="rgb(249,183,10)"/><text x="533.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.50%)</title><rect x="530" y="260" width="6" height="15" fill="rgb(240,210,35)"/><text x="533.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.25%)</title><rect x="533" y="276" width="3" height="15" fill="rgb(253,120,4)"/><text x="536.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="533" y="292" width="3" height="15" fill="rgb(219,206,46)"/><text x="536.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="533" y="308" width="3" height="15" fill="rgb(212,166,1)"/><text x="536.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="533" y="324" width="3" height="15" fill="rgb(212,105,50)"/><text x="536.00" y="334.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.25%)</title><rect x="536" y="132" width="3" height="15" fill="rgb(230,80,22)"/><text x="539.00" y="142.50"></text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (121 samples, 30.17%)</title><rect x="186" y="100" width="356" height="15" fill="rgb(250,77,7)"/><text x="189.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_4_12..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (120 samples, 29.93%)</title><rect x="189" y="116" width="353" height="15" fill="rgb(229,42,40)"/><text x="192.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.25%)</title><rect x="539" y="132" width="3" height="15" fill="rgb(234,65,12)"/><text x="542.00" y="142.50"></text></g><g><title>0x7f79dd999f76 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="539" y="148" width="3" height="15" fill="rgb(227,141,31)"/><text x="542.00" y="158.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="542" y="452" width="3" height="15" fill="rgb(222,101,45)"/><text x="545.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="542" y="468" width="3" height="15" fill="rgb(242,3,7)"/><text x="545.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="542" y="484" width="3" height="15" fill="rgb(208,223,45)"/><text x="545.00" y="494.50"></text></g><g><title>profile_pyrt (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (123 samples, 30.67%)</title><rect x="186" y="68" width="362" height="15" fill="rgb(212,137,2)"/><text x="189.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_m_reg_1_..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (123 samples, 30.67%)</title><rect x="186" y="84" width="362" height="15" fill="rgb(207,102,4)"/><text x="189.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="542" y="100" width="6" height="15" fill="rgb(235,186,12)"/><text x="545.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="542" y="116" width="6" height="15" fill="rgb(209,125,19)"/><text x="545.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="542" y="132" width="6" height="15" fill="rgb(243,164,38)"/><text x="545.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.50%)</title><rect x="542" y="148" width="6" height="15" fill="rgb(244,188,47)"/><text x="545.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.50%)</title><rect x="542" y="164" width="6" height="15" fill="rgb(228,3,43)"/><text x="545.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.50%)</title><rect x="542" y="180" width="6" height="15" fill="rgb(254,143,36)"/><text x="545.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.50%)</title><rect x="542" y="196" width="6" height="15" fill="rgb(219,67,14)"/><text x="545.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="212" width="6" height="15" fill="rgb(253,170,26)"/><text x="545.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="228" width="6" height="15" fill="rgb(221,126,30)"/><text x="545.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="244" width="6" height="15" fill="rgb(209,203,5)"/><text x="545.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="542" y="260" width="6" height="15" fill="rgb(228,16,16)"/><text x="545.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="276" width="6" height="15" fill="rgb(227,215,10)"/><text x="545.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.50%)</title><rect x="542" y="292" width="6" height="15" fill="rgb(243,179,35)"/><text x="545.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="308" width="6" height="15" fill="rgb(237,39,7)"/><text x="545.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="324" width="6" height="15" fill="rgb(219,97,31)"/><text x="545.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="340" width="6" height="15" fill="rgb(220,48,2)"/><text x="545.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="542" y="356" width="6" height="15" fill="rgb(253,199,24)"/><text x="545.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="372" width="6" height="15" fill="rgb(213,216,3)"/><text x="545.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.50%)</title><rect x="542" y="388" width="6" height="15" fill="rgb(219,148,7)"/><text x="545.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="404" width="6" height="15" fill="rgb(211,153,26)"/><text x="545.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="420" width="6" height="15" fill="rgb(253,219,36)"/><text x="545.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="542" y="436" width="6" height="15" fill="rgb(228,218,51)"/><text x="545.00" y="446.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="545" y="452" width="3" height="15" fill="rgb(211,42,44)"/><text x="548.00" y="462.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="545" y="468" width="3" height="15" fill="rgb(212,82,1)"/><text x="548.00" y="478.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="545" y="484" width="3" height="15" fill="rgb(208,76,38)"/><text x="548.00" y="494.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="545" y="500" width="3" height="15" fill="rgb(232,130,48)"/><text x="548.00" y="510.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="545" y="516" width="3" height="15" fill="rgb(244,50,12)"/><text x="548.00" y="526.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="548" y="116" width="3" height="15" fill="rgb(207,22,2)"/><text x="551.00" y="126.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.50%)</title><rect x="622" y="212" width="5" height="15" fill="rgb(240,42,52)"/><text x="625.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.50%)</title><rect x="654" y="356" width="6" height="15" fill="rgb(242,185,5)"/><text x="657.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.50%)</title><rect x="654" y="372" width="6" height="15" fill="rgb(223,88,45)"/><text x="657.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.50%)</title><rect x="654" y="388" width="6" height="15" fill="rgb(222,138,19)"/><text x="657.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.50%)</title><rect x="654" y="404" width="6" height="15" fill="rgb(216,154,7)"/><text x="657.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.50%)</title><rect x="654" y="420" width="6" height="15" fill="rgb(208,115,5)"/><text x="657.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="663" y="452" width="3" height="15" fill="rgb(250,35,10)"/><text x="666.00" y="462.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (3 samples, 0.75%)</title><rect x="660" y="372" width="9" height="15" fill="rgb(219,218,18)"/><text x="663.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (3 samples, 0.75%)</title><rect x="660" y="388" width="9" height="15" fill="rgb(254,148,37)"/><text x="663.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.75%)</title><rect x="660" y="404" width="9" height="15" fill="rgb(216,205,32)"/><text x="663.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.75%)</title><rect x="660" y="420" width="9" height="15" fill="rgb(231,199,30)"/><text x="663.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.75%)</title><rect x="660" y="436" width="9" height="15" fill="rgb(218,80,29)"/><text x="663.00" y="446.50"></text></g><g><title>_aligned_cast_long_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.25%)</title><rect x="666" y="452" width="3" height="15" fill="rgb(240,154,37)"/><text x="669.00" y="462.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (2 samples, 0.50%)</title><rect x="672" y="404" width="5" height="15" fill="rgb(246,169,32)"/><text x="675.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.00%)</title><rect x="669" y="372" width="11" height="15" fill="rgb(240,229,35)"/><text x="672.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.00%)</title><rect x="669" y="388" width="11" height="15" fill="rgb(249,99,10)"/><text x="672.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.25%)</title><rect x="677" y="404" width="3" height="15" fill="rgb(221,9,48)"/><text x="680.00" y="414.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.25%)</title><rect x="677" y="420" width="3" height="15" fill="rgb(243,3,13)"/><text x="680.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="677" y="436" width="3" height="15" fill="rgb(207,87,13)"/><text x="680.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.50%)</title><rect x="680" y="372" width="6" height="15" fill="rgb(230,62,25)"/><text x="683.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.25%)</title><rect x="683" y="388" width="3" height="15" fill="rgb(251,162,20)"/><text x="686.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.49%)</title><rect x="660" y="356" width="29" height="15" fill="rgb(251,59,43)"/><text x="663.00" y="366.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="686" y="372" width="3" height="15" fill="rgb(211,32,29)"/><text x="689.00" y="382.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (13 samples, 3.24%)</title><rect x="654" y="324" width="38" height="15" fill="rgb(213,204,50)"/><text x="657.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.24%)</title><rect x="654" y="340" width="38" height="15" fill="rgb(206,21,1)"/><text x="657.00" y="350.50">ufu..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="689" y="356" width="3" height="15" fill="rgb(231,67,14)"/><text x="692.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="689" y="372" width="3" height="15" fill="rgb(234,183,48)"/><text x="692.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="689" y="388" width="3" height="15" fill="rgb(209,191,35)"/><text x="692.00" y="398.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.50%)</title><rect x="692" y="324" width="6" height="15" fill="rgb(224,14,51)"/><text x="695.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.25%)</title><rect x="695" y="340" width="3" height="15" fill="rgb(214,13,4)"/><text x="698.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="716" y="340" width="20" height="15" fill="rgb(254,112,40)"/><text x="719.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.50%)</title><rect x="739" y="372" width="6" height="15" fill="rgb(215,79,44)"/><text x="742.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.50%)</title><rect x="739" y="388" width="6" height="15" fill="rgb(213,125,54)"/><text x="742.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.50%)</title><rect x="739" y="404" width="6" height="15" fill="rgb(254,145,45)"/><text x="742.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.50%)</title><rect x="739" y="420" width="6" height="15" fill="rgb(209,90,38)"/><text x="742.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="742" y="436" width="3" height="15" fill="rgb(242,5,48)"/><text x="745.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="754" y="388" width="3" height="15" fill="rgb(215,156,23)"/><text x="757.00" y="398.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.75%)</title><rect x="763" y="420" width="9" height="15" fill="rgb(226,78,29)"/><text x="766.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.50%)</title><rect x="766" y="436" width="6" height="15" fill="rgb(245,104,23)"/><text x="769.00" y="446.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (2 samples, 0.50%)</title><rect x="766" y="452" width="6" height="15" fill="rgb(211,29,6)"/><text x="769.00" y="462.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.25%)</title><rect x="769" y="468" width="3" height="15" fill="rgb(213,152,26)"/><text x="772.00" y="478.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.25%)</title><rect x="772" y="420" width="3" height="15" fill="rgb(222,35,34)"/><text x="775.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (14 samples, 3.49%)</title><rect x="736" y="340" width="42" height="15" fill="rgb(246,13,32)"/><text x="739.00" y="350.50">ndi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 3.49%)</title><rect x="736" y="356" width="42" height="15" fill="rgb(205,208,3)"/><text x="739.00" y="366.50">arr..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (11 samples, 2.74%)</title><rect x="745" y="372" width="33" height="15" fill="rgb(214,3,21)"/><text x="748.00" y="382.50">nd..</text></g><g><title>asarray (numpy/core/_asarray.py) (7 samples, 1.75%)</title><rect x="757" y="388" width="21" height="15" fill="rgb(229,200,18)"/><text x="760.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 1.50%)</title><rect x="760" y="404" width="18" height="15" fill="rgb(208,51,36)"/><text x="763.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.25%)</title><rect x="775" y="420" width="3" height="15" fill="rgb(249,38,8)"/><text x="778.00" y="430.50"></text></g><g><title>0x7f79dd999df3 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="775" y="436" width="3" height="15" fill="rgb(242,145,15)"/><text x="778.00" y="446.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="778" y="372" width="2" height="15" fill="rgb(235,57,52)"/><text x="781.00" y="382.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (2 samples, 0.50%)</title><rect x="780" y="372" width="6" height="15" fill="rgb(216,169,26)"/><text x="783.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.25%)</title><rect x="783" y="388" width="3" height="15" fill="rgb(237,16,42)"/><text x="786.00" y="398.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.25%)</title><rect x="786" y="420" width="3" height="15" fill="rgb(241,195,42)"/><text x="789.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.25%)</title><rect x="786" y="436" width="3" height="15" fill="rgb(253,67,48)"/><text x="789.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.25%)</title><rect x="786" y="452" width="3" height="15" fill="rgb(206,121,20)"/><text x="789.00" y="462.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (2 samples, 0.50%)</title><rect x="786" y="404" width="6" height="15" fill="rgb(250,14,6)"/><text x="789.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.25%)</title><rect x="789" y="420" width="3" height="15" fill="rgb(230,140,6)"/><text x="792.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="789" y="436" width="3" height="15" fill="rgb(238,23,43)"/><text x="792.00" y="446.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.25%)</title><rect x="789" y="452" width="3" height="15" fill="rgb(231,213,44)"/><text x="792.00" y="462.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.75%)</title><rect x="786" y="372" width="9" height="15" fill="rgb(233,91,5)"/><text x="789.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.75%)</title><rect x="786" y="388" width="9" height="15" fill="rgb(208,69,6)"/><text x="789.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.25%)</title><rect x="792" y="404" width="3" height="15" fill="rgb(220,225,49)"/><text x="795.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.25%)</title><rect x="792" y="420" width="3" height="15" fill="rgb(237,77,33)"/><text x="795.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.25%)</title><rect x="792" y="436" width="3" height="15" fill="rgb(205,103,43)"/><text x="795.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.25%)</title><rect x="792" y="452" width="3" height="15" fill="rgb(243,63,32)"/><text x="795.00" y="462.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.25%)</title><rect x="792" y="468" width="3" height="15" fill="rgb(214,73,14)"/><text x="795.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.75%)</title><rect x="778" y="356" width="20" height="15" fill="rgb(240,32,43)"/><text x="781.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.25%)</title><rect x="795" y="372" width="3" height="15" fill="rgb(213,174,44)"/><text x="798.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.25%)</title><rect x="795" y="388" width="3" height="15" fill="rgb(207,79,35)"/><text x="798.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.25%)</title><rect x="795" y="404" width="3" height="15" fill="rgb(206,153,52)"/><text x="798.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (59 samples, 14.71%)</title><rect x="627" y="244" width="174" height="15" fill="rgb(207,121,47)"/><text x="630.00" y="254.50">clip (numpy/core/fromn..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (57 samples, 14.21%)</title><rect x="633" y="260" width="168" height="15" fill="rgb(226,142,31)"/><text x="636.00" y="270.50">_wrapfunc (numpy/core..</text></g><g><title>array_clip (methods.c) (54 samples, 13.47%)</title><rect x="642" y="276" width="159" height="15" fill="rgb(207,117,12)"/><text x="645.00" y="286.50">array_clip (methods...</text></g><g><title>forward_ndarray_method (methods.c) (54 samples, 13.47%)</title><rect x="642" y="292" width="159" height="15" fill="rgb(236,23,52)"/><text x="645.00" y="302.50">forward_ndarray_meth..</text></g><g><title>_clip (numpy/core/_methods.py) (52 samples, 12.97%)</title><rect x="648" y="308" width="153" height="15" fill="rgb(241,163,22)"/><text x="651.00" y="318.50">_clip (numpy/core/_..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (35 samples, 8.73%)</title><rect x="698" y="324" width="103" height="15" fill="rgb(250,20,41)"/><text x="701.00" y="334.50">_clip_dep_is..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.00%)</title><rect x="778" y="340" width="23" height="15" fill="rgb(238,124,15)"/><text x="781.00" y="350.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="798" y="356" width="3" height="15" fill="rgb(236,56,16)"/><text x="801.00" y="366.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (65 samples, 16.21%)</title><rect x="613" y="196" width="191" height="15" fill="rgb(215,80,20)"/><text x="616.00" y="206.50">relu (sklearn/neural_net..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (60 samples, 14.96%)</title><rect x="627" y="212" width="177" height="15" fill="rgb(219,167,33)"/><text x="630.00" y="222.50">clip (&lt;__array_function..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (60 samples, 14.96%)</title><rect x="627" y="228" width="177" height="15" fill="rgb(225,0,51)"/><text x="630.00" y="238.50">array_implement_array_f..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.25%)</title><rect x="801" y="244" width="3" height="15" fill="rgb(220,168,12)"/><text x="804.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.25%)</title><rect x="801" y="260" width="3" height="15" fill="rgb(232,53,9)"/><text x="804.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.25%)</title><rect x="801" y="276" width="3" height="15" fill="rgb(232,170,53)"/><text x="804.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.25%)</title><rect x="801" y="292" width="3" height="15" fill="rgb(225,213,54)"/><text x="804.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (3 samples, 0.75%)</title><rect x="810" y="212" width="9" height="15" fill="rgb(207,229,6)"/><text x="813.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.25%)</title><rect x="822" y="228" width="3" height="15" fill="rgb(252,213,37)"/><text x="825.00" y="238.50"></text></g><g><title>0x7f79dd8bb902 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="833" y="260" width="3" height="15" fill="rgb(210,123,27)"/><text x="836.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.25%)</title><rect x="836" y="260" width="3" height="15" fill="rgb(246,23,32)"/><text x="839.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.25%)</title><rect x="836" y="276" width="3" height="15" fill="rgb(254,7,28)"/><text x="839.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="836" y="292" width="3" height="15" fill="rgb(207,169,28)"/><text x="839.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.25%)</title><rect x="842" y="308" width="3" height="15" fill="rgb(219,92,37)"/><text x="845.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.25%)</title><rect x="842" y="324" width="3" height="15" fill="rgb(225,53,12)"/><text x="845.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.25%)</title><rect x="842" y="340" width="3" height="15" fill="rgb(246,186,20)"/><text x="845.00" y="350.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.25%)</title><rect x="842" y="356" width="3" height="15" fill="rgb(246,36,43)"/><text x="845.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="845" y="324" width="3" height="15" fill="rgb(248,2,43)"/><text x="848.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.25%)</title><rect x="845" y="340" width="3" height="15" fill="rgb(219,91,18)"/><text x="848.00" y="350.50"></text></g><g><title>0x7f79dd873a19 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="845" y="356" width="3" height="15" fill="rgb(220,138,43)"/><text x="848.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.25%)</title><rect x="845" y="372" width="3" height="15" fill="rgb(209,204,41)"/><text x="848.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.75%)</title><rect x="842" y="292" width="9" height="15" fill="rgb(205,29,38)"/><text x="845.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.50%)</title><rect x="845" y="308" width="6" height="15" fill="rgb(218,76,34)"/><text x="848.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.25%)</title><rect x="848" y="324" width="3" height="15" fill="rgb(240,100,34)"/><text x="851.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.00%)</title><rect x="842" y="276" width="12" height="15" fill="rgb(247,134,0)"/><text x="845.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.25%)</title><rect x="851" y="292" width="3" height="15" fill="rgb(242,192,13)"/><text x="854.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.25%)</title><rect x="854" y="276" width="3" height="15" fill="rgb(244,148,33)"/><text x="857.00" y="286.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.25%)</title><rect x="857" y="276" width="3" height="15" fill="rgb(230,61,3)"/><text x="860.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.25%)</title><rect x="860" y="276" width="3" height="15" fill="rgb(250,186,46)"/><text x="863.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 2.24%)</title><rect x="839" y="260" width="27" height="15" fill="rgb(217,82,40)"/><text x="842.00" y="270.50">N..</text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.25%)</title><rect x="863" y="276" width="3" height="15" fill="rgb(233,157,5)"/><text x="866.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="866" y="292" width="3" height="15" fill="rgb(249,20,23)"/><text x="869.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="866" y="308" width="3" height="15" fill="rgb(253,112,37)"/><text x="869.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.50%)</title><rect x="866" y="260" width="6" height="15" fill="rgb(219,115,54)"/><text x="869.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.50%)</title><rect x="866" y="276" width="6" height="15" fill="rgb(216,41,12)"/><text x="869.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.25%)</title><rect x="869" y="292" width="3" height="15" fill="rgb(248,168,50)"/><text x="872.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.25%)</title><rect x="869" y="308" width="3" height="15" fill="rgb(253,131,6)"/><text x="872.00" y="318.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.25%)</title><rect x="872" y="260" width="3" height="15" fill="rgb(206,0,10)"/><text x="875.00" y="270.50"></text></g><g><title>0x7f79dd8dbd53 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="872" y="276" width="3" height="15" fill="rgb(229,158,53)"/><text x="875.00" y="286.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (2 samples, 0.50%)</title><rect x="875" y="260" width="6" height="15" fill="rgb(244,201,4)"/><text x="878.00" y="270.50"></text></g><g><title>_initialize_variable_parts (ufunc_object.c) (1 samples, 0.25%)</title><rect x="881" y="260" width="2" height="15" fill="rgb(229,26,25)"/><text x="884.00" y="270.50"></text></g><g><title>0x7f79dd8dbdb3 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="881" y="276" width="2" height="15" fill="rgb(234,102,49)"/><text x="884.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="883" y="260" width="3" height="15" fill="rgb(242,143,29)"/><text x="886.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (29 samples, 7.23%)</title><rect x="804" y="196" width="85" height="15" fill="rgb(242,155,36)"/><text x="807.00" y="206.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (24 samples, 5.99%)</title><rect x="819" y="212" width="70" height="15" fill="rgb(245,30,35)"/><text x="822.00" y="222.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 5.49%)</title><rect x="825" y="228" width="64" height="15" fill="rgb(221,48,1)"/><text x="828.00" y="238.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (22 samples, 5.49%)</title><rect x="825" y="244" width="64" height="15" fill="rgb(223,221,33)"/><text x="828.00" y="254.50">PyUFunc..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.25%)</title><rect x="886" y="260" width="3" height="15" fill="rgb(251,111,1)"/><text x="889.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.25%)</title><rect x="886" y="276" width="3" height="15" fill="rgb(238,103,23)"/><text x="889.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.25%)</title><rect x="886" y="292" width="3" height="15" fill="rgb(210,218,8)"/><text x="889.00" y="302.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="889" y="228" width="3" height="15" fill="rgb(208,135,3)"/><text x="892.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="892" y="228" width="3" height="15" fill="rgb(211,132,26)"/><text x="895.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="892" y="244" width="3" height="15" fill="rgb(254,191,40)"/><text x="895.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.25%)</title><rect x="895" y="228" width="3" height="15" fill="rgb(251,229,28)"/><text x="898.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.25%)</title><rect x="898" y="276" width="3" height="15" fill="rgb(220,173,43)"/><text x="901.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (3 samples, 0.75%)</title><rect x="901" y="276" width="9" height="15" fill="rgb(238,119,4)"/><text x="904.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (2 samples, 0.50%)</title><rect x="904" y="292" width="6" height="15" fill="rgb(209,71,38)"/><text x="907.00" y="302.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="907" y="308" width="3" height="15" fill="rgb(234,157,44)"/><text x="910.00" y="318.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.25%)</title><rect x="907" y="324" width="3" height="15" fill="rgb(235,103,7)"/><text x="910.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.50%)</title><rect x="910" y="276" width="6" height="15" fill="rgb(219,123,0)"/><text x="913.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.75%)</title><rect x="898" y="260" width="21" height="15" fill="rgb(230,82,35)"/><text x="901.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.25%)</title><rect x="916" y="276" width="3" height="15" fill="rgb(242,150,48)"/><text x="919.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.25%)</title><rect x="916" y="292" width="3" height="15" fill="rgb(214,107,43)"/><text x="919.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.25%)</title><rect x="919" y="260" width="3" height="15" fill="rgb(215,58,13)"/><text x="922.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.50%)</title><rect x="922" y="260" width="6" height="15" fill="rgb(213,152,51)"/><text x="925.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (2 samples, 0.50%)</title><rect x="922" y="276" width="6" height="15" fill="rgb(225,108,53)"/><text x="925.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 2.74%)</title><rect x="898" y="228" width="33" height="15" fill="rgb(214,52,21)"/><text x="901.00" y="238.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 2.74%)</title><rect x="898" y="244" width="33" height="15" fill="rgb(244,222,2)"/><text x="901.00" y="254.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.25%)</title><rect x="928" y="260" width="3" height="15" fill="rgb(224,74,8)"/><text x="931.00" y="270.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (118 samples, 29.43%)</title><rect x="589" y="180" width="347" height="15" fill="rgb(253,77,23)"/><text x="592.00" y="190.50">_forward_pass (sklearn/neural_network/_multilay..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 3.99%)</title><rect x="889" y="196" width="47" height="15" fill="rgb(217,133,14)"/><text x="892.00" y="206.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 3.99%)</title><rect x="889" y="212" width="47" height="15" fill="rgb(235,192,44)"/><text x="892.00" y="222.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.50%)</title><rect x="931" y="228" width="5" height="15" fill="rgb(243,156,46)"/><text x="934.00" y="238.50"></text></g><g><title>0x7f79dd8dc1d1 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="933" y="244" width="3" height="15" fill="rgb(218,117,8)"/><text x="936.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="936" y="244" width="3" height="15" fill="rgb(220,56,17)"/><text x="939.00" y="254.50"></text></g><g><title>0x7f79dcade2c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="936" y="260" width="3" height="15" fill="rgb(216,166,40)"/><text x="939.00" y="270.50"></text></g><g><title>array_empty (multiarraymodule.c) (2 samples, 0.50%)</title><rect x="936" y="180" width="6" height="15" fill="rgb(223,167,20)"/><text x="939.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.50%)</title><rect x="936" y="196" width="6" height="15" fill="rgb(244,9,46)"/><text x="939.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (2 samples, 0.50%)</title><rect x="936" y="212" width="6" height="15" fill="rgb(227,91,47)"/><text x="939.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.50%)</title><rect x="936" y="228" width="6" height="15" fill="rgb(242,56,43)"/><text x="939.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.25%)</title><rect x="939" y="244" width="3" height="15" fill="rgb(236,225,4)"/><text x="942.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.25%)</title><rect x="981" y="196" width="3" height="15" fill="rgb(222,67,39)"/><text x="984.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.50%)</title><rect x="984" y="196" width="5" height="15" fill="rgb(241,118,13)"/><text x="987.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 1.00%)</title><rect x="989" y="196" width="12" height="15" fill="rgb(234,148,26)"/><text x="992.00" y="206.50"></text></g><g><title>0x7f79dd8dc14f (libc-2.29.so) (1 samples, 0.25%)</title><rect x="998" y="212" width="3" height="15" fill="rgb(206,34,51)"/><text x="1001.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="1013" y="212" width="3" height="15" fill="rgb(218,183,53)"/><text x="1016.00" y="222.50"></text></g><g><title>0x7f79dd8d1e60 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1013" y="228" width="3" height="15" fill="rgb(240,157,34)"/><text x="1016.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.50%)</title><rect x="1001" y="196" width="18" height="15" fill="rgb(229,3,16)"/><text x="1004.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="1016" y="212" width="3" height="15" fill="rgb(230,20,6)"/><text x="1019.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.50%)</title><rect x="1019" y="196" width="6" height="15" fill="rgb(236,146,22)"/><text x="1022.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (9 samples, 2.24%)</title><rect x="1025" y="196" width="26" height="15" fill="rgb(247,185,25)"/><text x="1028.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.50%)</title><rect x="1045" y="212" width="6" height="15" fill="rgb(213,77,12)"/><text x="1048.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.25%)</title><rect x="1048" y="228" width="3" height="15" fill="rgb(209,148,53)"/><text x="1051.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.25%)</title><rect x="1051" y="196" width="3" height="15" fill="rgb(217,144,32)"/><text x="1054.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.25%)</title><rect x="1054" y="196" width="3" height="15" fill="rgb(211,158,31)"/><text x="1057.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.25%)</title><rect x="1054" y="212" width="3" height="15" fill="rgb(205,86,1)"/><text x="1057.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (171 samples, 42.64%)</title><rect x="563" y="164" width="503" height="15" fill="rgb(253,99,48)"/><text x="566.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (42 samples, 10.47%)</title><rect x="942" y="180" width="124" height="15" fill="rgb(228,215,10)"/><text x="945.00" y="190.50">check_array (sk..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.75%)</title><rect x="1057" y="196" width="9" height="15" fill="rgb(226,67,27)"/><text x="1060.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.50%)</title><rect x="1060" y="212" width="6" height="15" fill="rgb(244,129,23)"/><text x="1063.00" y="222.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.25%)</title><rect x="1066" y="164" width="3" height="15" fill="rgb(240,22,0)"/><text x="1069.00" y="174.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.25%)</title><rect x="1066" y="180" width="3" height="15" fill="rgb(235,39,30)"/><text x="1069.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (7 samples, 1.75%)</title><rect x="1142" y="196" width="21" height="15" fill="rgb(230,221,29)"/><text x="1145.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (212 samples, 52.87%)</title><rect x="554" y="132" width="624" height="15" fill="rgb(205,100,47)"/><text x="557.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (212 samples, 52.87%)</title><rect x="554" y="148" width="624" height="15" fill="rgb(250,187,31)"/><text x="557.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (37 samples, 9.23%)</title><rect x="1069" y="164" width="109" height="15" fill="rgb(246,43,15)"/><text x="1072.00" y="174.50">check_is_fitt..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (29 samples, 7.23%)</title><rect x="1092" y="180" width="86" height="15" fill="rgb(252,72,39)"/><text x="1095.00" y="190.50">&lt;listcomp&gt;..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.25%)</title><rect x="1163" y="196" width="15" height="15" fill="rgb(221,12,28)"/><text x="1166.00" y="206.50"></text></g><g><title>profile_skl (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (215 samples, 53.62%)</title><rect x="548" y="68" width="633" height="15" fill="rgb(211,7,36)"/><text x="551.00" y="78.50">profile_skl (bench_MLPRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (215 samples, 53.62%)</title><rect x="548" y="84" width="633" height="15" fill="rgb(208,134,22)"/><text x="551.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (215 samples, 53.62%)</title><rect x="548" y="100" width="633" height="15" fill="rgb(236,141,10)"/><text x="551.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (214 samples, 53.37%)</title><rect x="551" y="116" width="630" height="15" fill="rgb(253,209,20)"/><text x="554.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.25%)</title><rect x="1178" y="132" width="3" height="15" fill="rgb(235,179,41)"/><text x="1181.00" y="142.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (2 samples, 0.50%)</title><rect x="1181" y="196" width="6" height="15" fill="rgb(225,18,9)"/><text x="1184.00" y="206.50"></text></g><g><title>all (401 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(208,91,49)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (401 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(241,159,16)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>start (bench_MLPRegressor_default_m_reg_1_4_12_float_.py) (3 samples, 0.75%)</title><rect x="1181" y="68" width="9" height="15" fill="rgb(230,12,35)"/><text x="1184.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py) (3 samples, 0.75%)</title><rect x="1181" y="84" width="9" height="15" fill="rgb(253,112,10)"/><text x="1184.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.75%)</title><rect x="1181" y="100" width="9" height="15" fill="rgb(226,63,29)"/><text x="1184.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.75%)</title><rect x="1181" y="116" width="9" height="15" fill="rgb(205,15,1)"/><text x="1184.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.75%)</title><rect x="1181" y="132" width="9" height="15" fill="rgb(222,138,31)"/><text x="1184.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.75%)</title><rect x="1181" y="148" width="9" height="15" fill="rgb(231,185,14)"/><text x="1184.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.75%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(211,219,48)"/><text x="1184.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (3 samples, 0.75%)</title><rect x="1181" y="180" width="9" height="15" fill="rgb(252,113,45)"/><text x="1184.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.25%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(236,190,12)"/><text x="1190.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(225,154,15)"/><text x="1190.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(217,224,10)"/><text x="1190.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(251,5,42)"/><text x="1190.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.25%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(205,209,10)"/><text x="1190.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(251,71,5)"/><text x="1190.00" y="286.50"></text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(245,117,42)"/><text x="1190.00" y="302.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(244,37,49)"/><text x="1190.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(223,14,50)"/><text x="1190.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(238,156,21)"/><text x="1190.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(207,190,0)"/><text x="1190.00" y="366.50"></text></g></g></svg>