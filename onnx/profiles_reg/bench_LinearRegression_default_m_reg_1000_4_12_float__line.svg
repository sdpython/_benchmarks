<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.22%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(223,67,27)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(241,74,50)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(251,141,29)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(249,1,8)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(220,6,24)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(218,162,12)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(221,109,52)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(214,190,36)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.22%)</title><rect x="10" y="372" width="2" height="15" fill="rgb(221,222,47)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(244,45,0)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(214,49,53)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(216,108,15)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(236,146,10)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(226,71,48)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(242,112,16)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(241,208,40)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.22%)</title><rect x="10" y="500" width="2" height="15" fill="rgb(214,10,13)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="10" y="516" width="2" height="15" fill="rgb(232,3,35)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="10" y="532" width="2" height="15" fill="rgb(205,18,33)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="10" y="548" width="2" height="15" fill="rgb(237,99,8)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="10" y="564" width="2" height="15" fill="rgb(236,145,46)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="10" y="580" width="2" height="15" fill="rgb(252,151,4)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="10" y="596" width="2" height="15" fill="rgb(242,180,25)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="10" y="612" width="2" height="15" fill="rgb(234,50,42)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py:203) (1 samples, 0.22%)</title><rect x="10" y="628" width="2" height="15" fill="rgb(234,223,12)"/><text x="13.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.22%)</title><rect x="10" y="644" width="2" height="15" fill="rgb(205,151,10)"/><text x="13.00" y="654.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:1) (2 samples, 0.44%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(246,99,7)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(227,209,45)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(214,103,16)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(210,28,36)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(238,123,42)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(233,171,4)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.22%)</title><rect x="12" y="244" width="3" height="15" fill="rgb(215,183,0)"/><text x="15.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="12" y="260" width="3" height="15" fill="rgb(241,67,32)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="12" y="276" width="3" height="15" fill="rgb(215,173,15)"/><text x="15.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="12" y="292" width="3" height="15" fill="rgb(254,90,21)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="12" y="308" width="3" height="15" fill="rgb(246,31,10)"/><text x="15.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="12" y="324" width="3" height="15" fill="rgb(218,138,14)"/><text x="15.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="12" y="340" width="3" height="15" fill="rgb(220,77,36)"/><text x="15.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="12" y="356" width="3" height="15" fill="rgb(251,3,30)"/><text x="15.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:20) (1 samples, 0.22%)</title><rect x="12" y="372" width="3" height="15" fill="rgb(248,71,14)"/><text x="15.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="12" y="388" width="3" height="15" fill="rgb(225,10,45)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="12" y="404" width="3" height="15" fill="rgb(216,81,17)"/><text x="15.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="12" y="420" width="3" height="15" fill="rgb(250,189,38)"/><text x="15.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="12" y="436" width="3" height="15" fill="rgb(248,119,35)"/><text x="15.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="12" y="452" width="3" height="15" fill="rgb(237,92,35)"/><text x="15.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/polynomial.py:667) (1 samples, 0.22%)</title><rect x="12" y="468" width="3" height="15" fill="rgb(217,222,8)"/><text x="15.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.22%)</title><rect x="12" y="484" width="3" height="15" fill="rgb(223,211,42)"/><text x="15.00" y="494.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.22%)</title><rect x="12" y="500" width="3" height="15" fill="rgb(234,201,1)"/><text x="15.00" y="510.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.22%)</title><rect x="12" y="516" width="3" height="15" fill="rgb(254,78,41)"/><text x="15.00" y="526.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.22%)</title><rect x="12" y="532" width="3" height="15" fill="rgb(242,220,51)"/><text x="15.00" y="542.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.22%)</title><rect x="12" y="548" width="3" height="15" fill="rgb(247,106,49)"/><text x="15.00" y="558.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="12" y="564" width="3" height="15" fill="rgb(253,149,46)"/><text x="15.00" y="574.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.22%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(249,134,47)"/><text x="18.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.22%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(245,75,28)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.22%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(209,101,10)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.22%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(226,54,0)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.22%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(248,27,33)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.22%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(251,228,30)"/><text x="18.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.22%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(211,215,34)"/><text x="18.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.22%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(239,186,38)"/><text x="18.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.22%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(211,39,51)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:2) (2 samples, 0.44%)</title><rect x="15" y="148" width="5" height="15" fill="rgb(226,66,13)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="164" width="5" height="15" fill="rgb(240,177,41)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.44%)</title><rect x="15" y="180" width="5" height="15" fill="rgb(242,202,0)"/><text x="18.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="196" width="5" height="15" fill="rgb(241,119,20)"/><text x="18.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="212" width="5" height="15" fill="rgb(217,222,2)"/><text x="18.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="15" y="228" width="5" height="15" fill="rgb(209,158,5)"/><text x="18.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="15" y="244" width="5" height="15" fill="rgb(216,0,35)"/><text x="18.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="15" y="260" width="5" height="15" fill="rgb(239,46,48)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="276" width="5" height="15" fill="rgb(225,67,19)"/><text x="18.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.44%)</title><rect x="15" y="292" width="5" height="15" fill="rgb(221,31,6)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="308" width="5" height="15" fill="rgb(214,5,40)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="15" y="324" width="5" height="15" fill="rgb(226,179,51)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="15" y="340" width="5" height="15" fill="rgb(216,69,54)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="15" y="356" width="5" height="15" fill="rgb(234,79,18)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="372" width="5" height="15" fill="rgb(243,102,1)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.44%)</title><rect x="15" y="388" width="5" height="15" fill="rgb(212,2,25)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="404" width="5" height="15" fill="rgb(214,19,7)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="15" y="420" width="5" height="15" fill="rgb(225,28,8)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="15" y="436" width="5" height="15" fill="rgb(206,151,36)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="15" y="452" width="5" height="15" fill="rgb(245,52,43)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="468" width="5" height="15" fill="rgb(234,82,32)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.44%)</title><rect x="15" y="484" width="5" height="15" fill="rgb(217,71,32)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="500" width="5" height="15" fill="rgb(229,2,11)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="15" y="516" width="5" height="15" fill="rgb(253,143,44)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="15" y="532" width="5" height="15" fill="rgb(210,66,22)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="15" y="548" width="5" height="15" fill="rgb(229,164,28)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="564" width="5" height="15" fill="rgb(216,33,10)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.44%)</title><rect x="15" y="580" width="5" height="15" fill="rgb(235,219,35)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="596" width="5" height="15" fill="rgb(210,184,49)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.44%)</title><rect x="15" y="612" width="5" height="15" fill="rgb(244,97,17)"/><text x="18.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="628" width="5" height="15" fill="rgb(214,189,34)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="644" width="5" height="15" fill="rgb(220,192,47)"/><text x="18.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="15" y="660" width="5" height="15" fill="rgb(251,209,31)"/><text x="18.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="15" y="676" width="5" height="15" fill="rgb(223,48,10)"/><text x="18.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="15" y="692" width="5" height="15" fill="rgb(211,158,44)"/><text x="18.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="708" width="5" height="15" fill="rgb(205,132,29)"/><text x="18.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.44%)</title><rect x="15" y="724" width="5" height="15" fill="rgb(238,119,43)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="15" y="740" width="5" height="15" fill="rgb(244,64,39)"/><text x="18.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="15" y="756" width="5" height="15" fill="rgb(244,45,37)"/><text x="18.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="15" y="772" width="5" height="15" fill="rgb(206,62,27)"/><text x="18.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="15" y="788" width="5" height="15" fill="rgb(233,112,41)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="15" y="804" width="5" height="15" fill="rgb(230,177,42)"/><text x="18.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.44%)</title><rect x="15" y="820" width="5" height="15" fill="rgb(243,69,16)"/><text x="18.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.44%)</title><rect x="15" y="836" width="5" height="15" fill="rgb(212,38,1)"/><text x="18.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.22%)</title><rect x="17" y="852" width="3" height="15" fill="rgb(211,138,31)"/><text x="20.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.22%)</title><rect x="17" y="868" width="3" height="15" fill="rgb(239,54,35)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.22%)</title><rect x="17" y="884" width="3" height="15" fill="rgb(210,13,44)"/><text x="20.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.22%)</title><rect x="17" y="900" width="3" height="15" fill="rgb(245,19,26)"/><text x="20.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.22%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(221,105,21)"/><text x="20.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.22%)</title><rect x="17" y="932" width="3" height="15" fill="rgb(244,137,39)"/><text x="20.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.22%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(217,45,46)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.22%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(250,132,44)"/><text x="20.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.22%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(215,50,2)"/><text x="20.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:118) (1 samples, 0.22%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(242,214,13)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:4) (1 samples, 0.22%)</title><rect x="20" y="148" width="2" height="15" fill="rgb(227,55,4)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="164" width="2" height="15" fill="rgb(247,96,25)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.22%)</title><rect x="20" y="180" width="2" height="15" fill="rgb(227,93,51)"/><text x="23.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="196" width="2" height="15" fill="rgb(242,44,11)"/><text x="23.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="212" width="2" height="15" fill="rgb(226,68,23)"/><text x="23.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="228" width="2" height="15" fill="rgb(244,73,48)"/><text x="23.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="244" width="2" height="15" fill="rgb(246,178,50)"/><text x="23.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="260" width="2" height="15" fill="rgb(234,158,18)"/><text x="23.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="276" width="2" height="15" fill="rgb(223,161,52)"/><text x="23.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.22%)</title><rect x="20" y="292" width="2" height="15" fill="rgb(214,88,18)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="308" width="2" height="15" fill="rgb(241,87,13)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="324" width="2" height="15" fill="rgb(220,169,44)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="340" width="2" height="15" fill="rgb(230,182,7)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="356" width="2" height="15" fill="rgb(237,150,25)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="372" width="2" height="15" fill="rgb(251,146,51)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.22%)</title><rect x="20" y="388" width="2" height="15" fill="rgb(244,23,11)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="404" width="2" height="15" fill="rgb(241,7,48)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="420" width="2" height="15" fill="rgb(216,4,31)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="436" width="2" height="15" fill="rgb(206,194,5)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="452" width="2" height="15" fill="rgb(219,157,45)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="468" width="2" height="15" fill="rgb(247,128,11)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.22%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(238,136,7)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(225,77,51)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(252,213,21)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(212,84,20)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(220,224,48)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(221,53,35)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.22%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(239,184,39)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(212,86,39)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(230,125,20)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(247,72,24)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(247,103,5)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(249,75,10)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.22%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(214,177,14)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(223,188,32)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(237,143,34)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(223,47,8)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(230,45,12)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(213,77,53)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.22%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(208,133,42)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(244,51,32)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(223,185,34)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(210,157,42)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(245,125,15)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(220,17,52)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(212,12,27)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(229,125,1)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.22%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(230,7,4)"/><text x="23.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(226,162,38)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(214,201,50)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(206,3,23)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(222,28,1)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(217,23,31)"/><text x="23.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(215,162,39)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(251,198,6)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4293) (1 samples, 0.22%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(244,7,23)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.22%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(212,43,21)"/><text x="23.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.22%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(215,47,23)"/><text x="23.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.22%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(250,227,39)"/><text x="23.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.22%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(238,126,44)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.44%)</title><rect x="22" y="244" width="6" height="15" fill="rgb(248,45,26)"/><text x="25.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="260" width="6" height="15" fill="rgb(218,135,52)"/><text x="25.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="276" width="6" height="15" fill="rgb(253,28,16)"/><text x="25.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="292" width="6" height="15" fill="rgb(242,210,40)"/><text x="25.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="22" y="308" width="6" height="15" fill="rgb(233,10,22)"/><text x="25.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="324" width="6" height="15" fill="rgb(222,168,6)"/><text x="25.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.44%)</title><rect x="22" y="340" width="6" height="15" fill="rgb(250,116,27)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="356" width="6" height="15" fill="rgb(250,17,10)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.44%)</title><rect x="22" y="372" width="6" height="15" fill="rgb(248,219,50)"/><text x="25.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="388" width="6" height="15" fill="rgb(225,148,31)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="404" width="6" height="15" fill="rgb(225,102,2)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="420" width="6" height="15" fill="rgb(248,194,42)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="436" width="6" height="15" fill="rgb(238,104,30)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="22" y="452" width="6" height="15" fill="rgb(231,196,7)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="468" width="6" height="15" fill="rgb(206,18,49)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.44%)</title><rect x="22" y="484" width="6" height="15" fill="rgb(209,165,39)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="500" width="6" height="15" fill="rgb(249,220,19)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="516" width="6" height="15" fill="rgb(220,183,38)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="532" width="6" height="15" fill="rgb(246,40,19)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="22" y="548" width="6" height="15" fill="rgb(234,98,30)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="564" width="6" height="15" fill="rgb(227,42,1)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.44%)</title><rect x="22" y="580" width="6" height="15" fill="rgb(214,226,15)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="596" width="6" height="15" fill="rgb(207,188,35)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.44%)</title><rect x="22" y="612" width="6" height="15" fill="rgb(233,168,38)"/><text x="25.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="628" width="6" height="15" fill="rgb(224,164,6)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="644" width="6" height="15" fill="rgb(248,182,41)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="660" width="6" height="15" fill="rgb(216,193,34)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="676" width="6" height="15" fill="rgb(254,57,34)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="22" y="692" width="6" height="15" fill="rgb(209,56,1)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="708" width="6" height="15" fill="rgb(224,135,51)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.44%)</title><rect x="22" y="724" width="6" height="15" fill="rgb(225,152,37)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="740" width="6" height="15" fill="rgb(251,91,54)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="756" width="6" height="15" fill="rgb(252,37,19)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="772" width="6" height="15" fill="rgb(221,75,6)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="22" y="788" width="6" height="15" fill="rgb(218,223,36)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="804" width="6" height="15" fill="rgb(209,77,28)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.44%)</title><rect x="22" y="820" width="6" height="15" fill="rgb(235,63,20)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="836" width="6" height="15" fill="rgb(225,20,37)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="852" width="6" height="15" fill="rgb(223,150,20)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="868" width="6" height="15" fill="rgb(247,210,6)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="22" y="884" width="6" height="15" fill="rgb(223,216,9)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="900" width="6" height="15" fill="rgb(220,111,27)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.44%)</title><rect x="22" y="916" width="6" height="15" fill="rgb(241,81,20)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="932" width="6" height="15" fill="rgb(222,52,50)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.44%)</title><rect x="22" y="948" width="6" height="15" fill="rgb(252,67,26)"/><text x="25.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="964" width="6" height="15" fill="rgb(228,153,6)"/><text x="25.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="980" width="6" height="15" fill="rgb(234,65,12)"/><text x="25.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="996" width="6" height="15" fill="rgb(253,126,43)"/><text x="25.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="1012" width="6" height="15" fill="rgb(242,132,22)"/><text x="25.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="22" y="1028" width="6" height="15" fill="rgb(233,175,48)"/><text x="25.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="22" y="1044" width="6" height="15" fill="rgb(239,42,25)"/><text x="25.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (2 samples, 0.44%)</title><rect x="22" y="1060" width="6" height="15" fill="rgb(225,37,7)"/><text x="25.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="22" y="1076" width="6" height="15" fill="rgb(251,61,40)"/><text x="25.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="22" y="1092" width="6" height="15" fill="rgb(229,173,29)"/><text x="25.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="22" y="1108" width="6" height="15" fill="rgb(206,65,33)"/><text x="25.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.44%)</title><rect x="22" y="1124" width="6" height="15" fill="rgb(233,221,22)"/><text x="25.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:828) (2 samples, 0.44%)</title><rect x="22" y="1140" width="6" height="15" fill="rgb(249,23,37)"/><text x="25.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.22%)</title><rect x="28" y="436" width="2" height="15" fill="rgb(231,218,52)"/><text x="31.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="28" y="452" width="2" height="15" fill="rgb(219,61,5)"/><text x="31.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="28" y="468" width="2" height="15" fill="rgb(232,104,50)"/><text x="31.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="28" y="484" width="2" height="15" fill="rgb(206,182,52)"/><text x="31.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="28" y="500" width="2" height="15" fill="rgb(236,193,14)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="28" y="516" width="2" height="15" fill="rgb(250,30,17)"/><text x="31.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.22%)</title><rect x="28" y="532" width="2" height="15" fill="rgb(225,196,43)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="28" y="548" width="2" height="15" fill="rgb(230,59,27)"/><text x="31.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="28" y="564" width="2" height="15" fill="rgb(237,49,17)"/><text x="31.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="28" y="580" width="2" height="15" fill="rgb(232,113,43)"/><text x="31.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="28" y="596" width="2" height="15" fill="rgb(246,65,3)"/><text x="31.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="28" y="612" width="2" height="15" fill="rgb(235,88,30)"/><text x="31.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.22%)</title><rect x="28" y="628" width="2" height="15" fill="rgb(246,185,29)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="28" y="644" width="2" height="15" fill="rgb(243,218,23)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="28" y="660" width="2" height="15" fill="rgb(219,102,35)"/><text x="31.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="28" y="676" width="2" height="15" fill="rgb(254,66,12)"/><text x="31.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="28" y="692" width="2" height="15" fill="rgb(245,71,46)"/><text x="31.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="28" y="708" width="2" height="15" fill="rgb(229,87,11)"/><text x="31.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.22%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(234,21,51)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(221,11,12)"/><text x="31.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(222,198,54)"/><text x="31.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(251,67,13)"/><text x="31.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(246,123,12)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(228,110,1)"/><text x="31.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.22%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(251,48,29)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(250,69,20)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(219,95,20)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(253,78,25)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(208,13,46)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(244,109,50)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.22%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(206,196,29)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(216,188,46)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(240,155,27)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(236,102,15)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(252,199,37)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(233,144,26)"/><text x="31.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.22%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(212,216,45)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(226,100,32)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(216,123,27)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(225,98,47)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(216,72,43)"/><text x="31.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.22%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(210,130,17)"/><text x="31.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.22%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(245,115,22)"/><text x="31.00" y="1118.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:37) (1 samples, 0.22%)</title><rect x="30" y="1316" width="3" height="15" fill="rgb(240,31,11)"/><text x="33.00" y="1326.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.22%)</title><rect x="30" y="1332" width="3" height="15" fill="rgb(213,183,35)"/><text x="33.00" y="1342.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.22%)</title><rect x="30" y="1348" width="3" height="15" fill="rgb(237,57,10)"/><text x="33.00" y="1358.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.22%)</title><rect x="30" y="1364" width="3" height="15" fill="rgb(253,131,32)"/><text x="33.00" y="1374.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.22%)</title><rect x="30" y="1380" width="3" height="15" fill="rgb(234,23,16)"/><text x="33.00" y="1390.50"></text></g><g><title>_compile_info (sre_compile.py:540) (1 samples, 0.22%)</title><rect x="30" y="1396" width="3" height="15" fill="rgb(217,70,52)"/><text x="33.00" y="1406.50"></text></g><g><title>getwidth (sre_parse.py:197) (1 samples, 0.22%)</title><rect x="30" y="1412" width="3" height="15" fill="rgb(211,59,27)"/><text x="33.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.44%)</title><rect x="30" y="1108" width="5" height="15" fill="rgb(250,206,16)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="30" y="1124" width="5" height="15" fill="rgb(222,16,52)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="30" y="1140" width="5" height="15" fill="rgb(221,26,41)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="30" y="1156" width="5" height="15" fill="rgb(205,218,1)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="30" y="1172" width="5" height="15" fill="rgb(217,212,9)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="30" y="1188" width="5" height="15" fill="rgb(253,135,10)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.44%)</title><rect x="30" y="1204" width="5" height="15" fill="rgb(239,44,25)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="30" y="1220" width="5" height="15" fill="rgb(224,15,16)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="30" y="1236" width="5" height="15" fill="rgb(244,119,33)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="30" y="1252" width="5" height="15" fill="rgb(210,55,48)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="30" y="1268" width="5" height="15" fill="rgb(217,10,3)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="30" y="1284" width="5" height="15" fill="rgb(208,200,17)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.44%)</title><rect x="30" y="1300" width="5" height="15" fill="rgb(245,37,40)"/><text x="33.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.22%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(228,194,15)"/><text x="36.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.22%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(253,169,48)"/><text x="36.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.22%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(224,206,11)"/><text x="36.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.22%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(209,18,46)"/><text x="36.00" y="1374.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.22%)</title><rect x="35" y="1572" width="3" height="15" fill="rgb(241,194,34)"/><text x="38.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.22%)</title><rect x="35" y="1588" width="3" height="15" fill="rgb(241,11,49)"/><text x="38.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.22%)</title><rect x="35" y="1604" width="3" height="15" fill="rgb(231,226,33)"/><text x="38.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.22%)</title><rect x="35" y="1620" width="3" height="15" fill="rgb(240,15,38)"/><text x="38.00" y="1630.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.44%)</title><rect x="35" y="1460" width="6" height="15" fill="rgb(250,80,36)"/><text x="38.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.44%)</title><rect x="35" y="1476" width="6" height="15" fill="rgb(209,69,52)"/><text x="38.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.44%)</title><rect x="35" y="1492" width="6" height="15" fill="rgb(227,117,12)"/><text x="38.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.44%)</title><rect x="35" y="1508" width="6" height="15" fill="rgb(251,136,42)"/><text x="38.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.44%)</title><rect x="35" y="1524" width="6" height="15" fill="rgb(227,199,1)"/><text x="38.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.44%)</title><rect x="35" y="1540" width="6" height="15" fill="rgb(211,186,5)"/><text x="38.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.44%)</title><rect x="35" y="1556" width="6" height="15" fill="rgb(207,76,30)"/><text x="38.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:64) (1 samples, 0.22%)</title><rect x="38" y="1572" width="3" height="15" fill="rgb(247,212,52)"/><text x="41.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:254) (1 samples, 0.22%)</title><rect x="38" y="1588" width="3" height="15" fill="rgb(223,93,24)"/><text x="41.00" y="1598.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:12) (1 samples, 0.22%)</title><rect x="41" y="1876" width="2" height="15" fill="rgb(234,107,39)"/><text x="44.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="41" y="1892" width="2" height="15" fill="rgb(233,219,44)"/><text x="44.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="41" y="1908" width="2" height="15" fill="rgb(214,0,49)"/><text x="44.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="41" y="1924" width="2" height="15" fill="rgb(220,149,38)"/><text x="44.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="41" y="1940" width="2" height="15" fill="rgb(237,5,22)"/><text x="44.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="41" y="1956" width="2" height="15" fill="rgb(227,198,51)"/><text x="44.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/locks.py:299) (1 samples, 0.22%)</title><rect x="41" y="1972" width="2" height="15" fill="rgb(236,227,25)"/><text x="44.00" y="1982.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:4) (14 samples, 3.08%)</title><rect x="10" y="52" width="36" height="15" fill="rgb(245,166,29)"/><text x="13.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 3.08%)</title><rect x="10" y="68" width="36" height="15" fill="rgb(240,166,38)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 3.08%)</title><rect x="10" y="84" width="36" height="15" fill="rgb(215,110,49)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 3.08%)</title><rect x="10" y="100" width="36" height="15" fill="rgb(226,60,35)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 3.08%)</title><rect x="10" y="116" width="36" height="15" fill="rgb(225,113,23)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 3.08%)</title><rect x="10" y="132" width="36" height="15" fill="rgb(212,108,44)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:7) (9 samples, 1.98%)</title><rect x="22" y="148" width="24" height="15" fill="rgb(222,145,7)"/><text x="25.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.98%)</title><rect x="22" y="164" width="24" height="15" fill="rgb(225,216,20)"/><text x="25.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.98%)</title><rect x="22" y="180" width="24" height="15" fill="rgb(221,176,1)"/><text x="25.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.98%)</title><rect x="22" y="196" width="24" height="15" fill="rgb(247,139,18)"/><text x="25.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.98%)</title><rect x="22" y="212" width="24" height="15" fill="rgb(253,141,27)"/><text x="25.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.98%)</title><rect x="22" y="228" width="24" height="15" fill="rgb(236,4,7)"/><text x="25.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.54%)</title><rect x="28" y="244" width="18" height="15" fill="rgb(218,103,53)"/><text x="31.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.54%)</title><rect x="28" y="260" width="18" height="15" fill="rgb(227,205,6)"/><text x="31.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.54%)</title><rect x="28" y="276" width="18" height="15" fill="rgb(214,191,52)"/><text x="31.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.54%)</title><rect x="28" y="292" width="18" height="15" fill="rgb(238,82,40)"/><text x="31.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.54%)</title><rect x="28" y="308" width="18" height="15" fill="rgb(249,51,31)"/><text x="31.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.54%)</title><rect x="28" y="324" width="18" height="15" fill="rgb(232,5,51)"/><text x="31.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.54%)</title><rect x="28" y="340" width="18" height="15" fill="rgb(217,48,43)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.54%)</title><rect x="28" y="356" width="18" height="15" fill="rgb(242,158,2)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.54%)</title><rect x="28" y="372" width="18" height="15" fill="rgb(225,172,22)"/><text x="31.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.54%)</title><rect x="28" y="388" width="18" height="15" fill="rgb(237,200,17)"/><text x="31.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.54%)</title><rect x="28" y="404" width="18" height="15" fill="rgb(231,190,34)"/><text x="31.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.54%)</title><rect x="28" y="420" width="18" height="15" fill="rgb(208,124,34)"/><text x="31.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 1.32%)</title><rect x="30" y="436" width="16" height="15" fill="rgb(234,217,16)"/><text x="33.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="452" width="16" height="15" fill="rgb(219,41,51)"/><text x="33.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.32%)</title><rect x="30" y="468" width="16" height="15" fill="rgb(252,69,14)"/><text x="33.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="484" width="16" height="15" fill="rgb(218,91,38)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="500" width="16" height="15" fill="rgb(244,59,24)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.32%)</title><rect x="30" y="516" width="16" height="15" fill="rgb(221,197,36)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.32%)</title><rect x="30" y="532" width="16" height="15" fill="rgb(238,158,19)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.32%)</title><rect x="30" y="548" width="16" height="15" fill="rgb(219,27,39)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="564" width="16" height="15" fill="rgb(251,180,41)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 1.32%)</title><rect x="30" y="580" width="16" height="15" fill="rgb(251,137,3)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="596" width="16" height="15" fill="rgb(248,188,3)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.32%)</title><rect x="30" y="612" width="16" height="15" fill="rgb(233,80,51)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.32%)</title><rect x="30" y="628" width="16" height="15" fill="rgb(222,1,41)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.32%)</title><rect x="30" y="644" width="16" height="15" fill="rgb(221,161,5)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="660" width="16" height="15" fill="rgb(221,193,17)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 1.32%)</title><rect x="30" y="676" width="16" height="15" fill="rgb(230,79,37)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="692" width="16" height="15" fill="rgb(210,173,7)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.32%)</title><rect x="30" y="708" width="16" height="15" fill="rgb(249,0,23)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.32%)</title><rect x="30" y="724" width="16" height="15" fill="rgb(234,4,5)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.32%)</title><rect x="30" y="740" width="16" height="15" fill="rgb(216,84,25)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="756" width="16" height="15" fill="rgb(225,95,42)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 1.32%)</title><rect x="30" y="772" width="16" height="15" fill="rgb(212,141,32)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="788" width="16" height="15" fill="rgb(246,21,9)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.32%)</title><rect x="30" y="804" width="16" height="15" fill="rgb(233,177,9)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.32%)</title><rect x="30" y="820" width="16" height="15" fill="rgb(225,172,19)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.32%)</title><rect x="30" y="836" width="16" height="15" fill="rgb(221,203,0)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="852" width="16" height="15" fill="rgb(243,199,40)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 1.32%)</title><rect x="30" y="868" width="16" height="15" fill="rgb(208,219,5)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="884" width="16" height="15" fill="rgb(242,189,15)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.32%)</title><rect x="30" y="900" width="16" height="15" fill="rgb(244,27,10)"/><text x="33.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="916" width="16" height="15" fill="rgb(247,10,28)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="932" width="16" height="15" fill="rgb(242,182,30)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.32%)</title><rect x="30" y="948" width="16" height="15" fill="rgb(213,140,1)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.32%)</title><rect x="30" y="964" width="16" height="15" fill="rgb(233,204,6)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.32%)</title><rect x="30" y="980" width="16" height="15" fill="rgb(217,9,16)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="996" width="16" height="15" fill="rgb(251,86,46)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 1.32%)</title><rect x="30" y="1012" width="16" height="15" fill="rgb(240,225,24)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.32%)</title><rect x="30" y="1028" width="16" height="15" fill="rgb(233,34,37)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.32%)</title><rect x="30" y="1044" width="16" height="15" fill="rgb(229,196,51)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.32%)</title><rect x="30" y="1060" width="16" height="15" fill="rgb(237,146,28)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.32%)</title><rect x="30" y="1076" width="16" height="15" fill="rgb(251,166,37)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.32%)</title><rect x="30" y="1092" width="16" height="15" fill="rgb(233,173,53)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.88%)</title><rect x="35" y="1108" width="11" height="15" fill="rgb(226,176,18)"/><text x="38.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.88%)</title><rect x="35" y="1124" width="11" height="15" fill="rgb(253,32,4)"/><text x="38.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.88%)</title><rect x="35" y="1140" width="11" height="15" fill="rgb(253,161,17)"/><text x="38.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.88%)</title><rect x="35" y="1156" width="11" height="15" fill="rgb(211,215,13)"/><text x="38.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.88%)</title><rect x="35" y="1172" width="11" height="15" fill="rgb(226,24,12)"/><text x="38.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.88%)</title><rect x="35" y="1188" width="11" height="15" fill="rgb(239,45,38)"/><text x="38.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.88%)</title><rect x="35" y="1204" width="11" height="15" fill="rgb(215,177,29)"/><text x="38.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.88%)</title><rect x="35" y="1220" width="11" height="15" fill="rgb(226,89,37)"/><text x="38.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.88%)</title><rect x="35" y="1236" width="11" height="15" fill="rgb(213,82,5)"/><text x="38.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.88%)</title><rect x="35" y="1252" width="11" height="15" fill="rgb(205,210,36)"/><text x="38.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.88%)</title><rect x="35" y="1268" width="11" height="15" fill="rgb(245,90,43)"/><text x="38.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.88%)</title><rect x="35" y="1284" width="11" height="15" fill="rgb(226,194,22)"/><text x="38.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.88%)</title><rect x="35" y="1300" width="11" height="15" fill="rgb(216,226,51)"/><text x="38.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.88%)</title><rect x="35" y="1316" width="11" height="15" fill="rgb(228,64,48)"/><text x="38.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.88%)</title><rect x="35" y="1332" width="11" height="15" fill="rgb(228,128,50)"/><text x="38.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.88%)</title><rect x="35" y="1348" width="11" height="15" fill="rgb(225,85,9)"/><text x="38.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.88%)</title><rect x="35" y="1364" width="11" height="15" fill="rgb(242,60,47)"/><text x="38.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.88%)</title><rect x="35" y="1380" width="11" height="15" fill="rgb(253,7,25)"/><text x="38.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.88%)</title><rect x="35" y="1396" width="11" height="15" fill="rgb(225,130,13)"/><text x="38.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.88%)</title><rect x="35" y="1412" width="11" height="15" fill="rgb(248,189,27)"/><text x="38.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.88%)</title><rect x="35" y="1428" width="11" height="15" fill="rgb(225,79,47)"/><text x="38.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.88%)</title><rect x="35" y="1444" width="11" height="15" fill="rgb(235,124,49)"/><text x="38.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.44%)</title><rect x="41" y="1460" width="5" height="15" fill="rgb(241,121,30)"/><text x="44.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="41" y="1476" width="5" height="15" fill="rgb(211,125,25)"/><text x="44.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="41" y="1492" width="5" height="15" fill="rgb(222,160,36)"/><text x="44.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="41" y="1508" width="5" height="15" fill="rgb(207,83,50)"/><text x="44.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="41" y="1524" width="5" height="15" fill="rgb(241,22,47)"/><text x="44.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="41" y="1540" width="5" height="15" fill="rgb(222,68,27)"/><text x="44.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.44%)</title><rect x="41" y="1556" width="5" height="15" fill="rgb(238,194,33)"/><text x="44.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (2 samples, 0.44%)</title><rect x="41" y="1572" width="5" height="15" fill="rgb(248,140,4)"/><text x="44.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="41" y="1588" width="5" height="15" fill="rgb(242,200,54)"/><text x="44.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="41" y="1604" width="5" height="15" fill="rgb(254,171,35)"/><text x="44.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="41" y="1620" width="5" height="15" fill="rgb(240,179,26)"/><text x="44.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="41" y="1636" width="5" height="15" fill="rgb(251,200,48)"/><text x="44.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="41" y="1652" width="5" height="15" fill="rgb(254,109,27)"/><text x="44.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (2 samples, 0.44%)</title><rect x="41" y="1668" width="5" height="15" fill="rgb(225,6,41)"/><text x="44.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (2 samples, 0.44%)</title><rect x="41" y="1684" width="5" height="15" fill="rgb(220,0,35)"/><text x="44.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="41" y="1700" width="5" height="15" fill="rgb(246,203,52)"/><text x="44.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="41" y="1716" width="5" height="15" fill="rgb(209,36,0)"/><text x="44.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="41" y="1732" width="5" height="15" fill="rgb(250,28,3)"/><text x="44.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="41" y="1748" width="5" height="15" fill="rgb(221,223,25)"/><text x="44.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="41" y="1764" width="5" height="15" fill="rgb(251,172,34)"/><text x="44.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (2 samples, 0.44%)</title><rect x="41" y="1780" width="5" height="15" fill="rgb(254,205,4)"/><text x="44.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.44%)</title><rect x="41" y="1796" width="5" height="15" fill="rgb(217,144,17)"/><text x="44.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.44%)</title><rect x="41" y="1812" width="5" height="15" fill="rgb(233,154,40)"/><text x="44.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.44%)</title><rect x="41" y="1828" width="5" height="15" fill="rgb(237,35,47)"/><text x="44.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.44%)</title><rect x="41" y="1844" width="5" height="15" fill="rgb(219,111,1)"/><text x="44.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.44%)</title><rect x="41" y="1860" width="5" height="15" fill="rgb(225,143,18)"/><text x="44.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.22%)</title><rect x="43" y="1876" width="3" height="15" fill="rgb(238,194,15)"/><text x="46.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="43" y="1892" width="3" height="15" fill="rgb(211,83,40)"/><text x="46.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="43" y="1908" width="3" height="15" fill="rgb(247,16,1)"/><text x="46.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="43" y="1924" width="3" height="15" fill="rgb(217,221,23)"/><text x="46.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.22%)</title><rect x="43" y="1940" width="3" height="15" fill="rgb(238,153,49)"/><text x="46.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="43" y="1956" width="3" height="15" fill="rgb(225,193,12)"/><text x="46.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:37) (1 samples, 0.22%)</title><rect x="43" y="1972" width="3" height="15" fill="rgb(207,92,16)"/><text x="46.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.22%)</title><rect x="43" y="1988" width="3" height="15" fill="rgb(248,127,32)"/><text x="46.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.22%)</title><rect x="43" y="2004" width="3" height="15" fill="rgb(221,136,29)"/><text x="46.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.22%)</title><rect x="43" y="2020" width="3" height="15" fill="rgb(211,160,52)"/><text x="46.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.22%)</title><rect x="43" y="2036" width="3" height="15" fill="rgb(211,131,13)"/><text x="46.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.22%)</title><rect x="43" y="2052" width="3" height="15" fill="rgb(229,59,23)"/><text x="46.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.22%)</title><rect x="43" y="2068" width="3" height="15" fill="rgb(242,215,11)"/><text x="46.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.22%)</title><rect x="43" y="2084" width="3" height="15" fill="rgb(213,110,11)"/><text x="46.00" y="2094.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.22%)</title><rect x="43" y="2100" width="3" height="15" fill="rgb(236,157,0)"/><text x="46.00" y="2110.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.22%)</title><rect x="43" y="2116" width="3" height="15" fill="rgb(241,118,4)"/><text x="46.00" y="2126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="54" y="116" width="2" height="15" fill="rgb(209,219,54)"/><text x="57.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="54" y="132" width="2" height="15" fill="rgb(208,147,43)"/><text x="57.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.22%)</title><rect x="54" y="148" width="2" height="15" fill="rgb(230,213,23)"/><text x="57.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.22%)</title><rect x="72" y="180" width="2" height="15" fill="rgb(254,92,26)"/><text x="75.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.22%)</title><rect x="74" y="180" width="3" height="15" fill="rgb(226,102,38)"/><text x="77.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.22%)</title><rect x="82" y="196" width="3" height="15" fill="rgb(242,88,12)"/><text x="85.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.66%)</title><rect x="93" y="212" width="7" height="15" fill="rgb(238,71,43)"/><text x="96.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 1.98%)</title><rect x="85" y="196" width="23" height="15" fill="rgb(218,14,4)"/><text x="88.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.66%)</title><rect x="100" y="212" width="8" height="15" fill="rgb(253,114,4)"/><text x="103.00" y="222.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:205) (17 samples, 3.74%)</title><rect x="69" y="164" width="44" height="15" fill="rgb(237,9,5)"/><text x="72.00" y="174.50">_dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 3.08%)</title><rect x="77" y="180" width="36" height="15" fill="rgb(212,202,34)"/><text x="80.00" y="190.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.44%)</title><rect x="108" y="196" width="5" height="15" fill="rgb(242,155,8)"/><text x="111.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.22%)</title><rect x="111" y="212" width="2" height="15" fill="rgb(207,161,44)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.44%)</title><rect x="126" y="180" width="6" height="15" fill="rgb(235,166,47)"/><text x="129.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.22%)</title><rect x="132" y="180" width="2" height="15" fill="rgb(242,27,27)"/><text x="135.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.22%)</title><rect x="134" y="180" width="3" height="15" fill="rgb(205,219,7)"/><text x="137.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (3 samples, 0.66%)</title><rect x="147" y="196" width="8" height="15" fill="rgb(235,141,16)"/><text x="150.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 1.98%)</title><rect x="137" y="180" width="23" height="15" fill="rgb(225,219,42)"/><text x="140.00" y="190.50">c..</text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.44%)</title><rect x="155" y="196" width="5" height="15" fill="rgb(239,154,40)"/><text x="158.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (2 samples, 0.44%)</title><rect x="163" y="196" width="5" height="15" fill="rgb(248,124,26)"/><text x="166.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (11 samples, 2.42%)</title><rect x="178" y="212" width="29" height="15" fill="rgb(230,2,27)"/><text x="181.00" y="222.50">_a..</text></g><g><title>0x7f0e44d60e7a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="204" y="228" width="3" height="15" fill="rgb(244,175,4)"/><text x="207.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (19 samples, 4.19%)</title><rect x="160" y="180" width="50" height="15" fill="rgb(217,45,3)"/><text x="163.00" y="190.50">check..</text></g><g><title>simplefilter (warnings.py:179) (16 samples, 3.52%)</title><rect x="168" y="196" width="42" height="15" fill="rgb(215,228,33)"/><text x="171.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.22%)</title><rect x="207" y="212" width="3" height="15" fill="rgb(225,37,16)"/><text x="210.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.44%)</title><rect x="210" y="180" width="5" height="15" fill="rgb(222,18,46)"/><text x="213.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.22%)</title><rect x="220" y="196" width="3" height="15" fill="rgb(217,7,37)"/><text x="223.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.88%)</title><rect x="215" y="180" width="10" height="15" fill="rgb(239,183,33)"/><text x="218.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.22%)</title><rect x="223" y="196" width="2" height="15" fill="rgb(206,103,48)"/><text x="226.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.44%)</title><rect x="225" y="196" width="5" height="15" fill="rgb(223,198,9)"/><text x="228.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (4 samples, 0.88%)</title><rect x="225" y="180" width="11" height="15" fill="rgb(206,96,52)"/><text x="228.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.44%)</title><rect x="230" y="196" width="6" height="15" fill="rgb(212,82,18)"/><text x="233.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 0.88%)</title><rect x="241" y="196" width="10" height="15" fill="rgb(226,116,10)"/><text x="244.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (4 samples, 0.88%)</title><rect x="241" y="212" width="10" height="15" fill="rgb(232,45,41)"/><text x="244.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (7 samples, 1.54%)</title><rect x="236" y="180" width="18" height="15" fill="rgb(253,146,13)"/><text x="239.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.22%)</title><rect x="251" y="196" width="3" height="15" fill="rgb(212,129,44)"/><text x="254.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.22%)</title><rect x="251" y="212" width="3" height="15" fill="rgb(234,206,16)"/><text x="254.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.66%)</title><rect x="267" y="212" width="8" height="15" fill="rgb(218,108,37)"/><text x="270.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.22%)</title><rect x="275" y="212" width="2" height="15" fill="rgb(225,206,24)"/><text x="278.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (9 samples, 1.98%)</title><rect x="256" y="196" width="24" height="15" fill="rgb(234,134,24)"/><text x="259.00" y="206.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.22%)</title><rect x="277" y="212" width="3" height="15" fill="rgb(221,215,30)"/><text x="280.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (13 samples, 2.86%)</title><rect x="254" y="180" width="34" height="15" fill="rgb(251,61,26)"/><text x="257.00" y="190.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 0.66%)</title><rect x="280" y="196" width="8" height="15" fill="rgb(234,20,7)"/><text x="283.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (3 samples, 0.66%)</title><rect x="280" y="212" width="8" height="15" fill="rgb(251,73,52)"/><text x="283.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.66%)</title><rect x="293" y="196" width="8" height="15" fill="rgb(244,102,17)"/><text x="296.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.44%)</title><rect x="301" y="196" width="5" height="15" fill="rgb(246,44,49)"/><text x="304.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.22%)</title><rect x="303" y="212" width="3" height="15" fill="rgb(209,161,48)"/><text x="306.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (2 samples, 0.44%)</title><rect x="306" y="196" width="5" height="15" fill="rgb(209,131,26)"/><text x="309.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (8 samples, 1.76%)</title><rect x="311" y="196" width="21" height="15" fill="rgb(240,70,17)"/><text x="314.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.44%)</title><rect x="327" y="212" width="5" height="15" fill="rgb(250,5,1)"/><text x="330.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.44%)</title><rect x="327" y="228" width="5" height="15" fill="rgb(238,116,5)"/><text x="330.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (18 samples, 3.96%)</title><rect x="288" y="180" width="46" height="15" fill="rgb(223,221,9)"/><text x="291.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.22%)</title><rect x="332" y="196" width="2" height="15" fill="rgb(226,175,38)"/><text x="335.00" y="206.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (86 samples, 18.94%)</title><rect x="113" y="164" width="224" height="15" fill="rgb(236,19,44)"/><text x="116.00" y="174.50">_decision_function (sklearn/l..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.22%)</title><rect x="334" y="180" width="3" height="15" fill="rgb(229,38,9)"/><text x="337.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.22%)</title><rect x="342" y="180" width="3" height="15" fill="rgb(234,105,16)"/><text x="345.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.22%)</title><rect x="342" y="196" width="3" height="15" fill="rgb(229,45,21)"/><text x="345.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1035) (1 samples, 0.22%)</title><rect x="342" y="212" width="3" height="15" fill="rgb(227,91,37)"/><text x="345.00" y="222.50"></text></g><g><title>PyArray_Transpose (shape.c:727) (1 samples, 0.22%)</title><rect x="345" y="180" width="2" height="15" fill="rgb(251,170,20)"/><text x="348.00" y="190.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:208) (5 samples, 1.10%)</title><rect x="337" y="164" width="13" height="15" fill="rgb(245,109,11)"/><text x="340.00" y="174.50"></text></g><g><title>array_transpose_get (getset.c:965) (1 samples, 0.22%)</title><rect x="347" y="180" width="3" height="15" fill="rgb(217,188,14)"/><text x="350.00" y="190.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.22%)</title><rect x="358" y="180" width="2" height="15" fill="rgb(226,116,15)"/><text x="361.00" y="190.50"></text></g><g><title>try_binary_elide (temp_elide.c:341) (1 samples, 0.22%)</title><rect x="358" y="196" width="2" height="15" fill="rgb(219,1,0)"/><text x="361.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c:293) (1 samples, 0.22%)</title><rect x="358" y="212" width="2" height="15" fill="rgb(253,33,54)"/><text x="361.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.22%)</title><rect x="366" y="244" width="2" height="15" fill="rgb(231,26,42)"/><text x="369.00" y="254.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.22%)</title><rect x="373" y="292" width="3" height="15" fill="rgb(217,227,5)"/><text x="376.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (4 samples, 0.88%)</title><rect x="368" y="276" width="11" height="15" fill="rgb(218,43,16)"/><text x="371.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="376" y="292" width="3" height="15" fill="rgb(224,228,51)"/><text x="379.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (6 samples, 1.32%)</title><rect x="366" y="196" width="15" height="15" fill="rgb(221,43,14)"/><text x="369.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (6 samples, 1.32%)</title><rect x="366" y="212" width="15" height="15" fill="rgb(252,121,50)"/><text x="369.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (6 samples, 1.32%)</title><rect x="366" y="228" width="15" height="15" fill="rgb(244,136,25)"/><text x="369.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (5 samples, 1.10%)</title><rect x="368" y="244" width="13" height="15" fill="rgb(242,162,13)"/><text x="371.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (5 samples, 1.10%)</title><rect x="368" y="260" width="13" height="15" fill="rgb(231,165,39)"/><text x="371.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.22%)</title><rect x="379" y="276" width="2" height="15" fill="rgb(221,69,34)"/><text x="382.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1084) (1 samples, 0.22%)</title><rect x="381" y="228" width="3" height="15" fill="rgb(245,157,54)"/><text x="384.00" y="238.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:279) (1 samples, 0.22%)</title><rect x="384" y="260" width="2" height="15" fill="rgb(236,150,24)"/><text x="387.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.66%)</title><rect x="381" y="212" width="8" height="15" fill="rgb(227,188,38)"/><text x="384.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.44%)</title><rect x="384" y="228" width="5" height="15" fill="rgb(226,219,15)"/><text x="387.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (2 samples, 0.44%)</title><rect x="384" y="244" width="5" height="15" fill="rgb(242,53,51)"/><text x="387.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:287) (1 samples, 0.22%)</title><rect x="386" y="260" width="3" height="15" fill="rgb(244,137,17)"/><text x="389.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:566) (1 samples, 0.22%)</title><rect x="386" y="276" width="3" height="15" fill="rgb(232,225,42)"/><text x="389.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.22%)</title><rect x="386" y="292" width="3" height="15" fill="rgb(246,57,6)"/><text x="389.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.22%)</title><rect x="386" y="308" width="3" height="15" fill="rgb(210,53,42)"/><text x="389.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.22%)</title><rect x="386" y="324" width="3" height="15" fill="rgb(219,85,41)"/><text x="389.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.22%)</title><rect x="389" y="212" width="3" height="15" fill="rgb(216,225,19)"/><text x="392.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.22%)</title><rect x="392" y="228" width="2" height="15" fill="rgb(238,141,49)"/><text x="395.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="392" y="244" width="2" height="15" fill="rgb(244,174,23)"/><text x="395.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="392" y="260" width="2" height="15" fill="rgb(218,27,29)"/><text x="395.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="392" y="276" width="2" height="15" fill="rgb(229,121,40)"/><text x="395.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.22%)</title><rect x="392" y="292" width="2" height="15" fill="rgb(237,68,28)"/><text x="395.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.22%)</title><rect x="392" y="308" width="2" height="15" fill="rgb(224,32,47)"/><text x="395.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="392" y="324" width="2" height="15" fill="rgb(242,51,40)"/><text x="395.00" y="334.50"></text></g><g><title>0x7f0e44d4bcbd (libc-2.29.so) (1 samples, 0.22%)</title><rect x="392" y="340" width="2" height="15" fill="rgb(219,121,14)"/><text x="395.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.32%)</title><rect x="381" y="196" width="16" height="15" fill="rgb(223,79,48)"/><text x="384.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.44%)</title><rect x="392" y="212" width="5" height="15" fill="rgb(241,16,15)"/><text x="395.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1723) (1 samples, 0.22%)</title><rect x="394" y="228" width="3" height="15" fill="rgb(249,31,48)"/><text x="397.00" y="238.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1458) (1 samples, 0.22%)</title><rect x="394" y="244" width="3" height="15" fill="rgb(251,71,8)"/><text x="397.00" y="254.50"></text></g><g><title>array_add (number.c:330) (15 samples, 3.30%)</title><rect x="360" y="180" width="39" height="15" fill="rgb(211,182,54)"/><text x="363.00" y="190.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.22%)</title><rect x="397" y="196" width="2" height="15" fill="rgb(211,219,22)"/><text x="400.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.22%)</title><rect x="397" y="212" width="2" height="15" fill="rgb(236,83,9)"/><text x="400.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.22%)</title><rect x="397" y="228" width="2" height="15" fill="rgb(206,2,23)"/><text x="400.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.22%)</title><rect x="397" y="244" width="2" height="15" fill="rgb(234,158,11)"/><text x="400.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.22%)</title><rect x="399" y="180" width="3" height="15" fill="rgb(229,156,32)"/><text x="402.00" y="190.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.22%)</title><rect x="399" y="196" width="3" height="15" fill="rgb(211,182,28)"/><text x="402.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.22%)</title><rect x="399" y="212" width="3" height="15" fill="rgb(218,66,14)"/><text x="402.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (2 samples, 0.44%)</title><rect x="402" y="180" width="5" height="15" fill="rgb(234,165,24)"/><text x="405.00" y="190.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (1 samples, 0.22%)</title><rect x="410" y="196" width="2" height="15" fill="rgb(207,36,29)"/><text x="413.00" y="206.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.22%)</title><rect x="410" y="212" width="2" height="15" fill="rgb(236,111,29)"/><text x="413.00" y="222.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="410" y="228" width="2" height="15" fill="rgb(234,41,40)"/><text x="413.00" y="238.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.88%)</title><rect x="412" y="196" width="11" height="15" fill="rgb(223,221,4)"/><text x="415.00" y="206.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.22%)</title><rect x="423" y="228" width="2" height="15" fill="rgb(239,102,52)"/><text x="426.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:516) (1 samples, 0.22%)</title><rect x="423" y="244" width="2" height="15" fill="rgb(243,220,25)"/><text x="426.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2867) (1 samples, 0.22%)</title><rect x="425" y="228" width="3" height="15" fill="rgb(220,70,43)"/><text x="428.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="428" y="244" width="3" height="15" fill="rgb(236,199,28)"/><text x="431.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="428" y="260" width="3" height="15" fill="rgb(207,195,1)"/><text x="431.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1003) (1 samples, 0.22%)</title><rect x="428" y="276" width="3" height="15" fill="rgb(230,184,8)"/><text x="431.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1432) (1 samples, 0.22%)</title><rect x="431" y="260" width="2" height="15" fill="rgb(228,87,49)"/><text x="434.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.44%)</title><rect x="431" y="244" width="5" height="15" fill="rgb(231,147,30)"/><text x="434.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.22%)</title><rect x="433" y="260" width="3" height="15" fill="rgb(228,114,13)"/><text x="436.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2821) (1 samples, 0.22%)</title><rect x="436" y="260" width="2" height="15" fill="rgb(213,166,54)"/><text x="439.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.22%)</title><rect x="438" y="260" width="3" height="15" fill="rgb(205,35,10)"/><text x="441.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.22%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(229,25,54)"/><text x="441.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.22%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(220,68,2)"/><text x="441.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="438" y="308" width="3" height="15" fill="rgb(211,32,31)"/><text x="441.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="438" y="324" width="3" height="15" fill="rgb(247,8,38)"/><text x="441.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.22%)</title><rect x="438" y="340" width="3" height="15" fill="rgb(211,70,47)"/><text x="441.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.22%)</title><rect x="438" y="356" width="3" height="15" fill="rgb(254,196,18)"/><text x="441.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="438" y="372" width="3" height="15" fill="rgb(254,20,18)"/><text x="441.00" y="382.50"></text></g><g><title>0x7f0e44d4c1a3 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="438" y="388" width="3" height="15" fill="rgb(214,60,28)"/><text x="441.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.22%)</title><rect x="441" y="276" width="3" height="15" fill="rgb(213,185,26)"/><text x="444.00" y="286.50"></text></g><g><title>broadcast_strides (array_assign.c:34) (1 samples, 0.22%)</title><rect x="441" y="292" width="3" height="15" fill="rgb(253,177,3)"/><text x="444.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.22%)</title><rect x="444" y="292" width="2" height="15" fill="rgb(243,204,13)"/><text x="447.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.22%)</title><rect x="444" y="308" width="2" height="15" fill="rgb(237,15,30)"/><text x="447.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (5 samples, 1.10%)</title><rect x="446" y="292" width="13" height="15" fill="rgb(207,171,38)"/><text x="449.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (5 samples, 1.10%)</title><rect x="446" y="308" width="13" height="15" fill="rgb(215,118,50)"/><text x="449.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.22%)</title><rect x="459" y="292" width="3" height="15" fill="rgb(211,38,40)"/><text x="462.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.22%)</title><rect x="459" y="308" width="3" height="15" fill="rgb(217,138,0)"/><text x="462.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.22%)</title><rect x="459" y="324" width="3" height="15" fill="rgb(215,5,54)"/><text x="462.00" y="334.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.22%)</title><rect x="462" y="324" width="2" height="15" fill="rgb(219,101,24)"/><text x="465.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (10 samples, 2.20%)</title><rect x="441" y="260" width="26" height="15" fill="rgb(224,82,25)"/><text x="444.00" y="270.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (9 samples, 1.98%)</title><rect x="444" y="276" width="23" height="15" fill="rgb(229,174,25)"/><text x="447.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.44%)</title><rect x="462" y="292" width="5" height="15" fill="rgb(238,68,6)"/><text x="465.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (2 samples, 0.44%)</title><rect x="462" y="308" width="5" height="15" fill="rgb(232,86,9)"/><text x="465.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="464" y="324" width="3" height="15" fill="rgb(237,82,6)"/><text x="467.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (16 samples, 3.52%)</title><rect x="428" y="228" width="42" height="15" fill="rgb(216,155,32)"/><text x="431.00" y="238.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (13 samples, 2.86%)</title><rect x="436" y="244" width="34" height="15" fill="rgb(232,187,5)"/><text x="439.00" y="254.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.22%)</title><rect x="467" y="260" width="3" height="15" fill="rgb(212,229,20)"/><text x="470.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2916) (1 samples, 0.22%)</title><rect x="470" y="228" width="2" height="15" fill="rgb(208,5,21)"/><text x="473.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.22%)</title><rect x="472" y="228" width="3" height="15" fill="rgb(205,202,16)"/><text x="475.00" y="238.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:169) (1 samples, 0.22%)</title><rect x="472" y="244" width="3" height="15" fill="rgb(248,124,6)"/><text x="475.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:274) (1 samples, 0.22%)</title><rect x="472" y="260" width="3" height="15" fill="rgb(224,77,40)"/><text x="475.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.22%)</title><rect x="475" y="228" width="2" height="15" fill="rgb(227,70,39)"/><text x="478.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.22%)</title><rect x="475" y="244" width="2" height="15" fill="rgb(211,55,12)"/><text x="478.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.22%)</title><rect x="475" y="260" width="2" height="15" fill="rgb(242,204,44)"/><text x="478.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.22%)</title><rect x="475" y="276" width="2" height="15" fill="rgb(225,222,8)"/><text x="478.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2995) (1 samples, 0.22%)</title><rect x="477" y="228" width="3" height="15" fill="rgb(239,185,19)"/><text x="480.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.22%)</title><rect x="477" y="244" width="3" height="15" fill="rgb(216,134,52)"/><text x="480.00" y="254.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:101) (1 samples, 0.22%)</title><rect x="480" y="260" width="3" height="15" fill="rgb(253,180,13)"/><text x="483.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (5 samples, 1.10%)</title><rect x="480" y="244" width="13" height="15" fill="rgb(205,30,22)"/><text x="483.00" y="254.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (4 samples, 0.88%)</title><rect x="483" y="260" width="10" height="15" fill="rgb(223,6,14)"/><text x="486.00" y="270.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.66%)</title><rect x="485" y="276" width="8" height="15" fill="rgb(216,45,45)"/><text x="488.00" y="286.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="490" y="292" width="3" height="15" fill="rgb(235,181,36)"/><text x="493.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="490" y="308" width="3" height="15" fill="rgb(247,124,20)"/><text x="493.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (6 samples, 1.32%)</title><rect x="480" y="228" width="16" height="15" fill="rgb(222,43,15)"/><text x="483.00" y="238.50"></text></g><g><title>npyiter_iternext_sizeone (nditer_templ.c.src:333) (1 samples, 0.22%)</title><rect x="493" y="244" width="3" height="15" fill="rgb(224,115,26)"/><text x="496.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.22%)</title><rect x="496" y="228" width="2" height="15" fill="rgb(251,174,50)"/><text x="499.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.22%)</title><rect x="498" y="260" width="3" height="15" fill="rgb(230,197,49)"/><text x="501.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.44%)</title><rect x="501" y="260" width="5" height="15" fill="rgb(236,64,5)"/><text x="504.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.44%)</title><rect x="501" y="276" width="5" height="15" fill="rgb(236,212,16)"/><text x="504.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.44%)</title><rect x="501" y="292" width="5" height="15" fill="rgb(254,132,30)"/><text x="504.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (33 samples, 7.27%)</title><rect x="423" y="196" width="86" height="15" fill="rgb(252,209,10)"/><text x="426.00" y="206.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (33 samples, 7.27%)</title><rect x="423" y="212" width="86" height="15" fill="rgb(251,72,33)"/><text x="426.00" y="222.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (4 samples, 0.88%)</title><rect x="498" y="228" width="11" height="15" fill="rgb(207,51,26)"/><text x="501.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (4 samples, 0.88%)</title><rect x="498" y="244" width="11" height="15" fill="rgb(212,140,47)"/><text x="501.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.22%)</title><rect x="506" y="260" width="3" height="15" fill="rgb(242,184,12)"/><text x="509.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.22%)</title><rect x="506" y="276" width="3" height="15" fill="rgb(208,43,50)"/><text x="509.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.22%)</title><rect x="506" y="292" width="3" height="15" fill="rgb(223,91,22)"/><text x="509.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.22%)</title><rect x="506" y="308" width="3" height="15" fill="rgb(244,228,31)"/><text x="509.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4730) (1 samples, 0.22%)</title><rect x="509" y="196" width="2" height="15" fill="rgb(218,114,17)"/><text x="512.00" y="206.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (41 samples, 9.03%)</title><rect x="407" y="180" width="107" height="15" fill="rgb(246,53,13)"/><text x="410.00" y="190.50">safe_sparse_d..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.22%)</title><rect x="511" y="196" width="3" height="15" fill="rgb(241,114,25)"/><text x="514.00" y="206.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.22%)</title><rect x="511" y="212" width="3" height="15" fill="rgb(237,24,2)"/><text x="514.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (177 samples, 38.99%)</title><rect x="64" y="132" width="460" height="15" fill="rgb(215,100,19)"/><text x="67.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (176 samples, 38.77%)</title><rect x="67" y="148" width="457" height="15" fill="rgb(239,33,1)"/><text x="70.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (67 samples, 14.76%)</title><rect x="350" y="164" width="174" height="15" fill="rgb(243,55,46)"/><text x="353.00" y="174.50">_decision_function (sk..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (4 samples, 0.88%)</title><rect x="514" y="180" width="10" height="15" fill="rgb(245,91,54)"/><text x="517.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.22%)</title><rect x="522" y="196" width="2" height="15" fill="rgb(233,43,54)"/><text x="525.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:54) (185 samples, 40.75%)</title><rect x="46" y="52" width="481" height="15" fill="rgb(214,127,49)"/><text x="49.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.p..</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:53) (185 samples, 40.75%)</title><rect x="46" y="68" width="481" height="15" fill="rgb(234,107,18)"/><text x="49.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1000_4_12_float..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:37) (185 samples, 40.75%)</title><rect x="46" y="84" width="481" height="15" fill="rgb(229,69,40)"/><text x="49.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_flo..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:31) (185 samples, 40.75%)</title><rect x="46" y="100" width="481" height="15" fill="rgb(226,105,51)"/><text x="49.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (181 samples, 39.87%)</title><rect x="56" y="116" width="471" height="15" fill="rgb(235,124,52)"/><text x="59.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="524" y="132" width="3" height="15" fill="rgb(251,72,4)"/><text x="527.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.22%)</title><rect x="527" y="148" width="2" height="15" fill="rgb(241,39,23)"/><text x="530.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.44%)</title><rect x="527" y="116" width="5" height="15" fill="rgb(236,74,48)"/><text x="530.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.44%)</title><rect x="527" y="132" width="5" height="15" fill="rgb(238,52,34)"/><text x="530.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.22%)</title><rect x="529" y="148" width="3" height="15" fill="rgb(222,81,28)"/><text x="532.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.22%)</title><rect x="545" y="148" width="3" height="15" fill="rgb(221,131,13)"/><text x="548.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.22%)</title><rect x="548" y="164" width="2" height="15" fill="rgb(235,217,21)"/><text x="551.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (2 samples, 0.44%)</title><rect x="550" y="164" width="5" height="15" fill="rgb(206,22,20)"/><text x="553.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.44%)</title><rect x="555" y="164" width="6" height="15" fill="rgb(207,210,39)"/><text x="558.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.44%)</title><rect x="561" y="164" width="5" height="15" fill="rgb(242,102,42)"/><text x="564.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.22%)</title><rect x="566" y="164" width="2" height="15" fill="rgb(222,129,54)"/><text x="569.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 1.10%)</title><rect x="574" y="180" width="13" height="15" fill="rgb(228,196,21)"/><text x="577.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:344) (1 samples, 0.22%)</title><rect x="594" y="196" width="3" height="15" fill="rgb(238,182,23)"/><text x="597.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.22%)</title><rect x="615" y="244" width="3" height="15" fill="rgb(232,115,25)"/><text x="618.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:5) (1 samples, 0.22%)</title><rect x="620" y="260" width="3" height="15" fill="rgb(209,151,26)"/><text x="623.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.22%)</title><rect x="628" y="276" width="3" height="15" fill="rgb(208,63,8)"/><text x="631.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.22%)</title><rect x="631" y="276" width="2" height="15" fill="rgb(253,206,17)"/><text x="634.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (1 samples, 0.22%)</title><rect x="631" y="292" width="2" height="15" fill="rgb(231,60,40)"/><text x="634.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.22%)</title><rect x="633" y="324" width="3" height="15" fill="rgb(209,5,44)"/><text x="636.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.22%)</title><rect x="633" y="340" width="3" height="15" fill="rgb(250,134,19)"/><text x="636.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.22%)</title><rect x="633" y="356" width="3" height="15" fill="rgb(213,140,14)"/><text x="636.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.22%)</title><rect x="633" y="372" width="3" height="15" fill="rgb(254,108,16)"/><text x="636.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.22%)</title><rect x="636" y="324" width="2" height="15" fill="rgb(230,152,51)"/><text x="639.00" y="334.50"></text></g><g><title>0x7f0e44d6b103 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="636" y="340" width="2" height="15" fill="rgb(207,152,52)"/><text x="639.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="638" y="340" width="3" height="15" fill="rgb(223,18,48)"/><text x="641.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:551) (2 samples, 0.44%)</title><rect x="638" y="324" width="6" height="15" fill="rgb(250,134,35)"/><text x="641.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="641" y="340" width="3" height="15" fill="rgb(214,47,44)"/><text x="644.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:561) (1 samples, 0.22%)</title><rect x="644" y="324" width="2" height="15" fill="rgb(230,156,39)"/><text x="647.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="646" y="340" width="3" height="15" fill="rgb(238,66,17)"/><text x="649.00" y="350.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="649" y="372" width="2" height="15" fill="rgb(237,43,22)"/><text x="652.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="649" y="388" width="2" height="15" fill="rgb(253,219,40)"/><text x="652.00" y="398.50"></text></g><g><title>add_y (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="662" y="388" width="2" height="15" fill="rgb(238,206,7)"/><text x="665.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (28 samples, 6.17%)</title><rect x="607" y="228" width="73" height="15" fill="rgb(217,7,37)"/><text x="610.00" y="238.50">_run (ml..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (24 samples, 5.29%)</title><rect x="618" y="244" width="62" height="15" fill="rgb(209,68,44)"/><text x="621.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (22 samples, 4.85%)</title><rect x="623" y="260" width="57" height="15" fill="rgb(246,12,22)"/><text x="626.00" y="270.50">dot (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 3.96%)</title><rect x="633" y="276" width="47" height="15" fill="rgb(254,82,35)"/><text x="636.00" y="286.50">arra..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (18 samples, 3.96%)</title><rect x="633" y="292" width="47" height="15" fill="rgb(209,13,8)"/><text x="636.00" y="302.50">arra..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (18 samples, 3.96%)</title><rect x="633" y="308" width="47" height="15" fill="rgb(215,38,5)"/><text x="636.00" y="318.50">PyAr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:562) (13 samples, 2.86%)</title><rect x="646" y="324" width="34" height="15" fill="rgb(238,197,10)"/><text x="649.00" y="334.50">cb..</text></g><g><title>gemv (cblasfuncs.c:86) (12 samples, 2.64%)</title><rect x="649" y="340" width="31" height="15" fill="rgb(222,123,31)"/><text x="652.00" y="350.50">ge..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.64%)</title><rect x="649" y="356" width="31" height="15" fill="rgb(229,226,31)"/><text x="652.00" y="366.50">cb..</text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.42%)</title><rect x="651" y="372" width="29" height="15" fill="rgb(209,30,22)"/><text x="654.00" y="382.50">sg..</text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.32%)</title><rect x="664" y="388" width="16" height="15" fill="rgb(217,55,36)"/><text x="667.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.22%)</title><rect x="685" y="292" width="3" height="15" fill="rgb(238,58,9)"/><text x="688.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.44%)</title><rect x="685" y="260" width="5" height="15" fill="rgb(234,40,36)"/><text x="688.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.44%)</title><rect x="685" y="276" width="5" height="15" fill="rgb(206,188,14)"/><text x="688.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.22%)</title><rect x="688" y="292" width="2" height="15" fill="rgb(223,67,20)"/><text x="691.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.22%)</title><rect x="690" y="276" width="3" height="15" fill="rgb(240,23,35)"/><text x="693.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.22%)</title><rect x="690" y="292" width="3" height="15" fill="rgb(216,35,34)"/><text x="693.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.44%)</title><rect x="690" y="260" width="6" height="15" fill="rgb(253,75,52)"/><text x="693.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:302) (1 samples, 0.22%)</title><rect x="693" y="276" width="3" height="15" fill="rgb(210,214,32)"/><text x="696.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.22%)</title><rect x="696" y="308" width="2" height="15" fill="rgb(250,92,1)"/><text x="699.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="696" y="324" width="2" height="15" fill="rgb(222,47,23)"/><text x="699.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.22%)</title><rect x="698" y="308" width="3" height="15" fill="rgb(237,145,26)"/><text x="701.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.22%)</title><rect x="698" y="324" width="3" height="15" fill="rgb(216,28,40)"/><text x="701.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.22%)</title><rect x="698" y="340" width="3" height="15" fill="rgb(220,205,41)"/><text x="701.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.66%)</title><rect x="696" y="292" width="7" height="15" fill="rgb(236,164,43)"/><text x="699.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.22%)</title><rect x="701" y="308" width="2" height="15" fill="rgb(225,16,2)"/><text x="704.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.22%)</title><rect x="701" y="324" width="2" height="15" fill="rgb(253,194,54)"/><text x="704.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.22%)</title><rect x="703" y="292" width="3" height="15" fill="rgb(209,219,14)"/><text x="706.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.22%)</title><rect x="703" y="308" width="3" height="15" fill="rgb(247,88,7)"/><text x="706.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2035) (1 samples, 0.22%)</title><rect x="703" y="324" width="3" height="15" fill="rgb(244,69,12)"/><text x="706.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.22%)</title><rect x="706" y="292" width="3" height="15" fill="rgb(239,119,38)"/><text x="709.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.22%)</title><rect x="706" y="308" width="3" height="15" fill="rgb(231,221,18)"/><text x="709.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.42%)</title><rect x="685" y="244" width="29" height="15" fill="rgb(227,86,24)"/><text x="688.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.54%)</title><rect x="696" y="260" width="18" height="15" fill="rgb(205,65,34)"/><text x="699.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.54%)</title><rect x="696" y="276" width="18" height="15" fill="rgb(246,92,9)"/><text x="699.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.44%)</title><rect x="709" y="292" width="5" height="15" fill="rgb(219,167,6)"/><text x="712.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.22%)</title><rect x="711" y="308" width="3" height="15" fill="rgb(248,213,43)"/><text x="714.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:30) (14 samples, 3.08%)</title><rect x="680" y="228" width="36" height="15" fill="rgb(231,105,21)"/><text x="683.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.22%)</title><rect x="714" y="244" width="2" height="15" fill="rgb(238,41,53)"/><text x="717.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (47 samples, 10.35%)</title><rect x="597" y="196" width="122" height="15" fill="rgb(246,47,50)"/><text x="600.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (45 samples, 9.91%)</title><rect x="602" y="212" width="117" height="15" fill="rgb(240,158,44)"/><text x="605.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:36) (1 samples, 0.22%)</title><rect x="716" y="228" width="3" height="15" fill="rgb(208,220,50)"/><text x="719.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (52 samples, 11.45%)</title><rect x="587" y="180" width="135" height="15" fill="rgb(216,7,45)"/><text x="590.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.22%)</title><rect x="719" y="196" width="3" height="15" fill="rgb(208,127,9)"/><text x="722.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.22%)</title><rect x="719" y="212" width="3" height="15" fill="rgb(227,184,41)"/><text x="722.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.22%)</title><rect x="722" y="180" width="2" height="15" fill="rgb(237,71,1)"/><text x="725.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.44%)</title><rect x="724" y="180" width="5" height="15" fill="rgb(206,98,16)"/><text x="727.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (64 samples, 14.10%)</title><rect x="568" y="164" width="167" height="15" fill="rgb(229,147,13)"/><text x="571.00" y="174.50">_run_sequence_runtime..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.44%)</title><rect x="729" y="180" width="6" height="15" fill="rgb(218,16,47)"/><text x="732.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (81 samples, 17.84%)</title><rect x="535" y="132" width="210" height="15" fill="rgb(213,164,10)"/><text x="538.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (76 samples, 16.74%)</title><rect x="548" y="148" width="197" height="15" fill="rgb(240,152,28)"/><text x="551.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 0.88%)</title><rect x="735" y="164" width="10" height="15" fill="rgb(227,68,0)"/><text x="738.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.44%)</title><rect x="740" y="180" width="5" height="15" fill="rgb(251,131,6)"/><text x="743.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="745" y="132" width="3" height="15" fill="rgb(244,216,1)"/><text x="748.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:61) (86 samples, 18.94%)</title><rect x="527" y="52" width="223" height="15" fill="rgb(215,205,15)"/><text x="530.00" y="62.50">&lt;module&gt; (bench_LinearRegress..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:60) (86 samples, 18.94%)</title><rect x="527" y="68" width="223" height="15" fill="rgb(241,61,24)"/><text x="530.00" y="78.50">profile_pyrt (bench_LinearReg..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:37) (86 samples, 18.94%)</title><rect x="527" y="84" width="223" height="15" fill="rgb(226,88,34)"/><text x="530.00" y="94.50">setup_profile (bench_LinearRe..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:31) (86 samples, 18.94%)</title><rect x="527" y="100" width="223" height="15" fill="rgb(233,17,29)"/><text x="530.00" y="110.50">profile (bench_LinearRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (84 samples, 18.50%)</title><rect x="532" y="116" width="218" height="15" fill="rgb(207,20,25)"/><text x="535.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="748" y="132" width="2" height="15" fill="rgb(206,63,16)"/><text x="751.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.44%)</title><rect x="755" y="116" width="6" height="15" fill="rgb(221,5,11)"/><text x="758.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.44%)</title><rect x="755" y="132" width="6" height="15" fill="rgb(233,209,18)"/><text x="758.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.44%)</title><rect x="755" y="148" width="6" height="15" fill="rgb(251,87,9)"/><text x="758.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.22%)</title><rect x="766" y="148" width="2" height="15" fill="rgb(240,192,23)"/><text x="769.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.22%)</title><rect x="768" y="148" width="3" height="15" fill="rgb(213,117,23)"/><text x="771.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (2 samples, 0.44%)</title><rect x="792" y="196" width="5" height="15" fill="rgb(253,103,26)"/><text x="795.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.22%)</title><rect x="797" y="196" width="3" height="15" fill="rgb(231,71,27)"/><text x="800.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 1.10%)</title><rect x="800" y="196" width="13" height="15" fill="rgb(252,125,46)"/><text x="803.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.66%)</title><rect x="805" y="212" width="8" height="15" fill="rgb(231,159,0)"/><text x="808.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="810" y="228" width="3" height="15" fill="rgb(224,128,37)"/><text x="813.00" y="238.50"></text></g><g><title>0x7f0e02d7aff9 (?) (1 samples, 0.22%)</title><rect x="818" y="212" width="2" height="15" fill="rgb(249,68,39)"/><text x="821.00" y="222.50"></text></g><g><title>0x7f0e02d75ef6 (?) (1 samples, 0.22%)</title><rect x="818" y="228" width="2" height="15" fill="rgb(233,167,16)"/><text x="821.00" y="238.50"></text></g><g><title>0x7f0e02d6b2cc (?) (1 samples, 0.22%)</title><rect x="818" y="244" width="2" height="15" fill="rgb(214,25,29)"/><text x="821.00" y="254.50"></text></g><g><title>0x7f0e02d88274 (?) (1 samples, 0.22%)</title><rect x="818" y="260" width="2" height="15" fill="rgb(243,196,9)"/><text x="821.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.22%)</title><rect x="818" y="276" width="2" height="15" fill="rgb(232,80,12)"/><text x="821.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.22%)</title><rect x="818" y="292" width="2" height="15" fill="rgb(212,200,28)"/><text x="821.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.22%)</title><rect x="820" y="212" width="3" height="15" fill="rgb(228,1,16)"/><text x="823.00" y="222.50"></text></g><g><title>0x7ffc6cde5af6 ([vdso]) (1 samples, 0.22%)</title><rect x="820" y="228" width="3" height="15" fill="rgb(237,27,47)"/><text x="823.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="823" y="228" width="3" height="15" fill="rgb(228,200,23)"/><text x="826.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="826" y="228" width="2" height="15" fill="rgb(249,25,6)"/><text x="829.00" y="238.50"></text></g><g><title>0x7f0e44d4ad07 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="836" y="260" width="3" height="15" fill="rgb(218,42,47)"/><text x="839.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="839" y="260" width="2" height="15" fill="rgb(210,43,45)"/><text x="842.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="844" y="292" width="5" height="15" fill="rgb(249,74,8)"/><text x="847.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="844" y="308" width="5" height="15" fill="rgb(227,102,48)"/><text x="847.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="844" y="324" width="5" height="15" fill="rgb(239,22,31)"/><text x="847.00" y="334.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="857" y="356" width="2" height="15" fill="rgb(226,204,40)"/><text x="860.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="857" y="372" width="2" height="15" fill="rgb(237,82,10)"/><text x="860.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="857" y="388" width="2" height="15" fill="rgb(211,45,31)"/><text x="860.00" y="398.50"></text></g><g><title>0x7f0e44d596c6 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="857" y="404" width="2" height="15" fill="rgb(254,99,18)"/><text x="860.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.66%)</title><rect x="854" y="340" width="8" height="15" fill="rgb(241,158,28)"/><text x="857.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="859" y="356" width="3" height="15" fill="rgb(210,161,8)"/><text x="862.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="859" y="372" width="3" height="15" fill="rgb(246,55,22)"/><text x="862.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="862" y="340" width="3" height="15" fill="rgb(235,163,6)"/><text x="865.00" y="350.50"></text></g><g><title>0x7f0e02d41850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="974" y="356" width="2" height="15" fill="rgb(229,65,13)"/><text x="977.00" y="366.50"></text></g><g><title>0x7f0e348177a0 (libstdc++.so.6.0.28) (2 samples, 0.44%)</title><rect x="976" y="356" width="6" height="15" fill="rgb(246,50,19)"/><text x="979.00" y="366.50"></text></g><g><title>0x7f0e44d4a90e (libc-2.29.so) (1 samples, 0.22%)</title><rect x="982" y="356" width="2" height="15" fill="rgb(232,26,10)"/><text x="985.00" y="366.50"></text></g><g><title>0x7f0e44d4a92c (libc-2.29.so) (1 samples, 0.22%)</title><rect x="984" y="356" width="3" height="15" fill="rgb(252,16,42)"/><text x="987.00" y="366.50"></text></g><g><title>0x7f0e44d4a971 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="987" y="356" width="2" height="15" fill="rgb(223,79,1)"/><text x="990.00" y="366.50"></text></g><g><title>0x7f0e44d4a975 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="989" y="356" width="3" height="15" fill="rgb(226,224,50)"/><text x="992.00" y="366.50"></text></g><g><title>0x7f0e44d4a98c (libc-2.29.so) (2 samples, 0.44%)</title><rect x="992" y="356" width="5" height="15" fill="rgb(236,199,49)"/><text x="995.00" y="366.50"></text></g><g><title>0x7f0e44d4a991 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="997" y="356" width="3" height="15" fill="rgb(207,198,2)"/><text x="1000.00" y="366.50"></text></g><g><title>0x7f0e44d4a998 (libc-2.29.so) (2 samples, 0.44%)</title><rect x="1000" y="356" width="5" height="15" fill="rgb(242,157,4)"/><text x="1003.00" y="366.50"></text></g><g><title>0x7f0e44d4aa4d (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1005" y="356" width="3" height="15" fill="rgb(246,211,48)"/><text x="1008.00" y="366.50"></text></g><g><title>0x7f0e44d4aa53 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1008" y="356" width="2" height="15" fill="rgb(222,101,20)"/><text x="1011.00" y="366.50"></text></g><g><title>0x7f0e44d4abc0 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1010" y="356" width="3" height="15" fill="rgb(228,136,54)"/><text x="1013.00" y="366.50"></text></g><g><title>0x7f0e44d4abd8 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1013" y="356" width="2" height="15" fill="rgb(230,187,34)"/><text x="1016.00" y="366.50"></text></g><g><title>0x7f0e44d4abe4 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1015" y="356" width="3" height="15" fill="rgb(251,210,34)"/><text x="1018.00" y="366.50"></text></g><g><title>0x7f0e44d4abe8 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1018" y="356" width="3" height="15" fill="rgb(242,196,41)"/><text x="1021.00" y="366.50"></text></g><g><title>0x7f0e44d6ad50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1021" y="356" width="2" height="15" fill="rgb(215,20,54)"/><text x="1024.00" y="366.50"></text></g><g><title>0x7f0e44d6ad97 (libc-2.29.so) (2 samples, 0.44%)</title><rect x="1023" y="356" width="5" height="15" fill="rgb(216,204,15)"/><text x="1026.00" y="366.50"></text></g><g><title>0x7f0e44d6adbf (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1028" y="356" width="3" height="15" fill="rgb(221,135,33)"/><text x="1031.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (6 samples, 1.32%)</title><rect x="1031" y="356" width="16" height="15" fill="rgb(241,22,26)"/><text x="1034.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.10%)</title><rect x="1047" y="356" width="13" height="15" fill="rgb(244,101,7)"/><text x="1050.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.10%)</title><rect x="1047" y="372" width="13" height="15" fill="rgb(245,185,52)"/><text x="1050.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.10%)</title><rect x="1047" y="388" width="13" height="15" fill="rgb(234,193,13)"/><text x="1050.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.88%)</title><rect x="1049" y="404" width="11" height="15" fill="rgb(254,82,28)"/><text x="1052.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.88%)</title><rect x="1049" y="420" width="11" height="15" fill="rgb(209,118,30)"/><text x="1052.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.88%)</title><rect x="1049" y="436" width="11" height="15" fill="rgb(248,212,44)"/><text x="1052.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.88%)</title><rect x="1049" y="452" width="11" height="15" fill="rgb(210,220,19)"/><text x="1052.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.66%)</title><rect x="1052" y="468" width="8" height="15" fill="rgb(245,172,44)"/><text x="1055.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.66%)</title><rect x="1052" y="484" width="8" height="15" fill="rgb(224,10,33)"/><text x="1055.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="1054" y="500" width="6" height="15" fill="rgb(250,48,18)"/><text x="1057.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="1054" y="516" width="6" height="15" fill="rgb(211,155,21)"/><text x="1057.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1057" y="532" width="3" height="15" fill="rgb(221,228,41)"/><text x="1060.00" y="542.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1060" y="356" width="2" height="15" fill="rgb(214,72,15)"/><text x="1063.00" y="366.50"></text></g><g><title>0x7f0e34816d50 (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="1109" y="388" width="3" height="15" fill="rgb(254,25,0)"/><text x="1112.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 25.33%)</title><rect x="841" y="260" width="299" height="15" fill="rgb(222,184,47)"/><text x="844.00" y="270.50">onnxruntime::InferenceSession::Run (onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (114 samples, 25.11%)</title><rect x="844" y="276" width="296" height="15" fill="rgb(206,26,33)"/><text x="847.00" y="286.50">onnxruntime::InferenceSession::Run (onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (112 samples, 24.67%)</title><rect x="849" y="292" width="291" height="15" fill="rgb(210,214,46)"/><text x="852.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (112 samples, 24.67%)</title><rect x="849" y="308" width="291" height="15" fill="rgb(218,207,46)"/><text x="852.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 24.45%)</title><rect x="852" y="324" width="288" height="15" fill="rgb(242,120,44)"/><text x="855.00" y="334.50">onnxruntime::SequentialExecutor::Execu..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 23.35%)</title><rect x="865" y="340" width="275" height="15" fill="rgb(237,224,7)"/><text x="868.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;flo..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 6.61%)</title><rect x="1062" y="356" width="78" height="15" fill="rgb(223,107,49)"/><text x="1065.00" y="366.50">std::vect..</text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 3.08%)</title><rect x="1104" y="372" width="36" height="15" fill="rgb(222,89,24)"/><text x="1107.00" y="382.50">ope..</text></g><g><title>malloc (libc-2.29.so) (11 samples, 2.42%)</title><rect x="1112" y="388" width="28" height="15" fill="rgb(222,26,22)"/><text x="1115.00" y="398.50">m..</text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="1140" y="276" width="5" height="15" fill="rgb(249,80,39)"/><text x="1143.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1143" y="292" width="2" height="15" fill="rgb(222,143,34)"/><text x="1146.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1143" y="308" width="2" height="15" fill="rgb(208,70,45)"/><text x="1146.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1143" y="324" width="2" height="15" fill="rgb(216,139,12)"/><text x="1146.00" y="334.50"></text></g><g><title>0x7f0e02d41930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1143" y="340" width="2" height="15" fill="rgb(226,161,33)"/><text x="1146.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.66%)</title><rect x="1140" y="260" width="8" height="15" fill="rgb(222,160,23)"/><text x="1143.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="1145" y="276" width="3" height="15" fill="rgb(244,11,21)"/><text x="1148.00" y="286.50"></text></g><g><title>0x7f0e44e28130 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1145" y="292" width="3" height="15" fill="rgb(236,106,18)"/><text x="1148.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1148" y="260" width="3" height="15" fill="rgb(243,136,13)"/><text x="1151.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.22%)</title><rect x="1148" y="276" width="3" height="15" fill="rgb(243,176,16)"/><text x="1151.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.22%)</title><rect x="1148" y="292" width="3" height="15" fill="rgb(249,129,15)"/><text x="1151.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.22%)</title><rect x="1148" y="308" width="3" height="15" fill="rgb(249,67,13)"/><text x="1151.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.22%)</title><rect x="1148" y="324" width="3" height="15" fill="rgb(213,126,45)"/><text x="1151.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.22%)</title><rect x="1148" y="340" width="3" height="15" fill="rgb(253,75,35)"/><text x="1151.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1148" y="356" width="3" height="15" fill="rgb(215,20,51)"/><text x="1151.00" y="366.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1151" y="260" width="2" height="15" fill="rgb(229,223,54)"/><text x="1154.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1151" y="276" width="2" height="15" fill="rgb(210,98,33)"/><text x="1154.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1151" y="292" width="2" height="15" fill="rgb(245,134,22)"/><text x="1154.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1151" y="308" width="2" height="15" fill="rgb(215,118,14)"/><text x="1154.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (123 samples, 27.09%)</title><rect x="836" y="244" width="320" height="15" fill="rgb(235,213,54)"/><text x="839.00" y="254.50">onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="260" width="3" height="15" fill="rgb(232,138,30)"/><text x="1156.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="276" width="3" height="15" fill="rgb(223,159,17)"/><text x="1156.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="292" width="3" height="15" fill="rgb(220,69,42)"/><text x="1156.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="308" width="3" height="15" fill="rgb(229,120,9)"/><text x="1156.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="324" width="3" height="15" fill="rgb(234,12,16)"/><text x="1156.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="340" width="3" height="15" fill="rgb(230,12,31)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="356" width="3" height="15" fill="rgb(230,225,31)"/><text x="1156.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="372" width="3" height="15" fill="rgb(221,171,23)"/><text x="1156.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1153" y="388" width="3" height="15" fill="rgb(235,108,24)"/><text x="1156.00" y="398.50"></text></g><g><title>0x7f0e44d4abc0 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1153" y="404" width="3" height="15" fill="rgb(241,37,10)"/><text x="1156.00" y="414.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="1156" y="244" width="5" height="15" fill="rgb(211,183,18)"/><text x="1159.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="1156" y="260" width="5" height="15" fill="rgb(244,107,53)"/><text x="1159.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (148 samples, 32.60%)</title><rect x="779" y="164" width="385" height="15" fill="rgb(250,123,10)"/><text x="782.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (148 samples, 32.60%)</title><rect x="779" y="180" width="385" height="15" fill="rgb(218,222,16)"/><text x="782.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (135 samples, 29.74%)</title><rect x="813" y="196" width="351" height="15" fill="rgb(227,153,10)"/><text x="816.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 28.85%)</title><rect x="823" y="212" width="341" height="15" fill="rgb(230,13,10)"/><text x="826.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntim..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 28.41%)</title><rect x="828" y="228" width="336" height="15" fill="rgb(208,143,30)"/><text x="831.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxr..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="1161" y="244" width="3" height="15" fill="rgb(208,69,31)"/><text x="1164.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (162 samples, 35.68%)</title><rect x="763" y="132" width="421" height="15" fill="rgb(212,42,23)"/><text x="766.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (159 samples, 35.02%)</title><rect x="771" y="148" width="413" height="15" fill="rgb(245,201,18)"/><text x="774.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (8 samples, 1.76%)</title><rect x="1164" y="164" width="20" height="15" fill="rgb(221,58,43)"/><text x="1167.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.44%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(251,222,11)"/><text x="1182.00" y="190.50"></text></g><g><title>all (454 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(237,184,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:68) (169 samples, 37.22%)</title><rect x="750" y="52" width="440" height="15" fill="rgb(238,22,23)"/><text x="753.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_flo..</text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:67) (169 samples, 37.22%)</title><rect x="750" y="68" width="440" height="15" fill="rgb(209,57,4)"/><text x="753.00" y="78.50">profile_ort (bench_LinearRegression_default_m_reg_1000_4_12_..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:37) (169 samples, 37.22%)</title><rect x="750" y="84" width="440" height="15" fill="rgb(239,205,37)"/><text x="753.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_4_1..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:31) (169 samples, 37.22%)</title><rect x="750" y="100" width="440" height="15" fill="rgb(248,1,22)"/><text x="753.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_4_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (165 samples, 36.34%)</title><rect x="761" y="116" width="429" height="15" fill="rgb(213,80,9)"/><text x="764.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.44%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(230,155,15)"/><text x="1187.00" y="142.50"></text></g></g></svg>