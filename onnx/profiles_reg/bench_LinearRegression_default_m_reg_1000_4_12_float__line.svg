<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1798" onload="init(evt)" viewBox="0 0 1200 1798" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1798" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1781.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1781.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:1) (1 samples, 0.33%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(223,180,14)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(231,53,4)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(225,206,16)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(252,95,1)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(249,212,22)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(244,180,48)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.33%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(230,16,29)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(244,75,7)"/><text x="13.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(209,96,28)"/><text x="13.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(240,147,2)"/><text x="13.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(232,184,54)"/><text x="13.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(251,145,41)"/><text x="13.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.33%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(250,39,6)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(212,137,31)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(220,105,33)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(214,104,37)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(225,224,34)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(234,77,17)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:62) (1 samples, 0.33%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(217,29,8)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(240,11,28)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(234,129,9)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(207,106,8)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(250,132,44)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(241,117,6)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/loader.py:20) (1 samples, 0.33%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(219,81,20)"/><text x="13.00" y="542.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.33%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(225,67,22)"/><text x="13.00" y="558.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.33%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(216,111,31)"/><text x="13.00" y="574.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.33%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(242,198,29)"/><text x="13.00" y="590.50"></text></g><g><title>parse (sre_parse.py:922) (1 samples, 0.33%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(220,169,43)"/><text x="13.00" y="606.50"></text></g><g><title>__init__ (sre_parse.py:232) (1 samples, 0.33%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(215,77,54)"/><text x="13.00" y="622.50"></text></g><g><title>__next (sre_parse.py:248) (1 samples, 0.33%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(225,142,18)"/><text x="13.00" y="638.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.33%)</title><rect x="13" y="852" width="4" height="15" fill="rgb(213,204,32)"/><text x="16.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.33%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(216,64,25)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.33%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(205,204,19)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.33%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(206,180,47)"/><text x="16.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:711) (1 samples, 0.33%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(214,148,32)"/><text x="16.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.33%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(208,82,32)"/><text x="20.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.33%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(219,71,49)"/><text x="20.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.67%)</title><rect x="17" y="852" width="8" height="15" fill="rgb(239,46,46)"/><text x="20.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.67%)</title><rect x="17" y="868" width="8" height="15" fill="rgb(216,168,45)"/><text x="20.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.67%)</title><rect x="17" y="884" width="8" height="15" fill="rgb(228,190,45)"/><text x="20.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.67%)</title><rect x="17" y="900" width="8" height="15" fill="rgb(230,223,21)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.67%)</title><rect x="17" y="916" width="8" height="15" fill="rgb(252,104,14)"/><text x="20.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.67%)</title><rect x="17" y="932" width="8" height="15" fill="rgb(205,143,36)"/><text x="20.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.67%)</title><rect x="17" y="948" width="8" height="15" fill="rgb(233,20,0)"/><text x="20.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1399) (1 samples, 0.33%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(252,36,19)"/><text x="24.00" y="974.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.33%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(218,10,3)"/><text x="28.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.33%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(239,133,2)"/><text x="28.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.33%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(228,161,35)"/><text x="28.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.33%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(243,57,46)"/><text x="28.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.33%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(220,201,37)"/><text x="28.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.33%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(213,164,19)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.33%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(227,203,44)"/><text x="28.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.33%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(226,110,51)"/><text x="28.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.33%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(214,31,48)"/><text x="28.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.33%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(235,172,24)"/><text x="28.00" y="1022.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(221,149,29)"/><text x="28.00" y="1038.50"></text></g><g><title>0x7efbf9841d3d (libc-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(230,137,0)"/><text x="28.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.67%)</title><rect x="13" y="820" width="20" height="15" fill="rgb(227,128,9)"/><text x="16.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.67%)</title><rect x="13" y="836" width="20" height="15" fill="rgb(222,178,22)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.67%)</title><rect x="25" y="852" width="8" height="15" fill="rgb(236,122,28)"/><text x="28.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.33%)</title><rect x="29" y="868" width="4" height="15" fill="rgb(239,119,21)"/><text x="32.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.33%)</title><rect x="29" y="884" width="4" height="15" fill="rgb(212,210,25)"/><text x="32.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py:2640) (1 samples, 0.33%)</title><rect x="29" y="900" width="4" height="15" fill="rgb(253,180,45)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:2) (6 samples, 2.00%)</title><rect x="13" y="148" width="24" height="15" fill="rgb(222,18,22)"/><text x="16.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="164" width="24" height="15" fill="rgb(219,135,51)"/><text x="16.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.00%)</title><rect x="13" y="180" width="24" height="15" fill="rgb(228,175,23)"/><text x="16.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="196" width="24" height="15" fill="rgb(241,71,12)"/><text x="16.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="212" width="24" height="15" fill="rgb(225,106,22)"/><text x="16.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="13" y="228" width="24" height="15" fill="rgb(237,159,32)"/><text x="16.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="13" y="244" width="24" height="15" fill="rgb(226,212,40)"/><text x="16.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="13" y="260" width="24" height="15" fill="rgb(240,16,14)"/><text x="16.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="276" width="24" height="15" fill="rgb(225,76,2)"/><text x="16.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.00%)</title><rect x="13" y="292" width="24" height="15" fill="rgb(244,68,44)"/><text x="16.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="308" width="24" height="15" fill="rgb(243,120,45)"/><text x="16.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="13" y="324" width="24" height="15" fill="rgb(224,167,42)"/><text x="16.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="13" y="340" width="24" height="15" fill="rgb(220,10,37)"/><text x="16.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="13" y="356" width="24" height="15" fill="rgb(241,10,50)"/><text x="16.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="372" width="24" height="15" fill="rgb(232,201,28)"/><text x="16.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.00%)</title><rect x="13" y="388" width="24" height="15" fill="rgb(237,63,45)"/><text x="16.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="404" width="24" height="15" fill="rgb(228,67,53)"/><text x="16.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="13" y="420" width="24" height="15" fill="rgb(227,11,37)"/><text x="16.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="13" y="436" width="24" height="15" fill="rgb(224,194,52)"/><text x="16.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="13" y="452" width="24" height="15" fill="rgb(212,58,52)"/><text x="16.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="468" width="24" height="15" fill="rgb(238,137,17)"/><text x="16.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.00%)</title><rect x="13" y="484" width="24" height="15" fill="rgb(240,182,0)"/><text x="16.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="500" width="24" height="15" fill="rgb(225,86,26)"/><text x="16.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="13" y="516" width="24" height="15" fill="rgb(207,163,32)"/><text x="16.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="13" y="532" width="24" height="15" fill="rgb(242,200,11)"/><text x="16.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="13" y="548" width="24" height="15" fill="rgb(222,168,52)"/><text x="16.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="564" width="24" height="15" fill="rgb(227,217,30)"/><text x="16.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.00%)</title><rect x="13" y="580" width="24" height="15" fill="rgb(205,7,18)"/><text x="16.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="596" width="24" height="15" fill="rgb(221,74,9)"/><text x="16.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.00%)</title><rect x="13" y="612" width="24" height="15" fill="rgb(247,147,41)"/><text x="16.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="628" width="24" height="15" fill="rgb(240,145,31)"/><text x="16.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="644" width="24" height="15" fill="rgb(250,148,27)"/><text x="16.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="13" y="660" width="24" height="15" fill="rgb(251,40,34)"/><text x="16.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="13" y="676" width="24" height="15" fill="rgb(228,216,26)"/><text x="16.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="13" y="692" width="24" height="15" fill="rgb(239,222,3)"/><text x="16.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="708" width="24" height="15" fill="rgb(231,56,20)"/><text x="16.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 2.00%)</title><rect x="13" y="724" width="24" height="15" fill="rgb(238,65,3)"/><text x="16.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="13" y="740" width="24" height="15" fill="rgb(215,116,28)"/><text x="16.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="13" y="756" width="24" height="15" fill="rgb(210,217,15)"/><text x="16.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="13" y="772" width="24" height="15" fill="rgb(212,181,16)"/><text x="16.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="13" y="788" width="24" height="15" fill="rgb(252,149,0)"/><text x="16.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="13" y="804" width="24" height="15" fill="rgb(219,1,23)"/><text x="16.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.33%)</title><rect x="33" y="820" width="4" height="15" fill="rgb(239,109,16)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="33" y="836" width="4" height="15" fill="rgb(219,195,35)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="33" y="852" width="4" height="15" fill="rgb(218,156,5)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="33" y="868" width="4" height="15" fill="rgb(217,14,16)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="33" y="884" width="4" height="15" fill="rgb(247,82,22)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="33" y="900" width="4" height="15" fill="rgb(240,34,36)"/><text x="36.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.33%)</title><rect x="33" y="916" width="4" height="15" fill="rgb(207,215,50)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="33" y="932" width="4" height="15" fill="rgb(223,28,49)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="33" y="948" width="4" height="15" fill="rgb(236,36,30)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="33" y="964" width="4" height="15" fill="rgb(253,228,25)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="33" y="980" width="4" height="15" fill="rgb(254,192,44)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="33" y="996" width="4" height="15" fill="rgb(232,98,39)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.33%)</title><rect x="33" y="1012" width="4" height="15" fill="rgb(241,219,24)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="33" y="1028" width="4" height="15" fill="rgb(245,78,11)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="33" y="1044" width="4" height="15" fill="rgb(248,30,38)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="33" y="1060" width="4" height="15" fill="rgb(233,13,13)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="33" y="1076" width="4" height="15" fill="rgb(241,139,21)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="33" y="1092" width="4" height="15" fill="rgb(211,36,53)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:9) (1 samples, 0.33%)</title><rect x="33" y="1108" width="4" height="15" fill="rgb(211,11,12)"/><text x="36.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="33" y="1124" width="4" height="15" fill="rgb(249,190,53)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="33" y="1140" width="4" height="15" fill="rgb(226,227,38)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="33" y="1156" width="4" height="15" fill="rgb(209,216,40)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="33" y="1172" width="4" height="15" fill="rgb(222,112,51)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="33" y="1188" width="4" height="15" fill="rgb(205,6,13)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py:29) (1 samples, 0.33%)</title><rect x="33" y="1204" width="4" height="15" fill="rgb(221,85,43)"/><text x="36.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="33" y="1220" width="4" height="15" fill="rgb(248,133,13)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="33" y="1236" width="4" height="15" fill="rgb(236,216,31)"/><text x="36.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="33" y="1252" width="4" height="15" fill="rgb(243,24,8)"/><text x="36.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="33" y="1268" width="4" height="15" fill="rgb(226,47,54)"/><text x="36.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="33" y="1284" width="4" height="15" fill="rgb(231,111,32)"/><text x="36.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py:49) (1 samples, 0.33%)</title><rect x="33" y="1300" width="4" height="15" fill="rgb(231,35,39)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="33" y="1316" width="4" height="15" fill="rgb(252,11,36)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="33" y="1332" width="4" height="15" fill="rgb(238,136,34)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.33%)</title><rect x="33" y="1348" width="4" height="15" fill="rgb(244,185,37)"/><text x="36.00" y="1358.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.33%)</title><rect x="33" y="1364" width="4" height="15" fill="rgb(227,163,4)"/><text x="36.00" y="1374.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.33%)</title><rect x="33" y="1380" width="4" height="15" fill="rgb(216,172,17)"/><text x="36.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="33" y="1396" width="4" height="15" fill="rgb(232,152,52)"/><text x="36.00" y="1406.50"></text></g><g><title>0x7efbe87024a0 (?) (1 samples, 0.33%)</title><rect x="33" y="1412" width="4" height="15" fill="rgb(234,130,49)"/><text x="36.00" y="1422.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="33" y="1428" width="4" height="15" fill="rgb(235,94,42)"/><text x="36.00" y="1438.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.33%)</title><rect x="37" y="900" width="4" height="15" fill="rgb(217,44,23)"/><text x="40.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="37" y="916" width="4" height="15" fill="rgb(219,83,35)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="37" y="932" width="4" height="15" fill="rgb(253,23,23)"/><text x="40.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="37" y="948" width="4" height="15" fill="rgb(219,1,37)"/><text x="40.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="37" y="964" width="4" height="15" fill="rgb(216,86,15)"/><text x="40.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="37" y="980" width="4" height="15" fill="rgb(236,75,31)"/><text x="40.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.33%)</title><rect x="37" y="996" width="4" height="15" fill="rgb(236,179,45)"/><text x="40.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="37" y="1012" width="4" height="15" fill="rgb(206,199,5)"/><text x="40.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="37" y="1028" width="4" height="15" fill="rgb(253,221,22)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="37" y="1044" width="4" height="15" fill="rgb(220,185,17)"/><text x="40.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="37" y="1060" width="4" height="15" fill="rgb(226,19,6)"/><text x="40.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="37" y="1076" width="4" height="15" fill="rgb(226,6,32)"/><text x="40.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="37" y="1092" width="4" height="15" fill="rgb(212,166,47)"/><text x="40.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="37" y="1108" width="4" height="15" fill="rgb(248,155,23)"/><text x="40.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:90) (1 samples, 0.33%)</title><rect x="37" y="1124" width="4" height="15" fill="rgb(215,55,41)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="37" y="1140" width="4" height="15" fill="rgb(235,37,9)"/><text x="40.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="37" y="1156" width="4" height="15" fill="rgb(229,184,41)"/><text x="40.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="37" y="1172" width="4" height="15" fill="rgb(241,13,40)"/><text x="40.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="37" y="1188" width="4" height="15" fill="rgb(220,137,4)"/><text x="40.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="37" y="1204" width="4" height="15" fill="rgb(251,86,14)"/><text x="40.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/odepack.py:7) (1 samples, 0.33%)</title><rect x="37" y="1220" width="4" height="15" fill="rgb(238,228,5)"/><text x="40.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="37" y="1236" width="4" height="15" fill="rgb(238,43,32)"/><text x="40.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="37" y="1252" width="4" height="15" fill="rgb(253,40,51)"/><text x="40.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="37" y="1268" width="4" height="15" fill="rgb(224,190,33)"/><text x="40.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="37" y="1284" width="4" height="15" fill="rgb(230,97,31)"/><text x="40.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.33%)</title><rect x="37" y="1300" width="4" height="15" fill="rgb(210,73,53)"/><text x="40.00" y="1310.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.33%)</title><rect x="37" y="1316" width="4" height="15" fill="rgb(248,150,21)"/><text x="40.00" y="1326.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.33%)</title><rect x="37" y="1332" width="4" height="15" fill="rgb(254,227,48)"/><text x="40.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="37" y="1348" width="4" height="15" fill="rgb(222,72,10)"/><text x="40.00" y="1358.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1364" width="4" height="15" fill="rgb(252,17,33)"/><text x="40.00" y="1374.50"></text></g><g><title>0x7efbf9ac8995 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1380" width="4" height="15" fill="rgb(241,83,44)"/><text x="40.00" y="1390.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1396" width="4" height="15" fill="rgb(233,108,48)"/><text x="40.00" y="1406.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1412" width="4" height="15" fill="rgb(245,73,4)"/><text x="40.00" y="1422.50"></text></g><g><title>0x7efbf9ac8258 (libdl-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1428" width="4" height="15" fill="rgb(212,151,34)"/><text x="40.00" y="1438.50"></text></g><g><title>0x7efbf9b15d7a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1444" width="4" height="15" fill="rgb(216,154,14)"/><text x="40.00" y="1454.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1460" width="4" height="15" fill="rgb(216,75,25)"/><text x="40.00" y="1470.50"></text></g><g><title>0x7efbf9b1618b (ld-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1476" width="4" height="15" fill="rgb(211,106,37)"/><text x="40.00" y="1486.50"></text></g><g><title>0x7efbf9b0bc1a (ld-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1492" width="4" height="15" fill="rgb(224,122,1)"/><text x="40.00" y="1502.50"></text></g><g><title>0x7efbf9b09c18 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1508" width="4" height="15" fill="rgb(236,144,3)"/><text x="40.00" y="1518.50"></text></g><g><title>0x7efbf9b1dbd2 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="37" y="1524" width="4" height="15" fill="rgb(225,10,20)"/><text x="40.00" y="1534.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:4) (2 samples, 0.67%)</title><rect x="37" y="148" width="8" height="15" fill="rgb(239,90,25)"/><text x="40.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="164" width="8" height="15" fill="rgb(251,135,36)"/><text x="40.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.67%)</title><rect x="37" y="180" width="8" height="15" fill="rgb(224,189,50)"/><text x="40.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="196" width="8" height="15" fill="rgb(223,207,50)"/><text x="40.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="212" width="8" height="15" fill="rgb(222,139,41)"/><text x="40.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="37" y="228" width="8" height="15" fill="rgb(228,146,53)"/><text x="40.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="37" y="244" width="8" height="15" fill="rgb(219,77,28)"/><text x="40.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="37" y="260" width="8" height="15" fill="rgb(252,213,9)"/><text x="40.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="276" width="8" height="15" fill="rgb(206,217,9)"/><text x="40.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.67%)</title><rect x="37" y="292" width="8" height="15" fill="rgb(222,46,53)"/><text x="40.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="308" width="8" height="15" fill="rgb(235,228,25)"/><text x="40.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="37" y="324" width="8" height="15" fill="rgb(254,177,25)"/><text x="40.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="37" y="340" width="8" height="15" fill="rgb(210,113,28)"/><text x="40.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="37" y="356" width="8" height="15" fill="rgb(214,94,9)"/><text x="40.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="372" width="8" height="15" fill="rgb(249,44,19)"/><text x="40.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.67%)</title><rect x="37" y="388" width="8" height="15" fill="rgb(244,175,47)"/><text x="40.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="404" width="8" height="15" fill="rgb(254,210,23)"/><text x="40.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="37" y="420" width="8" height="15" fill="rgb(230,73,41)"/><text x="40.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="37" y="436" width="8" height="15" fill="rgb(210,128,27)"/><text x="40.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="37" y="452" width="8" height="15" fill="rgb(213,224,38)"/><text x="40.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="468" width="8" height="15" fill="rgb(211,228,43)"/><text x="40.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.67%)</title><rect x="37" y="484" width="8" height="15" fill="rgb(233,125,20)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="500" width="8" height="15" fill="rgb(241,133,47)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="37" y="516" width="8" height="15" fill="rgb(236,21,18)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="37" y="532" width="8" height="15" fill="rgb(233,143,26)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="37" y="548" width="8" height="15" fill="rgb(252,148,11)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="564" width="8" height="15" fill="rgb(219,53,44)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.67%)</title><rect x="37" y="580" width="8" height="15" fill="rgb(216,101,35)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="596" width="8" height="15" fill="rgb(221,210,0)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="37" y="612" width="8" height="15" fill="rgb(237,8,12)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="37" y="628" width="8" height="15" fill="rgb(254,217,10)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="37" y="644" width="8" height="15" fill="rgb(234,49,6)"/><text x="40.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="660" width="8" height="15" fill="rgb(208,202,38)"/><text x="40.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.67%)</title><rect x="37" y="676" width="8" height="15" fill="rgb(235,177,3)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="692" width="8" height="15" fill="rgb(246,206,29)"/><text x="40.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="37" y="708" width="8" height="15" fill="rgb(248,17,29)"/><text x="40.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="37" y="724" width="8" height="15" fill="rgb(224,163,41)"/><text x="40.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="37" y="740" width="8" height="15" fill="rgb(222,1,31)"/><text x="40.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="756" width="8" height="15" fill="rgb(220,113,1)"/><text x="40.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.67%)</title><rect x="37" y="772" width="8" height="15" fill="rgb(215,64,19)"/><text x="40.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.67%)</title><rect x="37" y="788" width="8" height="15" fill="rgb(239,1,30)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="804" width="8" height="15" fill="rgb(219,105,7)"/><text x="40.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="37" y="820" width="8" height="15" fill="rgb(234,226,37)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="37" y="836" width="8" height="15" fill="rgb(224,143,23)"/><text x="40.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="37" y="852" width="8" height="15" fill="rgb(247,9,8)"/><text x="40.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="37" y="868" width="8" height="15" fill="rgb(245,142,0)"/><text x="40.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="37" y="884" width="8" height="15" fill="rgb(237,226,27)"/><text x="40.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.33%)</title><rect x="41" y="900" width="4" height="15" fill="rgb(225,70,39)"/><text x="44.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="41" y="916" width="4" height="15" fill="rgb(244,149,3)"/><text x="44.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="41" y="932" width="4" height="15" fill="rgb(226,32,5)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="41" y="948" width="4" height="15" fill="rgb(233,225,15)"/><text x="44.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="41" y="964" width="4" height="15" fill="rgb(232,111,23)"/><text x="44.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="41" y="980" width="4" height="15" fill="rgb(240,116,48)"/><text x="44.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="41" y="996" width="4" height="15" fill="rgb(223,8,43)"/><text x="44.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="41" y="1012" width="4" height="15" fill="rgb(220,63,1)"/><text x="44.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.33%)</title><rect x="41" y="1028" width="4" height="15" fill="rgb(220,81,38)"/><text x="44.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="41" y="1044" width="4" height="15" fill="rgb(242,218,17)"/><text x="44.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="41" y="1060" width="4" height="15" fill="rgb(253,154,9)"/><text x="44.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="41" y="1076" width="4" height="15" fill="rgb(227,221,34)"/><text x="44.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="41" y="1092" width="4" height="15" fill="rgb(236,133,52)"/><text x="44.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="41" y="1108" width="4" height="15" fill="rgb(248,16,54)"/><text x="44.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="41" y="1124" width="4" height="15" fill="rgb(208,142,11)"/><text x="44.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="41" y="1140" width="4" height="15" fill="rgb(224,126,27)"/><text x="44.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:177) (1 samples, 0.33%)</title><rect x="41" y="1156" width="4" height="15" fill="rgb(250,153,11)"/><text x="44.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="41" y="1172" width="4" height="15" fill="rgb(211,208,41)"/><text x="44.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="41" y="1188" width="4" height="15" fill="rgb(224,75,27)"/><text x="44.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="41" y="1204" width="4" height="15" fill="rgb(250,211,46)"/><text x="44.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.33%)</title><rect x="41" y="1220" width="4" height="15" fill="rgb(253,210,44)"/><text x="44.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.33%)</title><rect x="41" y="1236" width="4" height="15" fill="rgb(248,155,19)"/><text x="44.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.33%)</title><rect x="41" y="1252" width="4" height="15" fill="rgb(240,215,8)"/><text x="44.00" y="1262.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="41" y="1268" width="4" height="15" fill="rgb(214,162,21)"/><text x="44.00" y="1278.50"></text></g><g><title>0x7efbf98428a4 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="41" y="1284" width="4" height="15" fill="rgb(231,105,24)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:72) (1 samples, 0.33%)</title><rect x="45" y="1108" width="4" height="15" fill="rgb(229,60,35)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="45" y="1124" width="4" height="15" fill="rgb(216,132,48)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="45" y="1140" width="4" height="15" fill="rgb(217,154,2)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="45" y="1156" width="4" height="15" fill="rgb(222,199,8)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.33%)</title><rect x="45" y="1172" width="4" height="15" fill="rgb(231,35,36)"/><text x="48.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.33%)</title><rect x="45" y="1188" width="4" height="15" fill="rgb(252,91,26)"/><text x="48.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.33%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(215,155,45)"/><text x="48.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.67%)</title><rect x="45" y="436" width="8" height="15" fill="rgb(216,8,12)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="45" y="452" width="8" height="15" fill="rgb(248,211,38)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="45" y="468" width="8" height="15" fill="rgb(215,132,36)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="45" y="484" width="8" height="15" fill="rgb(210,132,40)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="45" y="500" width="8" height="15" fill="rgb(238,72,9)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="45" y="516" width="8" height="15" fill="rgb(241,187,17)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.67%)</title><rect x="45" y="532" width="8" height="15" fill="rgb(253,42,32)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="45" y="548" width="8" height="15" fill="rgb(218,190,8)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="45" y="564" width="8" height="15" fill="rgb(210,141,46)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="45" y="580" width="8" height="15" fill="rgb(234,60,34)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="45" y="596" width="8" height="15" fill="rgb(234,136,41)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="45" y="612" width="8" height="15" fill="rgb(220,181,1)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.67%)</title><rect x="45" y="628" width="8" height="15" fill="rgb(251,178,1)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="45" y="644" width="8" height="15" fill="rgb(227,48,22)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="45" y="660" width="8" height="15" fill="rgb(216,93,22)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="45" y="676" width="8" height="15" fill="rgb(208,218,11)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="45" y="692" width="8" height="15" fill="rgb(206,148,9)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="45" y="708" width="8" height="15" fill="rgb(244,166,17)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.67%)</title><rect x="45" y="724" width="8" height="15" fill="rgb(205,208,9)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="45" y="740" width="8" height="15" fill="rgb(219,87,36)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="45" y="756" width="8" height="15" fill="rgb(238,17,30)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="45" y="772" width="8" height="15" fill="rgb(232,23,23)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="45" y="788" width="8" height="15" fill="rgb(213,212,4)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="45" y="804" width="8" height="15" fill="rgb(239,218,0)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.67%)</title><rect x="45" y="820" width="8" height="15" fill="rgb(239,148,15)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="45" y="836" width="8" height="15" fill="rgb(212,140,43)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="45" y="852" width="8" height="15" fill="rgb(254,96,23)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="45" y="868" width="8" height="15" fill="rgb(253,213,29)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="45" y="884" width="8" height="15" fill="rgb(254,40,4)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="45" y="900" width="8" height="15" fill="rgb(205,1,50)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.67%)</title><rect x="45" y="916" width="8" height="15" fill="rgb(234,28,28)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="45" y="932" width="8" height="15" fill="rgb(242,188,13)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="45" y="948" width="8" height="15" fill="rgb(230,150,15)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="45" y="964" width="8" height="15" fill="rgb(252,150,24)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="45" y="980" width="8" height="15" fill="rgb(218,216,53)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="45" y="996" width="8" height="15" fill="rgb(206,85,5)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.67%)</title><rect x="45" y="1012" width="8" height="15" fill="rgb(253,56,52)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="45" y="1028" width="8" height="15" fill="rgb(239,141,33)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="45" y="1044" width="8" height="15" fill="rgb(216,69,6)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="45" y="1060" width="8" height="15" fill="rgb(226,82,36)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="45" y="1076" width="8" height="15" fill="rgb(233,161,34)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="45" y="1092" width="8" height="15" fill="rgb(221,172,33)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.33%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(243,85,29)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(213,188,9)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(222,118,43)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(246,52,46)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="49" y="1172" width="4" height="15" fill="rgb(254,73,0)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="49" y="1188" width="4" height="15" fill="rgb(229,113,0)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.33%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(223,42,41)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(251,227,32)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(226,46,26)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(215,89,46)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(222,34,43)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(216,123,1)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.33%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(219,62,28)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(228,92,1)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(221,78,14)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="49" y="1348" width="4" height="15" fill="rgb(242,171,27)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="49" y="1364" width="4" height="15" fill="rgb(209,118,29)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="49" y="1380" width="4" height="15" fill="rgb(254,101,13)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.33%)</title><rect x="49" y="1396" width="4" height="15" fill="rgb(214,120,2)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="49" y="1412" width="4" height="15" fill="rgb(244,68,28)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="49" y="1428" width="4" height="15" fill="rgb(221,97,14)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="49" y="1444" width="4" height="15" fill="rgb(246,209,18)"/><text x="52.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="49" y="1460" width="4" height="15" fill="rgb(218,1,3)"/><text x="52.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="49" y="1476" width="4" height="15" fill="rgb(240,9,21)"/><text x="52.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.33%)</title><rect x="49" y="1492" width="4" height="15" fill="rgb(228,152,21)"/><text x="52.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="49" y="1508" width="4" height="15" fill="rgb(235,75,1)"/><text x="52.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="49" y="1524" width="4" height="15" fill="rgb(211,157,23)"/><text x="52.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="49" y="1540" width="4" height="15" fill="rgb(239,128,43)"/><text x="52.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="49" y="1556" width="4" height="15" fill="rgb(224,35,40)"/><text x="52.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="49" y="1572" width="4" height="15" fill="rgb(213,221,35)"/><text x="52.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.33%)</title><rect x="49" y="1588" width="4" height="15" fill="rgb(222,22,42)"/><text x="52.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.33%)</title><rect x="49" y="1604" width="4" height="15" fill="rgb(207,156,6)"/><text x="52.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.33%)</title><rect x="49" y="1620" width="4" height="15" fill="rgb(206,103,40)"/><text x="52.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.33%)</title><rect x="49" y="1636" width="4" height="15" fill="rgb(218,189,0)"/><text x="52.00" y="1646.50"></text></g><g><title>search (re.py:183) (1 samples, 0.33%)</title><rect x="49" y="1652" width="4" height="15" fill="rgb(222,63,32)"/><text x="52.00" y="1662.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.33%)</title><rect x="49" y="1668" width="4" height="15" fill="rgb(241,162,20)"/><text x="52.00" y="1678.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.33%)</title><rect x="49" y="1684" width="4" height="15" fill="rgb(251,154,36)"/><text x="52.00" y="1694.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.33%)</title><rect x="49" y="1700" width="4" height="15" fill="rgb(235,62,26)"/><text x="52.00" y="1710.50"></text></g><g><title>_compile (sre_compile.py:94) (1 samples, 0.33%)</title><rect x="49" y="1716" width="4" height="15" fill="rgb(213,85,12)"/><text x="52.00" y="1726.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.33%)</title><rect x="53" y="1108" width="4" height="15" fill="rgb(233,36,54)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(249,178,50)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="53" y="1140" width="4" height="15" fill="rgb(212,9,22)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(214,202,5)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="53" y="1172" width="4" height="15" fill="rgb(242,94,7)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="53" y="1188" width="4" height="15" fill="rgb(235,61,1)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.33%)</title><rect x="53" y="1204" width="4" height="15" fill="rgb(222,85,18)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="53" y="1220" width="4" height="15" fill="rgb(247,155,34)"/><text x="56.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="53" y="1236" width="4" height="15" fill="rgb(226,163,20)"/><text x="56.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="53" y="1252" width="4" height="15" fill="rgb(224,126,10)"/><text x="56.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="53" y="1268" width="4" height="15" fill="rgb(238,13,15)"/><text x="56.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="53" y="1284" width="4" height="15" fill="rgb(226,105,40)"/><text x="56.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.33%)</title><rect x="53" y="1300" width="4" height="15" fill="rgb(209,31,18)"/><text x="56.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.33%)</title><rect x="53" y="1316" width="4" height="15" fill="rgb(253,14,44)"/><text x="56.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.33%)</title><rect x="53" y="1332" width="4" height="15" fill="rgb(233,68,9)"/><text x="56.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.33%)</title><rect x="53" y="1348" width="4" height="15" fill="rgb(248,76,25)"/><text x="56.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.33%)</title><rect x="53" y="1364" width="4" height="15" fill="rgb(210,34,3)"/><text x="56.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.33%)</title><rect x="53" y="1380" width="4" height="15" fill="rgb(234,139,25)"/><text x="56.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.33%)</title><rect x="53" y="1396" width="4" height="15" fill="rgb(212,91,25)"/><text x="56.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.33%)</title><rect x="53" y="1412" width="4" height="15" fill="rgb(240,204,14)"/><text x="56.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.33%)</title><rect x="53" y="1428" width="4" height="15" fill="rgb(253,13,28)"/><text x="56.00" y="1438.50"></text></g><g><title>__get__ (types.py:171) (1 samples, 0.33%)</title><rect x="53" y="1444" width="4" height="15" fill="rgb(242,185,16)"/><text x="56.00" y="1454.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:14) (1 samples, 0.33%)</title><rect x="57" y="1508" width="4" height="15" fill="rgb(254,130,49)"/><text x="60.00" y="1518.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.33%)</title><rect x="57" y="1524" width="4" height="15" fill="rgb(245,225,43)"/><text x="60.00" y="1534.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.67%)</title><rect x="57" y="1108" width="8" height="15" fill="rgb(244,87,54)"/><text x="60.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.67%)</title><rect x="57" y="1124" width="8" height="15" fill="rgb(210,183,17)"/><text x="60.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="57" y="1140" width="8" height="15" fill="rgb(236,225,36)"/><text x="60.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="57" y="1156" width="8" height="15" fill="rgb(231,41,43)"/><text x="60.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="57" y="1172" width="8" height="15" fill="rgb(215,152,11)"/><text x="60.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="57" y="1188" width="8" height="15" fill="rgb(228,199,12)"/><text x="60.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="57" y="1204" width="8" height="15" fill="rgb(212,97,13)"/><text x="60.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="57" y="1220" width="8" height="15" fill="rgb(223,97,48)"/><text x="60.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.67%)</title><rect x="57" y="1236" width="8" height="15" fill="rgb(235,159,46)"/><text x="60.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.67%)</title><rect x="57" y="1252" width="8" height="15" fill="rgb(219,181,0)"/><text x="60.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="57" y="1268" width="8" height="15" fill="rgb(248,209,3)"/><text x="60.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="57" y="1284" width="8" height="15" fill="rgb(227,112,2)"/><text x="60.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="57" y="1300" width="8" height="15" fill="rgb(224,215,4)"/><text x="60.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="57" y="1316" width="8" height="15" fill="rgb(242,213,7)"/><text x="60.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="57" y="1332" width="8" height="15" fill="rgb(227,0,41)"/><text x="60.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="57" y="1348" width="8" height="15" fill="rgb(212,121,50)"/><text x="60.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.67%)</title><rect x="57" y="1364" width="8" height="15" fill="rgb(227,105,40)"/><text x="60.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="57" y="1380" width="8" height="15" fill="rgb(210,224,1)"/><text x="60.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="57" y="1396" width="8" height="15" fill="rgb(248,119,15)"/><text x="60.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="57" y="1412" width="8" height="15" fill="rgb(210,7,3)"/><text x="60.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="57" y="1428" width="8" height="15" fill="rgb(209,121,12)"/><text x="60.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="57" y="1444" width="8" height="15" fill="rgb(214,43,42)"/><text x="60.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.67%)</title><rect x="57" y="1460" width="8" height="15" fill="rgb(248,171,48)"/><text x="60.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.67%)</title><rect x="57" y="1476" width="8" height="15" fill="rgb(241,39,52)"/><text x="60.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (2 samples, 0.67%)</title><rect x="57" y="1492" width="8" height="15" fill="rgb(215,52,38)"/><text x="60.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.33%)</title><rect x="61" y="1508" width="4" height="15" fill="rgb(244,116,7)"/><text x="64.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:4) (15 samples, 5.00%)</title><rect x="10" y="52" width="59" height="15" fill="rgb(223,142,39)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 5.00%)</title><rect x="10" y="68" width="59" height="15" fill="rgb(254,178,49)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 5.00%)</title><rect x="10" y="84" width="59" height="15" fill="rgb(214,71,38)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 5.00%)</title><rect x="10" y="100" width="59" height="15" fill="rgb(239,90,10)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 5.00%)</title><rect x="10" y="116" width="59" height="15" fill="rgb(215,206,33)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 5.00%)</title><rect x="10" y="132" width="59" height="15" fill="rgb(251,195,23)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:7) (6 samples, 2.00%)</title><rect x="45" y="148" width="24" height="15" fill="rgb(225,40,14)"/><text x="48.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="45" y="164" width="24" height="15" fill="rgb(211,30,47)"/><text x="48.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="45" y="180" width="24" height="15" fill="rgb(220,166,28)"/><text x="48.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="45" y="196" width="24" height="15" fill="rgb(240,133,23)"/><text x="48.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="45" y="212" width="24" height="15" fill="rgb(205,33,39)"/><text x="48.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="45" y="228" width="24" height="15" fill="rgb(239,33,25)"/><text x="48.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 2.00%)</title><rect x="45" y="244" width="24" height="15" fill="rgb(212,209,2)"/><text x="48.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="45" y="260" width="24" height="15" fill="rgb(209,0,22)"/><text x="48.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="45" y="276" width="24" height="15" fill="rgb(239,109,30)"/><text x="48.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="45" y="292" width="24" height="15" fill="rgb(254,197,33)"/><text x="48.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="45" y="308" width="24" height="15" fill="rgb(218,144,35)"/><text x="48.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="45" y="324" width="24" height="15" fill="rgb(251,181,53)"/><text x="48.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 2.00%)</title><rect x="45" y="340" width="24" height="15" fill="rgb(229,118,47)"/><text x="48.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.00%)</title><rect x="45" y="356" width="24" height="15" fill="rgb(237,1,28)"/><text x="48.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.00%)</title><rect x="45" y="372" width="24" height="15" fill="rgb(212,206,34)"/><text x="48.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.00%)</title><rect x="45" y="388" width="24" height="15" fill="rgb(248,143,15)"/><text x="48.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.00%)</title><rect x="45" y="404" width="24" height="15" fill="rgb(219,189,19)"/><text x="48.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.00%)</title><rect x="45" y="420" width="24" height="15" fill="rgb(249,94,44)"/><text x="48.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 1.33%)</title><rect x="53" y="436" width="16" height="15" fill="rgb(242,147,1)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="452" width="16" height="15" fill="rgb(248,177,45)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.33%)</title><rect x="53" y="468" width="16" height="15" fill="rgb(224,127,14)"/><text x="56.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="484" width="16" height="15" fill="rgb(241,122,42)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="500" width="16" height="15" fill="rgb(239,178,38)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.33%)</title><rect x="53" y="516" width="16" height="15" fill="rgb(244,173,53)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.33%)</title><rect x="53" y="532" width="16" height="15" fill="rgb(253,164,30)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.33%)</title><rect x="53" y="548" width="16" height="15" fill="rgb(208,225,48)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="564" width="16" height="15" fill="rgb(252,171,25)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 1.33%)</title><rect x="53" y="580" width="16" height="15" fill="rgb(235,50,6)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="596" width="16" height="15" fill="rgb(249,225,25)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.33%)</title><rect x="53" y="612" width="16" height="15" fill="rgb(210,3,42)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.33%)</title><rect x="53" y="628" width="16" height="15" fill="rgb(252,112,18)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.33%)</title><rect x="53" y="644" width="16" height="15" fill="rgb(251,141,10)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="660" width="16" height="15" fill="rgb(217,141,6)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.33%)</title><rect x="53" y="676" width="16" height="15" fill="rgb(235,115,48)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="692" width="16" height="15" fill="rgb(218,38,10)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.33%)</title><rect x="53" y="708" width="16" height="15" fill="rgb(216,34,41)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.33%)</title><rect x="53" y="724" width="16" height="15" fill="rgb(232,184,50)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.33%)</title><rect x="53" y="740" width="16" height="15" fill="rgb(209,207,28)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="756" width="16" height="15" fill="rgb(217,209,34)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.33%)</title><rect x="53" y="772" width="16" height="15" fill="rgb(216,193,13)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="788" width="16" height="15" fill="rgb(227,11,23)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.33%)</title><rect x="53" y="804" width="16" height="15" fill="rgb(210,175,45)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.33%)</title><rect x="53" y="820" width="16" height="15" fill="rgb(207,119,49)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.33%)</title><rect x="53" y="836" width="16" height="15" fill="rgb(222,129,54)"/><text x="56.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="852" width="16" height="15" fill="rgb(212,83,46)"/><text x="56.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.33%)</title><rect x="53" y="868" width="16" height="15" fill="rgb(251,75,22)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="884" width="16" height="15" fill="rgb(238,202,28)"/><text x="56.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.33%)</title><rect x="53" y="900" width="16" height="15" fill="rgb(230,168,32)"/><text x="56.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="916" width="16" height="15" fill="rgb(240,228,51)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="932" width="16" height="15" fill="rgb(250,216,36)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.33%)</title><rect x="53" y="948" width="16" height="15" fill="rgb(253,137,15)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.33%)</title><rect x="53" y="964" width="16" height="15" fill="rgb(235,79,14)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.33%)</title><rect x="53" y="980" width="16" height="15" fill="rgb(223,217,25)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="996" width="16" height="15" fill="rgb(211,218,30)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.33%)</title><rect x="53" y="1012" width="16" height="15" fill="rgb(233,0,54)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.33%)</title><rect x="53" y="1028" width="16" height="15" fill="rgb(223,161,15)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.33%)</title><rect x="53" y="1044" width="16" height="15" fill="rgb(241,95,22)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.33%)</title><rect x="53" y="1060" width="16" height="15" fill="rgb(238,15,5)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.33%)</title><rect x="53" y="1076" width="16" height="15" fill="rgb(234,139,42)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.33%)</title><rect x="53" y="1092" width="16" height="15" fill="rgb(240,89,2)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:9) (1 samples, 0.33%)</title><rect x="65" y="1108" width="4" height="15" fill="rgb(245,0,21)"/><text x="68.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="65" y="1124" width="4" height="15" fill="rgb(210,45,26)"/><text x="68.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="65" y="1140" width="4" height="15" fill="rgb(220,170,43)"/><text x="68.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="65" y="1156" width="4" height="15" fill="rgb(227,132,32)"/><text x="68.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="65" y="1172" width="4" height="15" fill="rgb(207,87,23)"/><text x="68.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="65" y="1188" width="4" height="15" fill="rgb(239,117,19)"/><text x="68.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py:34) (1 samples, 0.33%)</title><rect x="65" y="1204" width="4" height="15" fill="rgb(207,120,41)"/><text x="68.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py:29) (1 samples, 0.33%)</title><rect x="65" y="1220" width="4" height="15" fill="rgb(222,112,36)"/><text x="68.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py:479) (1 samples, 0.33%)</title><rect x="65" y="1236" width="4" height="15" fill="rgb(221,182,7)"/><text x="68.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py:3148) (1 samples, 0.33%)</title><rect x="65" y="1252" width="4" height="15" fill="rgb(246,228,12)"/><text x="68.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py:3094) (1 samples, 0.33%)</title><rect x="65" y="1268" width="4" height="15" fill="rgb(212,118,48)"/><text x="68.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:3101) (1 samples, 0.33%)</title><rect x="65" y="1284" width="4" height="15" fill="rgb(205,154,44)"/><text x="68.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py:90) (1 samples, 0.33%)</title><rect x="65" y="1300" width="4" height="15" fill="rgb(210,180,20)"/><text x="68.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py:1637) (1 samples, 0.33%)</title><rect x="65" y="1316" width="4" height="15" fill="rgb(245,99,1)"/><text x="68.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1332" width="4" height="15" fill="rgb(212,160,19)"/><text x="68.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1348" width="4" height="15" fill="rgb(212,60,17)"/><text x="68.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1364" width="4" height="15" fill="rgb(212,16,8)"/><text x="68.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1380" width="4" height="15" fill="rgb(216,97,38)"/><text x="68.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1396" width="4" height="15" fill="rgb(230,143,12)"/><text x="68.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3765) (1 samples, 0.33%)</title><rect x="65" y="1412" width="4" height="15" fill="rgb(222,100,51)"/><text x="68.00" y="1422.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1428" width="4" height="15" fill="rgb(228,36,29)"/><text x="68.00" y="1438.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1444" width="4" height="15" fill="rgb(239,206,43)"/><text x="68.00" y="1454.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1460" width="4" height="15" fill="rgb(245,179,28)"/><text x="68.00" y="1470.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:4187) (1 samples, 0.33%)</title><rect x="65" y="1476" width="4" height="15" fill="rgb(223,180,32)"/><text x="68.00" y="1486.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1492" width="4" height="15" fill="rgb(248,43,12)"/><text x="68.00" y="1502.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1508" width="4" height="15" fill="rgb(228,40,29)"/><text x="68.00" y="1518.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3765) (1 samples, 0.33%)</title><rect x="65" y="1524" width="4" height="15" fill="rgb(217,95,38)"/><text x="68.00" y="1534.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1540" width="4" height="15" fill="rgb(234,106,21)"/><text x="68.00" y="1550.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1556" width="4" height="15" fill="rgb(236,109,48)"/><text x="68.00" y="1566.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1572" width="4" height="15" fill="rgb(215,92,4)"/><text x="68.00" y="1582.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1588" width="4" height="15" fill="rgb(229,71,35)"/><text x="68.00" y="1598.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1604" width="4" height="15" fill="rgb(223,69,16)"/><text x="68.00" y="1614.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1620" width="4" height="15" fill="rgb(223,197,34)"/><text x="68.00" y="1630.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3323) (1 samples, 0.33%)</title><rect x="65" y="1636" width="4" height="15" fill="rgb(242,159,12)"/><text x="68.00" y="1646.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py:3349) (1 samples, 0.33%)</title><rect x="65" y="1652" width="4" height="15" fill="rgb(249,146,23)"/><text x="68.00" y="1662.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.33%)</title><rect x="65" y="1668" width="4" height="15" fill="rgb(241,114,1)"/><text x="68.00" y="1678.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py:3581) (1 samples, 0.33%)</title><rect x="65" y="1684" width="4" height="15" fill="rgb(247,52,30)"/><text x="68.00" y="1694.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="65" y="1700" width="4" height="15" fill="rgb(247,24,8)"/><text x="68.00" y="1710.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/pyparsing.py:3581) (1 samples, 0.33%)</title><rect x="65" y="1716" width="4" height="15" fill="rgb(212,201,21)"/><text x="68.00" y="1726.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.33%)</title><rect x="65" y="1732" width="4" height="15" fill="rgb(230,104,6)"/><text x="68.00" y="1742.50"></text></g><g><title>__str__ (pkg_resources/_vendor/pyparsing.py:2154) (1 samples, 0.33%)</title><rect x="65" y="1748" width="4" height="15" fill="rgb(206,90,12)"/><text x="68.00" y="1758.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:40) (1 samples, 0.33%)</title><rect x="69" y="52" width="3" height="15" fill="rgb(216,227,20)"/><text x="72.00" y="62.50"></text></g><g><title>start (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:11) (1 samples, 0.33%)</title><rect x="69" y="68" width="3" height="15" fill="rgb(226,209,51)"/><text x="72.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:39) (1 samples, 0.33%)</title><rect x="69" y="84" width="3" height="15" fill="rgb(207,88,10)"/><text x="72.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.33%)</title><rect x="69" y="100" width="3" height="15" fill="rgb(213,81,6)"/><text x="72.00" y="110.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.33%)</title><rect x="69" y="116" width="3" height="15" fill="rgb(241,121,15)"/><text x="72.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.33%)</title><rect x="69" y="132" width="3" height="15" fill="rgb(209,200,39)"/><text x="72.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:47) (1 samples, 0.33%)</title><rect x="72" y="52" width="4" height="15" fill="rgb(249,213,5)"/><text x="75.00" y="62.50"></text></g><g><title>profile0_skl (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:46) (1 samples, 0.33%)</title><rect x="72" y="68" width="4" height="15" fill="rgb(223,15,32)"/><text x="75.00" y="78.50"></text></g><g><title>setup_profile0 (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:26) (1 samples, 0.33%)</title><rect x="72" y="84" width="4" height="15" fill="rgb(239,200,13)"/><text x="75.00" y="94.50"></text></g><g><title>profile0 (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:18) (1 samples, 0.33%)</title><rect x="72" y="100" width="4" height="15" fill="rgb(210,72,42)"/><text x="75.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.33%)</title><rect x="72" y="116" width="4" height="15" fill="rgb(227,113,0)"/><text x="75.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.33%)</title><rect x="72" y="132" width="4" height="15" fill="rgb(215,198,51)"/><text x="75.00" y="142.50"></text></g><g><title>predict (sklearn/linear_model/_base.py:225) (1 samples, 0.33%)</title><rect x="72" y="148" width="4" height="15" fill="rgb(253,198,20)"/><text x="75.00" y="158.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (1 samples, 0.33%)</title><rect x="72" y="164" width="4" height="15" fill="rgb(250,89,52)"/><text x="75.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.33%)</title><rect x="72" y="180" width="4" height="15" fill="rgb(222,110,34)"/><text x="75.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.33%)</title><rect x="72" y="196" width="4" height="15" fill="rgb(220,28,45)"/><text x="75.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:934) (1 samples, 0.33%)</title><rect x="100" y="180" width="4" height="15" fill="rgb(222,84,45)"/><text x="103.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.67%)</title><rect x="104" y="180" width="8" height="15" fill="rgb(246,33,48)"/><text x="107.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.67%)</title><rect x="104" y="196" width="8" height="15" fill="rgb(208,117,29)"/><text x="107.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.33%)</title><rect x="124" y="196" width="4" height="15" fill="rgb(241,109,8)"/><text x="127.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.33%)</title><rect x="128" y="196" width="15" height="15" fill="rgb(246,206,28)"/><text x="131.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.67%)</title><rect x="135" y="212" width="8" height="15" fill="rgb(225,20,54)"/><text x="138.00" y="222.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:205) (17 samples, 5.67%)</title><rect x="92" y="164" width="67" height="15" fill="rgb(245,146,20)"/><text x="95.00" y="174.50">_decisi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 4.00%)</title><rect x="112" y="180" width="47" height="15" fill="rgb(250,14,23)"/><text x="115.00" y="190.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.33%)</title><rect x="143" y="196" width="16" height="15" fill="rgb(221,116,26)"/><text x="146.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="155" y="212" width="4" height="15" fill="rgb(246,197,21)"/><text x="158.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.67%)</title><rect x="163" y="180" width="8" height="15" fill="rgb(224,170,44)"/><text x="166.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.67%)</title><rect x="171" y="180" width="8" height="15" fill="rgb(236,148,43)"/><text x="174.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (2 samples, 0.67%)</title><rect x="179" y="180" width="8" height="15" fill="rgb(243,198,48)"/><text x="182.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.33%)</title><rect x="187" y="180" width="3" height="15" fill="rgb(218,226,44)"/><text x="190.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.33%)</title><rect x="190" y="180" width="4" height="15" fill="rgb(219,131,23)"/><text x="193.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.33%)</title><rect x="194" y="180" width="4" height="15" fill="rgb(241,7,23)"/><text x="197.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.33%)</title><rect x="194" y="196" width="4" height="15" fill="rgb(220,43,26)"/><text x="197.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.33%)</title><rect x="202" y="196" width="4" height="15" fill="rgb(222,81,2)"/><text x="205.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.33%)</title><rect x="206" y="196" width="4" height="15" fill="rgb(226,217,16)"/><text x="209.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.33%)</title><rect x="198" y="180" width="16" height="15" fill="rgb(225,169,51)"/><text x="201.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.33%)</title><rect x="210" y="196" width="4" height="15" fill="rgb(225,189,23)"/><text x="213.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:187) (2 samples, 0.67%)</title><rect x="218" y="212" width="8" height="15" fill="rgb(206,158,30)"/><text x="221.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.33%)</title><rect x="226" y="212" width="4" height="15" fill="rgb(231,61,50)"/><text x="229.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 2.00%)</title><rect x="214" y="180" width="24" height="15" fill="rgb(223,14,53)"/><text x="217.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py:179) (6 samples, 2.00%)</title><rect x="214" y="196" width="24" height="15" fill="rgb(225,27,46)"/><text x="217.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.67%)</title><rect x="230" y="212" width="8" height="15" fill="rgb(247,172,0)"/><text x="233.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.33%)</title><rect x="238" y="180" width="15" height="15" fill="rgb(215,12,27)"/><text x="241.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.33%)</title><rect x="249" y="196" width="4" height="15" fill="rgb(248,153,33)"/><text x="252.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.33%)</title><rect x="265" y="196" width="4" height="15" fill="rgb(226,55,29)"/><text x="268.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.33%)</title><rect x="265" y="212" width="4" height="15" fill="rgb(216,36,47)"/><text x="268.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.33%)</title><rect x="269" y="196" width="4" height="15" fill="rgb(223,84,31)"/><text x="272.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.33%)</title><rect x="269" y="212" width="4" height="15" fill="rgb(225,139,9)"/><text x="272.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (7 samples, 2.33%)</title><rect x="253" y="180" width="28" height="15" fill="rgb(216,169,22)"/><text x="256.00" y="190.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (2 samples, 0.67%)</title><rect x="273" y="196" width="8" height="15" fill="rgb(205,1,15)"/><text x="276.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (2 samples, 0.67%)</title><rect x="281" y="180" width="8" height="15" fill="rgb(219,211,21)"/><text x="284.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.33%)</title><rect x="289" y="180" width="4" height="15" fill="rgb(250,1,4)"/><text x="292.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.67%)</title><rect x="293" y="180" width="19" height="15" fill="rgb(225,71,7)"/><text x="296.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.33%)</title><rect x="297" y="196" width="15" height="15" fill="rgb(212,12,50)"/><text x="300.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.33%)</title><rect x="312" y="180" width="4" height="15" fill="rgb(217,215,10)"/><text x="315.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.00%)</title><rect x="320" y="196" width="12" height="15" fill="rgb(226,73,41)"/><text x="323.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.33%)</title><rect x="332" y="196" width="4" height="15" fill="rgb(227,54,33)"/><text x="335.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 3.00%)</title><rect x="316" y="180" width="36" height="15" fill="rgb(224,60,22)"/><text x="319.00" y="190.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.33%)</title><rect x="336" y="196" width="16" height="15" fill="rgb(210,184,31)"/><text x="339.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.00%)</title><rect x="340" y="212" width="12" height="15" fill="rgb(220,24,54)"/><text x="343.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:141) (1 samples, 0.33%)</title><rect x="348" y="228" width="4" height="15" fill="rgb(230,64,26)"/><text x="351.00" y="238.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (50 samples, 16.67%)</title><rect x="159" y="164" width="197" height="15" fill="rgb(246,199,53)"/><text x="162.00" y="174.50">_decision_function (sklea..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.33%)</title><rect x="352" y="180" width="4" height="15" fill="rgb(218,195,34)"/><text x="355.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:674) (1 samples, 0.33%)</title><rect x="356" y="180" width="4" height="15" fill="rgb(246,216,46)"/><text x="359.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1015) (1 samples, 0.33%)</title><rect x="360" y="212" width="4" height="15" fill="rgb(227,87,30)"/><text x="363.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.33%)</title><rect x="364" y="212" width="3" height="15" fill="rgb(218,49,18)"/><text x="367.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.33%)</title><rect x="364" y="228" width="3" height="15" fill="rgb(228,91,41)"/><text x="367.00" y="238.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:208) (4 samples, 1.33%)</title><rect x="356" y="164" width="15" height="15" fill="rgb(245,15,29)"/><text x="359.00" y="174.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (3 samples, 1.00%)</title><rect x="360" y="180" width="11" height="15" fill="rgb(237,189,50)"/><text x="363.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (3 samples, 1.00%)</title><rect x="360" y="196" width="11" height="15" fill="rgb(245,204,37)"/><text x="363.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.33%)</title><rect x="367" y="212" width="4" height="15" fill="rgb(227,158,53)"/><text x="370.00" y="222.50"></text></g><g><title>0x7efbf9861120 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="383" y="196" width="4" height="15" fill="rgb(225,85,7)"/><text x="386.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 1.00%)</title><rect x="387" y="196" width="12" height="15" fill="rgb(234,187,54)"/><text x="390.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.00%)</title><rect x="387" y="212" width="12" height="15" fill="rgb(239,21,34)"/><text x="390.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.00%)</title><rect x="387" y="228" width="12" height="15" fill="rgb(241,79,44)"/><text x="390.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.00%)</title><rect x="387" y="244" width="12" height="15" fill="rgb(222,56,23)"/><text x="390.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.00%)</title><rect x="387" y="260" width="12" height="15" fill="rgb(251,49,31)"/><text x="390.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 1.00%)</title><rect x="387" y="276" width="12" height="15" fill="rgb(248,57,52)"/><text x="390.00" y="286.50"></text></g><g><title>0x7efbf9856e7a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="395" y="292" width="4" height="15" fill="rgb(227,196,46)"/><text x="398.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.33%)</title><rect x="399" y="244" width="4" height="15" fill="rgb(241,92,47)"/><text x="402.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.67%)</title><rect x="399" y="212" width="8" height="15" fill="rgb(241,94,5)"/><text x="402.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.67%)</title><rect x="399" y="228" width="8" height="15" fill="rgb(232,21,24)"/><text x="402.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.33%)</title><rect x="403" y="244" width="4" height="15" fill="rgb(227,127,50)"/><text x="406.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.33%)</title><rect x="403" y="260" width="4" height="15" fill="rgb(252,109,32)"/><text x="406.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.33%)</title><rect x="403" y="276" width="4" height="15" fill="rgb(232,15,48)"/><text x="406.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.33%)</title><rect x="403" y="292" width="4" height="15" fill="rgb(227,76,0)"/><text x="406.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_add_DOUBLE (simd.inc.src:763) (1 samples, 0.33%)</title><rect x="407" y="292" width="4" height="15" fill="rgb(235,43,34)"/><text x="410.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.33%)</title><rect x="399" y="196" width="16" height="15" fill="rgb(227,196,53)"/><text x="402.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.67%)</title><rect x="407" y="212" width="8" height="15" fill="rgb(228,79,54)"/><text x="410.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.67%)</title><rect x="407" y="228" width="8" height="15" fill="rgb(226,80,44)"/><text x="410.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.67%)</title><rect x="407" y="244" width="8" height="15" fill="rgb(244,125,29)"/><text x="410.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.67%)</title><rect x="407" y="260" width="8" height="15" fill="rgb(251,71,2)"/><text x="410.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:246) (2 samples, 0.67%)</title><rect x="407" y="276" width="8" height="15" fill="rgb(242,74,0)"/><text x="410.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_add_DOUBLE (simd.inc.src:765) (1 samples, 0.33%)</title><rect x="411" y="292" width="4" height="15" fill="rgb(247,56,48)"/><text x="414.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.33%)</title><rect x="411" y="308" width="4" height="15" fill="rgb(205,150,47)"/><text x="414.00" y="318.50"></text></g><g><title>array_add (number.c:330) (10 samples, 3.33%)</title><rect x="379" y="180" width="40" height="15" fill="rgb(228,144,54)"/><text x="382.00" y="190.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.33%)</title><rect x="415" y="196" width="4" height="15" fill="rgb(216,85,34)"/><text x="418.00" y="206.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.33%)</title><rect x="423" y="196" width="15" height="15" fill="rgb(234,69,32)"/><text x="426.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.33%)</title><rect x="438" y="196" width="4" height="15" fill="rgb(211,37,1)"/><text x="441.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.33%)</title><rect x="438" y="212" width="4" height="15" fill="rgb(234,55,2)"/><text x="441.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.33%)</title><rect x="438" y="228" width="4" height="15" fill="rgb(208,166,37)"/><text x="441.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.33%)</title><rect x="438" y="244" width="4" height="15" fill="rgb(229,170,40)"/><text x="441.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.33%)</title><rect x="442" y="228" width="4" height="15" fill="rgb(228,153,2)"/><text x="445.00" y="238.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2396) (1 samples, 0.33%)</title><rect x="442" y="244" width="4" height="15" fill="rgb(251,83,0)"/><text x="445.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.33%)</title><rect x="446" y="260" width="4" height="15" fill="rgb(238,14,35)"/><text x="449.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2519) (1 samples, 0.33%)</title><rect x="446" y="276" width="4" height="15" fill="rgb(207,156,47)"/><text x="449.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.33%)</title><rect x="450" y="292" width="4" height="15" fill="rgb(238,68,32)"/><text x="453.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.33%)</title><rect x="450" y="308" width="4" height="15" fill="rgb(222,193,31)"/><text x="453.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.33%)</title><rect x="450" y="324" width="4" height="15" fill="rgb(250,53,40)"/><text x="453.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (5 samples, 1.67%)</title><rect x="454" y="292" width="20" height="15" fill="rgb(206,158,2)"/><text x="457.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (5 samples, 1.67%)</title><rect x="454" y="308" width="20" height="15" fill="rgb(230,217,10)"/><text x="457.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (7 samples, 2.33%)</title><rect x="450" y="260" width="28" height="15" fill="rgb(231,45,44)"/><text x="453.00" y="270.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (7 samples, 2.33%)</title><rect x="450" y="276" width="28" height="15" fill="rgb(237,99,48)"/><text x="453.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.33%)</title><rect x="474" y="292" width="4" height="15" fill="rgb(253,92,48)"/><text x="477.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.33%)</title><rect x="474" y="308" width="4" height="15" fill="rgb(233,145,18)"/><text x="477.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.33%)</title><rect x="474" y="324" width="4" height="15" fill="rgb(236,14,41)"/><text x="477.00" y="334.50"></text></g><g><title>0x7efbf97f89e8 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="474" y="340" width="4" height="15" fill="rgb(220,209,10)"/><text x="477.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (9 samples, 3.00%)</title><rect x="446" y="228" width="36" height="15" fill="rgb(245,226,8)"/><text x="449.00" y="238.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (9 samples, 3.00%)</title><rect x="446" y="244" width="36" height="15" fill="rgb(211,138,3)"/><text x="449.00" y="254.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.33%)</title><rect x="478" y="260" width="4" height="15" fill="rgb(205,43,26)"/><text x="481.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.33%)</title><rect x="478" y="276" width="4" height="15" fill="rgb(220,186,48)"/><text x="481.00" y="286.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:107) (1 samples, 0.33%)</title><rect x="478" y="292" width="4" height="15" fill="rgb(251,55,1)"/><text x="481.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (1 samples, 0.33%)</title><rect x="482" y="228" width="3" height="15" fill="rgb(240,162,9)"/><text x="485.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="482" y="244" width="3" height="15" fill="rgb(242,58,37)"/><text x="485.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.33%)</title><rect x="485" y="228" width="4" height="15" fill="rgb(242,132,31)"/><text x="488.00" y="238.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:42) (1 samples, 0.33%)</title><rect x="485" y="244" width="4" height="15" fill="rgb(235,75,2)"/><text x="488.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.33%)</title><rect x="489" y="228" width="4" height="15" fill="rgb(236,122,32)"/><text x="492.00" y="238.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:165) (1 samples, 0.33%)</title><rect x="489" y="244" width="4" height="15" fill="rgb(224,135,48)"/><text x="492.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (1 samples, 0.33%)</title><rect x="493" y="228" width="4" height="15" fill="rgb(212,49,34)"/><text x="496.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.33%)</title><rect x="493" y="244" width="4" height="15" fill="rgb(224,146,17)"/><text x="496.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.33%)</title><rect x="497" y="228" width="4" height="15" fill="rgb(230,42,21)"/><text x="500.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (1 samples, 0.33%)</title><rect x="497" y="244" width="4" height="15" fill="rgb(205,145,16)"/><text x="500.00" y="254.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.33%)</title><rect x="497" y="260" width="4" height="15" fill="rgb(242,178,27)"/><text x="500.00" y="270.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="497" y="276" width="4" height="15" fill="rgb(216,209,25)"/><text x="500.00" y="286.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="497" y="292" width="4" height="15" fill="rgb(243,116,22)"/><text x="500.00" y="302.50"></text></g><g><title>dscal_kernel_8_zero (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="497" y="308" width="4" height="15" fill="rgb(220,206,12)"/><text x="500.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.00%)</title><rect x="501" y="260" width="12" height="15" fill="rgb(224,187,14)"/><text x="504.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 1.00%)</title><rect x="501" y="276" width="12" height="15" fill="rgb(227,120,10)"/><text x="504.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (3 samples, 1.00%)</title><rect x="501" y="292" width="12" height="15" fill="rgb(233,77,32)"/><text x="504.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.33%)</title><rect x="513" y="260" width="4" height="15" fill="rgb(244,20,23)"/><text x="516.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.33%)</title><rect x="513" y="276" width="4" height="15" fill="rgb(220,11,22)"/><text x="516.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (5 samples, 1.67%)</title><rect x="501" y="244" width="20" height="15" fill="rgb(208,176,30)"/><text x="504.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.33%)</title><rect x="517" y="260" width="4" height="15" fill="rgb(234,54,47)"/><text x="520.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.33%)</title><rect x="517" y="276" width="4" height="15" fill="rgb(254,83,12)"/><text x="520.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.33%)</title><rect x="517" y="292" width="4" height="15" fill="rgb(251,116,21)"/><text x="520.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.33%)</title><rect x="517" y="308" width="4" height="15" fill="rgb(228,204,24)"/><text x="520.00" y="318.50"></text></g><g><title>0x7efbf9840f71 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="517" y="324" width="4" height="15" fill="rgb(240,178,6)"/><text x="520.00" y="334.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (27 samples, 9.00%)</title><rect x="419" y="180" width="106" height="15" fill="rgb(215,210,36)"/><text x="422.00" y="190.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 7.00%)</title><rect x="442" y="196" width="83" height="15" fill="rgb(249,168,26)"/><text x="445.00" y="206.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (21 samples, 7.00%)</title><rect x="442" y="212" width="83" height="15" fill="rgb(244,86,46)"/><text x="445.00" y="222.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (6 samples, 2.00%)</title><rect x="501" y="228" width="24" height="15" fill="rgb(250,51,44)"/><text x="504.00" y="238.50">P..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.33%)</title><rect x="521" y="244" width="4" height="15" fill="rgb(229,198,5)"/><text x="524.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (3 samples, 1.00%)</title><rect x="525" y="180" width="12" height="15" fill="rgb(206,24,35)"/><text x="528.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.33%)</title><rect x="533" y="196" width="4" height="15" fill="rgb(218,176,30)"/><text x="536.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (114 samples, 38.00%)</title><rect x="92" y="132" width="449" height="15" fill="rgb(236,75,39)"/><text x="95.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (114 samples, 38.00%)</title><rect x="92" y="148" width="449" height="15" fill="rgb(212,105,48)"/><text x="95.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (43 samples, 14.33%)</title><rect x="371" y="164" width="170" height="15" fill="rgb(222,225,47)"/><text x="374.00" y="174.50">_decision_function (sk..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="537" y="180" width="4" height="15" fill="rgb(248,53,14)"/><text x="540.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.33%)</title><rect x="541" y="132" width="3" height="15" fill="rgb(243,85,46)"/><text x="544.00" y="142.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="544" y="132" width="4" height="15" fill="rgb(254,192,3)"/><text x="547.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:54) (121 samples, 40.33%)</title><rect x="76" y="52" width="476" height="15" fill="rgb(221,128,30)"/><text x="79.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.p..</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:53) (121 samples, 40.33%)</title><rect x="76" y="68" width="476" height="15" fill="rgb(239,0,16)"/><text x="79.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1000_4_12_float..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:37) (121 samples, 40.33%)</title><rect x="76" y="84" width="476" height="15" fill="rgb(211,135,17)"/><text x="79.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_flo..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:31) (121 samples, 40.33%)</title><rect x="76" y="100" width="476" height="15" fill="rgb(205,37,2)"/><text x="79.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (121 samples, 40.33%)</title><rect x="76" y="116" width="476" height="15" fill="rgb(227,73,19)"/><text x="79.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="548" y="132" width="4" height="15" fill="rgb(249,200,26)"/><text x="551.00" y="142.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.33%)</title><rect x="552" y="388" width="4" height="15" fill="rgb(232,83,4)"/><text x="555.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="552" y="404" width="4" height="15" fill="rgb(235,135,28)"/><text x="555.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="552" y="420" width="4" height="15" fill="rgb(235,95,34)"/><text x="555.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="552" y="436" width="4" height="15" fill="rgb(222,39,49)"/><text x="555.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="552" y="452" width="4" height="15" fill="rgb(226,87,53)"/><text x="555.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="552" y="468" width="4" height="15" fill="rgb(230,138,1)"/><text x="555.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.33%)</title><rect x="552" y="484" width="4" height="15" fill="rgb(247,58,10)"/><text x="555.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.33%)</title><rect x="552" y="500" width="4" height="15" fill="rgb(216,7,22)"/><text x="555.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.33%)</title><rect x="552" y="516" width="4" height="15" fill="rgb(254,114,26)"/><text x="555.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.33%)</title><rect x="552" y="532" width="4" height="15" fill="rgb(250,175,27)"/><text x="555.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.33%)</title><rect x="552" y="548" width="4" height="15" fill="rgb(222,72,22)"/><text x="555.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.33%)</title><rect x="552" y="564" width="4" height="15" fill="rgb(223,153,34)"/><text x="555.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.33%)</title><rect x="552" y="580" width="4" height="15" fill="rgb(226,96,22)"/><text x="555.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.33%)</title><rect x="552" y="596" width="4" height="15" fill="rgb(250,173,15)"/><text x="555.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.33%)</title><rect x="552" y="612" width="4" height="15" fill="rgb(214,35,45)"/><text x="555.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.33%)</title><rect x="552" y="628" width="4" height="15" fill="rgb(242,98,40)"/><text x="555.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.33%)</title><rect x="552" y="644" width="4" height="15" fill="rgb(213,72,8)"/><text x="555.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.33%)</title><rect x="552" y="660" width="4" height="15" fill="rgb(230,132,19)"/><text x="555.00" y="670.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.33%)</title><rect x="552" y="676" width="4" height="15" fill="rgb(220,225,25)"/><text x="555.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.33%)</title><rect x="552" y="692" width="4" height="15" fill="rgb(226,176,33)"/><text x="555.00" y="702.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.33%)</title><rect x="552" y="708" width="4" height="15" fill="rgb(240,55,11)"/><text x="555.00" y="718.50"></text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:36) (2 samples, 0.67%)</title><rect x="552" y="84" width="8" height="15" fill="rgb(247,218,12)"/><text x="555.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.67%)</title><rect x="552" y="100" width="8" height="15" fill="rgb(220,80,25)"/><text x="555.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.67%)</title><rect x="552" y="116" width="8" height="15" fill="rgb(232,19,46)"/><text x="555.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.67%)</title><rect x="552" y="132" width="8" height="15" fill="rgb(206,25,19)"/><text x="555.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.67%)</title><rect x="552" y="148" width="8" height="15" fill="rgb(213,87,49)"/><text x="555.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.67%)</title><rect x="552" y="164" width="8" height="15" fill="rgb(231,189,11)"/><text x="555.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.67%)</title><rect x="552" y="180" width="8" height="15" fill="rgb(251,118,47)"/><text x="555.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.67%)</title><rect x="552" y="196" width="8" height="15" fill="rgb(217,168,36)"/><text x="555.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="552" y="212" width="8" height="15" fill="rgb(245,228,4)"/><text x="555.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="552" y="228" width="8" height="15" fill="rgb(247,49,37)"/><text x="555.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="552" y="244" width="8" height="15" fill="rgb(210,56,32)"/><text x="555.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="552" y="260" width="8" height="15" fill="rgb(228,47,37)"/><text x="555.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="552" y="276" width="8" height="15" fill="rgb(229,26,20)"/><text x="555.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.67%)</title><rect x="552" y="292" width="8" height="15" fill="rgb(207,105,34)"/><text x="555.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.67%)</title><rect x="552" y="308" width="8" height="15" fill="rgb(212,83,36)"/><text x="555.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.67%)</title><rect x="552" y="324" width="8" height="15" fill="rgb(216,64,38)"/><text x="555.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.67%)</title><rect x="552" y="340" width="8" height="15" fill="rgb(234,110,53)"/><text x="555.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.67%)</title><rect x="552" y="356" width="8" height="15" fill="rgb(235,117,43)"/><text x="555.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.67%)</title><rect x="552" y="372" width="8" height="15" fill="rgb(250,80,11)"/><text x="555.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.33%)</title><rect x="556" y="388" width="4" height="15" fill="rgb(244,13,48)"/><text x="559.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.33%)</title><rect x="556" y="404" width="4" height="15" fill="rgb(205,65,53)"/><text x="559.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.33%)</title><rect x="556" y="420" width="4" height="15" fill="rgb(211,110,51)"/><text x="559.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.33%)</title><rect x="556" y="436" width="4" height="15" fill="rgb(231,100,27)"/><text x="559.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="556" y="452" width="4" height="15" fill="rgb(205,79,33)"/><text x="559.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:114) (1 samples, 0.33%)</title><rect x="556" y="468" width="4" height="15" fill="rgb(210,96,17)"/><text x="559.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.33%)</title><rect x="556" y="484" width="4" height="15" fill="rgb(253,26,11)"/><text x="559.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.33%)</title><rect x="572" y="148" width="4" height="15" fill="rgb(238,49,32)"/><text x="575.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.67%)</title><rect x="576" y="148" width="8" height="15" fill="rgb(248,83,22)"/><text x="579.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.67%)</title><rect x="588" y="164" width="8" height="15" fill="rgb(215,172,22)"/><text x="591.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.33%)</title><rect x="596" y="164" width="4" height="15" fill="rgb(222,61,10)"/><text x="599.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:448) (1 samples, 0.33%)</title><rect x="600" y="164" width="3" height="15" fill="rgb(229,189,54)"/><text x="603.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.33%)</title><rect x="611" y="180" width="4" height="15" fill="rgb(240,185,18)"/><text x="614.00" y="190.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:931) (1 samples, 0.33%)</title><rect x="643" y="308" width="4" height="15" fill="rgb(217,156,6)"/><text x="646.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.33%)</title><rect x="643" y="324" width="4" height="15" fill="rgb(209,113,35)"/><text x="646.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.33%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(250,33,7)"/><text x="646.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.33%)</title><rect x="643" y="356" width="4" height="15" fill="rgb(220,84,15)"/><text x="646.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1079) (1 samples, 0.33%)</title><rect x="643" y="372" width="4" height="15" fill="rgb(225,205,12)"/><text x="646.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.33%)</title><rect x="647" y="324" width="4" height="15" fill="rgb(235,200,16)"/><text x="650.00" y="334.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (2 samples, 0.67%)</title><rect x="647" y="308" width="8" height="15" fill="rgb(253,186,22)"/><text x="650.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.33%)</title><rect x="651" y="324" width="4" height="15" fill="rgb(250,157,46)"/><text x="654.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.33%)</title><rect x="651" y="340" width="4" height="15" fill="rgb(235,35,21)"/><text x="654.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.33%)</title><rect x="651" y="356" width="4" height="15" fill="rgb(227,217,31)"/><text x="654.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:233) (1 samples, 0.33%)</title><rect x="655" y="324" width="4" height="15" fill="rgb(230,78,35)"/><text x="658.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:197) (1 samples, 0.33%)</title><rect x="655" y="340" width="4" height="15" fill="rgb(205,30,35)"/><text x="658.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1025) (1 samples, 0.33%)</title><rect x="659" y="372" width="3" height="15" fill="rgb(225,128,10)"/><text x="662.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (3 samples, 1.00%)</title><rect x="659" y="324" width="11" height="15" fill="rgb(254,32,40)"/><text x="662.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (3 samples, 1.00%)</title><rect x="659" y="340" width="11" height="15" fill="rgb(224,119,15)"/><text x="662.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 1.00%)</title><rect x="659" y="356" width="11" height="15" fill="rgb(254,152,50)"/><text x="662.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.67%)</title><rect x="662" y="372" width="8" height="15" fill="rgb(222,204,2)"/><text x="665.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.67%)</title><rect x="662" y="388" width="8" height="15" fill="rgb(226,89,27)"/><text x="665.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.67%)</title><rect x="662" y="404" width="8" height="15" fill="rgb(217,16,28)"/><text x="665.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.67%)</title><rect x="662" y="420" width="8" height="15" fill="rgb(212,180,52)"/><text x="665.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.67%)</title><rect x="662" y="436" width="8" height="15" fill="rgb(231,143,44)"/><text x="665.00" y="446.50"></text></g><g><title>0x7efbf9842700 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="666" y="452" width="4" height="15" fill="rgb(243,4,29)"/><text x="669.00" y="462.50"></text></g><g><title>0x7efbf983faa0 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="666" y="468" width="4" height="15" fill="rgb(229,26,43)"/><text x="669.00" y="478.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="670" y="340" width="4" height="15" fill="rgb(247,193,21)"/><text x="673.00" y="350.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="674" y="372" width="4" height="15" fill="rgb(225,11,41)"/><text x="677.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="674" y="388" width="4" height="15" fill="rgb(211,122,49)"/><text x="677.00" y="398.50"></text></g><g><title>add_y (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="678" y="388" width="4" height="15" fill="rgb(253,184,37)"/><text x="681.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (20 samples, 6.67%)</title><rect x="619" y="228" width="79" height="15" fill="rgb(211,185,26)"/><text x="622.00" y="238.50">_run (mlp..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (18 samples, 6.00%)</title><rect x="627" y="244" width="71" height="15" fill="rgb(225,186,46)"/><text x="630.00" y="254.50">numpy_do..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (16 samples, 5.33%)</title><rect x="635" y="260" width="63" height="15" fill="rgb(244,92,23)"/><text x="638.00" y="270.50">dot (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (15 samples, 5.00%)</title><rect x="639" y="276" width="59" height="15" fill="rgb(254,137,0)"/><text x="642.00" y="286.50">array_..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (14 samples, 4.67%)</title><rect x="643" y="292" width="55" height="15" fill="rgb(210,23,42)"/><text x="646.00" y="302.50">array..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (11 samples, 3.67%)</title><rect x="655" y="308" width="43" height="15" fill="rgb(229,166,24)"/><text x="658.00" y="318.50">PyAr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:562) (7 samples, 2.33%)</title><rect x="670" y="324" width="28" height="15" fill="rgb(225,101,17)"/><text x="673.00" y="334.50">c..</text></g><g><title>gemv (cblasfuncs.c:86) (6 samples, 2.00%)</title><rect x="674" y="340" width="24" height="15" fill="rgb(228,19,18)"/><text x="677.00" y="350.50">g..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 2.00%)</title><rect x="674" y="356" width="24" height="15" fill="rgb(221,98,44)"/><text x="677.00" y="366.50">c..</text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.67%)</title><rect x="678" y="372" width="20" height="15" fill="rgb(233,30,39)"/><text x="681.00" y="382.50"></text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.33%)</title><rect x="682" y="388" width="16" height="15" fill="rgb(207,160,4)"/><text x="685.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.33%)</title><rect x="698" y="260" width="4" height="15" fill="rgb(246,177,10)"/><text x="701.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.33%)</title><rect x="698" y="276" width="4" height="15" fill="rgb(240,132,12)"/><text x="701.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.33%)</title><rect x="698" y="292" width="4" height="15" fill="rgb(246,126,18)"/><text x="701.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.33%)</title><rect x="702" y="308" width="4" height="15" fill="rgb(236,107,48)"/><text x="705.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.33%)</title><rect x="702" y="324" width="4" height="15" fill="rgb(214,115,46)"/><text x="705.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.67%)</title><rect x="702" y="292" width="8" height="15" fill="rgb(241,68,7)"/><text x="705.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:505) (1 samples, 0.33%)</title><rect x="706" y="308" width="4" height="15" fill="rgb(225,16,23)"/><text x="709.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.33%)</title><rect x="710" y="292" width="4" height="15" fill="rgb(241,87,35)"/><text x="713.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.33%)</title><rect x="710" y="308" width="4" height="15" fill="rgb(253,151,50)"/><text x="713.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.33%)</title><rect x="710" y="324" width="4" height="15" fill="rgb(215,68,10)"/><text x="713.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.33%)</title><rect x="714" y="292" width="4" height="15" fill="rgb(241,46,26)"/><text x="717.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.33%)</title><rect x="714" y="308" width="4" height="15" fill="rgb(218,172,16)"/><text x="717.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:246) (1 samples, 0.33%)</title><rect x="714" y="324" width="4" height="15" fill="rgb(241,57,46)"/><text x="717.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_add_FLOAT (simd.inc.src:763) (1 samples, 0.33%)</title><rect x="714" y="340" width="4" height="15" fill="rgb(225,178,2)"/><text x="717.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (26 samples, 8.67%)</title><rect x="619" y="212" width="102" height="15" fill="rgb(226,169,44)"/><text x="622.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:30) (6 samples, 2.00%)</title><rect x="698" y="228" width="23" height="15" fill="rgb(231,103,19)"/><text x="701.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.00%)</title><rect x="698" y="244" width="23" height="15" fill="rgb(211,35,35)"/><text x="701.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.67%)</title><rect x="702" y="260" width="19" height="15" fill="rgb(240,157,26)"/><text x="705.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.67%)</title><rect x="702" y="276" width="19" height="15" fill="rgb(239,173,49)"/><text x="705.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.33%)</title><rect x="718" y="292" width="3" height="15" fill="rgb(209,204,48)"/><text x="721.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="718" y="308" width="3" height="15" fill="rgb(206,74,27)"/><text x="721.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (27 samples, 9.00%)</title><rect x="619" y="196" width="106" height="15" fill="rgb(231,9,51)"/><text x="622.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (1 samples, 0.33%)</title><rect x="721" y="212" width="4" height="15" fill="rgb(225,115,35)"/><text x="724.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (29 samples, 9.67%)</title><rect x="615" y="180" width="114" height="15" fill="rgb(227,167,46)"/><text x="618.00" y="190.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.33%)</title><rect x="725" y="196" width="4" height="15" fill="rgb(252,91,12)"/><text x="728.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.33%)</title><rect x="729" y="180" width="4" height="15" fill="rgb(218,220,17)"/><text x="732.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (35 samples, 11.67%)</title><rect x="603" y="164" width="138" height="15" fill="rgb(216,216,0)"/><text x="606.00" y="174.50">_run_sequence_run..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.67%)</title><rect x="733" y="180" width="8" height="15" fill="rgb(207,136,34)"/><text x="736.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:61) (51 samples, 17.00%)</title><rect x="552" y="52" width="201" height="15" fill="rgb(207,222,7)"/><text x="555.00" y="62.50">&lt;module&gt; (bench_LinearRegr..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:60) (51 samples, 17.00%)</title><rect x="552" y="68" width="201" height="15" fill="rgb(219,81,50)"/><text x="555.00" y="78.50">profile_pyrt (bench_Linear..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:37) (49 samples, 16.33%)</title><rect x="560" y="84" width="193" height="15" fill="rgb(227,30,15)"/><text x="563.00" y="94.50">setup_profile (bench_Line..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:31) (49 samples, 16.33%)</title><rect x="560" y="100" width="193" height="15" fill="rgb(239,47,35)"/><text x="563.00" y="110.50">profile (bench_LinearRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (49 samples, 16.33%)</title><rect x="560" y="116" width="193" height="15" fill="rgb(250,62,4)"/><text x="563.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (48 samples, 16.00%)</title><rect x="564" y="132" width="189" height="15" fill="rgb(224,212,50)"/><text x="567.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (43 samples, 14.33%)</title><rect x="584" y="148" width="169" height="15" fill="rgb(249,160,31)"/><text x="587.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 1.00%)</title><rect x="741" y="164" width="12" height="15" fill="rgb(226,105,6)"/><text x="744.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.00%)</title><rect x="753" y="116" width="12" height="15" fill="rgb(242,209,30)"/><text x="756.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 1.00%)</title><rect x="753" y="132" width="12" height="15" fill="rgb(236,96,41)"/><text x="756.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (3 samples, 1.00%)</title><rect x="753" y="148" width="12" height="15" fill="rgb(207,220,7)"/><text x="756.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.33%)</title><rect x="769" y="148" width="4" height="15" fill="rgb(242,65,52)"/><text x="772.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.67%)</title><rect x="773" y="148" width="7" height="15" fill="rgb(209,52,10)"/><text x="776.00" y="158.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="792" y="260" width="4" height="15" fill="rgb(211,29,22)"/><text x="795.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 1.00%)</title><rect x="788" y="196" width="12" height="15" fill="rgb(205,195,43)"/><text x="791.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 1.00%)</title><rect x="788" y="212" width="12" height="15" fill="rgb(220,145,1)"/><text x="791.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="788" y="228" width="12" height="15" fill="rgb(233,109,23)"/><text x="791.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="792" y="244" width="8" height="15" fill="rgb(248,6,22)"/><text x="795.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="796" y="260" width="4" height="15" fill="rgb(208,154,52)"/><text x="799.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="796" y="276" width="4" height="15" fill="rgb(240,12,31)"/><text x="799.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="796" y="292" width="4" height="15" fill="rgb(236,62,40)"/><text x="799.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py:135) (1 samples, 0.33%)</title><rect x="800" y="196" width="4" height="15" fill="rgb(250,38,37)"/><text x="803.00" y="206.50"></text></g><g><title>0x7efbb7870ff9 (?) (1 samples, 0.33%)</title><rect x="808" y="212" width="4" height="15" fill="rgb(239,92,13)"/><text x="811.00" y="222.50"></text></g><g><title>0x7efbb786bef6 (?) (1 samples, 0.33%)</title><rect x="808" y="228" width="4" height="15" fill="rgb(240,221,32)"/><text x="811.00" y="238.50"></text></g><g><title>0x7efbb7860962 (?) (1 samples, 0.33%)</title><rect x="808" y="244" width="4" height="15" fill="rgb(229,179,51)"/><text x="811.00" y="254.50"></text></g><g><title>0x7efbb78947a7 (?) (1 samples, 0.33%)</title><rect x="808" y="260" width="4" height="15" fill="rgb(231,107,4)"/><text x="811.00" y="270.50"></text></g><g><title>0x7efbb7894379 (?) (1 samples, 0.33%)</title><rect x="808" y="276" width="4" height="15" fill="rgb(245,4,9)"/><text x="811.00" y="286.50"></text></g><g><title>0x7efbb7cf28b8 (?) (1 samples, 0.33%)</title><rect x="808" y="292" width="4" height="15" fill="rgb(224,186,2)"/><text x="811.00" y="302.50"></text></g><g><title>0x7efbb7cf0c7f (?) (1 samples, 0.33%)</title><rect x="808" y="308" width="4" height="15" fill="rgb(226,37,21)"/><text x="811.00" y="318.50"></text></g><g><title>0x7efbb7d0399c (?) (1 samples, 0.33%)</title><rect x="808" y="324" width="4" height="15" fill="rgb(227,198,10)"/><text x="811.00" y="334.50"></text></g><g><title>0x7efbb79eab07 (?) (1 samples, 0.33%)</title><rect x="808" y="340" width="4" height="15" fill="rgb(217,163,32)"/><text x="811.00" y="350.50"></text></g><g><title>0x7efbb78cad16 (?) (1 samples, 0.33%)</title><rect x="808" y="356" width="4" height="15" fill="rgb(247,84,17)"/><text x="811.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="808" y="372" width="4" height="15" fill="rgb(218,156,39)"/><text x="811.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="808" y="388" width="4" height="15" fill="rgb(207,54,7)"/><text x="811.00" y="398.50"></text></g><g><title>0x7efbf9841e2f (libc-2.29.so) (1 samples, 0.33%)</title><rect x="820" y="340" width="4" height="15" fill="rgb(210,120,26)"/><text x="823.00" y="350.50"></text></g><g><title>0x7efbf9841e55 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="824" y="340" width="4" height="15" fill="rgb(220,46,12)"/><text x="827.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="820" y="292" width="12" height="15" fill="rgb(235,3,29)"/><text x="823.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 1.00%)</title><rect x="820" y="308" width="12" height="15" fill="rgb(227,26,9)"/><text x="823.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 1.00%)</title><rect x="820" y="324" width="12" height="15" fill="rgb(231,43,27)"/><text x="823.00" y="334.50"></text></g><g><title>0x7efbf9841e61 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="828" y="340" width="4" height="15" fill="rgb(240,193,46)"/><text x="831.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="832" y="292" width="4" height="15" fill="rgb(208,214,31)"/><text x="835.00" y="302.50"></text></g><g><title>0x7efbf984090e (libc-2.29.so) (1 samples, 0.33%)</title><rect x="836" y="340" width="3" height="15" fill="rgb(236,83,14)"/><text x="839.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="839" y="356" width="4" height="15" fill="rgb(218,89,11)"/><text x="842.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="839" y="372" width="4" height="15" fill="rgb(249,54,17)"/><text x="842.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="839" y="340" width="8" height="15" fill="rgb(214,121,43)"/><text x="842.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="843" y="356" width="4" height="15" fill="rgb(209,208,31)"/><text x="846.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="843" y="372" width="4" height="15" fill="rgb(233,142,52)"/><text x="846.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="843" y="388" width="4" height="15" fill="rgb(231,10,44)"/><text x="846.00" y="398.50"></text></g><g><title>0x7efbf9840906 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="930" y="356" width="4" height="15" fill="rgb(254,97,8)"/><text x="933.00" y="366.50"></text></g><g><title>0x7efbf984091e (libc-2.29.so) (1 samples, 0.33%)</title><rect x="934" y="356" width="4" height="15" fill="rgb(218,139,40)"/><text x="937.00" y="366.50"></text></g><g><title>0x7efbf9840965 (libc-2.29.so) (2 samples, 0.67%)</title><rect x="938" y="356" width="8" height="15" fill="rgb(212,6,44)"/><text x="941.00" y="366.50"></text></g><g><title>0x7efbf984096a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="946" y="356" width="4" height="15" fill="rgb(253,0,33)"/><text x="949.00" y="366.50"></text></g><g><title>0x7efbf9840991 (libc-2.29.so) (2 samples, 0.67%)</title><rect x="950" y="356" width="7" height="15" fill="rgb(252,136,47)"/><text x="953.00" y="366.50"></text></g><g><title>0x7efbf9840998 (libc-2.29.so) (3 samples, 1.00%)</title><rect x="957" y="356" width="12" height="15" fill="rgb(214,162,14)"/><text x="960.00" y="366.50"></text></g><g><title>0x7efbf9840a4d (libc-2.29.so) (2 samples, 0.67%)</title><rect x="969" y="356" width="8" height="15" fill="rgb(244,51,37)"/><text x="972.00" y="366.50"></text></g><g><title>0x7efbf9860dc9 (libc-2.29.so) (2 samples, 0.67%)</title><rect x="977" y="356" width="8" height="15" fill="rgb(244,110,25)"/><text x="980.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (10 samples, 3.33%)</title><rect x="985" y="356" width="39" height="15" fill="rgb(235,184,50)"/><text x="988.00" y="366.50">fre..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1024" y="356" width="4" height="15" fill="rgb(235,155,23)"/><text x="1027.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1024" y="372" width="4" height="15" fill="rgb(247,47,27)"/><text x="1027.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1024" y="388" width="4" height="15" fill="rgb(242,44,51)"/><text x="1027.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1024" y="404" width="4" height="15" fill="rgb(207,131,0)"/><text x="1027.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1024" y="420" width="4" height="15" fill="rgb(230,14,44)"/><text x="1027.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1024" y="436" width="4" height="15" fill="rgb(216,36,50)"/><text x="1027.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1024" y="452" width="4" height="15" fill="rgb(245,49,50)"/><text x="1027.00" y="462.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.67%)</title><rect x="1028" y="356" width="8" height="15" fill="rgb(250,143,35)"/><text x="1031.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.33%)</title><rect x="836" y="292" width="287" height="15" fill="rgb(229,68,23)"/><text x="839.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.33%)</title><rect x="836" y="308" width="287" height="15" fill="rgb(245,92,2)"/><text x="839.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 24.33%)</title><rect x="836" y="324" width="287" height="15" fill="rgb(234,100,10)"/><text x="839.00" y="334.50">onnxruntime::SequentialExecutor::Execu..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (70 samples, 23.33%)</title><rect x="847" y="340" width="276" height="15" fill="rgb(251,9,54)"/><text x="850.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;flo..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 7.33%)</title><rect x="1036" y="356" width="87" height="15" fill="rgb(235,207,8)"/><text x="1039.00" y="366.50">std::vecto..</text></g><g><title>operator new (libstdc++.so.6.0.28) (13 samples, 4.33%)</title><rect x="1072" y="372" width="51" height="15" fill="rgb(220,149,3)"/><text x="1075.00" y="382.50">opera..</text></g><g><title>malloc (libc-2.29.so) (8 samples, 2.67%)</title><rect x="1091" y="388" width="32" height="15" fill="rgb(223,186,3)"/><text x="1094.00" y="398.50">ma..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 26.00%)</title><rect x="820" y="260" width="307" height="15" fill="rgb(243,130,40)"/><text x="823.00" y="270.50">onnxruntime::InferenceSession::Run (onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (78 samples, 26.00%)</title><rect x="820" y="276" width="307" height="15" fill="rgb(205,45,47)"/><text x="823.00" y="286.50">onnxruntime::InferenceSession::Run (onnxr..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="1123" y="292" width="4" height="15" fill="rgb(244,195,27)"/><text x="1126.00" y="302.50"></text></g><g><title>0x7efbe930c7d0 (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="1123" y="308" width="4" height="15" fill="rgb(221,117,31)"/><text x="1126.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="1127" y="260" width="7" height="15" fill="rgb(225,91,13)"/><text x="1130.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1131" y="276" width="3" height="15" fill="rgb(239,6,54)"/><text x="1134.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.33%)</title><rect x="1134" y="276" width="4" height="15" fill="rgb(237,137,1)"/><text x="1137.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.33%)</title><rect x="1134" y="292" width="4" height="15" fill="rgb(228,210,31)"/><text x="1137.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.33%)</title><rect x="1134" y="308" width="4" height="15" fill="rgb(217,135,40)"/><text x="1137.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.33%)</title><rect x="1134" y="324" width="4" height="15" fill="rgb(232,32,25)"/><text x="1137.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.33%)</title><rect x="1134" y="340" width="4" height="15" fill="rgb(249,138,30)"/><text x="1137.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1134" y="356" width="4" height="15" fill="rgb(238,123,15)"/><text x="1137.00" y="366.50"></text></g><g><title>0x7efbf9842028 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1134" y="372" width="4" height="15" fill="rgb(250,183,50)"/><text x="1137.00" y="382.50"></text></g><g><title>0x7efbf983fb9b (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1134" y="388" width="4" height="15" fill="rgb(250,213,26)"/><text x="1137.00" y="398.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="1134" y="260" width="8" height="15" fill="rgb(253,34,35)"/><text x="1137.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1138" y="276" width="4" height="15" fill="rgb(245,48,26)"/><text x="1141.00" y="286.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1142" y="260" width="4" height="15" fill="rgb(254,182,23)"/><text x="1145.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1146" y="260" width="4" height="15" fill="rgb(208,199,42)"/><text x="1149.00" y="270.50"></text></g><g><title>0x7efbf9840a41 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1146" y="276" width="4" height="15" fill="rgb(209,208,17)"/><text x="1149.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="1154" y="308" width="4" height="15" fill="rgb(238,102,9)"/><text x="1157.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (89 samples, 29.67%)</title><rect x="812" y="244" width="350" height="15" fill="rgb(247,227,28)"/><text x="815.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="1150" y="260" width="12" height="15" fill="rgb(250,79,20)"/><text x="1153.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="1150" y="276" width="12" height="15" fill="rgb(240,184,23)"/><text x="1153.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="1150" y="292" width="12" height="15" fill="rgb(247,37,51)"/><text x="1153.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1158" y="308" width="4" height="15" fill="rgb(215,184,42)"/><text x="1161.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1158" y="324" width="4" height="15" fill="rgb(236,106,18)"/><text x="1161.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1158" y="340" width="4" height="15" fill="rgb(240,81,25)"/><text x="1161.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1158" y="356" width="4" height="15" fill="rgb(208,145,16)"/><text x="1161.00" y="366.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1162" y="244" width="4" height="15" fill="rgb(215,0,37)"/><text x="1165.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1162" y="260" width="4" height="15" fill="rgb(235,8,13)"/><text x="1165.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="1166" y="244" width="8" height="15" fill="rgb(212,36,50)"/><text x="1169.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1174" y="244" width="4" height="15" fill="rgb(206,124,21)"/><text x="1177.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="1174" y="260" width="4" height="15" fill="rgb(218,178,2)"/><text x="1177.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (102 samples, 34.00%)</title><rect x="784" y="164" width="402" height="15" fill="rgb(208,86,29)"/><text x="787.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (101 samples, 33.67%)</title><rect x="788" y="180" width="398" height="15" fill="rgb(251,88,3)"/><text x="791.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (97 samples, 32.33%)</title><rect x="804" y="196" width="382" height="15" fill="rgb(233,2,15)"/><text x="807.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (95 samples, 31.67%)</title><rect x="812" y="212" width="374" height="15" fill="rgb(214,173,26)"/><text x="815.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/ca..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (95 samples, 31.67%)</title><rect x="812" y="228" width="374" height="15" fill="rgb(232,185,50)"/><text x="815.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntim..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.67%)</title><rect x="1178" y="244" width="8" height="15" fill="rgb(236,196,8)"/><text x="1181.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(241,14,46)"/><text x="1185.00" y="270.50"></text></g><g><title>all (300 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(228,213,0)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:68) (111 samples, 37.00%)</title><rect x="753" y="52" width="437" height="15" fill="rgb(244,172,26)"/><text x="756.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_4_12_fl..</text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:67) (111 samples, 37.00%)</title><rect x="753" y="68" width="437" height="15" fill="rgb(245,5,17)"/><text x="756.00" y="78.50">profile_ort (bench_LinearRegression_default_m_reg_1000_4_12..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:37) (111 samples, 37.00%)</title><rect x="753" y="84" width="437" height="15" fill="rgb(222,114,6)"/><text x="756.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_4_..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_4_12_float_.py:31) (111 samples, 37.00%)</title><rect x="753" y="100" width="437" height="15" fill="rgb(219,34,16)"/><text x="756.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_4_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (108 samples, 36.00%)</title><rect x="765" y="116" width="425" height="15" fill="rgb(238,153,3)"/><text x="768.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (107 samples, 35.67%)</title><rect x="769" y="132" width="421" height="15" fill="rgb(233,184,48)"/><text x="772.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (104 samples, 34.67%)</title><rect x="780" y="148" width="410" height="15" fill="rgb(250,99,15)"/><text x="783.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.33%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(216,94,6)"/><text x="1189.00" y="174.50"></text></g></g></svg>