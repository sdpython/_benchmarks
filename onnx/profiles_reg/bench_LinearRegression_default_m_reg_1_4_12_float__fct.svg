<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1686" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1669.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1669.00"> </text><g id="frames"><g><title>MemoizedZipManifests (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(226,189,4)"/><text x="13.00" y="846.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.42%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(233,88,53)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(254,20,23)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(241,159,31)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(226,142,34)"/><text x="18.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(253,55,10)"/><text x="18.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(239,225,30)"/><text x="18.00" y="942.50"></text></g><g><title>__getattr__ (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(227,0,21)"/><text x="18.00" y="958.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.85%)</title><rect x="15" y="836" width="10" height="15" fill="rgb(244,220,35)"/><text x="18.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.85%)</title><rect x="15" y="852" width="10" height="15" fill="rgb(232,125,45)"/><text x="18.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="20" y="868" width="5" height="15" fill="rgb(230,77,11)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="20" y="884" width="5" height="15" fill="rgb(238,24,7)"/><text x="23.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="20" y="900" width="5" height="15" fill="rgb(238,82,42)"/><text x="23.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(251,152,35)"/><text x="23.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(221,28,12)"/><text x="23.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.42%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(251,93,43)"/><text x="23.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.42%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(235,9,5)"/><text x="23.00" y="974.50"></text></g><g><title>_compile (re.py) (1 samples, 0.42%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(252,45,18)"/><text x="23.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.69%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(224,51,42)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(243,0,5)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(251,224,0)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="340" width="20" height="15" fill="rgb(220,189,22)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.69%)</title><rect x="10" y="356" width="20" height="15" fill="rgb(229,124,13)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="372" width="20" height="15" fill="rgb(207,110,34)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.69%)</title><rect x="10" y="388" width="20" height="15" fill="rgb(249,153,14)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="404" width="20" height="15" fill="rgb(244,71,16)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="420" width="20" height="15" fill="rgb(243,85,7)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="436" width="20" height="15" fill="rgb(253,214,37)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.69%)</title><rect x="10" y="452" width="20" height="15" fill="rgb(252,50,21)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="468" width="20" height="15" fill="rgb(220,54,25)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.69%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(232,47,37)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(212,195,1)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(233,24,35)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(243,80,8)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.69%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(243,160,20)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(252,178,37)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.69%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(205,158,23)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(217,180,5)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(227,71,50)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(219,14,25)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(236,59,24)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(209,136,20)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(225,5,3)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.69%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(230,180,51)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(244,87,24)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.69%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(206,135,19)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(224,64,29)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(250,190,17)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(213,226,37)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.69%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(220,117,43)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.69%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(233,119,24)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.69%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(227,107,42)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="25" y="836" width="5" height="15" fill="rgb(218,198,34)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="25" y="852" width="5" height="15" fill="rgb(248,92,41)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="25" y="868" width="5" height="15" fill="rgb(250,186,27)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="25" y="884" width="5" height="15" fill="rgb(245,88,47)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(222,164,16)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.42%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(233,148,5)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.12%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(254,207,54)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.12%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(225,111,12)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.12%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(234,137,45)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.12%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(234,12,26)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.12%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(231,151,27)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.12%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(212,125,0)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.42%)</title><rect x="30" y="292" width="5" height="15" fill="rgb(250,86,48)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="308" width="5" height="15" fill="rgb(207,75,39)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="324" width="5" height="15" fill="rgb(206,18,44)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="340" width="5" height="15" fill="rgb(245,22,17)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="30" y="356" width="5" height="15" fill="rgb(247,24,9)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="372" width="5" height="15" fill="rgb(232,120,2)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.42%)</title><rect x="30" y="388" width="5" height="15" fill="rgb(219,85,22)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="404" width="5" height="15" fill="rgb(241,80,53)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="420" width="5" height="15" fill="rgb(206,74,18)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="436" width="5" height="15" fill="rgb(243,160,5)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="30" y="452" width="5" height="15" fill="rgb(208,15,38)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="468" width="5" height="15" fill="rgb(224,8,2)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.42%)</title><rect x="30" y="484" width="5" height="15" fill="rgb(216,172,34)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="500" width="5" height="15" fill="rgb(242,66,29)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="516" width="5" height="15" fill="rgb(205,63,33)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="532" width="5" height="15" fill="rgb(213,96,26)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="30" y="548" width="5" height="15" fill="rgb(228,190,14)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="564" width="5" height="15" fill="rgb(248,170,43)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.42%)</title><rect x="30" y="580" width="5" height="15" fill="rgb(209,0,43)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="596" width="5" height="15" fill="rgb(210,201,26)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="612" width="5" height="15" fill="rgb(230,169,19)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="628" width="5" height="15" fill="rgb(225,11,12)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="30" y="644" width="5" height="15" fill="rgb(206,171,26)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="660" width="5" height="15" fill="rgb(213,194,29)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.42%)</title><rect x="30" y="676" width="5" height="15" fill="rgb(227,26,49)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="692" width="5" height="15" fill="rgb(232,48,27)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="708" width="5" height="15" fill="rgb(205,190,51)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="724" width="5" height="15" fill="rgb(208,206,29)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="30" y="740" width="5" height="15" fill="rgb(242,35,6)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="756" width="5" height="15" fill="rgb(238,112,48)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.42%)</title><rect x="30" y="772" width="5" height="15" fill="rgb(213,129,49)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="788" width="5" height="15" fill="rgb(206,104,9)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="804" width="5" height="15" fill="rgb(207,190,25)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="820" width="5" height="15" fill="rgb(229,88,33)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="836" width="5" height="15" fill="rgb(244,201,42)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(253,19,8)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(221,146,21)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="884" width="5" height="15" fill="rgb(207,227,22)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.42%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(207,170,6)"/><text x="33.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(243,159,24)"/><text x="33.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(248,73,33)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(237,98,30)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(221,78,14)"/><text x="33.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(248,136,35)"/><text x="33.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(226,32,36)"/><text x="33.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(209,210,33)"/><text x="33.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.42%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(240,35,22)"/><text x="33.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.42%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(221,94,24)"/><text x="33.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.42%)</title><rect x="30" y="1060" width="5" height="15" fill="rgb(227,78,53)"/><text x="33.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.42%)</title><rect x="30" y="1076" width="5" height="15" fill="rgb(228,125,9)"/><text x="33.00" y="1086.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.42%)</title><rect x="35" y="1396" width="5" height="15" fill="rgb(209,43,41)"/><text x="38.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1412" width="5" height="15" fill="rgb(205,85,14)"/><text x="38.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1428" width="5" height="15" fill="rgb(230,126,38)"/><text x="38.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1444" width="5" height="15" fill="rgb(218,155,3)"/><text x="38.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="35" y="1460" width="5" height="15" fill="rgb(221,61,32)"/><text x="38.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1476" width="5" height="15" fill="rgb(246,105,16)"/><text x="38.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py) (1 samples, 0.42%)</title><rect x="35" y="1492" width="5" height="15" fill="rgb(209,186,13)"/><text x="38.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1508" width="5" height="15" fill="rgb(234,61,20)"/><text x="38.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1524" width="5" height="15" fill="rgb(224,127,5)"/><text x="38.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1540" width="5" height="15" fill="rgb(219,73,49)"/><text x="38.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1556" width="5" height="15" fill="rgb(250,26,50)"/><text x="38.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="35" y="1572" width="5" height="15" fill="rgb(241,39,15)"/><text x="38.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="35" y="1588" width="5" height="15" fill="rgb(245,74,41)"/><text x="38.00" y="1598.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="35" y="1604" width="5" height="15" fill="rgb(250,58,53)"/><text x="38.00" y="1614.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="35" y="1620" width="5" height="15" fill="rgb(208,196,19)"/><text x="38.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1124" width="10" height="15" fill="rgb(230,76,46)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1140" width="10" height="15" fill="rgb(236,154,33)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1156" width="10" height="15" fill="rgb(215,222,13)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.85%)</title><rect x="35" y="1172" width="10" height="15" fill="rgb(218,15,12)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1188" width="10" height="15" fill="rgb(214,129,29)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.85%)</title><rect x="35" y="1204" width="10" height="15" fill="rgb(227,76,20)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1220" width="10" height="15" fill="rgb(220,93,35)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1236" width="10" height="15" fill="rgb(249,159,9)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1252" width="10" height="15" fill="rgb(229,51,34)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.85%)</title><rect x="35" y="1268" width="10" height="15" fill="rgb(212,52,8)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1284" width="10" height="15" fill="rgb(240,121,45)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (2 samples, 0.85%)</title><rect x="35" y="1300" width="10" height="15" fill="rgb(230,163,13)"/><text x="38.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1316" width="10" height="15" fill="rgb(215,107,39)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1332" width="10" height="15" fill="rgb(218,156,40)"/><text x="38.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1348" width="10" height="15" fill="rgb(215,161,20)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.85%)</title><rect x="35" y="1364" width="10" height="15" fill="rgb(219,105,9)"/><text x="38.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="35" y="1380" width="10" height="15" fill="rgb(206,82,33)"/><text x="38.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/impute/__init__.py) (1 samples, 0.42%)</title><rect x="40" y="1396" width="5" height="15" fill="rgb(221,15,45)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="40" y="1412" width="5" height="15" fill="rgb(220,159,5)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="40" y="1428" width="5" height="15" fill="rgb(209,104,22)"/><text x="43.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="40" y="1444" width="5" height="15" fill="rgb(234,153,47)"/><text x="43.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="40" y="1460" width="5" height="15" fill="rgb(219,44,23)"/><text x="43.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="40" y="1476" width="5" height="15" fill="rgb(214,55,49)"/><text x="43.00" y="1486.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="40" y="1492" width="5" height="15" fill="rgb(231,123,0)"/><text x="43.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.12%)</title><rect x="35" y="1092" width="25" height="15" fill="rgb(254,89,35)"/><text x="38.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 2.12%)</title><rect x="35" y="1108" width="25" height="15" fill="rgb(236,225,45)"/><text x="38.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1124" width="15" height="15" fill="rgb(237,111,6)"/><text x="48.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1140" width="15" height="15" fill="rgb(226,26,6)"/><text x="48.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1156" width="15" height="15" fill="rgb(248,140,22)"/><text x="48.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1172" width="15" height="15" fill="rgb(222,62,49)"/><text x="48.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1188" width="15" height="15" fill="rgb(236,135,32)"/><text x="48.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.27%)</title><rect x="45" y="1204" width="15" height="15" fill="rgb(243,55,31)"/><text x="48.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1220" width="15" height="15" fill="rgb(248,101,6)"/><text x="48.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.27%)</title><rect x="45" y="1236" width="15" height="15" fill="rgb(252,209,16)"/><text x="48.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1252" width="15" height="15" fill="rgb(208,139,31)"/><text x="48.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1268" width="15" height="15" fill="rgb(222,180,48)"/><text x="48.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1284" width="15" height="15" fill="rgb(248,25,24)"/><text x="48.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1300" width="15" height="15" fill="rgb(216,146,43)"/><text x="48.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1316" width="15" height="15" fill="rgb(246,210,50)"/><text x="48.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.27%)</title><rect x="45" y="1332" width="15" height="15" fill="rgb(210,92,23)"/><text x="48.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1348" width="15" height="15" fill="rgb(233,32,1)"/><text x="48.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 1.27%)</title><rect x="45" y="1364" width="15" height="15" fill="rgb(228,214,47)"/><text x="48.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1380" width="15" height="15" fill="rgb(245,203,8)"/><text x="48.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1396" width="15" height="15" fill="rgb(212,211,23)"/><text x="48.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1412" width="15" height="15" fill="rgb(221,164,27)"/><text x="48.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.27%)</title><rect x="45" y="1428" width="15" height="15" fill="rgb(213,179,42)"/><text x="48.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.27%)</title><rect x="45" y="1444" width="15" height="15" fill="rgb(208,184,17)"/><text x="48.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.27%)</title><rect x="45" y="1460" width="15" height="15" fill="rgb(218,54,9)"/><text x="48.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.27%)</title><rect x="45" y="1476" width="15" height="15" fill="rgb(230,107,15)"/><text x="48.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.27%)</title><rect x="45" y="1492" width="15" height="15" fill="rgb(221,119,48)"/><text x="48.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 1.27%)</title><rect x="45" y="1508" width="15" height="15" fill="rgb(236,15,41)"/><text x="48.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 1.27%)</title><rect x="45" y="1524" width="15" height="15" fill="rgb(249,145,36)"/><text x="48.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 1.27%)</title><rect x="45" y="1540" width="15" height="15" fill="rgb(223,70,3)"/><text x="48.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.27%)</title><rect x="45" y="1556" width="15" height="15" fill="rgb(251,216,23)"/><text x="48.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 1.27%)</title><rect x="45" y="1572" width="15" height="15" fill="rgb(209,153,13)"/><text x="48.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.85%)</title><rect x="50" y="1588" width="10" height="15" fill="rgb(211,48,48)"/><text x="53.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.42%)</title><rect x="55" y="1604" width="5" height="15" fill="rgb(219,135,43)"/><text x="58.00" y="1614.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.42%)</title><rect x="55" y="1620" width="5" height="15" fill="rgb(227,114,21)"/><text x="58.00" y="1630.50"></text></g><g><title>unicode_resize (python3.7) (1 samples, 0.42%)</title><rect x="55" y="1636" width="5" height="15" fill="rgb(218,183,45)"/><text x="58.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="484" width="30" height="15" fill="rgb(240,174,40)"/><text x="38.00" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="500" width="30" height="15" fill="rgb(240,134,33)"/><text x="38.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="516" width="30" height="15" fill="rgb(227,72,41)"/><text x="38.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="532" width="30" height="15" fill="rgb(228,92,46)"/><text x="38.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.54%)</title><rect x="35" y="548" width="30" height="15" fill="rgb(254,101,50)"/><text x="38.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="564" width="30" height="15" fill="rgb(233,203,49)"/><text x="38.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 2.54%)</title><rect x="35" y="580" width="30" height="15" fill="rgb(236,154,31)"/><text x="38.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="596" width="30" height="15" fill="rgb(206,55,26)"/><text x="38.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="612" width="30" height="15" fill="rgb(226,216,50)"/><text x="38.00" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="628" width="30" height="15" fill="rgb(250,35,32)"/><text x="38.00" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.54%)</title><rect x="35" y="644" width="30" height="15" fill="rgb(230,27,18)"/><text x="38.00" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="660" width="30" height="15" fill="rgb(242,29,35)"/><text x="38.00" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 2.54%)</title><rect x="35" y="676" width="30" height="15" fill="rgb(219,199,35)"/><text x="38.00" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="692" width="30" height="15" fill="rgb(205,46,7)"/><text x="38.00" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="708" width="30" height="15" fill="rgb(211,204,33)"/><text x="38.00" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="724" width="30" height="15" fill="rgb(220,21,42)"/><text x="38.00" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.54%)</title><rect x="35" y="740" width="30" height="15" fill="rgb(227,4,20)"/><text x="38.00" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="756" width="30" height="15" fill="rgb(215,92,8)"/><text x="38.00" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 2.54%)</title><rect x="35" y="772" width="30" height="15" fill="rgb(231,54,11)"/><text x="38.00" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="788" width="30" height="15" fill="rgb(242,129,0)"/><text x="38.00" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="804" width="30" height="15" fill="rgb(241,8,36)"/><text x="38.00" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="820" width="30" height="15" fill="rgb(252,190,37)"/><text x="38.00" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.54%)</title><rect x="35" y="836" width="30" height="15" fill="rgb(240,5,52)"/><text x="38.00" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="852" width="30" height="15" fill="rgb(231,201,47)"/><text x="38.00" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (6 samples, 2.54%)</title><rect x="35" y="868" width="30" height="15" fill="rgb(208,51,3)"/><text x="38.00" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="884" width="30" height="15" fill="rgb(230,130,37)"/><text x="38.00" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="900" width="30" height="15" fill="rgb(240,30,31)"/><text x="38.00" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="916" width="30" height="15" fill="rgb(205,220,46)"/><text x="38.00" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="932" width="30" height="15" fill="rgb(248,94,54)"/><text x="38.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="948" width="30" height="15" fill="rgb(231,91,40)"/><text x="38.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="964" width="30" height="15" fill="rgb(249,77,49)"/><text x="38.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.54%)</title><rect x="35" y="980" width="30" height="15" fill="rgb(217,145,45)"/><text x="38.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="996" width="30" height="15" fill="rgb(221,4,50)"/><text x="38.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (6 samples, 2.54%)</title><rect x="35" y="1012" width="30" height="15" fill="rgb(244,69,39)"/><text x="38.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="1028" width="30" height="15" fill="rgb(228,150,25)"/><text x="38.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="1044" width="30" height="15" fill="rgb(229,7,30)"/><text x="38.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.54%)</title><rect x="35" y="1060" width="30" height="15" fill="rgb(220,139,51)"/><text x="38.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.54%)</title><rect x="35" y="1076" width="30" height="15" fill="rgb(211,120,52)"/><text x="38.00" y="1086.50">ex..</text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="60" y="1092" width="5" height="15" fill="rgb(235,66,0)"/><text x="63.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="60" y="1108" width="5" height="15" fill="rgb(224,52,10)"/><text x="63.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="772" width="5" height="15" fill="rgb(250,151,2)"/><text x="68.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="788" width="5" height="15" fill="rgb(235,26,40)"/><text x="68.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="804" width="5" height="15" fill="rgb(245,113,26)"/><text x="68.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="820" width="5" height="15" fill="rgb(212,186,3)"/><text x="68.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="65" y="836" width="5" height="15" fill="rgb(219,179,50)"/><text x="68.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="852" width="5" height="15" fill="rgb(249,60,36)"/><text x="68.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.42%)</title><rect x="65" y="868" width="5" height="15" fill="rgb(234,48,22)"/><text x="68.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="884" width="5" height="15" fill="rgb(233,167,12)"/><text x="68.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="900" width="5" height="15" fill="rgb(214,212,26)"/><text x="68.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="916" width="5" height="15" fill="rgb(223,23,29)"/><text x="68.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="65" y="932" width="5" height="15" fill="rgb(240,38,38)"/><text x="68.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="65" y="948" width="5" height="15" fill="rgb(247,14,30)"/><text x="68.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py) (1 samples, 0.42%)</title><rect x="65" y="964" width="5" height="15" fill="rgb(211,151,27)"/><text x="68.00" y="974.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.42%)</title><rect x="65" y="980" width="5" height="15" fill="rgb(230,217,2)"/><text x="68.00" y="990.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.42%)</title><rect x="65" y="996" width="5" height="15" fill="rgb(232,122,46)"/><text x="68.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.39%)</title><rect x="35" y="340" width="40" height="15" fill="rgb(228,164,5)"/><text x="38.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.39%)</title><rect x="35" y="356" width="40" height="15" fill="rgb(222,66,36)"/><text x="38.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.39%)</title><rect x="35" y="372" width="40" height="15" fill="rgb(223,208,34)"/><text x="38.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.39%)</title><rect x="35" y="388" width="40" height="15" fill="rgb(239,162,21)"/><text x="38.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.39%)</title><rect x="35" y="404" width="40" height="15" fill="rgb(209,189,16)"/><text x="38.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.39%)</title><rect x="35" y="420" width="40" height="15" fill="rgb(215,168,52)"/><text x="38.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 3.39%)</title><rect x="35" y="436" width="40" height="15" fill="rgb(214,56,11)"/><text x="38.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.39%)</title><rect x="35" y="452" width="40" height="15" fill="rgb(253,93,21)"/><text x="38.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.39%)</title><rect x="35" y="468" width="40" height="15" fill="rgb(238,226,13)"/><text x="38.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="484" width="10" height="15" fill="rgb(219,213,32)"/><text x="68.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.85%)</title><rect x="65" y="500" width="10" height="15" fill="rgb(241,8,48)"/><text x="68.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="516" width="10" height="15" fill="rgb(226,106,30)"/><text x="68.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.85%)</title><rect x="65" y="532" width="10" height="15" fill="rgb(246,41,21)"/><text x="68.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="548" width="10" height="15" fill="rgb(243,227,28)"/><text x="68.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="564" width="10" height="15" fill="rgb(247,26,50)"/><text x="68.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="580" width="10" height="15" fill="rgb(249,129,32)"/><text x="68.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.85%)</title><rect x="65" y="596" width="10" height="15" fill="rgb(232,211,44)"/><text x="68.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="612" width="10" height="15" fill="rgb(222,228,36)"/><text x="68.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.85%)</title><rect x="65" y="628" width="10" height="15" fill="rgb(250,160,4)"/><text x="68.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="644" width="10" height="15" fill="rgb(222,42,2)"/><text x="68.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="660" width="10" height="15" fill="rgb(238,160,18)"/><text x="68.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="676" width="10" height="15" fill="rgb(236,133,47)"/><text x="68.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.85%)</title><rect x="65" y="692" width="10" height="15" fill="rgb(219,115,3)"/><text x="68.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="708" width="10" height="15" fill="rgb(215,179,2)"/><text x="68.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.85%)</title><rect x="65" y="724" width="10" height="15" fill="rgb(211,18,30)"/><text x="68.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="740" width="10" height="15" fill="rgb(234,117,34)"/><text x="68.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="65" y="756" width="10" height="15" fill="rgb(212,102,6)"/><text x="68.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="70" y="772" width="5" height="15" fill="rgb(226,11,5)"/><text x="73.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="70" y="788" width="5" height="15" fill="rgb(247,179,9)"/><text x="73.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="70" y="804" width="5" height="15" fill="rgb(237,228,15)"/><text x="73.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.42%)</title><rect x="70" y="820" width="5" height="15" fill="rgb(227,128,45)"/><text x="73.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="70" y="836" width="5" height="15" fill="rgb(207,209,38)"/><text x="73.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="70" y="852" width="5" height="15" fill="rgb(230,127,26)"/><text x="73.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="70" y="868" width="5" height="15" fill="rgb(215,201,23)"/><text x="73.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="70" y="884" width="5" height="15" fill="rgb(252,21,46)"/><text x="73.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="70" y="900" width="5" height="15" fill="rgb(209,9,46)"/><text x="73.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.42%)</title><rect x="70" y="916" width="5" height="15" fill="rgb(208,104,2)"/><text x="73.00" y="926.50"></text></g><g><title>SeriesGroupBy (pandas/core/groupby/generic.py) (1 samples, 0.42%)</title><rect x="70" y="932" width="5" height="15" fill="rgb(235,108,33)"/><text x="73.00" y="942.50"></text></g><g><title>whitelist_method_generator (pandas/core/groupby/generic.py) (1 samples, 0.42%)</title><rect x="70" y="948" width="5" height="15" fill="rgb(207,65,12)"/><text x="73.00" y="958.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 3.81%)</title><rect x="35" y="244" width="45" height="15" fill="rgb(246,152,32)"/><text x="38.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.81%)</title><rect x="35" y="260" width="45" height="15" fill="rgb(216,122,5)"/><text x="38.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.81%)</title><rect x="35" y="276" width="45" height="15" fill="rgb(237,6,31)"/><text x="38.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.81%)</title><rect x="35" y="292" width="45" height="15" fill="rgb(226,56,43)"/><text x="38.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.81%)</title><rect x="35" y="308" width="45" height="15" fill="rgb(226,190,3)"/><text x="38.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.81%)</title><rect x="35" y="324" width="45" height="15" fill="rgb(229,14,49)"/><text x="38.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.42%)</title><rect x="75" y="340" width="5" height="15" fill="rgb(234,60,6)"/><text x="78.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="356" width="5" height="15" fill="rgb(211,26,19)"/><text x="78.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="372" width="5" height="15" fill="rgb(218,29,34)"/><text x="78.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="388" width="5" height="15" fill="rgb(241,196,32)"/><text x="78.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="404" width="5" height="15" fill="rgb(217,18,3)"/><text x="78.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="420" width="5" height="15" fill="rgb(235,35,37)"/><text x="78.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="436" width="5" height="15" fill="rgb(233,88,54)"/><text x="78.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="452" width="5" height="15" fill="rgb(218,109,20)"/><text x="78.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="468" width="5" height="15" fill="rgb(243,112,54)"/><text x="78.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.42%)</title><rect x="75" y="484" width="5" height="15" fill="rgb(217,108,14)"/><text x="78.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="500" width="5" height="15" fill="rgb(213,173,27)"/><text x="78.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="516" width="5" height="15" fill="rgb(212,202,51)"/><text x="78.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="532" width="5" height="15" fill="rgb(246,113,42)"/><text x="78.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="548" width="5" height="15" fill="rgb(208,68,43)"/><text x="78.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="564" width="5" height="15" fill="rgb(240,29,20)"/><text x="78.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.42%)</title><rect x="75" y="580" width="5" height="15" fill="rgb(219,135,13)"/><text x="78.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="596" width="5" height="15" fill="rgb(217,101,33)"/><text x="78.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="612" width="5" height="15" fill="rgb(252,173,18)"/><text x="78.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="628" width="5" height="15" fill="rgb(249,125,40)"/><text x="78.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="644" width="5" height="15" fill="rgb(225,113,48)"/><text x="78.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="660" width="5" height="15" fill="rgb(235,38,12)"/><text x="78.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.42%)</title><rect x="75" y="676" width="5" height="15" fill="rgb(205,167,27)"/><text x="78.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="692" width="5" height="15" fill="rgb(242,108,31)"/><text x="78.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="708" width="5" height="15" fill="rgb(248,155,25)"/><text x="78.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="724" width="5" height="15" fill="rgb(244,106,2)"/><text x="78.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="740" width="5" height="15" fill="rgb(209,188,44)"/><text x="78.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="756" width="5" height="15" fill="rgb(238,114,11)"/><text x="78.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.42%)</title><rect x="75" y="772" width="5" height="15" fill="rgb(243,152,49)"/><text x="78.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="788" width="5" height="15" fill="rgb(250,180,24)"/><text x="78.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="804" width="5" height="15" fill="rgb(224,30,30)"/><text x="78.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="820" width="5" height="15" fill="rgb(239,20,7)"/><text x="78.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="836" width="5" height="15" fill="rgb(241,190,51)"/><text x="78.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="852" width="5" height="15" fill="rgb(206,166,0)"/><text x="78.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="868" width="5" height="15" fill="rgb(229,135,16)"/><text x="78.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="884" width="5" height="15" fill="rgb(252,68,43)"/><text x="78.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.42%)</title><rect x="75" y="900" width="5" height="15" fill="rgb(243,103,51)"/><text x="78.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="916" width="5" height="15" fill="rgb(248,113,34)"/><text x="78.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="932" width="5" height="15" fill="rgb(247,17,24)"/><text x="78.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="948" width="5" height="15" fill="rgb(247,187,47)"/><text x="78.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="964" width="5" height="15" fill="rgb(230,73,32)"/><text x="78.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="980" width="5" height="15" fill="rgb(232,93,38)"/><text x="78.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.42%)</title><rect x="75" y="996" width="5" height="15" fill="rgb(254,203,9)"/><text x="78.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="1012" width="5" height="15" fill="rgb(230,221,36)"/><text x="78.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="1028" width="5" height="15" fill="rgb(208,64,50)"/><text x="78.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="1044" width="5" height="15" fill="rgb(217,17,13)"/><text x="78.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="1060" width="5" height="15" fill="rgb(232,106,46)"/><text x="78.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="1076" width="5" height="15" fill="rgb(220,130,25)"/><text x="78.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.42%)</title><rect x="75" y="1092" width="5" height="15" fill="rgb(209,118,52)"/><text x="78.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="1108" width="5" height="15" fill="rgb(235,33,3)"/><text x="78.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="1124" width="5" height="15" fill="rgb(243,70,36)"/><text x="78.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="75" y="1140" width="5" height="15" fill="rgb(214,131,11)"/><text x="78.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="1156" width="5" height="15" fill="rgb(251,92,11)"/><text x="78.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="1172" width="5" height="15" fill="rgb(229,37,24)"/><text x="78.00" y="1182.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="75" y="1188" width="5" height="15" fill="rgb(211,193,32)"/><text x="78.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.36%)</title><rect x="10" y="68" width="75" height="15" fill="rgb(210,201,20)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.36%)</title><rect x="10" y="84" width="75" height="15" fill="rgb(251,43,35)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.36%)</title><rect x="10" y="100" width="75" height="15" fill="rgb(245,194,2)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 6.36%)</title><rect x="10" y="116" width="75" height="15" fill="rgb(237,61,7)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.36%)</title><rect x="10" y="132" width="75" height="15" fill="rgb(253,104,18)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (15 samples, 6.36%)</title><rect x="10" y="148" width="75" height="15" fill="rgb(253,18,39)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.36%)</title><rect x="10" y="164" width="75" height="15" fill="rgb(215,97,43)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.36%)</title><rect x="10" y="180" width="75" height="15" fill="rgb(254,57,44)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.24%)</title><rect x="35" y="196" width="50" height="15" fill="rgb(232,23,22)"/><text x="38.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.24%)</title><rect x="35" y="212" width="50" height="15" fill="rgb(231,137,2)"/><text x="38.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.24%)</title><rect x="35" y="228" width="50" height="15" fill="rgb(213,136,40)"/><text x="38.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.42%)</title><rect x="80" y="244" width="5" height="15" fill="rgb(231,201,11)"/><text x="83.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="260" width="5" height="15" fill="rgb(251,72,13)"/><text x="83.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="276" width="5" height="15" fill="rgb(245,202,9)"/><text x="83.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="292" width="5" height="15" fill="rgb(251,224,53)"/><text x="83.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="308" width="5" height="15" fill="rgb(238,24,53)"/><text x="83.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="324" width="5" height="15" fill="rgb(244,184,34)"/><text x="83.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="340" width="5" height="15" fill="rgb(253,126,51)"/><text x="83.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="356" width="5" height="15" fill="rgb(246,129,54)"/><text x="83.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.42%)</title><rect x="80" y="372" width="5" height="15" fill="rgb(246,178,27)"/><text x="83.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="388" width="5" height="15" fill="rgb(247,62,12)"/><text x="83.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="404" width="5" height="15" fill="rgb(224,109,30)"/><text x="83.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="420" width="5" height="15" fill="rgb(226,54,7)"/><text x="83.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="436" width="5" height="15" fill="rgb(245,38,18)"/><text x="83.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="452" width="5" height="15" fill="rgb(212,118,38)"/><text x="83.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="468" width="5" height="15" fill="rgb(244,100,46)"/><text x="83.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="484" width="5" height="15" fill="rgb(225,228,18)"/><text x="83.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.42%)</title><rect x="80" y="500" width="5" height="15" fill="rgb(252,142,53)"/><text x="83.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="516" width="5" height="15" fill="rgb(254,179,52)"/><text x="83.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="532" width="5" height="15" fill="rgb(246,170,33)"/><text x="83.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="548" width="5" height="15" fill="rgb(253,215,21)"/><text x="83.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="564" width="5" height="15" fill="rgb(206,144,39)"/><text x="83.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="580" width="5" height="15" fill="rgb(251,168,32)"/><text x="83.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="596" width="5" height="15" fill="rgb(239,213,44)"/><text x="83.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="612" width="5" height="15" fill="rgb(241,4,11)"/><text x="83.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.42%)</title><rect x="80" y="628" width="5" height="15" fill="rgb(227,10,1)"/><text x="83.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="644" width="5" height="15" fill="rgb(229,88,2)"/><text x="83.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="660" width="5" height="15" fill="rgb(227,196,47)"/><text x="83.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="676" width="5" height="15" fill="rgb(252,122,25)"/><text x="83.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="692" width="5" height="15" fill="rgb(235,83,35)"/><text x="83.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="708" width="5" height="15" fill="rgb(222,166,18)"/><text x="83.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="724" width="5" height="15" fill="rgb(206,197,33)"/><text x="83.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="740" width="5" height="15" fill="rgb(236,122,54)"/><text x="83.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="756" width="5" height="15" fill="rgb(242,205,54)"/><text x="83.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.42%)</title><rect x="80" y="772" width="5" height="15" fill="rgb(212,37,10)"/><text x="83.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="788" width="5" height="15" fill="rgb(207,59,15)"/><text x="83.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="804" width="5" height="15" fill="rgb(225,35,35)"/><text x="83.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="820" width="5" height="15" fill="rgb(241,96,7)"/><text x="83.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="836" width="5" height="15" fill="rgb(243,199,50)"/><text x="83.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="852" width="5" height="15" fill="rgb(219,2,51)"/><text x="83.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="868" width="5" height="15" fill="rgb(248,195,15)"/><text x="83.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="884" width="5" height="15" fill="rgb(249,201,32)"/><text x="83.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.42%)</title><rect x="80" y="900" width="5" height="15" fill="rgb(253,52,21)"/><text x="83.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="916" width="5" height="15" fill="rgb(248,156,36)"/><text x="83.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="932" width="5" height="15" fill="rgb(208,167,53)"/><text x="83.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="948" width="5" height="15" fill="rgb(222,8,45)"/><text x="83.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="964" width="5" height="15" fill="rgb(226,158,26)"/><text x="83.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="980" width="5" height="15" fill="rgb(249,203,43)"/><text x="83.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (1 samples, 0.42%)</title><rect x="80" y="996" width="5" height="15" fill="rgb(244,150,27)"/><text x="83.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="1012" width="5" height="15" fill="rgb(234,182,13)"/><text x="83.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="1028" width="5" height="15" fill="rgb(234,211,48)"/><text x="83.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="80" y="1044" width="5" height="15" fill="rgb(234,13,40)"/><text x="83.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="1060" width="5" height="15" fill="rgb(233,90,3)"/><text x="83.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="1076" width="5" height="15" fill="rgb(247,167,6)"/><text x="83.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.42%)</title><rect x="80" y="1092" width="5" height="15" fill="rgb(241,113,7)"/><text x="83.00" y="1102.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.42%)</title><rect x="100" y="132" width="5" height="15" fill="rgb(231,17,35)"/><text x="103.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.27%)</title><rect x="95" y="116" width="15" height="15" fill="rgb(225,190,0)"/><text x="98.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.42%)</title><rect x="105" y="132" width="5" height="15" fill="rgb(233,166,10)"/><text x="108.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.42%)</title><rect x="105" y="148" width="5" height="15" fill="rgb(205,165,12)"/><text x="108.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.42%)</title><rect x="160" y="180" width="5" height="15" fill="rgb(226,194,41)"/><text x="163.00" y="190.50"></text></g><g><title>0x7fa78689bff9 (?) (1 samples, 0.42%)</title><rect x="185" y="228" width="5" height="15" fill="rgb(212,4,44)"/><text x="188.00" y="238.50"></text></g><g><title>0x7fa78689599b (?) (1 samples, 0.42%)</title><rect x="185" y="244" width="5" height="15" fill="rgb(232,157,49)"/><text x="188.00" y="254.50"></text></g><g><title>0x7fa786894e24 (?) (1 samples, 0.42%)</title><rect x="185" y="260" width="5" height="15" fill="rgb(246,37,34)"/><text x="188.00" y="270.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="195" y="260" width="5" height="15" fill="rgb(240,12,44)"/><text x="198.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.69%)</title><rect x="185" y="212" width="20" height="15" fill="rgb(225,229,52)"/><text x="188.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.27%)</title><rect x="190" y="228" width="15" height="15" fill="rgb(249,64,43)"/><text x="193.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.27%)</title><rect x="190" y="244" width="15" height="15" fill="rgb(207,22,5)"/><text x="193.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="200" y="260" width="5" height="15" fill="rgb(215,134,44)"/><text x="203.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="200" y="276" width="5" height="15" fill="rgb(222,178,47)"/><text x="203.00" y="286.50"></text></g><g><title>0x7fa7c886b906 (libc-2.29.so) (1 samples, 0.42%)</title><rect x="210" y="260" width="5" height="15" fill="rgb(246,145,19)"/><text x="213.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="220" y="292" width="5" height="15" fill="rgb(224,100,41)"/><text x="223.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.42%)</title><rect x="220" y="308" width="5" height="15" fill="rgb(217,146,26)"/><text x="223.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.42%)</title><rect x="220" y="324" width="5" height="15" fill="rgb(221,11,29)"/><text x="223.00" y="334.50"></text></g><g><title>0x7fa7c886cb12 (libc-2.29.so) (1 samples, 0.42%)</title><rect x="220" y="340" width="5" height="15" fill="rgb(253,148,54)"/><text x="223.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="225" y="292" width="5" height="15" fill="rgb(234,7,46)"/><text x="228.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="230" y="292" width="5" height="15" fill="rgb(242,157,52)"/><text x="233.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="235" y="356" width="5" height="15" fill="rgb(216,127,8)"/><text x="238.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="235" y="372" width="5" height="15" fill="rgb(248,179,50)"/><text x="238.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.85%)</title><rect x="235" y="340" width="10" height="15" fill="rgb(241,21,40)"/><text x="238.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="240" y="356" width="5" height="15" fill="rgb(217,66,44)"/><text x="243.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="240" y="372" width="5" height="15" fill="rgb(239,50,34)"/><text x="243.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="240" y="388" width="5" height="15" fill="rgb(221,33,1)"/><text x="243.00" y="398.50"></text></g><g><title>0x7fa786862930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="245" y="372" width="5" height="15" fill="rgb(212,182,11)"/><text x="248.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.85%)</title><rect x="245" y="340" width="10" height="15" fill="rgb(209,200,23)"/><text x="248.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.85%)</title><rect x="245" y="356" width="10" height="15" fill="rgb(206,146,48)"/><text x="248.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.42%)</title><rect x="250" y="372" width="5" height="15" fill="rgb(238,66,51)"/><text x="253.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.42%)</title><rect x="250" y="388" width="5" height="15" fill="rgb(210,156,0)"/><text x="253.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="260" y="356" width="5" height="15" fill="rgb(231,141,41)"/><text x="263.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.97%)</title><rect x="235" y="292" width="35" height="15" fill="rgb(251,187,22)"/><text x="238.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.97%)</title><rect x="235" y="308" width="35" height="15" fill="rgb(242,12,5)"/><text x="238.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.97%)</title><rect x="235" y="324" width="35" height="15" fill="rgb(211,99,9)"/><text x="238.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.27%)</title><rect x="255" y="340" width="15" height="15" fill="rgb(220,179,24)"/><text x="258.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="265" y="356" width="5" height="15" fill="rgb(234,63,22)"/><text x="268.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="265" y="372" width="5" height="15" fill="rgb(235,132,26)"/><text x="268.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="265" y="388" width="5" height="15" fill="rgb(231,124,2)"/><text x="268.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="265" y="404" width="5" height="15" fill="rgb(213,185,33)"/><text x="268.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="265" y="420" width="5" height="15" fill="rgb(243,100,28)"/><text x="268.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="265" y="436" width="5" height="15" fill="rgb(253,59,10)"/><text x="268.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="265" y="452" width="5" height="15" fill="rgb(236,77,38)"/><text x="268.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.66%)</title><rect x="220" y="276" width="55" height="15" fill="rgb(253,142,30)"/><text x="223.00" y="286.50">onnxr..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.42%)</title><rect x="270" y="292" width="5" height="15" fill="rgb(236,147,25)"/><text x="273.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.42%)</title><rect x="270" y="308" width="5" height="15" fill="rgb(233,19,45)"/><text x="273.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.51%)</title><rect x="215" y="260" width="65" height="15" fill="rgb(247,168,30)"/><text x="218.00" y="270.50">onnxrun..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="275" y="276" width="5" height="15" fill="rgb(210,92,41)"/><text x="278.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.27%)</title><rect x="280" y="260" width="15" height="15" fill="rgb(229,43,1)"/><text x="283.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="290" y="276" width="5" height="15" fill="rgb(222,208,22)"/><text x="293.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="290" y="292" width="5" height="15" fill="rgb(253,100,8)"/><text x="293.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="290" y="308" width="5" height="15" fill="rgb(254,71,5)"/><text x="293.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="295" y="260" width="5" height="15" fill="rgb(229,176,29)"/><text x="298.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.42%)</title><rect x="295" y="276" width="5" height="15" fill="rgb(242,195,52)"/><text x="298.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.42%)</title><rect x="295" y="292" width="5" height="15" fill="rgb(217,36,26)"/><text x="298.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.42%)</title><rect x="295" y="308" width="5" height="15" fill="rgb(246,97,21)"/><text x="298.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.47%)</title><rect x="205" y="244" width="100" height="15" fill="rgb(219,23,47)"/><text x="208.00" y="254.50">onnxruntime:..</text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="300" y="260" width="5" height="15" fill="rgb(219,142,45)"/><text x="303.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="300" y="276" width="5" height="15" fill="rgb(216,188,7)"/><text x="303.00" y="286.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.42%)</title><rect x="305" y="244" width="5" height="15" fill="rgb(228,175,41)"/><text x="308.00" y="254.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.27%)</title><rect x="310" y="244" width="15" height="15" fill="rgb(241,158,36)"/><text x="313.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.85%)</title><rect x="315" y="260" width="10" height="15" fill="rgb(240,97,45)"/><text x="318.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 16.95%)</title><rect x="130" y="132" width="200" height="15" fill="rgb(238,71,38)"/><text x="133.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (39 samples, 16.53%)</title><rect x="135" y="148" width="195" height="15" fill="rgb(216,210,49)"/><text x="138.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (37 samples, 15.68%)</title><rect x="145" y="164" width="185" height="15" fill="rgb(216,63,24)"/><text x="148.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (33 samples, 13.98%)</title><rect x="165" y="180" width="165" height="15" fill="rgb(207,218,20)"/><text x="168.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (onnxruntime/capi/session.py) (32 samples, 13.56%)</title><rect x="170" y="196" width="160" height="15" fill="rgb(205,144,50)"/><text x="173.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 10.59%)</title><rect x="205" y="212" width="125" height="15" fill="rgb(251,28,52)"/><text x="208.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 10.59%)</title><rect x="205" y="228" width="125" height="15" fill="rgb(248,206,54)"/><text x="208.00" y="238.50">void pybind11::..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.42%)</title><rect x="325" y="244" width="5" height="15" fill="rgb(208,142,33)"/><text x="328.00" y="254.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (53 samples, 22.46%)</title><rect x="85" y="68" width="265" height="15" fill="rgb(228,201,5)"/><text x="88.00" y="78.50">profile_ort (bench_LinearRegression..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (53 samples, 22.46%)</title><rect x="85" y="84" width="265" height="15" fill="rgb(210,98,48)"/><text x="88.00" y="94.50">setup_profile (bench_LinearRegressi..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (53 samples, 22.46%)</title><rect x="85" y="100" width="265" height="15" fill="rgb(246,136,18)"/><text x="88.00" y="110.50">profile (bench_LinearRegression_def..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 20.34%)</title><rect x="110" y="116" width="240" height="15" fill="rgb(235,23,22)"/><text x="113.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_concatenate (python3.7) (4 samples, 1.69%)</title><rect x="330" y="132" width="20" height="15" fill="rgb(206,79,29)"/><text x="333.00" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.85%)</title><rect x="450" y="196" width="10" height="15" fill="rgb(218,122,5)"/><text x="453.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.85%)</title><rect x="475" y="212" width="10" height="15" fill="rgb(234,190,7)"/><text x="478.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.42%)</title><rect x="480" y="228" width="5" height="15" fill="rgb(217,229,1)"/><text x="483.00" y="238.50"></text></g><g><title>0x7fa7c8881734 (libc-2.29.so) (1 samples, 0.42%)</title><rect x="530" y="308" width="5" height="15" fill="rgb(253,74,38)"/><text x="533.00" y="318.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.42%)</title><rect x="535" y="340" width="5" height="15" fill="rgb(249,209,25)"/><text x="538.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 1.27%)</title><rect x="535" y="324" width="15" height="15" fill="rgb(252,183,20)"/><text x="538.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.85%)</title><rect x="540" y="340" width="10" height="15" fill="rgb(216,104,10)"/><text x="543.00" y="350.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.42%)</title><rect x="550" y="324" width="5" height="15" fill="rgb(231,133,0)"/><text x="553.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.42%)</title><rect x="550" y="340" width="5" height="15" fill="rgb(219,191,17)"/><text x="553.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.42%)</title><rect x="550" y="356" width="5" height="15" fill="rgb(237,52,36)"/><text x="553.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.42%)</title><rect x="550" y="372" width="5" height="15" fill="rgb(215,45,24)"/><text x="553.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.42%)</title><rect x="560" y="340" width="5" height="15" fill="rgb(230,157,22)"/><text x="563.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.42%)</title><rect x="565" y="340" width="5" height="15" fill="rgb(209,186,2)"/><text x="568.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (16 samples, 6.78%)</title><rect x="495" y="244" width="80" height="15" fill="rgb(210,199,9)"/><text x="498.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (14 samples, 5.93%)</title><rect x="505" y="260" width="70" height="15" fill="rgb(251,118,29)"/><text x="508.00" y="270.50">dot (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 5.51%)</title><rect x="510" y="276" width="65" height="15" fill="rgb(230,191,18)"/><text x="513.00" y="286.50">array_i..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (12 samples, 5.08%)</title><rect x="515" y="292" width="60" height="15" fill="rgb(214,132,19)"/><text x="518.00" y="302.50">array_..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (8 samples, 3.39%)</title><rect x="535" y="308" width="40" height="15" fill="rgb(227,34,22)"/><text x="538.00" y="318.50">PyA..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 1.69%)</title><rect x="555" y="324" width="20" height="15" fill="rgb(234,34,45)"/><text x="558.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.42%)</title><rect x="570" y="340" width="5" height="15" fill="rgb(208,12,53)"/><text x="573.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.42%)</title><rect x="570" y="356" width="5" height="15" fill="rgb(217,37,46)"/><text x="573.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.42%)</title><rect x="570" y="372" width="5" height="15" fill="rgb(227,72,7)"/><text x="573.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.42%)</title><rect x="570" y="388" width="5" height="15" fill="rgb(219,121,0)"/><text x="573.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.42%)</title><rect x="570" y="404" width="5" height="15" fill="rgb(251,111,4)"/><text x="573.00" y="414.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.42%)</title><rect x="575" y="276" width="5" height="15" fill="rgb(248,105,48)"/><text x="578.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.85%)</title><rect x="585" y="324" width="10" height="15" fill="rgb(227,61,32)"/><text x="588.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.42%)</title><rect x="590" y="340" width="5" height="15" fill="rgb(250,108,11)"/><text x="593.00" y="350.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.42%)</title><rect x="590" y="356" width="5" height="15" fill="rgb(216,184,34)"/><text x="593.00" y="366.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.42%)</title><rect x="590" y="372" width="5" height="15" fill="rgb(230,61,38)"/><text x="593.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.69%)</title><rect x="580" y="308" width="20" height="15" fill="rgb(222,124,45)"/><text x="583.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.42%)</title><rect x="595" y="324" width="5" height="15" fill="rgb(216,176,2)"/><text x="598.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.42%)</title><rect x="595" y="340" width="5" height="15" fill="rgb(209,159,7)"/><text x="598.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.42%)</title><rect x="600" y="308" width="5" height="15" fill="rgb(237,86,34)"/><text x="603.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.42%)</title><rect x="600" y="324" width="5" height="15" fill="rgb(214,34,29)"/><text x="603.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.54%)</title><rect x="580" y="276" width="30" height="15" fill="rgb(236,150,21)"/><text x="583.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.54%)</title><rect x="580" y="292" width="30" height="15" fill="rgb(207,104,31)"/><text x="583.00" y="302.50">it..</text></g><g><title>PyArray_BYTES (ndarraytypes.h) (1 samples, 0.42%)</title><rect x="605" y="308" width="5" height="15" fill="rgb(217,51,35)"/><text x="608.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 3.39%)</title><rect x="575" y="260" width="40" height="15" fill="rgb(224,65,40)"/><text x="578.00" y="270.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.42%)</title><rect x="610" y="276" width="5" height="15" fill="rgb(237,195,47)"/><text x="613.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (51 samples, 21.61%)</title><rect x="365" y="132" width="255" height="15" fill="rgb(222,60,0)"/><text x="368.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (50 samples, 21.19%)</title><rect x="370" y="148" width="250" height="15" fill="rgb(242,206,22)"/><text x="373.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 20.34%)</title><rect x="380" y="164" width="240" height="15" fill="rgb(254,179,21)"/><text x="383.00" y="174.50">_run_sequence_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (45 samples, 19.07%)</title><rect x="395" y="180" width="225" height="15" fill="rgb(206,132,21)"/><text x="398.00" y="190.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (32 samples, 13.56%)</title><rect x="460" y="196" width="160" height="15" fill="rgb(210,212,15)"/><text x="463.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (27 samples, 11.44%)</title><rect x="485" y="212" width="135" height="15" fill="rgb(220,163,14)"/><text x="488.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (27 samples, 11.44%)</title><rect x="485" y="228" width="135" height="15" fill="rgb(220,74,43)"/><text x="488.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 3.81%)</title><rect x="575" y="244" width="45" height="15" fill="rgb(214,36,46)"/><text x="578.00" y="254.50">ufun..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.42%)</title><rect x="615" y="260" width="5" height="15" fill="rgb(219,120,7)"/><text x="618.00" y="270.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (55 samples, 23.31%)</title><rect x="350" y="68" width="275" height="15" fill="rgb(212,193,8)"/><text x="353.00" y="78.50">profile_pyrt (bench_LinearRegression..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (55 samples, 23.31%)</title><rect x="350" y="84" width="275" height="15" fill="rgb(251,204,40)"/><text x="353.00" y="94.50">setup_profile (bench_LinearRegressio..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (55 samples, 23.31%)</title><rect x="350" y="100" width="275" height="15" fill="rgb(209,8,50)"/><text x="353.00" y="110.50">profile (bench_LinearRegression_defa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (54 samples, 22.88%)</title><rect x="355" y="116" width="270" height="15" fill="rgb(250,128,0)"/><text x="358.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.42%)</title><rect x="620" y="132" width="5" height="15" fill="rgb(211,38,11)"/><text x="623.00" y="142.50"></text></g><g><title>try_binary_elide (temp_elide.c) (2 samples, 0.85%)</title><rect x="680" y="196" width="10" height="15" fill="rgb(238,95,53)"/><text x="683.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c) (2 samples, 0.85%)</title><rect x="680" y="212" width="10" height="15" fill="rgb(220,172,31)"/><text x="683.00" y="222.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.42%)</title><rect x="695" y="276" width="5" height="15" fill="rgb(209,118,1)"/><text x="698.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.27%)</title><rect x="690" y="212" width="15" height="15" fill="rgb(233,130,54)"/><text x="693.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.27%)</title><rect x="690" y="228" width="15" height="15" fill="rgb(229,132,38)"/><text x="693.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.85%)</title><rect x="695" y="244" width="10" height="15" fill="rgb(209,140,12)"/><text x="698.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.85%)</title><rect x="695" y="260" width="10" height="15" fill="rgb(237,104,46)"/><text x="698.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.42%)</title><rect x="700" y="276" width="5" height="15" fill="rgb(252,199,20)"/><text x="703.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.42%)</title><rect x="705" y="228" width="5" height="15" fill="rgb(214,94,25)"/><text x="708.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.42%)</title><rect x="705" y="244" width="5" height="15" fill="rgb(213,218,44)"/><text x="708.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.42%)</title><rect x="705" y="260" width="5" height="15" fill="rgb(232,76,10)"/><text x="708.00" y="270.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.42%)</title><rect x="705" y="276" width="5" height="15" fill="rgb(250,146,48)"/><text x="708.00" y="286.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.42%)</title><rect x="705" y="292" width="5" height="15" fill="rgb(233,66,7)"/><text x="708.00" y="302.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.42%)</title><rect x="710" y="228" width="5" height="15" fill="rgb(239,132,44)"/><text x="713.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.85%)</title><rect x="715" y="228" width="10" height="15" fill="rgb(244,203,10)"/><text x="718.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.85%)</title><rect x="715" y="244" width="10" height="15" fill="rgb(222,76,12)"/><text x="718.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.42%)</title><rect x="730" y="244" width="5" height="15" fill="rgb(214,2,9)"/><text x="733.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.42%)</title><rect x="730" y="260" width="5" height="15" fill="rgb(241,74,47)"/><text x="733.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.42%)</title><rect x="730" y="276" width="5" height="15" fill="rgb(240,65,1)"/><text x="733.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.42%)</title><rect x="730" y="292" width="5" height="15" fill="rgb(249,60,11)"/><text x="733.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.42%)</title><rect x="730" y="308" width="5" height="15" fill="rgb(233,177,39)"/><text x="733.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.97%)</title><rect x="705" y="212" width="35" height="15" fill="rgb(229,180,28)"/><text x="708.00" y="222.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 1.27%)</title><rect x="725" y="228" width="15" height="15" fill="rgb(238,60,24)"/><text x="728.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.42%)</title><rect x="735" y="244" width="5" height="15" fill="rgb(242,215,53)"/><text x="738.00" y="254.50"></text></g><g><title>array_add (number.c) (14 samples, 5.93%)</title><rect x="675" y="180" width="70" height="15" fill="rgb(238,121,12)"/><text x="678.00" y="190.50">array_a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 4.66%)</title><rect x="690" y="196" width="55" height="15" fill="rgb(219,51,11)"/><text x="693.00" y="206.50">ufunc..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.42%)</title><rect x="740" y="212" width="5" height="15" fill="rgb(237,97,52)"/><text x="743.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.42%)</title><rect x="740" y="228" width="5" height="15" fill="rgb(234,157,52)"/><text x="743.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.42%)</title><rect x="740" y="244" width="5" height="15" fill="rgb(229,210,24)"/><text x="743.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.42%)</title><rect x="745" y="180" width="5" height="15" fill="rgb(219,190,45)"/><text x="748.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.42%)</title><rect x="745" y="196" width="5" height="15" fill="rgb(208,60,16)"/><text x="748.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.42%)</title><rect x="745" y="212" width="5" height="15" fill="rgb(229,140,36)"/><text x="748.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.85%)</title><rect x="840" y="196" width="10" height="15" fill="rgb(236,126,20)"/><text x="843.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.85%)</title><rect x="850" y="196" width="10" height="15" fill="rgb(245,63,28)"/><text x="853.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.85%)</title><rect x="905" y="212" width="10" height="15" fill="rgb(213,89,9)"/><text x="908.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 5.08%)</title><rect x="860" y="196" width="60" height="15" fill="rgb(215,190,37)"/><text x="863.00" y="206.50">_asser..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.42%)</title><rect x="915" y="212" width="5" height="15" fill="rgb(240,3,11)"/><text x="918.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.42%)</title><rect x="920" y="196" width="5" height="15" fill="rgb(239,196,22)"/><text x="923.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (13 samples, 5.51%)</title><rect x="925" y="196" width="65" height="15" fill="rgb(243,80,44)"/><text x="928.00" y="206.50">_num_sa..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.69%)</title><rect x="970" y="212" width="20" height="15" fill="rgb(227,63,36)"/><text x="973.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.42%)</title><rect x="985" y="228" width="5" height="15" fill="rgb(248,91,13)"/><text x="988.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.42%)</title><rect x="990" y="196" width="5" height="15" fill="rgb(208,122,44)"/><text x="993.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.42%)</title><rect x="995" y="212" width="5" height="15" fill="rgb(234,151,11)"/><text x="998.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 2.12%)</title><rect x="995" y="196" width="25" height="15" fill="rgb(239,158,25)"/><text x="998.00" y="206.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (4 samples, 1.69%)</title><rect x="1000" y="212" width="20" height="15" fill="rgb(218,32,23)"/><text x="1003.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (61 samples, 25.85%)</title><rect x="750" y="180" width="305" height="15" fill="rgb(237,172,53)"/><text x="753.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (7 samples, 2.97%)</title><rect x="1020" y="196" width="35" height="15" fill="rgb(230,14,13)"/><text x="1023.00" y="206.50">si..</text></g><g><title>_add_filter (warnings.py) (6 samples, 2.54%)</title><rect x="1025" y="212" width="30" height="15" fill="rgb(250,199,43)"/><text x="1028.00" y="222.50">_a..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (8 samples, 3.39%)</title><rect x="1055" y="180" width="40" height="15" fill="rgb(218,109,17)"/><text x="1058.00" y="190.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 1.69%)</title><rect x="1075" y="196" width="20" height="15" fill="rgb(227,34,39)"/><text x="1078.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.85%)</title><rect x="1085" y="212" width="10" height="15" fill="rgb(216,52,31)"/><text x="1088.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.42%)</title><rect x="1110" y="196" width="5" height="15" fill="rgb(216,71,3)"/><text x="1113.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.42%)</title><rect x="1120" y="212" width="5" height="15" fill="rgb(220,89,13)"/><text x="1123.00" y="222.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src) (1 samples, 0.42%)</title><rect x="1125" y="260" width="5" height="15" fill="rgb(239,225,15)"/><text x="1128.00" y="270.50"></text></g><g><title>0x7fa7c7a8cdc0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.42%)</title><rect x="1125" y="276" width="5" height="15" fill="rgb(241,112,48)"/><text x="1128.00" y="286.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.85%)</title><rect x="1125" y="244" width="10" height="15" fill="rgb(250,4,43)"/><text x="1128.00" y="254.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.42%)</title><rect x="1130" y="260" width="5" height="15" fill="rgb(236,157,3)"/><text x="1133.00" y="270.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.42%)</title><rect x="1140" y="308" width="5" height="15" fill="rgb(224,146,30)"/><text x="1143.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.85%)</title><rect x="1140" y="276" width="10" height="15" fill="rgb(211,1,37)"/><text x="1143.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.85%)</title><rect x="1140" y="292" width="10" height="15" fill="rgb(238,104,20)"/><text x="1143.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.42%)</title><rect x="1145" y="308" width="5" height="15" fill="rgb(229,216,10)"/><text x="1148.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.42%)</title><rect x="1145" y="324" width="5" height="15" fill="rgb(230,207,42)"/><text x="1148.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.69%)</title><rect x="1135" y="244" width="20" height="15" fill="rgb(225,108,30)"/><text x="1138.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.69%)</title><rect x="1135" y="260" width="20" height="15" fill="rgb(234,180,29)"/><text x="1138.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.42%)</title><rect x="1150" y="276" width="5" height="15" fill="rgb(228,79,44)"/><text x="1153.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.42%)</title><rect x="1150" y="292" width="5" height="15" fill="rgb(231,181,10)"/><text x="1153.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.42%)</title><rect x="1150" y="308" width="5" height="15" fill="rgb(241,142,28)"/><text x="1153.00" y="318.50"></text></g><g><title>0x7fa7c888bdbb (libc-2.29.so) (1 samples, 0.42%)</title><rect x="1150" y="324" width="5" height="15" fill="rgb(252,16,13)"/><text x="1153.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.85%)</title><rect x="1155" y="244" width="10" height="15" fill="rgb(215,178,18)"/><text x="1158.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.85%)</title><rect x="1155" y="260" width="10" height="15" fill="rgb(238,11,1)"/><text x="1158.00" y="270.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.42%)</title><rect x="1165" y="244" width="5" height="15" fill="rgb(208,2,8)"/><text x="1168.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.42%)</title><rect x="1170" y="244" width="5" height="15" fill="rgb(237,144,2)"/><text x="1173.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 45.34%)</title><rect x="645" y="132" width="535" height="15" fill="rgb(232,13,37)"/><text x="648.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (106 samples, 44.92%)</title><rect x="650" y="148" width="530" height="15" fill="rgb(212,163,43)"/><text x="653.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (105 samples, 44.49%)</title><rect x="655" y="164" width="525" height="15" fill="rgb(224,215,10)"/><text x="658.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (17 samples, 7.20%)</title><rect x="1095" y="180" width="85" height="15" fill="rgb(240,132,18)"/><text x="1098.00" y="190.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 5.51%)</title><rect x="1115" y="196" width="65" height="15" fill="rgb(238,84,28)"/><text x="1118.00" y="206.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 4.66%)</title><rect x="1125" y="212" width="55" height="15" fill="rgb(249,119,41)"/><text x="1128.00" y="222.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (11 samples, 4.66%)</title><rect x="1125" y="228" width="55" height="15" fill="rgb(230,119,20)"/><text x="1128.00" y="238.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.42%)</title><rect x="1175" y="244" width="5" height="15" fill="rgb(243,129,33)"/><text x="1178.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.42%)</title><rect x="1175" y="260" width="5" height="15" fill="rgb(214,96,46)"/><text x="1178.00" y="270.50"></text></g><g><title>0x7fa7c7a8de80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.42%)</title><rect x="1175" y="276" width="5" height="15" fill="rgb(254,159,44)"/><text x="1178.00" y="286.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.42%)</title><rect x="1180" y="132" width="5" height="15" fill="rgb(233,19,53)"/><text x="1183.00" y="142.50"></text></g><g><title>all (236 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,82,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (236 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(211,78,37)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (113 samples, 47.88%)</title><rect x="625" y="68" width="565" height="15" fill="rgb(236,7,12)"/><text x="628.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (113 samples, 47.88%)</title><rect x="625" y="84" width="565" height="15" fill="rgb(225,64,39)"/><text x="628.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (113 samples, 47.88%)</title><rect x="625" y="100" width="565" height="15" fill="rgb(220,81,39)"/><text x="628.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (111 samples, 47.03%)</title><rect x="635" y="116" width="555" height="15" fill="rgb(229,51,31)"/><text x="638.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.42%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(243,171,37)"/><text x="1188.00" y="142.50"></text></g></g></svg>