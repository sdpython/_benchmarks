<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>0x7fc8cbeb8b1c (libc-2.29.so) (1 samples, 0.45%)</title><rect x="10" y="52" width="5" height="15" fill="rgb(254,195,16)"/><text x="13.00" y="62.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(233,96,16)"/><text x="18.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(218,133,51)"/><text x="18.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(227,87,10)"/><text x="18.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(222,133,4)"/><text x="18.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(217,189,34)"/><text x="18.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(251,57,22)"/><text x="18.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(243,4,50)"/><text x="18.00" y="974.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.45%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(233,197,7)"/><text x="18.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="932" width="6" height="15" fill="rgb(216,120,1)"/><text x="23.00" y="942.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="26" y="964" width="5" height="15" fill="rgb(249,47,44)"/><text x="29.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="26" y="980" width="5" height="15" fill="rgb(209,53,50)"/><text x="29.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.45%)</title><rect x="26" y="996" width="5" height="15" fill="rgb(232,188,52)"/><text x="29.00" y="1006.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.81%)</title><rect x="15" y="836" width="21" height="15" fill="rgb(232,21,48)"/><text x="18.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.81%)</title><rect x="15" y="852" width="21" height="15" fill="rgb(214,180,29)"/><text x="18.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 1.36%)</title><rect x="20" y="868" width="16" height="15" fill="rgb(213,111,35)"/><text x="23.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 1.36%)</title><rect x="20" y="884" width="16" height="15" fill="rgb(237,5,15)"/><text x="23.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.36%)</title><rect x="20" y="900" width="16" height="15" fill="rgb(208,166,23)"/><text x="23.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.36%)</title><rect x="20" y="916" width="16" height="15" fill="rgb(209,3,23)"/><text x="23.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="26" y="932" width="10" height="15" fill="rgb(239,116,40)"/><text x="29.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="26" y="948" width="10" height="15" fill="rgb(242,3,5)"/><text x="29.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(227,200,45)"/><text x="34.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.45%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(233,224,37)"/><text x="34.00" y="990.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.45%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(249,111,36)"/><text x="34.00" y="1006.50"></text></g><g><title>0x7fc8cbed5279 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(243,106,22)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 2.26%)</title><rect x="15" y="292" width="27" height="15" fill="rgb(219,78,38)"/><text x="18.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="308" width="27" height="15" fill="rgb(232,115,26)"/><text x="18.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="324" width="27" height="15" fill="rgb(233,181,7)"/><text x="18.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="340" width="27" height="15" fill="rgb(213,161,21)"/><text x="18.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="15" y="356" width="27" height="15" fill="rgb(252,7,42)"/><text x="18.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="372" width="27" height="15" fill="rgb(235,132,25)"/><text x="18.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 2.26%)</title><rect x="15" y="388" width="27" height="15" fill="rgb(251,200,31)"/><text x="18.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="404" width="27" height="15" fill="rgb(254,186,7)"/><text x="18.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="420" width="27" height="15" fill="rgb(245,105,1)"/><text x="18.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="436" width="27" height="15" fill="rgb(252,195,36)"/><text x="18.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="15" y="452" width="27" height="15" fill="rgb(241,182,21)"/><text x="18.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="468" width="27" height="15" fill="rgb(208,92,7)"/><text x="18.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 2.26%)</title><rect x="15" y="484" width="27" height="15" fill="rgb(253,23,50)"/><text x="18.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="500" width="27" height="15" fill="rgb(233,39,13)"/><text x="18.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="516" width="27" height="15" fill="rgb(233,63,18)"/><text x="18.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="532" width="27" height="15" fill="rgb(250,183,0)"/><text x="18.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="15" y="548" width="27" height="15" fill="rgb(221,82,14)"/><text x="18.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="564" width="27" height="15" fill="rgb(237,147,3)"/><text x="18.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 2.26%)</title><rect x="15" y="580" width="27" height="15" fill="rgb(218,67,30)"/><text x="18.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="596" width="27" height="15" fill="rgb(225,2,21)"/><text x="18.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="612" width="27" height="15" fill="rgb(227,27,25)"/><text x="18.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="628" width="27" height="15" fill="rgb(221,166,28)"/><text x="18.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="644" width="27" height="15" fill="rgb(209,33,52)"/><text x="18.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="660" width="27" height="15" fill="rgb(239,149,26)"/><text x="18.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="676" width="27" height="15" fill="rgb(209,44,38)"/><text x="18.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="15" y="692" width="27" height="15" fill="rgb(211,80,4)"/><text x="18.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="708" width="27" height="15" fill="rgb(213,196,48)"/><text x="18.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 2.26%)</title><rect x="15" y="724" width="27" height="15" fill="rgb(216,187,7)"/><text x="18.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="740" width="27" height="15" fill="rgb(237,74,16)"/><text x="18.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="756" width="27" height="15" fill="rgb(213,211,40)"/><text x="18.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="772" width="27" height="15" fill="rgb(240,163,17)"/><text x="18.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="15" y="788" width="27" height="15" fill="rgb(236,190,46)"/><text x="18.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="15" y="804" width="27" height="15" fill="rgb(236,59,43)"/><text x="18.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 2.26%)</title><rect x="15" y="820" width="27" height="15" fill="rgb(229,143,13)"/><text x="18.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="836" width="6" height="15" fill="rgb(252,33,21)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="852" width="6" height="15" fill="rgb(210,171,48)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="868" width="6" height="15" fill="rgb(240,211,9)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="36" y="884" width="6" height="15" fill="rgb(251,86,16)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="900" width="6" height="15" fill="rgb(218,18,23)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.45%)</title><rect x="36" y="916" width="6" height="15" fill="rgb(208,64,28)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="932" width="6" height="15" fill="rgb(221,66,51)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="948" width="6" height="15" fill="rgb(229,42,19)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="964" width="6" height="15" fill="rgb(205,74,9)"/><text x="39.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="980" width="6" height="15" fill="rgb(234,105,9)"/><text x="39.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.45%)</title><rect x="36" y="996" width="6" height="15" fill="rgb(216,76,40)"/><text x="39.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1012" width="6" height="15" fill="rgb(220,47,3)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1028" width="6" height="15" fill="rgb(239,91,39)"/><text x="39.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1044" width="6" height="15" fill="rgb(236,34,36)"/><text x="39.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="36" y="1060" width="6" height="15" fill="rgb(207,168,49)"/><text x="39.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1076" width="6" height="15" fill="rgb(218,155,0)"/><text x="39.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.45%)</title><rect x="36" y="1092" width="6" height="15" fill="rgb(241,91,25)"/><text x="39.00" y="1102.50"></text></g><g><title>__add__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.45%)</title><rect x="36" y="1108" width="6" height="15" fill="rgb(227,102,38)"/><text x="39.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.45%)</title><rect x="36" y="1124" width="6" height="15" fill="rgb(205,229,4)"/><text x="39.00" y="1134.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.45%)</title><rect x="36" y="1140" width="6" height="15" fill="rgb(250,164,32)"/><text x="39.00" y="1150.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.45%)</title><rect x="36" y="1156" width="6" height="15" fill="rgb(242,54,5)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="500" width="5" height="15" fill="rgb(240,187,44)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="516" width="5" height="15" fill="rgb(248,182,2)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="532" width="5" height="15" fill="rgb(227,187,12)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="548" width="5" height="15" fill="rgb(209,113,20)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="564" width="5" height="15" fill="rgb(235,93,3)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.45%)</title><rect x="42" y="580" width="5" height="15" fill="rgb(239,140,29)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="596" width="5" height="15" fill="rgb(232,57,52)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="612" width="5" height="15" fill="rgb(221,105,47)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="628" width="5" height="15" fill="rgb(229,212,50)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="644" width="5" height="15" fill="rgb(211,80,47)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="660" width="5" height="15" fill="rgb(251,179,29)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.45%)</title><rect x="42" y="676" width="5" height="15" fill="rgb(211,50,8)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="692" width="5" height="15" fill="rgb(234,82,15)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="708" width="5" height="15" fill="rgb(248,8,22)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="724" width="5" height="15" fill="rgb(210,198,20)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="740" width="5" height="15" fill="rgb(238,177,54)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="756" width="5" height="15" fill="rgb(219,224,5)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.45%)</title><rect x="42" y="772" width="5" height="15" fill="rgb(228,206,50)"/><text x="45.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="788" width="5" height="15" fill="rgb(216,200,12)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="804" width="5" height="15" fill="rgb(217,181,51)"/><text x="45.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="820" width="5" height="15" fill="rgb(208,10,36)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="836" width="5" height="15" fill="rgb(237,163,46)"/><text x="45.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="852" width="5" height="15" fill="rgb(251,99,54)"/><text x="45.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="868" width="5" height="15" fill="rgb(243,79,40)"/><text x="45.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="884" width="5" height="15" fill="rgb(205,78,49)"/><text x="45.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.45%)</title><rect x="42" y="900" width="5" height="15" fill="rgb(242,70,32)"/><text x="45.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="916" width="5" height="15" fill="rgb(253,89,46)"/><text x="45.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="932" width="5" height="15" fill="rgb(233,129,52)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="948" width="5" height="15" fill="rgb(240,7,7)"/><text x="45.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="964" width="5" height="15" fill="rgb(243,47,28)"/><text x="45.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="980" width="5" height="15" fill="rgb(239,130,9)"/><text x="45.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="996" width="5" height="15" fill="rgb(230,100,25)"/><text x="45.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1012" width="5" height="15" fill="rgb(249,186,31)"/><text x="45.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.45%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(241,50,26)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="15" y="196" width="37" height="15" fill="rgb(205,100,3)"/><text x="18.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="15" y="212" width="37" height="15" fill="rgb(239,229,8)"/><text x="18.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="15" y="228" width="37" height="15" fill="rgb(245,177,45)"/><text x="18.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="15" y="244" width="37" height="15" fill="rgb(222,176,37)"/><text x="18.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.17%)</title><rect x="15" y="260" width="37" height="15" fill="rgb(234,200,33)"/><text x="18.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="15" y="276" width="37" height="15" fill="rgb(252,68,53)"/><text x="18.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.90%)</title><rect x="42" y="292" width="10" height="15" fill="rgb(254,197,13)"/><text x="45.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="308" width="10" height="15" fill="rgb(233,59,29)"/><text x="45.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="324" width="10" height="15" fill="rgb(249,210,43)"/><text x="45.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="340" width="10" height="15" fill="rgb(241,209,51)"/><text x="45.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="42" y="356" width="10" height="15" fill="rgb(206,196,25)"/><text x="45.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="372" width="10" height="15" fill="rgb(244,63,13)"/><text x="45.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.90%)</title><rect x="42" y="388" width="10" height="15" fill="rgb(240,53,25)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="404" width="10" height="15" fill="rgb(215,116,32)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="420" width="10" height="15" fill="rgb(252,141,24)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="436" width="10" height="15" fill="rgb(242,68,35)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="42" y="452" width="10" height="15" fill="rgb(247,2,25)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="42" y="468" width="10" height="15" fill="rgb(252,134,51)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.90%)</title><rect x="42" y="484" width="10" height="15" fill="rgb(222,214,0)"/><text x="45.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="500" width="5" height="15" fill="rgb(235,67,37)"/><text x="50.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="516" width="5" height="15" fill="rgb(231,19,8)"/><text x="50.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="532" width="5" height="15" fill="rgb(224,226,38)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="548" width="5" height="15" fill="rgb(236,173,40)"/><text x="50.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="564" width="5" height="15" fill="rgb(215,142,38)"/><text x="50.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="580" width="5" height="15" fill="rgb(236,116,19)"/><text x="50.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="596" width="5" height="15" fill="rgb(218,99,31)"/><text x="50.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.45%)</title><rect x="47" y="612" width="5" height="15" fill="rgb(216,131,3)"/><text x="50.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="628" width="5" height="15" fill="rgb(217,158,48)"/><text x="50.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="644" width="5" height="15" fill="rgb(208,204,29)"/><text x="50.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="660" width="5" height="15" fill="rgb(253,162,18)"/><text x="50.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="676" width="5" height="15" fill="rgb(206,86,26)"/><text x="50.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="692" width="5" height="15" fill="rgb(232,139,8)"/><text x="50.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.45%)</title><rect x="47" y="708" width="5" height="15" fill="rgb(209,25,10)"/><text x="50.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="724" width="5" height="15" fill="rgb(213,43,12)"/><text x="50.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="740" width="5" height="15" fill="rgb(248,178,17)"/><text x="50.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="756" width="5" height="15" fill="rgb(217,117,18)"/><text x="50.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="772" width="5" height="15" fill="rgb(208,35,5)"/><text x="50.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="788" width="5" height="15" fill="rgb(207,15,42)"/><text x="50.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="47" y="804" width="5" height="15" fill="rgb(243,11,9)"/><text x="50.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="820" width="5" height="15" fill="rgb(215,162,24)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="836" width="5" height="15" fill="rgb(210,3,0)"/><text x="50.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="852" width="5" height="15" fill="rgb(210,18,8)"/><text x="50.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="868" width="5" height="15" fill="rgb(224,161,5)"/><text x="50.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="884" width="5" height="15" fill="rgb(215,199,22)"/><text x="50.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="47" y="900" width="5" height="15" fill="rgb(241,184,45)"/><text x="50.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="916" width="5" height="15" fill="rgb(215,80,28)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="932" width="5" height="15" fill="rgb(222,8,49)"/><text x="50.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="948" width="5" height="15" fill="rgb(249,203,3)"/><text x="50.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="964" width="5" height="15" fill="rgb(236,196,41)"/><text x="50.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="980" width="5" height="15" fill="rgb(248,59,2)"/><text x="50.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.45%)</title><rect x="47" y="996" width="5" height="15" fill="rgb(217,120,22)"/><text x="50.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1012" width="5" height="15" fill="rgb(254,56,48)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1028" width="5" height="15" fill="rgb(247,143,43)"/><text x="50.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1044" width="5" height="15" fill="rgb(226,157,46)"/><text x="50.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1060" width="5" height="15" fill="rgb(210,2,40)"/><text x="50.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1076" width="5" height="15" fill="rgb(246,7,25)"/><text x="50.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1092" width="5" height="15" fill="rgb(241,215,19)"/><text x="50.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1108" width="5" height="15" fill="rgb(217,12,16)"/><text x="50.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1124" width="5" height="15" fill="rgb(252,21,21)"/><text x="50.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.45%)</title><rect x="47" y="1140" width="5" height="15" fill="rgb(226,94,3)"/><text x="50.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1156" width="5" height="15" fill="rgb(216,227,43)"/><text x="50.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1172" width="5" height="15" fill="rgb(254,89,44)"/><text x="50.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1188" width="5" height="15" fill="rgb(239,2,44)"/><text x="50.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1204" width="5" height="15" fill="rgb(245,58,30)"/><text x="50.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1220" width="5" height="15" fill="rgb(237,85,13)"/><text x="50.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.45%)</title><rect x="47" y="1236" width="5" height="15" fill="rgb(227,1,26)"/><text x="50.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1252" width="5" height="15" fill="rgb(254,169,3)"/><text x="50.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1268" width="5" height="15" fill="rgb(249,125,13)"/><text x="50.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1284" width="5" height="15" fill="rgb(208,172,21)"/><text x="50.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1300" width="5" height="15" fill="rgb(247,88,48)"/><text x="50.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1316" width="5" height="15" fill="rgb(209,119,32)"/><text x="50.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.45%)</title><rect x="47" y="1332" width="5" height="15" fill="rgb(212,130,30)"/><text x="50.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1348" width="5" height="15" fill="rgb(253,74,54)"/><text x="50.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1364" width="5" height="15" fill="rgb(215,11,53)"/><text x="50.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1380" width="5" height="15" fill="rgb(228,214,34)"/><text x="50.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1396" width="5" height="15" fill="rgb(250,59,34)"/><text x="50.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1412" width="5" height="15" fill="rgb(236,153,2)"/><text x="50.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/queues.py) (1 samples, 0.45%)</title><rect x="47" y="1428" width="5" height="15" fill="rgb(209,43,2)"/><text x="50.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1444" width="5" height="15" fill="rgb(227,190,31)"/><text x="50.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1476" width="6" height="15" fill="rgb(221,142,50)"/><text x="55.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1492" width="6" height="15" fill="rgb(248,42,49)"/><text x="55.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1508" width="6" height="15" fill="rgb(218,159,36)"/><text x="55.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="1524" width="6" height="15" fill="rgb(236,97,0)"/><text x="55.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1540" width="6" height="15" fill="rgb(217,138,12)"/><text x="55.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.45%)</title><rect x="52" y="1556" width="6" height="15" fill="rgb(252,51,15)"/><text x="55.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.45%)</title><rect x="52" y="1572" width="6" height="15" fill="rgb(212,121,31)"/><text x="55.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="52" y="1588" width="6" height="15" fill="rgb(254,155,6)"/><text x="55.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="52" y="1604" width="6" height="15" fill="rgb(238,180,41)"/><text x="55.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="52" y="1620" width="6" height="15" fill="rgb(210,176,44)"/><text x="55.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="52" y="1636" width="6" height="15" fill="rgb(251,21,39)"/><text x="55.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1652" width="6" height="15" fill="rgb(216,148,5)"/><text x="55.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1668" width="6" height="15" fill="rgb(238,210,38)"/><text x="55.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1684" width="6" height="15" fill="rgb(211,36,21)"/><text x="55.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1700" width="6" height="15" fill="rgb(208,70,31)"/><text x="55.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1716" width="6" height="15" fill="rgb(214,26,45)"/><text x="55.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1732" width="6" height="15" fill="rgb(228,48,12)"/><text x="55.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1748" width="6" height="15" fill="rgb(253,135,26)"/><text x="55.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1764" width="6" height="15" fill="rgb(222,17,32)"/><text x="55.00" y="1774.50"></text></g><g><title>visit_Output (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1780" width="6" height="15" fill="rgb(238,13,12)"/><text x="55.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1796" width="6" height="15" fill="rgb(228,184,27)"/><text x="55.00" y="1806.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1812" width="6" height="15" fill="rgb(230,72,5)"/><text x="55.00" y="1822.50"></text></g><g><title>visitor (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1828" width="6" height="15" fill="rgb(229,33,0)"/><text x="55.00" y="1838.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1844" width="6" height="15" fill="rgb(242,76,17)"/><text x="55.00" y="1854.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1860" width="6" height="15" fill="rgb(209,196,0)"/><text x="55.00" y="1870.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1876" width="6" height="15" fill="rgb(249,64,10)"/><text x="55.00" y="1886.50"></text></g><g><title>fold (jinja2/optimizer.py) (1 samples, 0.45%)</title><rect x="52" y="1892" width="6" height="15" fill="rgb(248,24,14)"/><text x="55.00" y="1902.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1908" width="6" height="15" fill="rgb(224,177,46)"/><text x="55.00" y="1918.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1924" width="6" height="15" fill="rgb(215,121,31)"/><text x="55.00" y="1934.50"></text></g><g><title>fold (jinja2/optimizer.py) (1 samples, 0.45%)</title><rect x="52" y="1940" width="6" height="15" fill="rgb(234,174,14)"/><text x="55.00" y="1950.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.45%)</title><rect x="52" y="1956" width="6" height="15" fill="rgb(205,34,0)"/><text x="55.00" y="1966.50"></text></g><g><title>0x7fc8bbf740e9 (?) (1 samples, 0.45%)</title><rect x="58" y="1508" width="5" height="15" fill="rgb(235,62,41)"/><text x="61.00" y="1518.50"></text></g><g><title>0x7fc8bbf5ac3b (?) (1 samples, 0.45%)</title><rect x="58" y="1524" width="5" height="15" fill="rgb(207,172,6)"/><text x="61.00" y="1534.50"></text></g><g><title>0x7fc8bbf81bbc (?) (1 samples, 0.45%)</title><rect x="58" y="1540" width="5" height="15" fill="rgb(205,139,37)"/><text x="61.00" y="1550.50"></text></g><g><title>0x7fc8bbf814f0 (?) (1 samples, 0.45%)</title><rect x="58" y="1556" width="5" height="15" fill="rgb(239,148,20)"/><text x="61.00" y="1566.50"></text></g><g><title>0x7fc8bbf7bbe1 (?) (1 samples, 0.45%)</title><rect x="58" y="1572" width="5" height="15" fill="rgb(206,140,4)"/><text x="61.00" y="1582.50"></text></g><g><title>0x7fc8bbf7b94d (?) (1 samples, 0.45%)</title><rect x="58" y="1588" width="5" height="15" fill="rgb(231,63,28)"/><text x="61.00" y="1598.50"></text></g><g><title>0x7fc8bb9946f5 (?) (1 samples, 0.45%)</title><rect x="58" y="1604" width="5" height="15" fill="rgb(252,50,7)"/><text x="61.00" y="1614.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="58" y="1620" width="5" height="15" fill="rgb(210,183,11)"/><text x="61.00" y="1630.50"></text></g><g><title>0x7fc8cbeba7f7 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="58" y="1636" width="5" height="15" fill="rgb(218,175,31)"/><text x="61.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="63" y="1572" width="5" height="15" fill="rgb(230,214,48)"/><text x="66.00" y="1582.50"></text></g><g><title>0x7fc8cbeba723 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="63" y="1588" width="5" height="15" fill="rgb(209,211,36)"/><text x="66.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="484" width="22" height="15" fill="rgb(250,59,38)"/><text x="55.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="500" width="22" height="15" fill="rgb(248,96,30)"/><text x="55.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="516" width="22" height="15" fill="rgb(213,157,16)"/><text x="55.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="532" width="22" height="15" fill="rgb(236,125,50)"/><text x="55.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="548" width="22" height="15" fill="rgb(207,159,16)"/><text x="55.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="564" width="22" height="15" fill="rgb(254,178,5)"/><text x="55.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.81%)</title><rect x="52" y="580" width="22" height="15" fill="rgb(244,114,48)"/><text x="55.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="596" width="22" height="15" fill="rgb(247,209,39)"/><text x="55.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="612" width="22" height="15" fill="rgb(218,71,10)"/><text x="55.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="628" width="22" height="15" fill="rgb(232,106,18)"/><text x="55.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="644" width="22" height="15" fill="rgb(223,40,21)"/><text x="55.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="660" width="22" height="15" fill="rgb(221,99,23)"/><text x="55.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.81%)</title><rect x="52" y="676" width="22" height="15" fill="rgb(232,24,19)"/><text x="55.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="692" width="22" height="15" fill="rgb(216,191,33)"/><text x="55.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="708" width="22" height="15" fill="rgb(245,69,18)"/><text x="55.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="724" width="22" height="15" fill="rgb(211,199,48)"/><text x="55.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="740" width="22" height="15" fill="rgb(227,145,1)"/><text x="55.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="756" width="22" height="15" fill="rgb(237,13,21)"/><text x="55.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.81%)</title><rect x="52" y="772" width="22" height="15" fill="rgb(221,120,21)"/><text x="55.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="788" width="22" height="15" fill="rgb(216,206,4)"/><text x="55.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="804" width="22" height="15" fill="rgb(241,19,43)"/><text x="55.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="820" width="22" height="15" fill="rgb(215,3,17)"/><text x="55.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="836" width="22" height="15" fill="rgb(212,183,39)"/><text x="55.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="852" width="22" height="15" fill="rgb(241,6,29)"/><text x="55.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.81%)</title><rect x="52" y="868" width="22" height="15" fill="rgb(225,195,12)"/><text x="55.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="884" width="22" height="15" fill="rgb(232,204,47)"/><text x="55.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="900" width="22" height="15" fill="rgb(242,11,24)"/><text x="55.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="916" width="22" height="15" fill="rgb(222,64,39)"/><text x="55.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="932" width="22" height="15" fill="rgb(218,219,12)"/><text x="55.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="948" width="22" height="15" fill="rgb(249,74,0)"/><text x="55.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="964" width="22" height="15" fill="rgb(241,150,4)"/><text x="55.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="980" width="22" height="15" fill="rgb(234,217,43)"/><text x="55.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="996" width="22" height="15" fill="rgb(221,98,46)"/><text x="55.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.81%)</title><rect x="52" y="1012" width="22" height="15" fill="rgb(253,74,22)"/><text x="55.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1028" width="22" height="15" fill="rgb(209,37,41)"/><text x="55.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1044" width="22" height="15" fill="rgb(247,49,47)"/><text x="55.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1060" width="22" height="15" fill="rgb(214,110,3)"/><text x="55.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="1076" width="22" height="15" fill="rgb(211,129,25)"/><text x="55.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1092" width="22" height="15" fill="rgb(214,29,3)"/><text x="55.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.81%)</title><rect x="52" y="1108" width="22" height="15" fill="rgb(238,142,16)"/><text x="55.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1124" width="22" height="15" fill="rgb(229,100,24)"/><text x="55.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1140" width="22" height="15" fill="rgb(234,66,12)"/><text x="55.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1156" width="22" height="15" fill="rgb(226,59,15)"/><text x="55.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1172" width="22" height="15" fill="rgb(237,198,7)"/><text x="55.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1188" width="22" height="15" fill="rgb(244,201,35)"/><text x="55.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="1204" width="22" height="15" fill="rgb(237,64,40)"/><text x="55.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1220" width="22" height="15" fill="rgb(206,155,31)"/><text x="55.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.81%)</title><rect x="52" y="1236" width="22" height="15" fill="rgb(228,201,33)"/><text x="55.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1252" width="22" height="15" fill="rgb(230,183,1)"/><text x="55.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1268" width="22" height="15" fill="rgb(228,154,53)"/><text x="55.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1284" width="22" height="15" fill="rgb(232,35,54)"/><text x="55.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1300" width="22" height="15" fill="rgb(217,139,37)"/><text x="55.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1316" width="22" height="15" fill="rgb(217,146,0)"/><text x="55.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="1332" width="22" height="15" fill="rgb(232,158,6)"/><text x="55.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1348" width="22" height="15" fill="rgb(213,108,15)"/><text x="55.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.81%)</title><rect x="52" y="1364" width="22" height="15" fill="rgb(248,31,10)"/><text x="55.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1380" width="22" height="15" fill="rgb(234,70,9)"/><text x="55.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1396" width="22" height="15" fill="rgb(238,19,22)"/><text x="55.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1412" width="22" height="15" fill="rgb(213,78,18)"/><text x="55.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="52" y="1428" width="22" height="15" fill="rgb(243,115,9)"/><text x="55.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="52" y="1444" width="22" height="15" fill="rgb(252,38,25)"/><text x="55.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.81%)</title><rect x="52" y="1460" width="22" height="15" fill="rgb(210,147,45)"/><text x="55.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.36%)</title><rect x="58" y="1476" width="16" height="15" fill="rgb(225,49,52)"/><text x="61.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.36%)</title><rect x="58" y="1492" width="16" height="15" fill="rgb(238,207,9)"/><text x="61.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.90%)</title><rect x="63" y="1508" width="11" height="15" fill="rgb(239,141,7)"/><text x="66.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.90%)</title><rect x="63" y="1524" width="11" height="15" fill="rgb(228,120,50)"/><text x="66.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.90%)</title><rect x="63" y="1540" width="11" height="15" fill="rgb(208,191,50)"/><text x="66.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.90%)</title><rect x="63" y="1556" width="11" height="15" fill="rgb(215,61,51)"/><text x="66.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.45%)</title><rect x="68" y="1572" width="6" height="15" fill="rgb(220,131,38)"/><text x="71.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.45%)</title><rect x="68" y="1588" width="6" height="15" fill="rgb(233,175,6)"/><text x="71.00" y="1598.50"></text></g><g><title>SeriesGroupBy (pandas/core/groupby/generic.py) (1 samples, 0.45%)</title><rect x="74" y="932" width="5" height="15" fill="rgb(240,120,3)"/><text x="77.00" y="942.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.45%)</title><rect x="74" y="948" width="5" height="15" fill="rgb(218,167,8)"/><text x="77.00" y="958.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.45%)</title><rect x="74" y="964" width="5" height="15" fill="rgb(234,124,28)"/><text x="77.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.45%)</title><rect x="74" y="980" width="5" height="15" fill="rgb(232,88,0)"/><text x="77.00" y="990.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.45%)</title><rect x="74" y="996" width="5" height="15" fill="rgb(225,34,49)"/><text x="77.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.90%)</title><rect x="74" y="724" width="10" height="15" fill="rgb(217,174,51)"/><text x="77.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="740" width="10" height="15" fill="rgb(213,200,30)"/><text x="77.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="756" width="10" height="15" fill="rgb(217,187,53)"/><text x="77.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="772" width="10" height="15" fill="rgb(221,59,1)"/><text x="77.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="74" y="788" width="10" height="15" fill="rgb(215,59,38)"/><text x="77.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="804" width="10" height="15" fill="rgb(220,161,14)"/><text x="77.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.90%)</title><rect x="74" y="820" width="10" height="15" fill="rgb(208,155,32)"/><text x="77.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="836" width="10" height="15" fill="rgb(234,14,13)"/><text x="77.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="852" width="10" height="15" fill="rgb(216,21,33)"/><text x="77.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="868" width="10" height="15" fill="rgb(247,173,0)"/><text x="77.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="74" y="884" width="10" height="15" fill="rgb(215,6,50)"/><text x="77.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="900" width="10" height="15" fill="rgb(253,80,18)"/><text x="77.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.90%)</title><rect x="74" y="916" width="10" height="15" fill="rgb(206,156,14)"/><text x="77.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="932" width="5" height="15" fill="rgb(209,97,35)"/><text x="82.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="948" width="5" height="15" fill="rgb(222,210,5)"/><text x="82.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="964" width="5" height="15" fill="rgb(221,50,48)"/><text x="82.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="980" width="5" height="15" fill="rgb(207,185,1)"/><text x="82.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="996" width="5" height="15" fill="rgb(223,176,29)"/><text x="82.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.45%)</title><rect x="79" y="1012" width="5" height="15" fill="rgb(252,89,14)"/><text x="82.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1028" width="5" height="15" fill="rgb(247,92,12)"/><text x="82.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1044" width="5" height="15" fill="rgb(220,100,0)"/><text x="82.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1060" width="5" height="15" fill="rgb(229,93,37)"/><text x="82.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="1076" width="5" height="15" fill="rgb(253,207,48)"/><text x="82.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1092" width="5" height="15" fill="rgb(248,89,52)"/><text x="82.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.45%)</title><rect x="79" y="1108" width="5" height="15" fill="rgb(228,65,41)"/><text x="82.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1124" width="5" height="15" fill="rgb(249,123,16)"/><text x="82.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1140" width="5" height="15" fill="rgb(210,225,30)"/><text x="82.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1156" width="5" height="15" fill="rgb(215,138,19)"/><text x="82.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="1172" width="5" height="15" fill="rgb(247,94,27)"/><text x="82.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1188" width="5" height="15" fill="rgb(240,146,21)"/><text x="82.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.45%)</title><rect x="79" y="1204" width="5" height="15" fill="rgb(251,183,1)"/><text x="82.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1220" width="5" height="15" fill="rgb(224,97,28)"/><text x="82.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1236" width="5" height="15" fill="rgb(232,86,53)"/><text x="82.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1252" width="5" height="15" fill="rgb(236,155,51)"/><text x="82.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="1268" width="5" height="15" fill="rgb(241,80,30)"/><text x="82.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1284" width="5" height="15" fill="rgb(232,33,12)"/><text x="82.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.45%)</title><rect x="79" y="1300" width="5" height="15" fill="rgb(228,208,0)"/><text x="82.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1316" width="5" height="15" fill="rgb(210,194,24)"/><text x="82.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1332" width="5" height="15" fill="rgb(238,71,1)"/><text x="82.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1348" width="5" height="15" fill="rgb(222,88,36)"/><text x="82.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="1364" width="5" height="15" fill="rgb(218,146,6)"/><text x="82.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1380" width="5" height="15" fill="rgb(244,225,15)"/><text x="82.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (1 samples, 0.45%)</title><rect x="79" y="1396" width="5" height="15" fill="rgb(217,69,27)"/><text x="82.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1412" width="5" height="15" fill="rgb(228,161,17)"/><text x="82.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1428" width="5" height="15" fill="rgb(216,113,48)"/><text x="82.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1444" width="5" height="15" fill="rgb(230,162,36)"/><text x="82.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="1460" width="5" height="15" fill="rgb(226,167,3)"/><text x="82.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="1476" width="5" height="15" fill="rgb(247,123,20)"/><text x="82.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/numeric.py) (1 samples, 0.45%)</title><rect x="79" y="1492" width="5" height="15" fill="rgb(240,91,15)"/><text x="82.00" y="1502.50"></text></g><g><title>UInt64Index (pandas/core/indexes/numeric.py) (1 samples, 0.45%)</title><rect x="79" y="1508" width="5" height="15" fill="rgb(239,79,54)"/><text x="82.00" y="1518.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.45%)</title><rect x="79" y="1524" width="5" height="15" fill="rgb(218,106,12)"/><text x="82.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.33%)</title><rect x="15" y="68" width="75" height="15" fill="rgb(229,67,50)"/><text x="18.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.33%)</title><rect x="15" y="84" width="75" height="15" fill="rgb(217,176,19)"/><text x="18.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.33%)</title><rect x="15" y="100" width="75" height="15" fill="rgb(243,104,9)"/><text x="18.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 6.33%)</title><rect x="15" y="116" width="75" height="15" fill="rgb(229,0,16)"/><text x="18.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.33%)</title><rect x="15" y="132" width="75" height="15" fill="rgb(219,89,0)"/><text x="18.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py) (14 samples, 6.33%)</title><rect x="15" y="148" width="75" height="15" fill="rgb(254,187,16)"/><text x="18.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.33%)</title><rect x="15" y="164" width="75" height="15" fill="rgb(253,7,33)"/><text x="18.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.33%)</title><rect x="15" y="180" width="75" height="15" fill="rgb(205,14,26)"/><text x="18.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="196" width="38" height="15" fill="rgb(212,84,40)"/><text x="55.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.17%)</title><rect x="52" y="212" width="38" height="15" fill="rgb(246,204,43)"/><text x="55.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="228" width="38" height="15" fill="rgb(220,103,45)"/><text x="55.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 3.17%)</title><rect x="52" y="244" width="38" height="15" fill="rgb(240,93,12)"/><text x="55.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="260" width="38" height="15" fill="rgb(217,89,46)"/><text x="55.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="276" width="38" height="15" fill="rgb(211,223,50)"/><text x="55.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="292" width="38" height="15" fill="rgb(238,4,20)"/><text x="55.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.17%)</title><rect x="52" y="308" width="38" height="15" fill="rgb(211,226,35)"/><text x="55.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="324" width="38" height="15" fill="rgb(233,187,10)"/><text x="55.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 3.17%)</title><rect x="52" y="340" width="38" height="15" fill="rgb(206,21,44)"/><text x="55.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="356" width="38" height="15" fill="rgb(215,20,20)"/><text x="55.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="372" width="38" height="15" fill="rgb(211,158,41)"/><text x="55.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="388" width="38" height="15" fill="rgb(222,72,48)"/><text x="55.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.17%)</title><rect x="52" y="404" width="38" height="15" fill="rgb(246,103,5)"/><text x="55.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="420" width="38" height="15" fill="rgb(222,46,6)"/><text x="55.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 3.17%)</title><rect x="52" y="436" width="38" height="15" fill="rgb(243,47,20)"/><text x="55.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="452" width="38" height="15" fill="rgb(223,225,36)"/><text x="55.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.17%)</title><rect x="52" y="468" width="38" height="15" fill="rgb(219,41,47)"/><text x="55.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="484" width="16" height="15" fill="rgb(231,197,23)"/><text x="77.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.36%)</title><rect x="74" y="500" width="16" height="15" fill="rgb(214,87,40)"/><text x="77.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="516" width="16" height="15" fill="rgb(215,26,16)"/><text x="77.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.36%)</title><rect x="74" y="532" width="16" height="15" fill="rgb(251,143,14)"/><text x="77.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="548" width="16" height="15" fill="rgb(211,210,25)"/><text x="77.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="564" width="16" height="15" fill="rgb(251,196,41)"/><text x="77.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="580" width="16" height="15" fill="rgb(214,137,37)"/><text x="77.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.36%)</title><rect x="74" y="596" width="16" height="15" fill="rgb(234,213,33)"/><text x="77.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="612" width="16" height="15" fill="rgb(234,52,16)"/><text x="77.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.36%)</title><rect x="74" y="628" width="16" height="15" fill="rgb(209,136,52)"/><text x="77.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="644" width="16" height="15" fill="rgb(236,206,36)"/><text x="77.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="660" width="16" height="15" fill="rgb(209,161,54)"/><text x="77.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="676" width="16" height="15" fill="rgb(244,143,19)"/><text x="77.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.36%)</title><rect x="74" y="692" width="16" height="15" fill="rgb(242,140,14)"/><text x="77.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="74" y="708" width="16" height="15" fill="rgb(232,174,46)"/><text x="77.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.45%)</title><rect x="84" y="724" width="6" height="15" fill="rgb(239,91,21)"/><text x="87.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="740" width="6" height="15" fill="rgb(218,190,50)"/><text x="87.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="756" width="6" height="15" fill="rgb(235,4,27)"/><text x="87.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="772" width="6" height="15" fill="rgb(208,14,16)"/><text x="87.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="788" width="6" height="15" fill="rgb(248,43,13)"/><text x="87.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="804" width="6" height="15" fill="rgb(246,229,22)"/><text x="87.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (1 samples, 0.45%)</title><rect x="84" y="820" width="6" height="15" fill="rgb(247,164,48)"/><text x="87.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="836" width="6" height="15" fill="rgb(220,188,5)"/><text x="87.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="852" width="6" height="15" fill="rgb(254,142,34)"/><text x="87.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="868" width="6" height="15" fill="rgb(250,105,37)"/><text x="87.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="884" width="6" height="15" fill="rgb(234,206,44)"/><text x="87.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="900" width="6" height="15" fill="rgb(209,177,49)"/><text x="87.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py) (1 samples, 0.45%)</title><rect x="84" y="916" width="6" height="15" fill="rgb(222,15,48)"/><text x="87.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="932" width="6" height="15" fill="rgb(244,18,7)"/><text x="87.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="948" width="6" height="15" fill="rgb(234,86,29)"/><text x="87.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="964" width="6" height="15" fill="rgb(214,13,2)"/><text x="87.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="980" width="6" height="15" fill="rgb(227,60,8)"/><text x="87.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="996" width="6" height="15" fill="rgb(246,98,26)"/><text x="87.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py) (1 samples, 0.45%)</title><rect x="84" y="1012" width="6" height="15" fill="rgb(228,12,44)"/><text x="87.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="1028" width="6" height="15" fill="rgb(212,71,22)"/><text x="87.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="1044" width="6" height="15" fill="rgb(220,66,48)"/><text x="87.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="1060" width="6" height="15" fill="rgb(230,115,3)"/><text x="87.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="1076" width="6" height="15" fill="rgb(209,73,1)"/><text x="87.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="1092" width="6" height="15" fill="rgb(216,14,32)"/><text x="87.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="1108" width="6" height="15" fill="rgb(241,108,10)"/><text x="87.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1124" width="6" height="15" fill="rgb(223,220,42)"/><text x="87.00" y="1134.50"></text></g><g><title>0x7fc8cc140995 (libdl-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1140" width="6" height="15" fill="rgb(211,168,13)"/><text x="87.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1156" width="6" height="15" fill="rgb(232,18,53)"/><text x="87.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1172" width="6" height="15" fill="rgb(232,46,49)"/><text x="87.00" y="1182.50"></text></g><g><title>0x7fc8cc140258 (libdl-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1188" width="6" height="15" fill="rgb(245,122,40)"/><text x="87.00" y="1198.50"></text></g><g><title>0x7fc8cc18dd7a (ld-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1204" width="6" height="15" fill="rgb(243,5,49)"/><text x="87.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1220" width="6" height="15" fill="rgb(224,86,54)"/><text x="87.00" y="1230.50"></text></g><g><title>0x7fc8cc18e345 (ld-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1236" width="6" height="15" fill="rgb(236,21,38)"/><text x="87.00" y="1246.50"></text></g><g><title>0x7fc8cc186fec (ld-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1252" width="6" height="15" fill="rgb(206,206,45)"/><text x="87.00" y="1262.50"></text></g><g><title>0x7fc8cc18556b (ld-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1268" width="6" height="15" fill="rgb(219,37,51)"/><text x="87.00" y="1278.50"></text></g><g><title>0x7fc8cc184c10 (ld-2.29.so) (1 samples, 0.45%)</title><rect x="84" y="1284" width="6" height="15" fill="rgb(232,65,13)"/><text x="87.00" y="1294.50"></text></g><g><title>profile0_skl (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (1 samples, 0.45%)</title><rect x="90" y="68" width="5" height="15" fill="rgb(223,82,10)"/><text x="93.00" y="78.50"></text></g><g><title>setup_profile0 (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (1 samples, 0.45%)</title><rect x="90" y="84" width="5" height="15" fill="rgb(228,3,3)"/><text x="93.00" y="94.50"></text></g><g><title>profile0 (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (1 samples, 0.45%)</title><rect x="90" y="100" width="5" height="15" fill="rgb(247,40,30)"/><text x="93.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="90" y="116" width="5" height="15" fill="rgb(213,29,0)"/><text x="93.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="90" y="132" width="5" height="15" fill="rgb(227,48,3)"/><text x="93.00" y="142.50"></text></g><g><title>predict (sklearn/linear_model/_base.py) (1 samples, 0.45%)</title><rect x="90" y="148" width="5" height="15" fill="rgb(251,9,18)"/><text x="93.00" y="158.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (1 samples, 0.45%)</title><rect x="90" y="164" width="5" height="15" fill="rgb(241,112,14)"/><text x="93.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="90" y="180" width="5" height="15" fill="rgb(213,162,11)"/><text x="93.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="90" y="196" width="5" height="15" fill="rgb(219,23,26)"/><text x="93.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.45%)</title><rect x="90" y="212" width="5" height="15" fill="rgb(254,149,33)"/><text x="93.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="100" y="116" width="6" height="15" fill="rgb(223,13,17)"/><text x="103.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="100" y="132" width="6" height="15" fill="rgb(206,17,32)"/><text x="103.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="100" y="148" width="6" height="15" fill="rgb(219,198,48)"/><text x="103.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.90%)</title><rect x="196" y="212" width="11" height="15" fill="rgb(206,216,3)"/><text x="199.00" y="222.50"></text></g><g><title>0x7fc8cbeb8a01 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="218" y="260" width="5" height="15" fill="rgb(252,146,44)"/><text x="221.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="223" y="292" width="5" height="15" fill="rgb(230,163,11)"/><text x="226.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="223" y="308" width="5" height="15" fill="rgb(245,136,30)"/><text x="226.00" y="318.50"></text></g><g><title>0x7fc889eaf930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="228" y="308" width="6" height="15" fill="rgb(246,212,30)"/><text x="231.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="228" y="292" width="11" height="15" fill="rgb(237,12,52)"/><text x="231.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="234" y="308" width="5" height="15" fill="rgb(217,144,41)"/><text x="237.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="234" y="324" width="5" height="15" fill="rgb(217,50,36)"/><text x="237.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="239" y="292" width="5" height="15" fill="rgb(218,195,7)"/><text x="242.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="239" y="308" width="5" height="15" fill="rgb(225,48,1)"/><text x="242.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="239" y="324" width="5" height="15" fill="rgb(246,225,45)"/><text x="242.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="239" y="340" width="5" height="15" fill="rgb(206,23,49)"/><text x="242.00" y="350.50"></text></g><g><title>0x7fc8cbeb8902 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="244" y="356" width="6" height="15" fill="rgb(206,64,0)"/><text x="247.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="255" y="388" width="5" height="15" fill="rgb(205,20,26)"/><text x="258.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.36%)</title><rect x="250" y="356" width="16" height="15" fill="rgb(213,190,49)"/><text x="253.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.36%)</title><rect x="250" y="372" width="16" height="15" fill="rgb(250,64,49)"/><text x="253.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="260" y="388" width="6" height="15" fill="rgb(242,132,10)"/><text x="263.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.26%)</title><rect x="244" y="340" width="27" height="15" fill="rgb(232,134,29)"/><text x="247.00" y="350.50">o..</text></g><g><title>onnxruntime::SessionState::GetEnableMemoryPattern (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="266" y="356" width="5" height="15" fill="rgb(213,215,5)"/><text x="269.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="271" y="340" width="5" height="15" fill="rgb(210,95,25)"/><text x="274.00" y="350.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.17%)</title><rect x="244" y="308" width="38" height="15" fill="rgb(248,119,17)"/><text x="247.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.17%)</title><rect x="244" y="324" width="38" height="15" fill="rgb(244,38,25)"/><text x="247.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="340" width="6" height="15" fill="rgb(227,11,44)"/><text x="279.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="356" width="6" height="15" fill="rgb(209,160,35)"/><text x="279.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="372" width="6" height="15" fill="rgb(237,171,6)"/><text x="279.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="388" width="6" height="15" fill="rgb(218,174,44)"/><text x="279.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="404" width="6" height="15" fill="rgb(253,156,13)"/><text x="279.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="420" width="6" height="15" fill="rgb(205,131,39)"/><text x="279.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="436" width="6" height="15" fill="rgb(250,182,54)"/><text x="279.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="452" width="6" height="15" fill="rgb(249,131,52)"/><text x="279.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="276" y="468" width="6" height="15" fill="rgb(227,91,16)"/><text x="279.00" y="478.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 5.43%)</title><rect x="223" y="276" width="64" height="15" fill="rgb(251,57,36)"/><text x="226.00" y="286.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.62%)</title><rect x="244" y="292" width="43" height="15" fill="rgb(233,34,8)"/><text x="247.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="282" y="308" width="5" height="15" fill="rgb(235,14,50)"/><text x="285.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.88%)</title><rect x="223" y="260" width="69" height="15" fill="rgb(230,68,9)"/><text x="226.00" y="270.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="287" y="276" width="5" height="15" fill="rgb(231,98,26)"/><text x="290.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="292" y="260" width="6" height="15" fill="rgb(231,202,36)"/><text x="295.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="292" y="276" width="6" height="15" fill="rgb(222,165,4)"/><text x="295.00" y="286.50"></text></g><g><title>0x7fc889eaf930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="292" y="292" width="6" height="15" fill="rgb(248,56,27)"/><text x="295.00" y="302.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="298" y="260" width="5" height="15" fill="rgb(230,229,22)"/><text x="301.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="303" y="260" width="6" height="15" fill="rgb(212,214,40)"/><text x="306.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 8.60%)</title><rect x="212" y="244" width="102" height="15" fill="rgb(230,202,2)"/><text x="215.00" y="254.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="260" width="5" height="15" fill="rgb(221,41,8)"/><text x="312.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="276" width="5" height="15" fill="rgb(238,160,42)"/><text x="312.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="292" width="5" height="15" fill="rgb(210,113,44)"/><text x="312.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="308" width="5" height="15" fill="rgb(245,158,53)"/><text x="312.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="324" width="5" height="15" fill="rgb(214,166,35)"/><text x="312.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="340" width="5" height="15" fill="rgb(220,142,35)"/><text x="312.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="356" width="5" height="15" fill="rgb(233,136,19)"/><text x="312.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="309" y="372" width="5" height="15" fill="rgb(254,136,4)"/><text x="312.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="314" y="244" width="5" height="15" fill="rgb(230,0,16)"/><text x="317.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="319" y="244" width="6" height="15" fill="rgb(249,56,27)"/><text x="322.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="319" y="260" width="6" height="15" fill="rgb(228,62,47)"/><text x="322.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="325" y="244" width="5" height="15" fill="rgb(217,131,8)"/><text x="328.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 17.19%)</title><rect x="132" y="132" width="203" height="15" fill="rgb(205,53,40)"/><text x="135.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (37 samples, 16.74%)</title><rect x="138" y="148" width="197" height="15" fill="rgb(223,47,0)"/><text x="141.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (36 samples, 16.29%)</title><rect x="143" y="164" width="192" height="15" fill="rgb(223,159,5)"/><text x="146.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (32 samples, 14.48%)</title><rect x="164" y="180" width="171" height="15" fill="rgb(223,89,6)"/><text x="167.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py) (30 samples, 13.57%)</title><rect x="175" y="196" width="160" height="15" fill="rgb(244,108,8)"/><text x="178.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 10.86%)</title><rect x="207" y="212" width="128" height="15" fill="rgb(234,92,1)"/><text x="210.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 10.86%)</title><rect x="207" y="228" width="128" height="15" fill="rgb(221,109,33)"/><text x="210.00" y="238.50">void pybind11::c..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="330" y="244" width="5" height="15" fill="rgb(225,66,23)"/><text x="333.00" y="254.50"></text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (46 samples, 20.81%)</title><rect x="95" y="100" width="246" height="15" fill="rgb(237,117,52)"/><text x="98.00" y="110.50">profile (bench_LinearRegression_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (44 samples, 19.91%)</title><rect x="106" y="116" width="235" height="15" fill="rgb(248,145,37)"/><text x="109.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.45%)</title><rect x="335" y="132" width="6" height="15" fill="rgb(248,7,1)"/><text x="338.00" y="142.50"></text></g><g><title>0x7fc8cbf96151 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="335" y="148" width="6" height="15" fill="rgb(237,136,53)"/><text x="338.00" y="158.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (47 samples, 21.27%)</title><rect x="95" y="68" width="251" height="15" fill="rgb(236,26,1)"/><text x="98.00" y="78.50">profile_ort (bench_LinearRegressi..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (47 samples, 21.27%)</title><rect x="95" y="84" width="251" height="15" fill="rgb(227,181,18)"/><text x="98.00" y="94.50">setup_profile (bench_LinearRegres..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="341" y="100" width="5" height="15" fill="rgb(212,193,12)"/><text x="344.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="341" y="116" width="5" height="15" fill="rgb(247,36,28)"/><text x="344.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="341" y="132" width="5" height="15" fill="rgb(210,0,7)"/><text x="344.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="341" y="148" width="5" height="15" fill="rgb(216,48,4)"/><text x="344.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="341" y="164" width="5" height="15" fill="rgb(215,169,23)"/><text x="344.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="180" width="5" height="15" fill="rgb(251,108,47)"/><text x="344.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="196" width="5" height="15" fill="rgb(229,124,40)"/><text x="344.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="212" width="5" height="15" fill="rgb(243,40,54)"/><text x="344.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="341" y="228" width="5" height="15" fill="rgb(253,107,26)"/><text x="344.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="244" width="5" height="15" fill="rgb(241,19,52)"/><text x="344.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.45%)</title><rect x="341" y="260" width="5" height="15" fill="rgb(228,205,42)"/><text x="344.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="276" width="5" height="15" fill="rgb(217,111,29)"/><text x="344.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="292" width="5" height="15" fill="rgb(243,153,4)"/><text x="344.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="308" width="5" height="15" fill="rgb(250,174,44)"/><text x="344.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="341" y="324" width="5" height="15" fill="rgb(223,149,43)"/><text x="344.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="340" width="5" height="15" fill="rgb(240,26,11)"/><text x="344.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.45%)</title><rect x="341" y="356" width="5" height="15" fill="rgb(219,155,43)"/><text x="344.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="372" width="5" height="15" fill="rgb(220,61,50)"/><text x="344.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="388" width="5" height="15" fill="rgb(232,164,39)"/><text x="344.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="404" width="5" height="15" fill="rgb(225,43,5)"/><text x="344.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="341" y="420" width="5" height="15" fill="rgb(207,172,34)"/><text x="344.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="436" width="5" height="15" fill="rgb(237,182,47)"/><text x="344.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.45%)</title><rect x="341" y="452" width="5" height="15" fill="rgb(221,134,33)"/><text x="344.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="468" width="5" height="15" fill="rgb(224,200,26)"/><text x="344.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="484" width="5" height="15" fill="rgb(211,142,28)"/><text x="344.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="500" width="5" height="15" fill="rgb(205,43,51)"/><text x="344.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="516" width="5" height="15" fill="rgb(212,38,6)"/><text x="344.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="341" y="532" width="5" height="15" fill="rgb(213,216,7)"/><text x="344.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="341" y="548" width="5" height="15" fill="rgb(225,146,25)"/><text x="344.00" y="558.50"></text></g><g><title>0x7fc889ef0af0 (?) (1 samples, 0.45%)</title><rect x="341" y="564" width="5" height="15" fill="rgb(231,203,49)"/><text x="344.00" y="574.50"></text></g><g><title>0x7fc889f031d2 (?) (1 samples, 0.45%)</title><rect x="341" y="580" width="5" height="15" fill="rgb(246,183,43)"/><text x="344.00" y="590.50"></text></g><g><title>0x7fc889f027b8 (?) (1 samples, 0.45%)</title><rect x="341" y="596" width="5" height="15" fill="rgb(251,100,47)"/><text x="344.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="341" y="612" width="5" height="15" fill="rgb(228,222,45)"/><text x="344.00" y="622.50"></text></g><g><title>0x7fc889f00926 (?) (1 samples, 0.45%)</title><rect x="341" y="628" width="5" height="15" fill="rgb(229,213,46)"/><text x="344.00" y="638.50"></text></g><g><title>0x7fc889efea67 (?) (1 samples, 0.45%)</title><rect x="341" y="644" width="5" height="15" fill="rgb(215,17,11)"/><text x="344.00" y="654.50"></text></g><g><title>0x7fc88a440345 (?) (1 samples, 0.45%)</title><rect x="341" y="660" width="5" height="15" fill="rgb(228,96,50)"/><text x="344.00" y="670.50"></text></g><g><title>0x7fc88a4a67b0 (?) (1 samples, 0.45%)</title><rect x="341" y="676" width="5" height="15" fill="rgb(250,70,19)"/><text x="344.00" y="686.50"></text></g><g><title>0x7fc88a435017 (?) (1 samples, 0.45%)</title><rect x="341" y="692" width="5" height="15" fill="rgb(247,122,42)"/><text x="344.00" y="702.50"></text></g><g><title>0x7fc88a434c96 (?) (1 samples, 0.45%)</title><rect x="341" y="708" width="5" height="15" fill="rgb(221,12,25)"/><text x="344.00" y="718.50"></text></g><g><title>0x7fc88a4351db (?) (1 samples, 0.45%)</title><rect x="341" y="724" width="5" height="15" fill="rgb(243,167,20)"/><text x="344.00" y="734.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="346" y="116" width="5" height="15" fill="rgb(228,63,44)"/><text x="349.00" y="126.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.45%)</title><rect x="469" y="196" width="5" height="15" fill="rgb(239,189,51)"/><text x="472.00" y="206.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="511" y="340" width="6" height="15" fill="rgb(227,44,37)"/><text x="514.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (6 samples, 2.71%)</title><rect x="490" y="244" width="32" height="15" fill="rgb(216,216,17)"/><text x="493.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (3 samples, 1.36%)</title><rect x="506" y="260" width="16" height="15" fill="rgb(244,209,0)"/><text x="509.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.36%)</title><rect x="506" y="276" width="16" height="15" fill="rgb(247,108,9)"/><text x="509.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 1.36%)</title><rect x="506" y="292" width="16" height="15" fill="rgb(252,202,49)"/><text x="509.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.90%)</title><rect x="511" y="308" width="11" height="15" fill="rgb(229,66,11)"/><text x="514.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.90%)</title><rect x="511" y="324" width="11" height="15" fill="rgb(235,65,13)"/><text x="514.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.45%)</title><rect x="517" y="340" width="5" height="15" fill="rgb(214,133,48)"/><text x="520.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.45%)</title><rect x="517" y="356" width="5" height="15" fill="rgb(253,202,3)"/><text x="520.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="517" y="372" width="5" height="15" fill="rgb(241,91,30)"/><text x="520.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="517" y="388" width="5" height="15" fill="rgb(246,135,48)"/><text x="520.00" y="398.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.45%)</title><rect x="522" y="276" width="5" height="15" fill="rgb(225,55,53)"/><text x="525.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.45%)</title><rect x="527" y="324" width="6" height="15" fill="rgb(213,227,34)"/><text x="530.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.36%)</title><rect x="527" y="308" width="16" height="15" fill="rgb(240,124,54)"/><text x="530.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.90%)</title><rect x="533" y="324" width="10" height="15" fill="rgb(226,140,10)"/><text x="536.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.81%)</title><rect x="527" y="276" width="22" height="15" fill="rgb(233,152,3)"/><text x="530.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.81%)</title><rect x="527" y="292" width="22" height="15" fill="rgb(217,103,1)"/><text x="530.00" y="302.50">i..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.45%)</title><rect x="543" y="308" width="6" height="15" fill="rgb(208,194,46)"/><text x="546.00" y="318.50"></text></g><g><title>0x7fc8cbeb8998 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="543" y="324" width="6" height="15" fill="rgb(223,182,14)"/><text x="546.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.71%)</title><rect x="522" y="260" width="32" height="15" fill="rgb(240,75,40)"/><text x="525.00" y="270.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.45%)</title><rect x="549" y="276" width="5" height="15" fill="rgb(231,133,38)"/><text x="552.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (37 samples, 16.74%)</title><rect x="362" y="132" width="197" height="15" fill="rgb(230,202,48)"/><text x="365.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (36 samples, 16.29%)</title><rect x="367" y="148" width="192" height="15" fill="rgb(252,66,48)"/><text x="370.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (34 samples, 15.38%)</title><rect x="378" y="164" width="181" height="15" fill="rgb(254,217,10)"/><text x="381.00" y="174.50">_run_sequence_runtime (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (26 samples, 11.76%)</title><rect x="421" y="180" width="138" height="15" fill="rgb(215,72,51)"/><text x="424.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (16 samples, 7.24%)</title><rect x="474" y="196" width="85" height="15" fill="rgb(243,65,42)"/><text x="477.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (15 samples, 6.79%)</title><rect x="479" y="212" width="80" height="15" fill="rgb(217,2,22)"/><text x="482.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (15 samples, 6.79%)</title><rect x="479" y="228" width="80" height="15" fill="rgb(227,161,12)"/><text x="482.00" y="238.50">_run (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 3.17%)</title><rect x="522" y="244" width="37" height="15" fill="rgb(230,130,9)"/><text x="525.00" y="254.50">ufu..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.45%)</title><rect x="554" y="260" width="5" height="15" fill="rgb(231,219,20)"/><text x="557.00" y="270.50"></text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (42 samples, 19.00%)</title><rect x="346" y="100" width="224" height="15" fill="rgb(239,20,12)"/><text x="349.00" y="110.50">profile (bench_LinearRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (41 samples, 18.55%)</title><rect x="351" y="116" width="219" height="15" fill="rgb(231,188,16)"/><text x="354.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_eq (python3.7) (2 samples, 0.90%)</title><rect x="559" y="132" width="11" height="15" fill="rgb(229,95,37)"/><text x="562.00" y="142.50"></text></g><g><title>0x7fc8cbf96151 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="565" y="148" width="5" height="15" fill="rgb(246,189,43)"/><text x="568.00" y="158.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (43 samples, 19.46%)</title><rect x="346" y="68" width="229" height="15" fill="rgb(250,185,11)"/><text x="349.00" y="78.50">profile_pyrt (bench_LinearRegr..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (43 samples, 19.46%)</title><rect x="346" y="84" width="229" height="15" fill="rgb(219,89,43)"/><text x="349.00" y="94.50">setup_profile (bench_LinearReg..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="570" y="100" width="5" height="15" fill="rgb(227,135,34)"/><text x="573.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="570" y="116" width="5" height="15" fill="rgb(209,124,9)"/><text x="573.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="570" y="132" width="5" height="15" fill="rgb(205,207,34)"/><text x="573.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="570" y="148" width="5" height="15" fill="rgb(236,58,28)"/><text x="573.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="570" y="164" width="5" height="15" fill="rgb(210,111,41)"/><text x="573.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.45%)</title><rect x="570" y="180" width="5" height="15" fill="rgb(207,8,23)"/><text x="573.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.45%)</title><rect x="570" y="196" width="5" height="15" fill="rgb(235,123,25)"/><text x="573.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="212" width="5" height="15" fill="rgb(214,156,11)"/><text x="573.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="228" width="5" height="15" fill="rgb(234,193,48)"/><text x="573.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="244" width="5" height="15" fill="rgb(227,109,48)"/><text x="573.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="570" y="260" width="5" height="15" fill="rgb(247,94,42)"/><text x="573.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="276" width="5" height="15" fill="rgb(228,121,34)"/><text x="573.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.45%)</title><rect x="570" y="292" width="5" height="15" fill="rgb(253,211,49)"/><text x="573.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="308" width="5" height="15" fill="rgb(235,23,3)"/><text x="573.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="324" width="5" height="15" fill="rgb(215,229,24)"/><text x="573.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="340" width="5" height="15" fill="rgb(244,55,46)"/><text x="573.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="570" y="356" width="5" height="15" fill="rgb(234,147,33)"/><text x="573.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="570" y="372" width="5" height="15" fill="rgb(207,118,34)"/><text x="573.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.45%)</title><rect x="570" y="388" width="5" height="15" fill="rgb(217,223,7)"/><text x="573.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.45%)</title><rect x="570" y="404" width="5" height="15" fill="rgb(212,127,23)"/><text x="573.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.45%)</title><rect x="570" y="420" width="5" height="15" fill="rgb(233,29,41)"/><text x="573.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="570" y="436" width="5" height="15" fill="rgb(253,70,6)"/><text x="573.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.45%)</title><rect x="570" y="452" width="5" height="15" fill="rgb(206,225,44)"/><text x="573.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.45%)</title><rect x="570" y="468" width="5" height="15" fill="rgb(210,199,9)"/><text x="573.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="570" y="484" width="5" height="15" fill="rgb(220,73,29)"/><text x="573.00" y="494.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.90%)</title><rect x="624" y="180" width="10" height="15" fill="rgb(250,145,44)"/><text x="627.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.90%)</title><rect x="624" y="196" width="10" height="15" fill="rgb(251,87,49)"/><text x="627.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.90%)</title><rect x="624" y="212" width="10" height="15" fill="rgb(210,123,33)"/><text x="627.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="629" y="228" width="5" height="15" fill="rgb(207,129,26)"/><text x="632.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.45%)</title><rect x="634" y="212" width="6" height="15" fill="rgb(210,189,11)"/><text x="637.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.45%)</title><rect x="634" y="228" width="6" height="15" fill="rgb(213,62,43)"/><text x="637.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.45%)</title><rect x="634" y="244" width="6" height="15" fill="rgb(230,92,13)"/><text x="637.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.45%)</title><rect x="634" y="260" width="6" height="15" fill="rgb(239,35,17)"/><text x="637.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.45%)</title><rect x="634" y="276" width="6" height="15" fill="rgb(246,78,16)"/><text x="637.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.45%)</title><rect x="645" y="228" width="5" height="15" fill="rgb(253,55,21)"/><text x="648.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.45%)</title><rect x="645" y="244" width="5" height="15" fill="rgb(250,97,25)"/><text x="648.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.45%)</title><rect x="645" y="260" width="5" height="15" fill="rgb(230,160,37)"/><text x="648.00" y="270.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="645" y="276" width="5" height="15" fill="rgb(222,71,52)"/><text x="648.00" y="286.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="645" y="292" width="5" height="15" fill="rgb(209,0,12)"/><text x="648.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.45%)</title><rect x="650" y="228" width="6" height="15" fill="rgb(215,43,45)"/><text x="653.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="656" y="228" width="5" height="15" fill="rgb(234,13,52)"/><text x="659.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="656" y="244" width="5" height="15" fill="rgb(235,70,46)"/><text x="659.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.45%)</title><rect x="666" y="308" width="6" height="15" fill="rgb(210,193,47)"/><text x="669.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.45%)</title><rect x="666" y="324" width="6" height="15" fill="rgb(235,6,0)"/><text x="669.00" y="334.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (2 samples, 0.90%)</title><rect x="666" y="260" width="11" height="15" fill="rgb(220,176,5)"/><text x="669.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.90%)</title><rect x="666" y="276" width="11" height="15" fill="rgb(212,89,46)"/><text x="669.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.90%)</title><rect x="666" y="292" width="11" height="15" fill="rgb(230,133,12)"/><text x="669.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="672" y="308" width="5" height="15" fill="rgb(249,94,25)"/><text x="675.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 3.62%)</title><rect x="640" y="212" width="42" height="15" fill="rgb(232,28,10)"/><text x="643.00" y="222.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 1.81%)</title><rect x="661" y="228" width="21" height="15" fill="rgb(219,183,7)"/><text x="664.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 1.81%)</title><rect x="661" y="244" width="21" height="15" fill="rgb(215,174,0)"/><text x="664.00" y="254.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.45%)</title><rect x="677" y="260" width="5" height="15" fill="rgb(243,227,54)"/><text x="680.00" y="270.50"></text></g><g><title>array_add (number.c) (10 samples, 4.52%)</title><rect x="634" y="180" width="54" height="15" fill="rgb(230,60,5)"/><text x="637.00" y="190.50">array..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 4.52%)</title><rect x="634" y="196" width="54" height="15" fill="rgb(248,6,37)"/><text x="637.00" y="206.50">ufunc..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="682" y="212" width="6" height="15" fill="rgb(234,78,41)"/><text x="685.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="682" y="228" width="6" height="15" fill="rgb(228,214,12)"/><text x="685.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="682" y="244" width="6" height="15" fill="rgb(208,25,4)"/><text x="685.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (5 samples, 2.26%)</title><rect x="762" y="196" width="27" height="15" fill="rgb(223,169,22)"/><text x="765.00" y="206.50">_..</text></g><g><title>__exit__ (warnings.py) (1 samples, 0.45%)</title><rect x="789" y="196" width="5" height="15" fill="rgb(220,178,33)"/><text x="792.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 1.81%)</title><rect x="794" y="196" width="22" height="15" fill="rgb(231,129,35)"/><text x="797.00" y="206.50">_..</text></g><g><title>0x7fc8cbf970e6 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="832" y="212" width="5" height="15" fill="rgb(251,182,31)"/><text x="835.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="837" y="212" width="27" height="15" fill="rgb(215,179,6)"/><text x="840.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="864" y="212" width="10" height="15" fill="rgb(230,15,11)"/><text x="867.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 5.43%)</title><rect x="816" y="196" width="64" height="15" fill="rgb(225,117,11)"/><text x="819.00" y="206.50">_assert..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="874" y="212" width="6" height="15" fill="rgb(251,149,21)"/><text x="877.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 1.36%)</title><rect x="880" y="196" width="16" height="15" fill="rgb(222,133,54)"/><text x="883.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 6.33%)</title><rect x="896" y="196" width="75" height="15" fill="rgb(227,82,0)"/><text x="899.00" y="206.50">_num_sam..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.36%)</title><rect x="955" y="212" width="16" height="15" fill="rgb(217,60,13)"/><text x="958.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.45%)</title><rect x="965" y="228" width="6" height="15" fill="rgb(207,129,25)"/><text x="968.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.90%)</title><rect x="971" y="196" width="10" height="15" fill="rgb(244,205,44)"/><text x="974.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.45%)</title><rect x="997" y="212" width="6" height="15" fill="rgb(250,203,6)"/><text x="1000.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.45%)</title><rect x="997" y="228" width="6" height="15" fill="rgb(214,136,39)"/><text x="1000.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (6 samples, 2.71%)</title><rect x="981" y="196" width="32" height="15" fill="rgb(209,44,33)"/><text x="984.00" y="206.50">is..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.90%)</title><rect x="1003" y="212" width="10" height="15" fill="rgb(217,164,48)"/><text x="1006.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (64 samples, 28.96%)</title><rect x="688" y="180" width="341" height="15" fill="rgb(231,38,41)"/><text x="691.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.36%)</title><rect x="1013" y="196" width="16" height="15" fill="rgb(238,150,18)"/><text x="1016.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 1.36%)</title><rect x="1013" y="212" width="16" height="15" fill="rgb(242,151,12)"/><text x="1016.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.45%)</title><rect x="1067" y="212" width="5" height="15" fill="rgb(233,37,48)"/><text x="1070.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 2.71%)</title><rect x="1045" y="196" width="32" height="15" fill="rgb(219,196,44)"/><text x="1048.00" y="206.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.45%)</title><rect x="1072" y="212" width="5" height="15" fill="rgb(251,110,26)"/><text x="1075.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 4.52%)</title><rect x="1029" y="180" width="54" height="15" fill="rgb(253,19,48)"/><text x="1032.00" y="190.50">check..</text></g><g><title>isclass (inspect.py) (1 samples, 0.45%)</title><rect x="1077" y="196" width="6" height="15" fill="rgb(219,103,1)"/><text x="1080.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.45%)</title><rect x="1088" y="196" width="5" height="15" fill="rgb(229,111,12)"/><text x="1091.00" y="206.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.45%)</title><rect x="1099" y="244" width="5" height="15" fill="rgb(211,112,40)"/><text x="1102.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.36%)</title><rect x="1093" y="212" width="16" height="15" fill="rgb(253,123,38)"/><text x="1096.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.36%)</title><rect x="1093" y="228" width="16" height="15" fill="rgb(213,37,33)"/><text x="1096.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.45%)</title><rect x="1104" y="244" width="5" height="15" fill="rgb(233,175,17)"/><text x="1107.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.45%)</title><rect x="1109" y="244" width="6" height="15" fill="rgb(238,152,15)"/><text x="1112.00" y="254.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.45%)</title><rect x="1109" y="260" width="6" height="15" fill="rgb(223,119,35)"/><text x="1112.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.45%)</title><rect x="1120" y="276" width="5" height="15" fill="rgb(218,61,12)"/><text x="1123.00" y="286.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.45%)</title><rect x="1120" y="292" width="5" height="15" fill="rgb(236,162,25)"/><text x="1123.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.45%)</title><rect x="1125" y="292" width="6" height="15" fill="rgb(229,57,3)"/><text x="1128.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.45%)</title><rect x="1125" y="308" width="6" height="15" fill="rgb(243,153,13)"/><text x="1128.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.45%)</title><rect x="1125" y="324" width="6" height="15" fill="rgb(251,213,51)"/><text x="1128.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.45%)</title><rect x="1125" y="340" width="6" height="15" fill="rgb(254,181,17)"/><text x="1128.00" y="350.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="1131" y="308" width="5" height="15" fill="rgb(233,103,17)"/><text x="1134.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="1136" y="308" width="5" height="15" fill="rgb(208,21,47)"/><text x="1139.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.45%)</title><rect x="1141" y="308" width="6" height="15" fill="rgb(219,1,10)"/><text x="1144.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.45%)</title><rect x="1141" y="324" width="6" height="15" fill="rgb(214,173,32)"/><text x="1144.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 2.26%)</title><rect x="1125" y="276" width="27" height="15" fill="rgb(254,1,1)"/><text x="1128.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 1.81%)</title><rect x="1131" y="292" width="21" height="15" fill="rgb(252,130,28)"/><text x="1134.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.45%)</title><rect x="1147" y="308" width="5" height="15" fill="rgb(238,68,25)"/><text x="1150.00" y="318.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.45%)</title><rect x="1152" y="276" width="5" height="15" fill="rgb(227,5,11)"/><text x="1155.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 4.07%)</title><rect x="1115" y="244" width="48" height="15" fill="rgb(244,213,5)"/><text x="1118.00" y="254.50">NpyI..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (8 samples, 3.62%)</title><rect x="1120" y="260" width="43" height="15" fill="rgb(248,165,47)"/><text x="1123.00" y="270.50">npyi..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.45%)</title><rect x="1157" y="276" width="6" height="15" fill="rgb(253,187,33)"/><text x="1160.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.90%)</title><rect x="1163" y="244" width="10" height="15" fill="rgb(221,72,12)"/><text x="1166.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.90%)</title><rect x="1163" y="260" width="10" height="15" fill="rgb(230,29,47)"/><text x="1166.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.90%)</title><rect x="1163" y="276" width="10" height="15" fill="rgb(242,39,8)"/><text x="1166.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.90%)</title><rect x="1163" y="292" width="10" height="15" fill="rgb(212,36,45)"/><text x="1166.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (110 samples, 49.77%)</title><rect x="591" y="132" width="588" height="15" fill="rgb(253,59,20)"/><text x="594.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (108 samples, 48.87%)</title><rect x="602" y="148" width="577" height="15" fill="rgb(229,212,5)"/><text x="605.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (107 samples, 48.42%)</title><rect x="608" y="164" width="571" height="15" fill="rgb(247,138,39)"/><text x="611.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 8.14%)</title><rect x="1083" y="180" width="96" height="15" fill="rgb(216,188,13)"/><text x="1086.00" y="190.50">safe_sparse..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 7.24%)</title><rect x="1093" y="196" width="86" height="15" fill="rgb(226,37,10)"/><text x="1096.00" y="206.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 5.88%)</title><rect x="1109" y="212" width="70" height="15" fill="rgb(208,202,46)"/><text x="1112.00" y="222.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (13 samples, 5.88%)</title><rect x="1109" y="228" width="70" height="15" fill="rgb(253,94,20)"/><text x="1112.00" y="238.50">PyUFunc..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.45%)</title><rect x="1173" y="244" width="6" height="15" fill="rgb(219,132,10)"/><text x="1176.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.45%)</title><rect x="1173" y="260" width="6" height="15" fill="rgb(242,189,46)"/><text x="1176.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.45%)</title><rect x="1173" y="276" width="6" height="15" fill="rgb(235,14,49)"/><text x="1176.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (219 samples, 99.10%)</title><rect x="15" y="52" width="1169" height="15" fill="rgb(208,19,19)"/><text x="18.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (114 samples, 51.58%)</title><rect x="575" y="68" width="609" height="15" fill="rgb(238,126,53)"/><text x="578.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (114 samples, 51.58%)</title><rect x="575" y="84" width="609" height="15" fill="rgb(245,195,22)"/><text x="578.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py) (114 samples, 51.58%)</title><rect x="575" y="100" width="609" height="15" fill="rgb(209,181,37)"/><text x="578.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (114 samples, 51.58%)</title><rect x="575" y="116" width="609" height="15" fill="rgb(234,90,29)"/><text x="578.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.45%)</title><rect x="1179" y="132" width="5" height="15" fill="rgb(231,92,9)"/><text x="1182.00" y="142.50"></text></g><g><title>all (221 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,109,16)"/><text x="13.00" y="46.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1184" y="52" width="6" height="15" fill="rgb(210,184,50)"/><text x="1187.00" y="62.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1184" y="68" width="6" height="15" fill="rgb(223,52,13)"/><text x="1187.00" y="78.50"></text></g><g><title>pybind11::class_&lt;onnx::OpSchema, &gt;::dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(222,215,38)"/><text x="1187.00" y="94.50"></text></g><g><title>onnx::OpSchema::~OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(252,89,12)"/><text x="1187.00" y="110.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(206,177,40)"/><text x="1187.00" y="126.50"></text></g></g></svg>