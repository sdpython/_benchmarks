<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1670" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1653.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1653.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.27%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(236,160,49)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.27%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(245,34,27)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.27%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(219,3,28)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.27%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(223,63,2)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.27%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(222,153,53)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.27%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(228,112,30)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.27%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(208,120,20)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1381) (1 samples, 0.27%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(219,128,15)"/><text x="13.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:2) (2 samples, 0.54%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(243,42,30)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(220,80,46)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.54%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(206,188,48)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(250,80,14)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(237,128,18)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(220,26,35)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(205,76,32)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(218,141,9)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(251,94,38)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.54%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(219,160,10)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(253,10,40)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(246,101,10)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(229,10,8)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(235,52,38)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(210,169,32)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.54%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(249,19,12)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(215,173,16)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(251,94,54)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(245,228,32)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(231,187,13)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(243,68,5)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.54%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(210,201,36)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(235,211,30)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(206,46,49)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(247,102,26)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(254,202,9)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(240,60,25)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.54%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(254,187,49)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(245,225,2)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.54%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(231,174,33)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(225,91,10)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(227,226,35)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(210,64,0)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(238,185,20)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(208,144,14)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(225,128,28)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.54%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(233,91,11)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(223,103,45)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(217,19,22)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(218,74,18)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(243,54,48)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(209,192,7)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.54%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(233,52,28)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.54%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(222,217,29)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.27%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(215,55,0)"/><text x="16.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.27%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(251,123,41)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.27%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(225,15,26)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.27%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(231,98,35)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2588) (1 samples, 0.27%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(208,135,27)"/><text x="16.00" y="926.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2201) (1 samples, 0.27%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(243,64,17)"/><text x="19.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.27%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(213,186,25)"/><text x="19.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.27%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(231,169,5)"/><text x="19.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.27%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(249,62,49)"/><text x="19.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:4) (2 samples, 0.54%)</title><rect x="16" y="148" width="6" height="15" fill="rgb(220,210,17)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="164" width="6" height="15" fill="rgb(253,54,44)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.54%)</title><rect x="16" y="180" width="6" height="15" fill="rgb(234,116,41)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="196" width="6" height="15" fill="rgb(218,84,27)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="212" width="6" height="15" fill="rgb(237,69,13)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="228" width="6" height="15" fill="rgb(248,70,17)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="244" width="6" height="15" fill="rgb(243,55,7)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="260" width="6" height="15" fill="rgb(248,178,30)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="276" width="6" height="15" fill="rgb(230,192,34)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.54%)</title><rect x="16" y="292" width="6" height="15" fill="rgb(226,121,11)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="308" width="6" height="15" fill="rgb(249,145,34)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="324" width="6" height="15" fill="rgb(218,21,30)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="340" width="6" height="15" fill="rgb(230,15,29)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="356" width="6" height="15" fill="rgb(254,228,38)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="372" width="6" height="15" fill="rgb(237,104,17)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.54%)</title><rect x="16" y="388" width="6" height="15" fill="rgb(236,99,15)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="404" width="6" height="15" fill="rgb(242,110,41)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="420" width="6" height="15" fill="rgb(245,11,41)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="436" width="6" height="15" fill="rgb(245,135,41)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="452" width="6" height="15" fill="rgb(223,96,47)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="468" width="6" height="15" fill="rgb(253,121,20)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.54%)</title><rect x="16" y="484" width="6" height="15" fill="rgb(247,4,49)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="500" width="6" height="15" fill="rgb(251,80,1)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="516" width="6" height="15" fill="rgb(233,7,20)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="532" width="6" height="15" fill="rgb(224,105,4)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="548" width="6" height="15" fill="rgb(241,92,29)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="564" width="6" height="15" fill="rgb(250,28,26)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.54%)</title><rect x="16" y="580" width="6" height="15" fill="rgb(210,45,8)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="596" width="6" height="15" fill="rgb(222,55,49)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="612" width="6" height="15" fill="rgb(241,223,2)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="628" width="6" height="15" fill="rgb(240,16,31)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="644" width="6" height="15" fill="rgb(237,17,24)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="660" width="6" height="15" fill="rgb(212,150,22)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.54%)</title><rect x="16" y="676" width="6" height="15" fill="rgb(227,27,32)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="692" width="6" height="15" fill="rgb(224,41,13)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="708" width="6" height="15" fill="rgb(206,131,23)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="724" width="6" height="15" fill="rgb(240,42,1)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="740" width="6" height="15" fill="rgb(244,84,19)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="756" width="6" height="15" fill="rgb(229,38,45)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.54%)</title><rect x="16" y="772" width="6" height="15" fill="rgb(235,105,44)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.54%)</title><rect x="16" y="788" width="6" height="15" fill="rgb(238,217,37)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="804" width="6" height="15" fill="rgb(208,162,14)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="820" width="6" height="15" fill="rgb(224,97,41)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="836" width="6" height="15" fill="rgb(244,104,49)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="852" width="6" height="15" fill="rgb(229,65,9)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="868" width="6" height="15" fill="rgb(213,143,8)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="884" width="6" height="15" fill="rgb(240,38,29)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.54%)</title><rect x="16" y="900" width="6" height="15" fill="rgb(211,61,48)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.54%)</title><rect x="16" y="916" width="6" height="15" fill="rgb(209,33,13)"/><text x="19.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(217,146,17)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="16" y="948" width="6" height="15" fill="rgb(211,142,51)"/><text x="19.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="16" y="964" width="6" height="15" fill="rgb(208,162,48)"/><text x="19.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="16" y="980" width="6" height="15" fill="rgb(220,60,30)"/><text x="19.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="16" y="996" width="6" height="15" fill="rgb(239,22,48)"/><text x="19.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="16" y="1012" width="6" height="15" fill="rgb(236,167,53)"/><text x="19.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:280) (1 samples, 0.27%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(212,158,16)"/><text x="22.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.27%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(212,26,24)"/><text x="22.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.27%)</title><rect x="19" y="1060" width="3" height="15" fill="rgb(233,7,12)"/><text x="22.00" y="1070.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.27%)</title><rect x="22" y="772" width="3" height="15" fill="rgb(234,106,40)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="22" y="788" width="3" height="15" fill="rgb(205,168,44)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(232,148,1)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(208,142,22)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(253,142,19)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(223,206,45)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.27%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(223,221,17)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(222,217,50)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(244,182,36)"/><text x="25.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(240,9,2)"/><text x="25.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(235,87,14)"/><text x="25.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(210,105,2)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.27%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(219,51,34)"/><text x="25.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="22" y="980" width="3" height="15" fill="rgb(251,155,12)"/><text x="25.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="22" y="996" width="3" height="15" fill="rgb(227,0,1)"/><text x="25.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="22" y="1012" width="3" height="15" fill="rgb(253,147,35)"/><text x="25.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="22" y="1028" width="3" height="15" fill="rgb(219,7,14)"/><text x="25.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="22" y="1044" width="3" height="15" fill="rgb(218,178,17)"/><text x="25.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.27%)</title><rect x="22" y="1060" width="3" height="15" fill="rgb(220,113,7)"/><text x="25.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="22" y="1076" width="3" height="15" fill="rgb(249,169,26)"/><text x="25.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.27%)</title><rect x="22" y="1092" width="3" height="15" fill="rgb(250,20,10)"/><text x="25.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="22" y="1108" width="3" height="15" fill="rgb(228,161,40)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="22" y="1124" width="3" height="15" fill="rgb(238,151,27)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="22" y="1140" width="3" height="15" fill="rgb(242,14,44)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="22" y="1156" width="3" height="15" fill="rgb(251,211,34)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="22" y="1172" width="3" height="15" fill="rgb(216,204,37)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="22" y="1188" width="3" height="15" fill="rgb(234,79,42)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.27%)</title><rect x="22" y="1204" width="3" height="15" fill="rgb(243,155,27)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="22" y="1220" width="3" height="15" fill="rgb(227,215,14)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="22" y="1236" width="3" height="15" fill="rgb(223,154,51)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="22" y="1252" width="3" height="15" fill="rgb(216,70,5)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="22" y="1268" width="3" height="15" fill="rgb(234,52,25)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="22" y="1284" width="3" height="15" fill="rgb(224,78,32)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.27%)</title><rect x="22" y="1300" width="3" height="15" fill="rgb(237,74,44)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="22" y="1316" width="3" height="15" fill="rgb(212,46,6)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="22" y="1332" width="3" height="15" fill="rgb(220,16,47)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="22" y="1348" width="3" height="15" fill="rgb(235,214,20)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="22" y="1364" width="3" height="15" fill="rgb(242,37,12)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="22" y="1380" width="3" height="15" fill="rgb(214,104,5)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:71) (1 samples, 0.27%)</title><rect x="22" y="1396" width="3" height="15" fill="rgb(226,55,15)"/><text x="25.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.27%)</title><rect x="22" y="1412" width="3" height="15" fill="rgb(245,87,22)"/><text x="25.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.27%)</title><rect x="22" y="1428" width="3" height="15" fill="rgb(209,151,54)"/><text x="25.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.27%)</title><rect x="22" y="1444" width="3" height="15" fill="rgb(246,205,53)"/><text x="25.00" y="1454.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.27%)</title><rect x="22" y="1460" width="3" height="15" fill="rgb(232,71,16)"/><text x="25.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.27%)</title><rect x="22" y="1476" width="3" height="15" fill="rgb(222,163,37)"/><text x="25.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.27%)</title><rect x="22" y="1492" width="3" height="15" fill="rgb(226,211,45)"/><text x="25.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.27%)</title><rect x="22" y="1508" width="3" height="15" fill="rgb(211,1,29)"/><text x="25.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.27%)</title><rect x="22" y="1524" width="3" height="15" fill="rgb(212,126,15)"/><text x="25.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.27%)</title><rect x="22" y="1540" width="3" height="15" fill="rgb(224,159,13)"/><text x="25.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py:90) (1 samples, 0.27%)</title><rect x="22" y="1556" width="3" height="15" fill="rgb(238,100,51)"/><text x="25.00" y="1566.50"></text></g><g><title>__getitem__ (sre_parse.py:167) (1 samples, 0.27%)</title><rect x="22" y="1572" width="3" height="15" fill="rgb(222,139,2)"/><text x="25.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.54%)</title><rect x="22" y="244" width="7" height="15" fill="rgb(251,227,8)"/><text x="25.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="22" y="260" width="7" height="15" fill="rgb(240,18,52)"/><text x="25.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="22" y="276" width="7" height="15" fill="rgb(223,99,9)"/><text x="25.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="22" y="292" width="7" height="15" fill="rgb(218,106,27)"/><text x="25.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="22" y="308" width="7" height="15" fill="rgb(254,152,31)"/><text x="25.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="22" y="324" width="7" height="15" fill="rgb(253,167,29)"/><text x="25.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.54%)</title><rect x="22" y="340" width="7" height="15" fill="rgb(249,104,2)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="22" y="356" width="7" height="15" fill="rgb(212,210,51)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.54%)</title><rect x="22" y="372" width="7" height="15" fill="rgb(245,75,36)"/><text x="25.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="22" y="388" width="7" height="15" fill="rgb(222,149,16)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="22" y="404" width="7" height="15" fill="rgb(212,29,40)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="22" y="420" width="7" height="15" fill="rgb(218,91,22)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="22" y="436" width="7" height="15" fill="rgb(218,4,48)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="22" y="452" width="7" height="15" fill="rgb(248,57,28)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="22" y="468" width="7" height="15" fill="rgb(238,84,9)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.54%)</title><rect x="22" y="484" width="7" height="15" fill="rgb(244,229,46)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="22" y="500" width="7" height="15" fill="rgb(249,35,40)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="22" y="516" width="7" height="15" fill="rgb(250,134,31)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="22" y="532" width="7" height="15" fill="rgb(234,51,6)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="22" y="548" width="7" height="15" fill="rgb(246,75,22)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="22" y="564" width="7" height="15" fill="rgb(208,13,14)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.54%)</title><rect x="22" y="580" width="7" height="15" fill="rgb(239,115,32)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="22" y="596" width="7" height="15" fill="rgb(240,56,16)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="22" y="612" width="7" height="15" fill="rgb(244,97,35)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="22" y="628" width="7" height="15" fill="rgb(219,216,27)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="22" y="644" width="7" height="15" fill="rgb(218,225,20)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="22" y="660" width="7" height="15" fill="rgb(207,42,28)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.54%)</title><rect x="22" y="676" width="7" height="15" fill="rgb(230,210,50)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.54%)</title><rect x="22" y="692" width="7" height="15" fill="rgb(244,32,27)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.54%)</title><rect x="22" y="708" width="7" height="15" fill="rgb(218,207,43)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.54%)</title><rect x="22" y="724" width="7" height="15" fill="rgb(249,192,54)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.54%)</title><rect x="22" y="740" width="7" height="15" fill="rgb(218,24,52)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.54%)</title><rect x="22" y="756" width="7" height="15" fill="rgb(221,194,37)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.27%)</title><rect x="25" y="772" width="4" height="15" fill="rgb(223,121,49)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="25" y="788" width="4" height="15" fill="rgb(227,214,31)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="804" width="4" height="15" fill="rgb(253,129,3)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(237,77,17)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(206,90,44)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(209,181,33)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(221,202,27)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(239,18,17)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.27%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(213,73,3)"/><text x="28.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(237,150,48)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.27%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(229,161,20)"/><text x="28.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(229,30,17)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(254,132,40)"/><text x="28.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(218,59,17)"/><text x="28.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(222,31,1)"/><text x="28.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(239,157,5)"/><text x="28.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(253,150,45)"/><text x="28.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.27%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(205,116,25)"/><text x="28.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(213,51,34)"/><text x="28.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(254,69,10)"/><text x="28.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(233,195,54)"/><text x="28.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(209,34,45)"/><text x="28.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="25" y="1124" width="4" height="15" fill="rgb(254,187,15)"/><text x="28.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="25" y="1140" width="4" height="15" fill="rgb(233,37,18)"/><text x="28.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="1156" width="4" height="15" fill="rgb(228,44,20)"/><text x="28.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.27%)</title><rect x="25" y="1172" width="4" height="15" fill="rgb(249,2,31)"/><text x="28.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="25" y="1188" width="4" height="15" fill="rgb(223,209,30)"/><text x="28.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="1204" width="4" height="15" fill="rgb(241,188,30)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="25" y="1220" width="4" height="15" fill="rgb(215,28,8)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="25" y="1236" width="4" height="15" fill="rgb(208,36,47)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="25" y="1252" width="4" height="15" fill="rgb(235,147,25)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="25" y="1268" width="4" height="15" fill="rgb(249,197,13)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="1284" width="4" height="15" fill="rgb(234,10,1)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.27%)</title><rect x="25" y="1300" width="4" height="15" fill="rgb(230,172,29)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="25" y="1316" width="4" height="15" fill="rgb(245,122,20)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="25" y="1332" width="4" height="15" fill="rgb(245,174,18)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="25" y="1348" width="4" height="15" fill="rgb(254,216,40)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="25" y="1364" width="4" height="15" fill="rgb(232,98,13)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="1380" width="4" height="15" fill="rgb(230,96,30)"/><text x="28.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:15) (1 samples, 0.27%)</title><rect x="25" y="1396" width="4" height="15" fill="rgb(254,177,40)"/><text x="28.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="25" y="1412" width="4" height="15" fill="rgb(222,185,18)"/><text x="28.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="25" y="1428" width="4" height="15" fill="rgb(233,122,14)"/><text x="28.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="25" y="1444" width="4" height="15" fill="rgb(209,210,38)"/><text x="28.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="25" y="1460" width="4" height="15" fill="rgb(248,69,5)"/><text x="28.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="25" y="1476" width="4" height="15" fill="rgb(206,85,15)"/><text x="28.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.27%)</title><rect x="25" y="1492" width="4" height="15" fill="rgb(227,226,54)"/><text x="28.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.27%)</title><rect x="25" y="1508" width="4" height="15" fill="rgb(205,74,28)"/><text x="28.00" y="1518.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.27%)</title><rect x="25" y="1524" width="4" height="15" fill="rgb(224,46,34)"/><text x="28.00" y="1534.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.27%)</title><rect x="25" y="1540" width="4" height="15" fill="rgb(211,200,28)"/><text x="28.00" y="1550.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.27%)</title><rect x="29" y="436" width="3" height="15" fill="rgb(217,212,3)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="29" y="452" width="3" height="15" fill="rgb(214,172,35)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="29" y="468" width="3" height="15" fill="rgb(206,215,7)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="29" y="484" width="3" height="15" fill="rgb(225,97,28)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="29" y="500" width="3" height="15" fill="rgb(219,23,1)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="29" y="516" width="3" height="15" fill="rgb(208,11,16)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.27%)</title><rect x="29" y="532" width="3" height="15" fill="rgb(227,223,8)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="29" y="548" width="3" height="15" fill="rgb(251,98,49)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="29" y="564" width="3" height="15" fill="rgb(239,40,9)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="29" y="580" width="3" height="15" fill="rgb(250,207,21)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="29" y="596" width="3" height="15" fill="rgb(218,168,3)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="29" y="612" width="3" height="15" fill="rgb(250,43,44)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.27%)</title><rect x="29" y="628" width="3" height="15" fill="rgb(245,56,48)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="29" y="644" width="3" height="15" fill="rgb(240,5,18)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="29" y="660" width="3" height="15" fill="rgb(252,152,19)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="29" y="676" width="3" height="15" fill="rgb(239,179,9)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="29" y="692" width="3" height="15" fill="rgb(226,31,15)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="29" y="708" width="3" height="15" fill="rgb(223,218,50)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.27%)</title><rect x="29" y="724" width="3" height="15" fill="rgb(230,61,0)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="29" y="740" width="3" height="15" fill="rgb(234,196,46)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="29" y="756" width="3" height="15" fill="rgb(236,185,26)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="29" y="772" width="3" height="15" fill="rgb(205,161,45)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="29" y="788" width="3" height="15" fill="rgb(253,155,12)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="29" y="804" width="3" height="15" fill="rgb(229,113,8)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.27%)</title><rect x="29" y="820" width="3" height="15" fill="rgb(234,200,23)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(247,207,22)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(245,76,9)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(246,59,51)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(254,95,31)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(232,182,52)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.27%)</title><rect x="29" y="916" width="3" height="15" fill="rgb(213,49,33)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="29" y="932" width="3" height="15" fill="rgb(213,103,48)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="29" y="948" width="3" height="15" fill="rgb(238,8,17)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="29" y="964" width="3" height="15" fill="rgb(253,133,33)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="29" y="980" width="3" height="15" fill="rgb(229,129,19)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="29" y="996" width="3" height="15" fill="rgb(235,166,39)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.27%)</title><rect x="29" y="1012" width="3" height="15" fill="rgb(224,104,14)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="29" y="1028" width="3" height="15" fill="rgb(249,78,4)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="29" y="1044" width="3" height="15" fill="rgb(239,177,34)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="29" y="1060" width="3" height="15" fill="rgb(239,85,39)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="29" y="1076" width="3" height="15" fill="rgb(251,15,4)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="29" y="1092" width="3" height="15" fill="rgb(236,180,2)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:123) (1 samples, 0.27%)</title><rect x="29" y="1108" width="3" height="15" fill="rgb(246,51,7)"/><text x="32.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py:5026) (1 samples, 0.27%)</title><rect x="29" y="1124" width="3" height="15" fill="rgb(236,10,45)"/><text x="32.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.27%)</title><rect x="29" y="1140" width="3" height="15" fill="rgb(246,34,9)"/><text x="32.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.27%)</title><rect x="29" y="1156" width="3" height="15" fill="rgb(250,49,34)"/><text x="32.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.27%)</title><rect x="29" y="1172" width="3" height="15" fill="rgb(222,6,3)"/><text x="32.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.27%)</title><rect x="29" y="1188" width="3" height="15" fill="rgb(241,151,2)"/><text x="32.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.27%)</title><rect x="29" y="1204" width="3" height="15" fill="rgb(244,109,25)"/><text x="32.00" y="1214.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.27%)</title><rect x="35" y="1380" width="3" height="15" fill="rgb(231,99,47)"/><text x="38.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.27%)</title><rect x="35" y="1396" width="3" height="15" fill="rgb(219,145,37)"/><text x="38.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.27%)</title><rect x="35" y="1412" width="3" height="15" fill="rgb(228,194,1)"/><text x="38.00" y="1422.50"></text></g><g><title>_compile (re.py:276) (1 samples, 0.27%)</title><rect x="35" y="1428" width="3" height="15" fill="rgb(238,41,28)"/><text x="38.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 0.81%)</title><rect x="32" y="1108" width="9" height="15" fill="rgb(240,190,36)"/><text x="35.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.81%)</title><rect x="32" y="1124" width="9" height="15" fill="rgb(240,93,12)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.81%)</title><rect x="32" y="1140" width="9" height="15" fill="rgb(212,46,29)"/><text x="35.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.81%)</title><rect x="32" y="1156" width="9" height="15" fill="rgb(226,143,19)"/><text x="35.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.81%)</title><rect x="32" y="1172" width="9" height="15" fill="rgb(245,173,31)"/><text x="35.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.81%)</title><rect x="32" y="1188" width="9" height="15" fill="rgb(236,45,4)"/><text x="35.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (3 samples, 0.81%)</title><rect x="32" y="1204" width="9" height="15" fill="rgb(248,150,48)"/><text x="35.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.81%)</title><rect x="32" y="1220" width="9" height="15" fill="rgb(240,93,53)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.81%)</title><rect x="32" y="1236" width="9" height="15" fill="rgb(235,213,44)"/><text x="35.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.81%)</title><rect x="32" y="1252" width="9" height="15" fill="rgb(215,33,30)"/><text x="35.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.81%)</title><rect x="32" y="1268" width="9" height="15" fill="rgb(226,225,19)"/><text x="35.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.81%)</title><rect x="32" y="1284" width="9" height="15" fill="rgb(235,85,47)"/><text x="35.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (3 samples, 0.81%)</title><rect x="32" y="1300" width="9" height="15" fill="rgb(251,131,13)"/><text x="35.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (3 samples, 0.81%)</title><rect x="32" y="1316" width="9" height="15" fill="rgb(222,84,3)"/><text x="35.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (3 samples, 0.81%)</title><rect x="32" y="1332" width="9" height="15" fill="rgb(254,223,53)"/><text x="35.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (3 samples, 0.81%)</title><rect x="32" y="1348" width="9" height="15" fill="rgb(208,137,39)"/><text x="35.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (3 samples, 0.81%)</title><rect x="32" y="1364" width="9" height="15" fill="rgb(244,60,37)"/><text x="35.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:604) (1 samples, 0.27%)</title><rect x="38" y="1380" width="3" height="15" fill="rgb(250,40,1)"/><text x="41.00" y="1390.50"></text></g><g><title>root (&lt;template&gt;:127) (1 samples, 0.27%)</title><rect x="41" y="1572" width="3" height="15" fill="rgb(209,128,31)"/><text x="44.00" y="1582.50"></text></g><g><title>0x7f5b32d2a07e (?) (1 samples, 0.27%)</title><rect x="41" y="1588" width="3" height="15" fill="rgb(206,5,12)"/><text x="44.00" y="1598.50"></text></g><g><title>0x7f5b32d29d67 (?) (1 samples, 0.27%)</title><rect x="41" y="1604" width="3" height="15" fill="rgb(246,32,34)"/><text x="44.00" y="1614.50"></text></g><g><title>0x7f5b42c699d3 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="41" y="1620" width="3" height="15" fill="rgb(227,106,0)"/><text x="44.00" y="1630.50"></text></g><g><title>root (&lt;template&gt;:47) (1 samples, 0.27%)</title><rect x="44" y="1572" width="4" height="15" fill="rgb(241,119,40)"/><text x="47.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:434) (1 samples, 0.27%)</title><rect x="44" y="1588" width="4" height="15" fill="rgb(214,28,24)"/><text x="47.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.81%)</title><rect x="41" y="1236" width="10" height="15" fill="rgb(221,78,26)"/><text x="44.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.81%)</title><rect x="41" y="1252" width="10" height="15" fill="rgb(251,98,28)"/><text x="44.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.81%)</title><rect x="41" y="1268" width="10" height="15" fill="rgb(245,186,9)"/><text x="44.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.81%)</title><rect x="41" y="1284" width="10" height="15" fill="rgb(205,228,51)"/><text x="44.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.81%)</title><rect x="41" y="1300" width="10" height="15" fill="rgb(219,160,39)"/><text x="44.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.81%)</title><rect x="41" y="1316" width="10" height="15" fill="rgb(207,226,24)"/><text x="44.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.81%)</title><rect x="41" y="1332" width="10" height="15" fill="rgb(235,172,41)"/><text x="44.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.81%)</title><rect x="41" y="1348" width="10" height="15" fill="rgb(213,195,6)"/><text x="44.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.81%)</title><rect x="41" y="1364" width="10" height="15" fill="rgb(232,186,7)"/><text x="44.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.81%)</title><rect x="41" y="1380" width="10" height="15" fill="rgb(232,150,20)"/><text x="44.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.81%)</title><rect x="41" y="1396" width="10" height="15" fill="rgb(236,176,36)"/><text x="44.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.81%)</title><rect x="41" y="1412" width="10" height="15" fill="rgb(238,179,29)"/><text x="44.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.81%)</title><rect x="41" y="1428" width="10" height="15" fill="rgb(206,220,1)"/><text x="44.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.81%)</title><rect x="41" y="1444" width="10" height="15" fill="rgb(237,45,4)"/><text x="44.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.81%)</title><rect x="41" y="1460" width="10" height="15" fill="rgb(212,59,12)"/><text x="44.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.81%)</title><rect x="41" y="1476" width="10" height="15" fill="rgb(206,111,36)"/><text x="44.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.81%)</title><rect x="41" y="1492" width="10" height="15" fill="rgb(212,89,8)"/><text x="44.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.81%)</title><rect x="41" y="1508" width="10" height="15" fill="rgb(206,73,39)"/><text x="44.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.81%)</title><rect x="41" y="1524" width="10" height="15" fill="rgb(224,86,45)"/><text x="44.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.81%)</title><rect x="41" y="1540" width="10" height="15" fill="rgb(221,66,5)"/><text x="44.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.81%)</title><rect x="41" y="1556" width="10" height="15" fill="rgb(245,172,31)"/><text x="44.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.27%)</title><rect x="48" y="1572" width="3" height="15" fill="rgb(250,69,25)"/><text x="51.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.27%)</title><rect x="48" y="1588" width="3" height="15" fill="rgb(206,64,24)"/><text x="51.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:203) (1 samples, 0.27%)</title><rect x="48" y="1604" width="3" height="15" fill="rgb(251,52,30)"/><text x="51.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:4) (14 samples, 3.77%)</title><rect x="10" y="52" width="44" height="15" fill="rgb(240,224,36)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 3.77%)</title><rect x="10" y="68" width="44" height="15" fill="rgb(238,95,21)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 3.77%)</title><rect x="10" y="84" width="44" height="15" fill="rgb(229,217,10)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 3.77%)</title><rect x="10" y="100" width="44" height="15" fill="rgb(242,120,24)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 3.77%)</title><rect x="10" y="116" width="44" height="15" fill="rgb(207,229,37)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 3.77%)</title><rect x="10" y="132" width="44" height="15" fill="rgb(244,150,31)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:7) (10 samples, 2.70%)</title><rect x="22" y="148" width="32" height="15" fill="rgb(247,99,53)"/><text x="25.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.70%)</title><rect x="22" y="164" width="32" height="15" fill="rgb(216,210,16)"/><text x="25.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.70%)</title><rect x="22" y="180" width="32" height="15" fill="rgb(205,109,53)"/><text x="25.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.70%)</title><rect x="22" y="196" width="32" height="15" fill="rgb(225,133,37)"/><text x="25.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.70%)</title><rect x="22" y="212" width="32" height="15" fill="rgb(244,16,16)"/><text x="25.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.70%)</title><rect x="22" y="228" width="32" height="15" fill="rgb(249,105,15)"/><text x="25.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 2.16%)</title><rect x="29" y="244" width="25" height="15" fill="rgb(250,82,10)"/><text x="32.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.16%)</title><rect x="29" y="260" width="25" height="15" fill="rgb(251,53,18)"/><text x="32.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.16%)</title><rect x="29" y="276" width="25" height="15" fill="rgb(205,98,38)"/><text x="32.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.16%)</title><rect x="29" y="292" width="25" height="15" fill="rgb(236,182,48)"/><text x="32.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.16%)</title><rect x="29" y="308" width="25" height="15" fill="rgb(224,229,27)"/><text x="32.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.16%)</title><rect x="29" y="324" width="25" height="15" fill="rgb(216,7,22)"/><text x="32.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 2.16%)</title><rect x="29" y="340" width="25" height="15" fill="rgb(205,43,17)"/><text x="32.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.16%)</title><rect x="29" y="356" width="25" height="15" fill="rgb(217,159,41)"/><text x="32.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.16%)</title><rect x="29" y="372" width="25" height="15" fill="rgb(234,5,12)"/><text x="32.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.16%)</title><rect x="29" y="388" width="25" height="15" fill="rgb(220,105,17)"/><text x="32.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.16%)</title><rect x="29" y="404" width="25" height="15" fill="rgb(232,54,51)"/><text x="32.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.16%)</title><rect x="29" y="420" width="25" height="15" fill="rgb(211,146,47)"/><text x="32.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 1.89%)</title><rect x="32" y="436" width="22" height="15" fill="rgb(233,113,37)"/><text x="35.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="452" width="22" height="15" fill="rgb(245,62,49)"/><text x="35.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.89%)</title><rect x="32" y="468" width="22" height="15" fill="rgb(210,11,40)"/><text x="35.00" y="478.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="484" width="22" height="15" fill="rgb(219,115,7)"/><text x="35.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="500" width="22" height="15" fill="rgb(228,190,38)"/><text x="35.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.89%)</title><rect x="32" y="516" width="22" height="15" fill="rgb(242,7,3)"/><text x="35.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.89%)</title><rect x="32" y="532" width="22" height="15" fill="rgb(226,87,3)"/><text x="35.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.89%)</title><rect x="32" y="548" width="22" height="15" fill="rgb(237,129,19)"/><text x="35.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="564" width="22" height="15" fill="rgb(220,11,4)"/><text x="35.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 1.89%)</title><rect x="32" y="580" width="22" height="15" fill="rgb(234,160,17)"/><text x="35.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="596" width="22" height="15" fill="rgb(205,216,4)"/><text x="35.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.89%)</title><rect x="32" y="612" width="22" height="15" fill="rgb(243,79,46)"/><text x="35.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.89%)</title><rect x="32" y="628" width="22" height="15" fill="rgb(217,224,14)"/><text x="35.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.89%)</title><rect x="32" y="644" width="22" height="15" fill="rgb(212,154,0)"/><text x="35.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="660" width="22" height="15" fill="rgb(243,142,21)"/><text x="35.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (7 samples, 1.89%)</title><rect x="32" y="676" width="22" height="15" fill="rgb(243,131,51)"/><text x="35.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="692" width="22" height="15" fill="rgb(215,38,2)"/><text x="35.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.89%)</title><rect x="32" y="708" width="22" height="15" fill="rgb(245,219,5)"/><text x="35.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.89%)</title><rect x="32" y="724" width="22" height="15" fill="rgb(226,9,1)"/><text x="35.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.89%)</title><rect x="32" y="740" width="22" height="15" fill="rgb(235,124,36)"/><text x="35.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="756" width="22" height="15" fill="rgb(229,111,53)"/><text x="35.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (7 samples, 1.89%)</title><rect x="32" y="772" width="22" height="15" fill="rgb(240,105,4)"/><text x="35.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="788" width="22" height="15" fill="rgb(237,198,47)"/><text x="35.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.89%)</title><rect x="32" y="804" width="22" height="15" fill="rgb(228,196,13)"/><text x="35.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.89%)</title><rect x="32" y="820" width="22" height="15" fill="rgb(227,42,19)"/><text x="35.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.89%)</title><rect x="32" y="836" width="22" height="15" fill="rgb(208,217,0)"/><text x="35.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="852" width="22" height="15" fill="rgb(251,221,43)"/><text x="35.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (7 samples, 1.89%)</title><rect x="32" y="868" width="22" height="15" fill="rgb(219,83,28)"/><text x="35.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="884" width="22" height="15" fill="rgb(209,30,32)"/><text x="35.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.89%)</title><rect x="32" y="900" width="22" height="15" fill="rgb(232,195,30)"/><text x="35.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="916" width="22" height="15" fill="rgb(208,174,30)"/><text x="35.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="932" width="22" height="15" fill="rgb(248,73,6)"/><text x="35.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.89%)</title><rect x="32" y="948" width="22" height="15" fill="rgb(248,99,0)"/><text x="35.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.89%)</title><rect x="32" y="964" width="22" height="15" fill="rgb(241,55,52)"/><text x="35.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.89%)</title><rect x="32" y="980" width="22" height="15" fill="rgb(238,135,14)"/><text x="35.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="996" width="22" height="15" fill="rgb(242,26,19)"/><text x="35.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (7 samples, 1.89%)</title><rect x="32" y="1012" width="22" height="15" fill="rgb(229,163,50)"/><text x="35.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.89%)</title><rect x="32" y="1028" width="22" height="15" fill="rgb(228,179,32)"/><text x="35.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.89%)</title><rect x="32" y="1044" width="22" height="15" fill="rgb(237,207,50)"/><text x="35.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.89%)</title><rect x="32" y="1060" width="22" height="15" fill="rgb(224,228,48)"/><text x="35.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.89%)</title><rect x="32" y="1076" width="22" height="15" fill="rgb(226,197,16)"/><text x="35.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.89%)</title><rect x="32" y="1092" width="22" height="15" fill="rgb(254,155,7)"/><text x="35.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.08%)</title><rect x="41" y="1108" width="13" height="15" fill="rgb(207,128,43)"/><text x="44.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.08%)</title><rect x="41" y="1124" width="13" height="15" fill="rgb(217,150,51)"/><text x="44.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.08%)</title><rect x="41" y="1140" width="13" height="15" fill="rgb(253,185,27)"/><text x="44.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.08%)</title><rect x="41" y="1156" width="13" height="15" fill="rgb(232,158,19)"/><text x="44.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.08%)</title><rect x="41" y="1172" width="13" height="15" fill="rgb(237,140,17)"/><text x="44.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.08%)</title><rect x="41" y="1188" width="13" height="15" fill="rgb(218,110,45)"/><text x="44.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.08%)</title><rect x="41" y="1204" width="13" height="15" fill="rgb(212,92,11)"/><text x="44.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.08%)</title><rect x="41" y="1220" width="13" height="15" fill="rgb(253,87,28)"/><text x="44.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:23) (1 samples, 0.27%)</title><rect x="51" y="1236" width="3" height="15" fill="rgb(248,101,29)"/><text x="54.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="51" y="1252" width="3" height="15" fill="rgb(218,223,39)"/><text x="54.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="51" y="1268" width="3" height="15" fill="rgb(246,103,12)"/><text x="54.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="51" y="1284" width="3" height="15" fill="rgb(241,89,38)"/><text x="54.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="51" y="1300" width="3" height="15" fill="rgb(250,221,14)"/><text x="54.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="51" y="1316" width="3" height="15" fill="rgb(214,34,29)"/><text x="54.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.27%)</title><rect x="51" y="1332" width="3" height="15" fill="rgb(220,70,29)"/><text x="54.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.27%)</title><rect x="51" y="1348" width="3" height="15" fill="rgb(205,89,17)"/><text x="54.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.27%)</title><rect x="51" y="1364" width="3" height="15" fill="rgb(212,17,40)"/><text x="54.00" y="1374.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.27%)</title><rect x="51" y="1380" width="3" height="15" fill="rgb(238,163,29)"/><text x="54.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:40) (1 samples, 0.27%)</title><rect x="54" y="52" width="3" height="15" fill="rgb(252,20,26)"/><text x="57.00" y="62.50"></text></g><g><title>start (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:11) (1 samples, 0.27%)</title><rect x="54" y="68" width="3" height="15" fill="rgb(252,119,6)"/><text x="57.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:39) (1 samples, 0.27%)</title><rect x="54" y="84" width="3" height="15" fill="rgb(228,191,28)"/><text x="57.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.27%)</title><rect x="54" y="100" width="3" height="15" fill="rgb(225,214,30)"/><text x="57.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:627) (1 samples, 0.27%)</title><rect x="54" y="116" width="3" height="15" fill="rgb(215,163,24)"/><text x="57.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (1 samples, 0.27%)</title><rect x="54" y="132" width="3" height="15" fill="rgb(214,182,16)"/><text x="57.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (1 samples, 0.27%)</title><rect x="54" y="148" width="3" height="15" fill="rgb(225,54,16)"/><text x="57.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:221) (1 samples, 0.27%)</title><rect x="54" y="164" width="3" height="15" fill="rgb(211,160,50)"/><text x="57.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (1 samples, 0.27%)</title><rect x="54" y="180" width="3" height="15" fill="rgb(242,124,4)"/><text x="57.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.27%)</title><rect x="54" y="196" width="3" height="15" fill="rgb(231,56,2)"/><text x="57.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.27%)</title><rect x="54" y="212" width="3" height="15" fill="rgb(226,33,31)"/><text x="57.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.27%)</title><rect x="54" y="228" width="3" height="15" fill="rgb(221,188,11)"/><text x="57.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.27%)</title><rect x="54" y="244" width="3" height="15" fill="rgb(240,132,21)"/><text x="57.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.27%)</title><rect x="54" y="260" width="3" height="15" fill="rgb(212,5,42)"/><text x="57.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="54" y="276" width="3" height="15" fill="rgb(237,169,17)"/><text x="57.00" y="286.50"></text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="54" y="292" width="3" height="15" fill="rgb(234,92,14)"/><text x="57.00" y="302.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="54" y="308" width="3" height="15" fill="rgb(226,211,21)"/><text x="57.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="54" y="324" width="3" height="15" fill="rgb(248,173,51)"/><text x="57.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="54" y="340" width="3" height="15" fill="rgb(230,214,37)"/><text x="57.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.27%)</title><rect x="54" y="356" width="3" height="15" fill="rgb(216,187,15)"/><text x="57.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:47) (1 samples, 0.27%)</title><rect x="57" y="52" width="3" height="15" fill="rgb(233,91,15)"/><text x="60.00" y="62.50"></text></g><g><title>profile0_skl (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:46) (1 samples, 0.27%)</title><rect x="57" y="68" width="3" height="15" fill="rgb(234,98,11)"/><text x="60.00" y="78.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:26) (1 samples, 0.27%)</title><rect x="57" y="84" width="3" height="15" fill="rgb(231,37,32)"/><text x="60.00" y="94.50"></text></g><g><title>profile0 (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:18) (1 samples, 0.27%)</title><rect x="57" y="100" width="3" height="15" fill="rgb(213,7,33)"/><text x="60.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.27%)</title><rect x="57" y="116" width="3" height="15" fill="rgb(241,91,9)"/><text x="60.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.27%)</title><rect x="57" y="132" width="3" height="15" fill="rgb(231,16,17)"/><text x="60.00" y="142.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (1 samples, 0.27%)</title><rect x="57" y="148" width="3" height="15" fill="rgb(244,49,44)"/><text x="60.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (1 samples, 0.27%)</title><rect x="57" y="164" width="3" height="15" fill="rgb(223,96,4)"/><text x="60.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (1 samples, 0.27%)</title><rect x="57" y="180" width="3" height="15" fill="rgb(251,110,10)"/><text x="60.00" y="190.50"></text></g><g><title>relu (sklearn/neural_network/_base.py:75) (1 samples, 0.27%)</title><rect x="57" y="196" width="3" height="15" fill="rgb(229,193,7)"/><text x="60.00" y="206.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (1 samples, 0.27%)</title><rect x="57" y="212" width="3" height="15" fill="rgb(212,220,35)"/><text x="60.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.27%)</title><rect x="57" y="228" width="3" height="15" fill="rgb(238,135,22)"/><text x="60.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (1 samples, 0.27%)</title><rect x="57" y="244" width="3" height="15" fill="rgb(221,114,20)"/><text x="60.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.27%)</title><rect x="57" y="260" width="3" height="15" fill="rgb(241,91,2)"/><text x="60.00" y="270.50"></text></g><g><title>array_clip (methods.c:2381) (1 samples, 0.27%)</title><rect x="57" y="276" width="3" height="15" fill="rgb(209,19,30)"/><text x="60.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.27%)</title><rect x="57" y="292" width="3" height="15" fill="rgb(205,84,34)"/><text x="60.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py:132) (1 samples, 0.27%)</title><rect x="57" y="308" width="3" height="15" fill="rgb(211,87,20)"/><text x="60.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (1 samples, 0.27%)</title><rect x="57" y="324" width="3" height="15" fill="rgb(207,57,15)"/><text x="60.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.27%)</title><rect x="57" y="340" width="3" height="15" fill="rgb(240,144,20)"/><text x="60.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.27%)</title><rect x="57" y="356" width="3" height="15" fill="rgb(208,151,27)"/><text x="60.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.27%)</title><rect x="57" y="372" width="3" height="15" fill="rgb(253,176,28)"/><text x="60.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.27%)</title><rect x="57" y="388" width="3" height="15" fill="rgb(240,120,50)"/><text x="60.00" y="398.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (1 samples, 0.27%)</title><rect x="57" y="404" width="3" height="15" fill="rgb(250,54,8)"/><text x="60.00" y="414.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (1 samples, 0.27%)</title><rect x="60" y="164" width="4" height="15" fill="rgb(225,32,5)"/><text x="63.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.27%)</title><rect x="60" y="180" width="4" height="15" fill="rgb(220,143,33)"/><text x="63.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.27%)</title><rect x="60" y="196" width="4" height="15" fill="rgb(251,107,25)"/><text x="63.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.27%)</title><rect x="60" y="212" width="4" height="15" fill="rgb(252,189,16)"/><text x="63.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.27%)</title><rect x="60" y="228" width="4" height="15" fill="rgb(230,103,33)"/><text x="63.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.27%)</title><rect x="60" y="244" width="4" height="15" fill="rgb(225,214,53)"/><text x="63.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.27%)</title><rect x="60" y="260" width="4" height="15" fill="rgb(241,217,11)"/><text x="63.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.27%)</title><rect x="60" y="276" width="4" height="15" fill="rgb(236,167,23)"/><text x="63.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="60" y="292" width="4" height="15" fill="rgb(246,149,19)"/><text x="63.00" y="302.50"></text></g><g><title>0x7f5b42c6b414 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="60" y="308" width="4" height="15" fill="rgb(232,198,2)"/><text x="63.00" y="318.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.81%)</title><rect x="64" y="212" width="9" height="15" fill="rgb(220,78,28)"/><text x="67.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (35 samples, 9.43%)</title><rect x="73" y="212" width="111" height="15" fill="rgb(211,75,35)"/><text x="76.00" y="222.50">dgemm_kernel_..</text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.54%)</title><rect x="184" y="212" width="7" height="15" fill="rgb(226,67,23)"/><text x="187.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.27%)</title><rect x="191" y="260" width="3" height="15" fill="rgb(229,202,54)"/><text x="194.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.27%)</title><rect x="191" y="276" width="3" height="15" fill="rgb(221,67,35)"/><text x="194.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.27%)</title><rect x="194" y="276" width="3" height="15" fill="rgb(247,118,54)"/><text x="197.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.27%)</title><rect x="194" y="292" width="3" height="15" fill="rgb(226,169,17)"/><text x="197.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.27%)</title><rect x="194" y="308" width="3" height="15" fill="rgb(245,203,5)"/><text x="197.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.27%)</title><rect x="194" y="324" width="3" height="15" fill="rgb(208,188,2)"/><text x="197.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.27%)</title><rect x="194" y="340" width="3" height="15" fill="rgb(224,153,20)"/><text x="197.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.27%)</title><rect x="194" y="356" width="3" height="15" fill="rgb(248,181,47)"/><text x="197.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.27%)</title><rect x="194" y="372" width="3" height="15" fill="rgb(205,131,53)"/><text x="197.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="194" y="388" width="3" height="15" fill="rgb(225,91,24)"/><text x="197.00" y="398.50"></text></g><g><title>0x7f5b42c6ab12 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="194" y="404" width="3" height="15" fill="rgb(212,100,32)"/><text x="197.00" y="414.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (7 samples, 1.89%)</title><rect x="197" y="308" width="22" height="15" fill="rgb(237,158,24)"/><text x="200.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (7 samples, 1.89%)</title><rect x="197" y="324" width="22" height="15" fill="rgb(237,217,6)"/><text x="200.00" y="334.50">_..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (9 samples, 2.43%)</title><rect x="197" y="276" width="29" height="15" fill="rgb(218,37,44)"/><text x="200.00" y="286.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (9 samples, 2.43%)</title><rect x="197" y="292" width="29" height="15" fill="rgb(234,20,35)"/><text x="200.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.54%)</title><rect x="219" y="308" width="7" height="15" fill="rgb(216,69,22)"/><text x="222.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (12 samples, 3.23%)</title><rect x="191" y="244" width="38" height="15" fill="rgb(212,185,14)"/><text x="194.00" y="254.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (11 samples, 2.96%)</title><rect x="194" y="260" width="35" height="15" fill="rgb(246,126,6)"/><text x="197.00" y="270.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.27%)</title><rect x="226" y="276" width="3" height="15" fill="rgb(236,26,18)"/><text x="229.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1961) (1 samples, 0.27%)</title><rect x="226" y="292" width="3" height="15" fill="rgb(219,33,30)"/><text x="229.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.27%)</title><rect x="229" y="244" width="3" height="15" fill="rgb(214,78,31)"/><text x="232.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:169) (1 samples, 0.27%)</title><rect x="229" y="260" width="3" height="15" fill="rgb(237,189,35)"/><text x="232.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:274) (1 samples, 0.27%)</title><rect x="229" y="276" width="3" height="15" fill="rgb(218,92,33)"/><text x="232.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1777) (1 samples, 0.27%)</title><rect x="229" y="292" width="3" height="15" fill="rgb(234,150,0)"/><text x="232.00" y="302.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.54%)</title><rect x="235" y="340" width="7" height="15" fill="rgb(243,131,47)"/><text x="238.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.54%)</title><rect x="235" y="356" width="7" height="15" fill="rgb(214,149,42)"/><text x="238.00" y="366.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (24 samples, 6.47%)</title><rect x="232" y="260" width="76" height="15" fill="rgb(248,41,29)"/><text x="235.00" y="270.50">DOUBLE_m..</text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (24 samples, 6.47%)</title><rect x="232" y="276" width="76" height="15" fill="rgb(233,11,51)"/><text x="235.00" y="286.50">DOUBLE_g..</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.47%)</title><rect x="232" y="292" width="76" height="15" fill="rgb(232,213,21)"/><text x="235.00" y="302.50">cblas_dg..</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 6.20%)</title><rect x="235" y="308" width="73" height="15" fill="rgb(243,78,45)"/><text x="238.00" y="318.50">dgemv_th..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 6.20%)</title><rect x="235" y="324" width="73" height="15" fill="rgb(235,177,27)"/><text x="238.00" y="334.50">exec_bla..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 5.66%)</title><rect x="242" y="340" width="66" height="15" fill="rgb(252,15,50)"/><text x="245.00" y="350.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (21 samples, 5.66%)</title><rect x="242" y="356" width="66" height="15" fill="rgb(239,13,46)"/><text x="245.00" y="366.50">sched_y..</text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="308" y="340" width="4" height="15" fill="rgb(206,38,29)"/><text x="311.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="308" y="356" width="4" height="15" fill="rgb(240,168,48)"/><text x="311.00" y="366.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="308" y="372" width="4" height="15" fill="rgb(242,116,45)"/><text x="311.00" y="382.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.77%)</title><rect x="312" y="340" width="44" height="15" fill="rgb(220,66,24)"/><text x="315.00" y="350.50">exec..</text></g><g><title>sched_yield (libc-2.29.so) (14 samples, 3.77%)</title><rect x="312" y="356" width="44" height="15" fill="rgb(213,10,54)"/><text x="315.00" y="366.50">sche..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (96 samples, 25.88%)</title><rect x="64" y="180" width="305" height="15" fill="rgb(214,113,29)"/><text x="67.00" y="190.50">_forward_pass (sklearn/neural_network/_mu..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (96 samples, 25.88%)</title><rect x="64" y="196" width="305" height="15" fill="rgb(214,75,40)"/><text x="67.00" y="206.50">safe_sparse_dot (sklearn/utils/extmath.py..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (56 samples, 15.09%)</title><rect x="191" y="212" width="178" height="15" fill="rgb(242,152,14)"/><text x="194.00" y="222.50">ufunc_generic_call (ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (56 samples, 15.09%)</title><rect x="191" y="228" width="178" height="15" fill="rgb(219,148,29)"/><text x="194.00" y="238.50">PyUFunc_GenericFunction..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (43 samples, 11.59%)</title><rect x="232" y="244" width="137" height="15" fill="rgb(223,132,39)"/><text x="235.00" y="254.50">PyUFunc_Generaliz..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (19 samples, 5.12%)</title><rect x="308" y="260" width="61" height="15" fill="rgb(235,150,33)"/><text x="311.00" y="270.50">DOUBLE..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 5.12%)</title><rect x="308" y="276" width="61" height="15" fill="rgb(247,167,26)"/><text x="311.00" y="286.50">cblas_..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 5.12%)</title><rect x="308" y="292" width="61" height="15" fill="rgb(219,41,22)"/><text x="311.00" y="302.50">dgemm_..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 5.12%)</title><rect x="308" y="308" width="61" height="15" fill="rgb(238,35,35)"/><text x="311.00" y="318.50">gemm_d..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 5.12%)</title><rect x="308" y="324" width="61" height="15" fill="rgb(224,3,34)"/><text x="311.00" y="334.50">exec_b..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.08%)</title><rect x="356" y="340" width="13" height="15" fill="rgb(207,3,44)"/><text x="359.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.81%)</title><rect x="359" y="356" width="10" height="15" fill="rgb(216,156,52)"/><text x="362.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (6 samples, 1.62%)</title><rect x="369" y="292" width="19" height="15" fill="rgb(250,95,27)"/><text x="372.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (6 samples, 1.62%)</title><rect x="369" y="308" width="19" height="15" fill="rgb(230,149,15)"/><text x="372.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (11 samples, 2.96%)</title><rect x="369" y="260" width="35" height="15" fill="rgb(233,11,50)"/><text x="372.00" y="270.50">DO..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (11 samples, 2.96%)</title><rect x="369" y="276" width="35" height="15" fill="rgb(252,26,46)"/><text x="372.00" y="286.50">ru..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (5 samples, 1.35%)</title><rect x="388" y="292" width="16" height="15" fill="rgb(232,103,35)"/><text x="391.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 1.35%)</title><rect x="388" y="308" width="16" height="15" fill="rgb(238,175,30)"/><text x="391.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.27%)</title><rect x="404" y="292" width="3" height="15" fill="rgb(249,197,23)"/><text x="407.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (13 samples, 3.50%)</title><rect x="369" y="244" width="41" height="15" fill="rgb(219,94,46)"/><text x="372.00" y="254.50">ite..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (2 samples, 0.54%)</title><rect x="404" y="260" width="6" height="15" fill="rgb(231,83,36)"/><text x="407.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.54%)</title><rect x="404" y="276" width="6" height="15" fill="rgb(228,222,48)"/><text x="407.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.27%)</title><rect x="407" y="292" width="3" height="15" fill="rgb(213,118,12)"/><text x="410.00" y="302.50"></text></g><g><title>0x7f5b42c89ebe (libc-2.29.so) (1 samples, 0.27%)</title><rect x="407" y="308" width="3" height="15" fill="rgb(209,76,12)"/><text x="410.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.27%)</title><rect x="410" y="260" width="3" height="15" fill="rgb(213,150,51)"/><text x="413.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.27%)</title><rect x="410" y="276" width="3" height="15" fill="rgb(252,215,49)"/><text x="413.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (15 samples, 4.04%)</title><rect x="369" y="180" width="48" height="15" fill="rgb(223,10,38)"/><text x="372.00" y="190.50">_for..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 4.04%)</title><rect x="369" y="196" width="48" height="15" fill="rgb(214,190,49)"/><text x="372.00" y="206.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 4.04%)</title><rect x="369" y="212" width="48" height="15" fill="rgb(245,228,6)"/><text x="372.00" y="222.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 4.04%)</title><rect x="369" y="228" width="48" height="15" fill="rgb(230,209,44)"/><text x="372.00" y="238.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.54%)</title><rect x="410" y="244" width="7" height="15" fill="rgb(229,190,8)"/><text x="413.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.27%)</title><rect x="413" y="260" width="4" height="15" fill="rgb(217,170,3)"/><text x="416.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.27%)</title><rect x="423" y="308" width="3" height="15" fill="rgb(243,129,30)"/><text x="426.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.54%)</title><rect x="429" y="324" width="7" height="15" fill="rgb(252,64,6)"/><text x="432.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.54%)</title><rect x="429" y="340" width="7" height="15" fill="rgb(205,9,1)"/><text x="432.00" y="350.50"></text></g><g><title>0x7f5b42c7fe7a (libc-2.29.so) (1 samples, 0.27%)</title><rect x="433" y="356" width="3" height="15" fill="rgb(215,67,19)"/><text x="436.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.27%)</title><rect x="436" y="324" width="3" height="15" fill="rgb(232,164,32)"/><text x="439.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.27%)</title><rect x="436" y="340" width="3" height="15" fill="rgb(208,10,40)"/><text x="439.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.27%)</title><rect x="436" y="356" width="3" height="15" fill="rgb(251,175,22)"/><text x="439.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.27%)</title><rect x="436" y="372" width="3" height="15" fill="rgb(223,16,40)"/><text x="439.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.27%)</title><rect x="439" y="340" width="3" height="15" fill="rgb(243,139,54)"/><text x="442.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.27%)</title><rect x="439" y="356" width="3" height="15" fill="rgb(223,187,43)"/><text x="442.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.27%)</title><rect x="439" y="372" width="3" height="15" fill="rgb(253,216,46)"/><text x="442.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.27%)</title><rect x="439" y="388" width="3" height="15" fill="rgb(230,148,31)"/><text x="442.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (6 samples, 1.62%)</title><rect x="426" y="308" width="19" height="15" fill="rgb(217,27,13)"/><text x="429.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (2 samples, 0.54%)</title><rect x="439" y="324" width="6" height="15" fill="rgb(237,96,5)"/><text x="442.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.27%)</title><rect x="442" y="340" width="3" height="15" fill="rgb(250,198,13)"/><text x="445.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.27%)</title><rect x="442" y="356" width="3" height="15" fill="rgb(243,117,32)"/><text x="445.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.27%)</title><rect x="442" y="372" width="3" height="15" fill="rgb(254,219,46)"/><text x="445.00" y="382.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.27%)</title><rect x="442" y="388" width="3" height="15" fill="rgb(213,66,6)"/><text x="445.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (2 samples, 0.54%)</title><rect x="445" y="308" width="7" height="15" fill="rgb(216,207,38)"/><text x="448.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.54%)</title><rect x="445" y="324" width="7" height="15" fill="rgb(229,87,20)"/><text x="448.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.54%)</title><rect x="445" y="340" width="7" height="15" fill="rgb(233,39,6)"/><text x="448.00" y="350.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:80) (1 samples, 0.27%)</title><rect x="455" y="324" width="3" height="15" fill="rgb(213,97,3)"/><text x="458.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.27%)</title><rect x="458" y="356" width="3" height="15" fill="rgb(239,42,39)"/><text x="461.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.27%)</title><rect x="458" y="372" width="3" height="15" fill="rgb(210,21,36)"/><text x="461.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:246) (1 samples, 0.27%)</title><rect x="458" y="388" width="3" height="15" fill="rgb(250,177,8)"/><text x="461.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.27%)</title><rect x="461" y="356" width="3" height="15" fill="rgb(227,185,44)"/><text x="464.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.27%)</title><rect x="461" y="372" width="3" height="15" fill="rgb(254,92,29)"/><text x="464.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.27%)</title><rect x="464" y="404" width="4" height="15" fill="rgb(223,36,2)"/><text x="467.00" y="414.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.27%)</title><rect x="464" y="420" width="4" height="15" fill="rgb(222,11,50)"/><text x="467.00" y="430.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.27%)</title><rect x="464" y="436" width="4" height="15" fill="rgb(224,138,30)"/><text x="467.00" y="446.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.27%)</title><rect x="464" y="452" width="4" height="15" fill="rgb(231,142,10)"/><text x="467.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.27%)</title><rect x="464" y="468" width="4" height="15" fill="rgb(223,142,36)"/><text x="467.00" y="478.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.27%)</title><rect x="468" y="420" width="3" height="15" fill="rgb(243,126,26)"/><text x="471.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.81%)</title><rect x="464" y="388" width="10" height="15" fill="rgb(246,4,23)"/><text x="467.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.54%)</title><rect x="468" y="404" width="6" height="15" fill="rgb(245,136,5)"/><text x="471.00" y="414.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.27%)</title><rect x="471" y="420" width="3" height="15" fill="rgb(251,166,41)"/><text x="474.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.27%)</title><rect x="471" y="436" width="3" height="15" fill="rgb(242,94,1)"/><text x="474.00" y="446.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.27%)</title><rect x="471" y="452" width="3" height="15" fill="rgb(217,170,43)"/><text x="474.00" y="462.50"></text></g><g><title>DOUBLE_clip (clip.c.src:96) (8 samples, 2.16%)</title><rect x="474" y="404" width="25" height="15" fill="rgb(216,1,11)"/><text x="477.00" y="414.50">D..</text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:54) (166 samples, 44.74%)</title><rect x="60" y="52" width="528" height="15" fill="rgb(234,33,8)"/><text x="63.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:53) (166 samples, 44.74%)</title><rect x="60" y="68" width="528" height="15" fill="rgb(212,125,51)"/><text x="63.00" y="78.50">profile_skl (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:37) (166 samples, 44.74%)</title><rect x="60" y="84" width="528" height="15" fill="rgb(206,19,19)"/><text x="63.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:31) (166 samples, 44.74%)</title><rect x="60" y="100" width="528" height="15" fill="rgb(215,156,6)"/><text x="63.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (166 samples, 44.74%)</title><rect x="60" y="116" width="528" height="15" fill="rgb(231,15,31)"/><text x="63.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (166 samples, 44.74%)</title><rect x="60" y="132" width="528" height="15" fill="rgb(250,40,29)"/><text x="63.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (166 samples, 44.74%)</title><rect x="60" y="148" width="528" height="15" fill="rgb(246,190,23)"/><text x="63.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py:1333)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (165 samples, 44.47%)</title><rect x="64" y="164" width="524" height="15" fill="rgb(214,112,30)"/><text x="67.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py:685)</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (54 samples, 14.56%)</title><rect x="417" y="180" width="171" height="15" fill="rgb(218,131,31)"/><text x="420.00" y="190.50">_forward_pass (sklearn..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (54 samples, 14.56%)</title><rect x="417" y="196" width="171" height="15" fill="rgb(250,217,9)"/><text x="420.00" y="206.50">relu (sklearn/neural_n..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (54 samples, 14.56%)</title><rect x="417" y="212" width="171" height="15" fill="rgb(218,23,33)"/><text x="420.00" y="222.50">clip (&lt;__array_functio..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (54 samples, 14.56%)</title><rect x="417" y="228" width="171" height="15" fill="rgb(242,58,4)"/><text x="420.00" y="238.50">array_implement_array_..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (54 samples, 14.56%)</title><rect x="417" y="244" width="171" height="15" fill="rgb(213,225,0)"/><text x="420.00" y="254.50">clip (numpy/core/fromn..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (52 samples, 14.02%)</title><rect x="423" y="260" width="165" height="15" fill="rgb(237,163,47)"/><text x="426.00" y="270.50">_wrapfunc (numpy/core..</text></g><g><title>array_clip (methods.c:2381) (52 samples, 14.02%)</title><rect x="423" y="276" width="165" height="15" fill="rgb(248,80,12)"/><text x="426.00" y="286.50">array_clip (methods.c..</text></g><g><title>forward_ndarray_method (methods.c:108) (52 samples, 14.02%)</title><rect x="423" y="292" width="165" height="15" fill="rgb(224,74,52)"/><text x="426.00" y="302.50">forward_ndarray_metho..</text></g><g><title>_clip (numpy/core/_methods.py:132) (43 samples, 11.59%)</title><rect x="452" y="308" width="136" height="15" fill="rgb(205,34,11)"/><text x="455.00" y="318.50">_clip (numpy/core..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (41 samples, 11.05%)</title><rect x="458" y="324" width="130" height="15" fill="rgb(243,143,41)"/><text x="461.00" y="334.50">_clip_dep_invoke..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (41 samples, 11.05%)</title><rect x="458" y="340" width="130" height="15" fill="rgb(222,218,19)"/><text x="461.00" y="350.50">ufunc_generic_ca..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (39 samples, 10.51%)</title><rect x="464" y="356" width="124" height="15" fill="rgb(228,85,17)"/><text x="467.00" y="366.50">PyUFunc_Generic..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (39 samples, 10.51%)</title><rect x="464" y="372" width="124" height="15" fill="rgb(252,184,37)"/><text x="467.00" y="382.50">execute_legacy_..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (36 samples, 9.70%)</title><rect x="474" y="388" width="114" height="15" fill="rgb(238,15,5)"/><text x="477.00" y="398.50">iterator_loop ..</text></g><g><title>DOUBLE_clip (clip.c.src:97) (28 samples, 7.55%)</title><rect x="499" y="404" width="89" height="15" fill="rgb(233,219,42)"/><text x="502.00" y="414.50">DOUBLE_cli..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:36) (1 samples, 0.27%)</title><rect x="588" y="84" width="4" height="15" fill="rgb(232,90,17)"/><text x="591.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.27%)</title><rect x="588" y="100" width="4" height="15" fill="rgb(208,227,18)"/><text x="591.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.27%)</title><rect x="588" y="116" width="4" height="15" fill="rgb(245,114,11)"/><text x="591.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.27%)</title><rect x="588" y="132" width="4" height="15" fill="rgb(229,24,11)"/><text x="591.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.27%)</title><rect x="588" y="148" width="4" height="15" fill="rgb(229,119,20)"/><text x="591.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.27%)</title><rect x="588" y="164" width="4" height="15" fill="rgb(221,194,2)"/><text x="591.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.27%)</title><rect x="588" y="180" width="4" height="15" fill="rgb(240,101,22)"/><text x="591.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.27%)</title><rect x="588" y="196" width="4" height="15" fill="rgb(230,218,28)"/><text x="591.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="588" y="212" width="4" height="15" fill="rgb(246,34,44)"/><text x="591.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="588" y="228" width="4" height="15" fill="rgb(207,24,30)"/><text x="591.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="588" y="244" width="4" height="15" fill="rgb(222,117,2)"/><text x="591.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="588" y="260" width="4" height="15" fill="rgb(224,5,51)"/><text x="591.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="588" y="276" width="4" height="15" fill="rgb(241,181,8)"/><text x="591.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.27%)</title><rect x="588" y="292" width="4" height="15" fill="rgb(227,219,13)"/><text x="591.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="588" y="308" width="4" height="15" fill="rgb(222,26,8)"/><text x="591.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="588" y="324" width="4" height="15" fill="rgb(245,42,47)"/><text x="591.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="588" y="340" width="4" height="15" fill="rgb(214,67,3)"/><text x="591.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="588" y="356" width="4" height="15" fill="rgb(251,70,45)"/><text x="591.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="588" y="372" width="4" height="15" fill="rgb(226,200,54)"/><text x="591.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.27%)</title><rect x="588" y="388" width="4" height="15" fill="rgb(213,14,42)"/><text x="591.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="588" y="404" width="4" height="15" fill="rgb(225,134,33)"/><text x="591.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="588" y="420" width="4" height="15" fill="rgb(212,55,4)"/><text x="591.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="588" y="436" width="4" height="15" fill="rgb(227,63,20)"/><text x="591.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="588" y="452" width="4" height="15" fill="rgb(250,119,14)"/><text x="591.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="588" y="468" width="4" height="15" fill="rgb(247,111,53)"/><text x="591.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.27%)</title><rect x="588" y="484" width="4" height="15" fill="rgb(231,134,37)"/><text x="591.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.27%)</title><rect x="588" y="500" width="4" height="15" fill="rgb(206,161,21)"/><text x="591.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.27%)</title><rect x="588" y="516" width="4" height="15" fill="rgb(209,51,31)"/><text x="591.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.27%)</title><rect x="588" y="532" width="4" height="15" fill="rgb(235,183,11)"/><text x="591.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.27%)</title><rect x="588" y="548" width="4" height="15" fill="rgb(219,0,53)"/><text x="591.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.27%)</title><rect x="588" y="564" width="4" height="15" fill="rgb(223,156,51)"/><text x="591.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.27%)</title><rect x="588" y="580" width="4" height="15" fill="rgb(214,151,52)"/><text x="591.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.27%)</title><rect x="588" y="596" width="4" height="15" fill="rgb(247,0,7)"/><text x="591.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.27%)</title><rect x="588" y="612" width="4" height="15" fill="rgb(242,148,41)"/><text x="591.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.27%)</title><rect x="588" y="628" width="4" height="15" fill="rgb(240,184,6)"/><text x="591.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.27%)</title><rect x="588" y="644" width="4" height="15" fill="rgb(233,24,19)"/><text x="591.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.27%)</title><rect x="588" y="660" width="4" height="15" fill="rgb(232,113,46)"/><text x="591.00" y="670.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.27%)</title><rect x="588" y="676" width="4" height="15" fill="rgb(220,184,27)"/><text x="591.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.27%)</title><rect x="588" y="692" width="4" height="15" fill="rgb(248,212,21)"/><text x="591.00" y="702.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.27%)</title><rect x="588" y="708" width="4" height="15" fill="rgb(231,83,18)"/><text x="591.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.27%)</title><rect x="588" y="724" width="4" height="15" fill="rgb(205,82,27)"/><text x="591.00" y="734.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.27%)</title><rect x="588" y="740" width="4" height="15" fill="rgb(209,125,26)"/><text x="591.00" y="750.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.27%)</title><rect x="588" y="756" width="4" height="15" fill="rgb(245,130,53)"/><text x="591.00" y="766.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.27%)</title><rect x="588" y="772" width="4" height="15" fill="rgb(225,126,25)"/><text x="591.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.27%)</title><rect x="588" y="788" width="4" height="15" fill="rgb(216,100,2)"/><text x="591.00" y="798.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.27%)</title><rect x="588" y="804" width="4" height="15" fill="rgb(245,67,34)"/><text x="591.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.27%)</title><rect x="588" y="820" width="4" height="15" fill="rgb(248,12,3)"/><text x="591.00" y="830.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.27%)</title><rect x="592" y="180" width="3" height="15" fill="rgb(223,103,29)"/><text x="595.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.27%)</title><rect x="601" y="196" width="3" height="15" fill="rgb(211,162,2)"/><text x="604.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.27%)</title><rect x="601" y="212" width="3" height="15" fill="rgb(223,10,38)"/><text x="604.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.27%)</title><rect x="601" y="228" width="3" height="15" fill="rgb(223,42,52)"/><text x="604.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.27%)</title><rect x="601" y="244" width="3" height="15" fill="rgb(217,117,33)"/><text x="604.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.27%)</title><rect x="601" y="260" width="3" height="15" fill="rgb(246,96,30)"/><text x="604.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.27%)</title><rect x="601" y="276" width="3" height="15" fill="rgb(219,203,39)"/><text x="604.00" y="286.50"></text></g><g><title>0x7f5b42c89d94 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="601" y="292" width="3" height="15" fill="rgb(213,148,32)"/><text x="604.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:18) (1 samples, 0.27%)</title><rect x="604" y="228" width="3" height="15" fill="rgb(220,22,34)"/><text x="607.00" y="238.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.27%)</title><rect x="607" y="340" width="4" height="15" fill="rgb(217,157,22)"/><text x="610.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:311) (1 samples, 0.27%)</title><rect x="607" y="356" width="4" height="15" fill="rgb(214,48,26)"/><text x="610.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.54%)</title><rect x="607" y="276" width="7" height="15" fill="rgb(227,26,40)"/><text x="610.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.54%)</title><rect x="607" y="292" width="7" height="15" fill="rgb(233,221,31)"/><text x="610.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.54%)</title><rect x="607" y="308" width="7" height="15" fill="rgb(235,71,9)"/><text x="610.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.54%)</title><rect x="607" y="324" width="7" height="15" fill="rgb(246,19,16)"/><text x="610.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.27%)</title><rect x="611" y="340" width="3" height="15" fill="rgb(248,128,15)"/><text x="614.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.27%)</title><rect x="611" y="356" width="3" height="15" fill="rgb(253,160,21)"/><text x="614.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.27%)</title><rect x="611" y="372" width="3" height="15" fill="rgb(207,29,17)"/><text x="614.00" y="382.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (20 samples, 5.39%)</title><rect x="614" y="308" width="63" height="15" fill="rgb(247,165,20)"/><text x="617.00" y="318.50">FLOAT_..</text></g><g><title>FLOAT_maximum (loops.c.src:1868) (7 samples, 1.89%)</title><rect x="677" y="308" width="23" height="15" fill="rgb(240,37,2)"/><text x="680.00" y="318.50">F..</text></g><g><title>FLOAT_maximum (loops.c.src:1869) (1 samples, 0.27%)</title><rect x="700" y="308" width="3" height="15" fill="rgb(234,8,16)"/><text x="703.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (45 samples, 12.13%)</title><rect x="604" y="196" width="143" height="15" fill="rgb(254,4,44)"/><text x="607.00" y="206.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (45 samples, 12.13%)</title><rect x="604" y="212" width="143" height="15" fill="rgb(214,124,6)"/><text x="607.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (44 samples, 11.86%)</title><rect x="607" y="228" width="140" height="15" fill="rgb(248,23,14)"/><text x="610.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (44 samples, 11.86%)</title><rect x="607" y="244" width="140" height="15" fill="rgb(213,2,33)"/><text x="610.00" y="254.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (44 samples, 11.86%)</title><rect x="607" y="260" width="140" height="15" fill="rgb(241,139,52)"/><text x="610.00" y="270.50">PyUFunc_GenericFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (42 samples, 11.32%)</title><rect x="614" y="276" width="133" height="15" fill="rgb(207,148,33)"/><text x="617.00" y="286.50">execute_legacy_u..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (42 samples, 11.32%)</title><rect x="614" y="292" width="133" height="15" fill="rgb(208,45,0)"/><text x="617.00" y="302.50">trivial_three_op..</text></g><g><title>FLOAT_maximum (loops.c.src:1871) (14 samples, 3.77%)</title><rect x="703" y="308" width="44" height="15" fill="rgb(232,66,17)"/><text x="706.00" y="318.50">FLOA..</text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (1 samples, 0.27%)</title><rect x="747" y="340" width="4" height="15" fill="rgb(247,199,7)"/><text x="750.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (1 samples, 0.27%)</title><rect x="747" y="356" width="4" height="15" fill="rgb(230,182,49)"/><text x="750.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (2 samples, 0.54%)</title><rect x="747" y="228" width="7" height="15" fill="rgb(205,162,50)"/><text x="750.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.54%)</title><rect x="747" y="244" width="7" height="15" fill="rgb(247,4,19)"/><text x="750.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.54%)</title><rect x="747" y="260" width="7" height="15" fill="rgb(231,207,1)"/><text x="750.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.54%)</title><rect x="747" y="276" width="7" height="15" fill="rgb(222,78,6)"/><text x="750.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.54%)</title><rect x="747" y="292" width="7" height="15" fill="rgb(232,14,21)"/><text x="750.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (2 samples, 0.54%)</title><rect x="747" y="308" width="7" height="15" fill="rgb(241,49,24)"/><text x="750.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (2 samples, 0.54%)</title><rect x="747" y="324" width="7" height="15" fill="rgb(240,47,5)"/><text x="750.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.27%)</title><rect x="751" y="340" width="3" height="15" fill="rgb(244,81,52)"/><text x="754.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.27%)</title><rect x="751" y="356" width="3" height="15" fill="rgb(206,162,12)"/><text x="754.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:13) (1 samples, 0.27%)</title><rect x="754" y="244" width="3" height="15" fill="rgb(254,112,50)"/><text x="757.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:233) (1 samples, 0.27%)</title><rect x="757" y="324" width="3" height="15" fill="rgb(242,101,42)"/><text x="760.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:193) (1 samples, 0.27%)</title><rect x="757" y="340" width="3" height="15" fill="rgb(214,69,36)"/><text x="760.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (11 samples, 2.96%)</title><rect x="760" y="324" width="35" height="15" fill="rgb(208,31,1)"/><text x="763.00" y="334.50">cb..</text></g><g><title>0x7f5b42c8a103 (libc-2.29.so) (11 samples, 2.96%)</title><rect x="760" y="340" width="35" height="15" fill="rgb(225,71,21)"/><text x="763.00" y="350.50">0x..</text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="795" y="404" width="3" height="15" fill="rgb(254,207,53)"/><text x="798.00" y="414.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="795" y="420" width="3" height="15" fill="rgb(215,120,38)"/><text x="798.00" y="430.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="795" y="436" width="3" height="15" fill="rgb(210,207,7)"/><text x="798.00" y="446.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 5.39%)</title><rect x="798" y="404" width="64" height="15" fill="rgb(245,143,19)"/><text x="801.00" y="414.50">exec_bl..</text></g><g><title>sched_yield (libc-2.29.so) (20 samples, 5.39%)</title><rect x="798" y="420" width="64" height="15" fill="rgb(227,48,25)"/><text x="801.00" y="430.50">sched_y..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:562) (25 samples, 6.74%)</title><rect x="795" y="324" width="80" height="15" fill="rgb(218,42,32)"/><text x="798.00" y="334.50">cblas_mat..</text></g><g><title>gemv (cblasfuncs.c:86) (25 samples, 6.74%)</title><rect x="795" y="340" width="80" height="15" fill="rgb(237,162,45)"/><text x="798.00" y="350.50">gemv (cbl..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 6.74%)</title><rect x="795" y="356" width="80" height="15" fill="rgb(218,196,6)"/><text x="798.00" y="366.50">cblas_sge..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 6.74%)</title><rect x="795" y="372" width="80" height="15" fill="rgb(244,90,4)"/><text x="798.00" y="382.50">sgemv_thr..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 6.74%)</title><rect x="795" y="388" width="80" height="15" fill="rgb(234,145,18)"/><text x="798.00" y="398.50">exec_blas..</text></g><g><title>gemv_kernel (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.08%)</title><rect x="862" y="404" width="13" height="15" fill="rgb(245,163,13)"/><text x="865.00" y="414.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.08%)</title><rect x="862" y="420" width="13" height="15" fill="rgb(253,92,4)"/><text x="865.00" y="430.50"></text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.81%)</title><rect x="865" y="436" width="10" height="15" fill="rgb(245,114,37)"/><text x="868.00" y="446.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.96%)</title><rect x="875" y="420" width="35" height="15" fill="rgb(207,114,32)"/><text x="878.00" y="430.50">ex..</text></g><g><title>sched_yield (libc-2.29.so) (11 samples, 2.96%)</title><rect x="875" y="436" width="35" height="15" fill="rgb(210,158,4)"/><text x="878.00" y="446.50">sc..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (13 samples, 3.50%)</title><rect x="875" y="324" width="41" height="15" fill="rgb(233,140,25)"/><text x="878.00" y="334.50">cbl..</text></g><g><title>gemm (cblasfuncs.c:40) (13 samples, 3.50%)</title><rect x="875" y="340" width="41" height="15" fill="rgb(215,100,0)"/><text x="878.00" y="350.50">gem..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 3.50%)</title><rect x="875" y="356" width="41" height="15" fill="rgb(218,87,3)"/><text x="878.00" y="366.50">cbl..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 3.50%)</title><rect x="875" y="372" width="41" height="15" fill="rgb(227,182,49)"/><text x="878.00" y="382.50">sge..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 3.50%)</title><rect x="875" y="388" width="41" height="15" fill="rgb(233,153,11)"/><text x="878.00" y="398.50">gem..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 3.50%)</title><rect x="875" y="404" width="41" height="15" fill="rgb(235,108,45)"/><text x="878.00" y="414.50">exe..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.54%)</title><rect x="910" y="420" width="6" height="15" fill="rgb(237,162,48)"/><text x="913.00" y="430.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.54%)</title><rect x="910" y="436" width="6" height="15" fill="rgb(205,148,11)"/><text x="913.00" y="446.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (51 samples, 13.75%)</title><rect x="757" y="276" width="162" height="15" fill="rgb(229,12,46)"/><text x="760.00" y="286.50">array_implement_arra..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (51 samples, 13.75%)</title><rect x="757" y="292" width="162" height="15" fill="rgb(229,10,43)"/><text x="760.00" y="302.50">array_matrixproduct ..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (51 samples, 13.75%)</title><rect x="757" y="308" width="162" height="15" fill="rgb(243,128,0)"/><text x="760.00" y="318.50">PyArray_MatrixProduc..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.27%)</title><rect x="916" y="324" width="3" height="15" fill="rgb(215,92,39)"/><text x="919.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.27%)</title><rect x="916" y="340" width="3" height="15" fill="rgb(226,58,16)"/><text x="919.00" y="350.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.54%)</title><rect x="919" y="276" width="7" height="15" fill="rgb(209,125,25)"/><text x="922.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (131 samples, 35.31%)</title><rect x="595" y="180" width="416" height="15" fill="rgb(229,130,45)"/><text x="598.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (83 samples, 22.37%)</title><rect x="747" y="196" width="264" height="15" fill="rgb(233,180,50)"/><text x="750.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (83 samples, 22.37%)</title><rect x="747" y="212" width="264" height="15" fill="rgb(248,16,0)"/><text x="750.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (81 samples, 21.83%)</title><rect x="754" y="228" width="257" height="15" fill="rgb(246,164,45)"/><text x="757.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (80 samples, 21.56%)</title><rect x="757" y="244" width="254" height="15" fill="rgb(239,105,23)"/><text x="760.00" y="254.50">numpy_dot_inplace (mlprodict/onnx..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (80 samples, 21.56%)</title><rect x="757" y="260" width="254" height="15" fill="rgb(232,93,52)"/><text x="760.00" y="270.50">dot (&lt;__array_function__ internal..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (27 samples, 7.28%)</title><rect x="926" y="276" width="85" height="15" fill="rgb(229,129,6)"/><text x="929.00" y="286.50">sgemm_kern..</text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:61) (134 samples, 36.12%)</title><rect x="588" y="52" width="427" height="15" fill="rgb(209,220,17)"/><text x="591.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_floa..</text></g><g><title>profile_pyrt (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:60) (134 samples, 36.12%)</title><rect x="588" y="68" width="427" height="15" fill="rgb(211,39,7)"/><text x="591.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_m_reg_1000_50_12_..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:37) (133 samples, 35.85%)</title><rect x="592" y="84" width="423" height="15" fill="rgb(205,85,20)"/><text x="595.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1000_50_1..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:31) (133 samples, 35.85%)</title><rect x="592" y="100" width="423" height="15" fill="rgb(248,66,10)"/><text x="595.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1000_50_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (133 samples, 35.85%)</title><rect x="592" y="116" width="423" height="15" fill="rgb(224,1,15)"/><text x="595.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (133 samples, 35.85%)</title><rect x="592" y="132" width="423" height="15" fill="rgb(220,39,6)"/><text x="595.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (133 samples, 35.85%)</title><rect x="592" y="148" width="423" height="15" fill="rgb(236,190,36)"/><text x="595.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (133 samples, 35.85%)</title><rect x="592" y="164" width="423" height="15" fill="rgb(217,82,54)"/><text x="595.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.27%)</title><rect x="1011" y="180" width="4" height="15" fill="rgb(254,220,34)"/><text x="1014.00" y="190.50"></text></g><g><title>0x7f5b00cacff9 (?) (1 samples, 0.27%)</title><rect x="1015" y="212" width="3" height="15" fill="rgb(209,71,4)"/><text x="1018.00" y="222.50"></text></g><g><title>0x7f5b00ca7ef6 (?) (1 samples, 0.27%)</title><rect x="1015" y="228" width="3" height="15" fill="rgb(216,204,25)"/><text x="1018.00" y="238.50"></text></g><g><title>0x7f5b00c9c962 (?) (1 samples, 0.27%)</title><rect x="1015" y="244" width="3" height="15" fill="rgb(241,13,5)"/><text x="1018.00" y="254.50"></text></g><g><title>0x7f5b00cd07a7 (?) (1 samples, 0.27%)</title><rect x="1015" y="260" width="3" height="15" fill="rgb(239,189,43)"/><text x="1018.00" y="270.50"></text></g><g><title>0x7f5b00cd0379 (?) (1 samples, 0.27%)</title><rect x="1015" y="276" width="3" height="15" fill="rgb(243,50,39)"/><text x="1018.00" y="286.50"></text></g><g><title>0x7f5b0112e8b8 (?) (1 samples, 0.27%)</title><rect x="1015" y="292" width="3" height="15" fill="rgb(208,13,37)"/><text x="1018.00" y="302.50"></text></g><g><title>0x7f5b0112cc7f (?) (1 samples, 0.27%)</title><rect x="1015" y="308" width="3" height="15" fill="rgb(216,8,36)"/><text x="1018.00" y="318.50"></text></g><g><title>0x7f5b0113f99c (?) (1 samples, 0.27%)</title><rect x="1015" y="324" width="3" height="15" fill="rgb(248,200,9)"/><text x="1018.00" y="334.50"></text></g><g><title>0x7f5b00dc47c3 (?) (1 samples, 0.27%)</title><rect x="1015" y="340" width="3" height="15" fill="rgb(248,116,20)"/><text x="1018.00" y="350.50"></text></g><g><title>0x7f5b010adfac (?) (1 samples, 0.27%)</title><rect x="1015" y="356" width="3" height="15" fill="rgb(222,178,10)"/><text x="1018.00" y="366.50"></text></g><g><title>0x7f5af8e250f1 (?) (1 samples, 0.27%)</title><rect x="1015" y="372" width="3" height="15" fill="rgb(251,61,21)"/><text x="1018.00" y="382.50"></text></g><g><title>0x7f5af8e6b4cf (?) (1 samples, 0.27%)</title><rect x="1015" y="388" width="3" height="15" fill="rgb(248,68,23)"/><text x="1018.00" y="398.50"></text></g><g><title>0x7f5af8efd6ad (?) (1 samples, 0.27%)</title><rect x="1015" y="404" width="3" height="15" fill="rgb(211,200,30)"/><text x="1018.00" y="414.50"></text></g><g><title>0x7f5af903f277 (?) (1 samples, 0.27%)</title><rect x="1015" y="420" width="3" height="15" fill="rgb(239,132,17)"/><text x="1018.00" y="430.50"></text></g><g><title>0x7f5af88d4170 (?) (1 samples, 0.27%)</title><rect x="1015" y="436" width="3" height="15" fill="rgb(254,9,43)"/><text x="1018.00" y="446.50"></text></g><g><title>0x7f5af8915b3e (?) (1 samples, 0.27%)</title><rect x="1015" y="452" width="3" height="15" fill="rgb(223,112,47)"/><text x="1018.00" y="462.50"></text></g><g><title>0x7f5af891432a (?) (1 samples, 0.27%)</title><rect x="1015" y="468" width="3" height="15" fill="rgb(240,42,12)"/><text x="1018.00" y="478.50"></text></g><g><title>0x7f5af894e743 (?) (1 samples, 0.27%)</title><rect x="1015" y="484" width="3" height="15" fill="rgb(212,165,13)"/><text x="1018.00" y="494.50"></text></g><g><title>0x7f5af903f5ba (?) (1 samples, 0.27%)</title><rect x="1015" y="500" width="3" height="15" fill="rgb(249,167,32)"/><text x="1018.00" y="510.50"></text></g><g><title>0x7f5af9041934 (?) (1 samples, 0.27%)</title><rect x="1015" y="516" width="3" height="15" fill="rgb(242,204,12)"/><text x="1018.00" y="526.50"></text></g><g><title>0x7f5af9088456 (?) (1 samples, 0.27%)</title><rect x="1015" y="532" width="3" height="15" fill="rgb(245,178,51)"/><text x="1018.00" y="542.50"></text></g><g><title>0x7f5af9a63923 (?) (1 samples, 0.27%)</title><rect x="1015" y="548" width="3" height="15" fill="rgb(208,217,1)"/><text x="1018.00" y="558.50"></text></g><g><title>0x7f5afc781c38 (?) (1 samples, 0.27%)</title><rect x="1015" y="564" width="3" height="15" fill="rgb(247,113,3)"/><text x="1018.00" y="574.50"></text></g><g><title>0x7f5afdff8496 (?) (1 samples, 0.27%)</title><rect x="1015" y="580" width="3" height="15" fill="rgb(242,13,38)"/><text x="1018.00" y="590.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (15 samples, 4.04%)</title><rect x="1018" y="212" width="47" height="15" fill="rgb(238,59,49)"/><text x="1021.00" y="222.50">mkl_..</text></g><g><title>mkl_blas_get_kernel_api_version (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.27%)</title><rect x="1065" y="420" width="4" height="15" fill="rgb(249,35,10)"/><text x="1068.00" y="430.50"></text></g><g><title>mkl_blas_avx_get_kernel_api_version (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.27%)</title><rect x="1065" y="436" width="4" height="15" fill="rgb(228,178,4)"/><text x="1068.00" y="446.50"></text></g><g><title>mkl_blas_avx_sgemm_copyan (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.27%)</title><rect x="1069" y="564" width="3" height="15" fill="rgb(230,59,17)"/><text x="1072.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_copybn (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.54%)</title><rect x="1072" y="564" width="6" height="15" fill="rgb(205,13,17)"/><text x="1075.00" y="574.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (5 samples, 1.35%)</title><rect x="1069" y="452" width="16" height="15" fill="rgb(224,147,31)"/><text x="1072.00" y="462.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (5 samples, 1.35%)</title><rect x="1069" y="468" width="16" height="15" fill="rgb(238,140,2)"/><text x="1072.00" y="478.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (5 samples, 1.35%)</title><rect x="1069" y="484" width="16" height="15" fill="rgb(220,112,27)"/><text x="1072.00" y="494.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (5 samples, 1.35%)</title><rect x="1069" y="500" width="16" height="15" fill="rgb(226,160,0)"/><text x="1072.00" y="510.50"></text></g><g><title>mkl_blas_sgemm_2D_bsrc (onnxruntime/capi/libmklml_intel.so) (5 samples, 1.35%)</title><rect x="1069" y="516" width="16" height="15" fill="rgb(239,133,3)"/><text x="1072.00" y="526.50"></text></g><g><title>mkl_blas_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (5 samples, 1.35%)</title><rect x="1069" y="532" width="16" height="15" fill="rgb(212,141,45)"/><text x="1072.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (5 samples, 1.35%)</title><rect x="1069" y="548" width="16" height="15" fill="rgb(205,191,1)"/><text x="1072.00" y="558.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.54%)</title><rect x="1078" y="564" width="7" height="15" fill="rgb(229,108,9)"/><text x="1081.00" y="574.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.54%)</title><rect x="1078" y="580" width="7" height="15" fill="rgb(210,87,27)"/><text x="1081.00" y="590.50"></text></g><g><title>__kmpc_fork_call (libiomp5.so) (27 samples, 7.28%)</title><rect x="1069" y="436" width="86" height="15" fill="rgb(228,20,54)"/><text x="1072.00" y="446.50">__kmpc_for..</text></g><g><title>__kmp_join_call (libiomp5.so) (22 samples, 5.93%)</title><rect x="1085" y="452" width="70" height="15" fill="rgb(242,39,1)"/><text x="1088.00" y="462.50">__kmp_j..</text></g><g><title>__kmp_internal_join (libiomp5.so) (22 samples, 5.93%)</title><rect x="1085" y="468" width="70" height="15" fill="rgb(208,32,31)"/><text x="1088.00" y="478.50">__kmp_i..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (22 samples, 5.93%)</title><rect x="1085" y="484" width="70" height="15" fill="rgb(209,195,49)"/><text x="1088.00" y="494.50">__kmp_j..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (22 samples, 5.93%)</title><rect x="1085" y="500" width="70" height="15" fill="rgb(210,93,40)"/><text x="1088.00" y="510.50">_INTERN..</text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.54%)</title><rect x="1148" y="516" width="7" height="15" fill="rgb(212,11,26)"/><text x="1151.00" y="526.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (28 samples, 7.55%)</title><rect x="1069" y="420" width="89" height="15" fill="rgb(222,198,8)"/><text x="1072.00" y="430.50">mkl_blas_s..</text></g><g><title>mkl_serv_domain_get_max_threads (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.27%)</title><rect x="1155" y="436" width="3" height="15" fill="rgb(212,106,32)"/><text x="1158.00" y="446.50"></text></g><g><title>mkl_serv_get_dynamic (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.27%)</title><rect x="1155" y="452" width="3" height="15" fill="rgb(250,110,10)"/><text x="1158.00" y="462.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 9.70%)</title><rect x="1065" y="340" width="115" height="15" fill="rgb(230,91,53)"/><text x="1068.00" y="350.50">onnxruntime::G..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 9.70%)</title><rect x="1065" y="356" width="115" height="15" fill="rgb(229,73,45)"/><text x="1068.00" y="366.50">onnxruntime::m..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (36 samples, 9.70%)</title><rect x="1065" y="372" width="115" height="15" fill="rgb(231,182,25)"/><text x="1068.00" y="382.50">cblas_sgemm (o..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (36 samples, 9.70%)</title><rect x="1065" y="388" width="115" height="15" fill="rgb(208,144,14)"/><text x="1068.00" y="398.50">sgemm_ (onnxru..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (36 samples, 9.70%)</title><rect x="1065" y="404" width="115" height="15" fill="rgb(219,137,1)"/><text x="1068.00" y="414.50">mkl_blas_sgemm..</text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (7 samples, 1.89%)</title><rect x="1158" y="420" width="22" height="15" fill="rgb(229,171,9)"/><text x="1161.00" y="430.50">m..</text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (7 samples, 1.89%)</title><rect x="1158" y="436" width="22" height="15" fill="rgb(231,107,8)"/><text x="1161.00" y="446.50">m..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (7 samples, 1.89%)</title><rect x="1158" y="452" width="22" height="15" fill="rgb(248,168,23)"/><text x="1161.00" y="462.50">_..</text></g><g><title>__kmp_join_call (libiomp5.so) (7 samples, 1.89%)</title><rect x="1158" y="468" width="22" height="15" fill="rgb(228,10,14)"/><text x="1161.00" y="478.50">_..</text></g><g><title>__kmp_internal_join (libiomp5.so) (7 samples, 1.89%)</title><rect x="1158" y="484" width="22" height="15" fill="rgb(206,90,30)"/><text x="1161.00" y="494.50">_..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (7 samples, 1.89%)</title><rect x="1158" y="500" width="22" height="15" fill="rgb(227,224,45)"/><text x="1161.00" y="510.50">_..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (7 samples, 1.89%)</title><rect x="1158" y="516" width="22" height="15" fill="rgb(248,208,5)"/><text x="1161.00" y="526.50">_..</text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.54%)</title><rect x="1174" y="532" width="6" height="15" fill="rgb(205,94,35)"/><text x="1177.00" y="542.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="1183" y="420" width="3" height="15" fill="rgb(231,41,25)"/><text x="1186.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="1183" y="436" width="3" height="15" fill="rgb(236,128,0)"/><text x="1186.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="1183" y="452" width="3" height="15" fill="rgb(209,221,23)"/><text x="1186.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="1183" y="468" width="3" height="15" fill="rgb(206,6,13)"/><text x="1186.00" y="478.50"></text></g><g><title>all (371 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,156,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:68) (55 samples, 14.82%)</title><rect x="1015" y="52" width="175" height="15" fill="rgb(218,195,34)"/><text x="1018.00" y="62.50">&lt;module&gt; (bench_MLPReg..</text></g><g><title>profile_ort (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:67) (55 samples, 14.82%)</title><rect x="1015" y="68" width="175" height="15" fill="rgb(237,52,43)"/><text x="1018.00" y="78.50">profile_ort (bench_MLP..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:37) (55 samples, 14.82%)</title><rect x="1015" y="84" width="175" height="15" fill="rgb(239,47,28)"/><text x="1018.00" y="94.50">setup_profile (bench_M..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1000_50_12_float_.py:31) (55 samples, 14.82%)</title><rect x="1015" y="100" width="175" height="15" fill="rgb(220,225,11)"/><text x="1018.00" y="110.50">profile (bench_MLPRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (55 samples, 14.82%)</title><rect x="1015" y="116" width="175" height="15" fill="rgb(248,70,25)"/><text x="1018.00" y="126.50">time_predict (mlprodic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (55 samples, 14.82%)</title><rect x="1015" y="132" width="175" height="15" fill="rgb(238,13,17)"/><text x="1018.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (55 samples, 14.82%)</title><rect x="1015" y="148" width="175" height="15" fill="rgb(216,42,19)"/><text x="1018.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (55 samples, 14.82%)</title><rect x="1015" y="164" width="175" height="15" fill="rgb(222,88,31)"/><text x="1018.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (55 samples, 14.82%)</title><rect x="1015" y="180" width="175" height="15" fill="rgb(216,43,43)"/><text x="1018.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (55 samples, 14.82%)</title><rect x="1015" y="196" width="175" height="15" fill="rgb(235,19,51)"/><text x="1018.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="212" width="125" height="15" fill="rgb(225,217,19)"/><text x="1068.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="228" width="125" height="15" fill="rgb(227,14,54)"/><text x="1068.00" y="238.50">void pybind11::..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="244" width="125" height="15" fill="rgb(212,8,52)"/><text x="1068.00" y="254.50">onnxruntime::py..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="260" width="125" height="15" fill="rgb(221,117,49)"/><text x="1068.00" y="270.50">onnxruntime::In..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="276" width="125" height="15" fill="rgb(221,191,36)"/><text x="1068.00" y="286.50">onnxruntime::In..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="292" width="125" height="15" fill="rgb(208,151,23)"/><text x="1068.00" y="302.50">onnxruntime::ut..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="308" width="125" height="15" fill="rgb(250,148,6)"/><text x="1068.00" y="318.50">onnxruntime::ut..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 10.51%)</title><rect x="1065" y="324" width="125" height="15" fill="rgb(212,17,22)"/><text x="1068.00" y="334.50">onnxruntime::Se..</text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.81%)</title><rect x="1180" y="340" width="10" height="15" fill="rgb(229,25,41)"/><text x="1183.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.54%)</title><rect x="1183" y="356" width="7" height="15" fill="rgb(205,138,12)"/><text x="1186.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.54%)</title><rect x="1183" y="372" width="7" height="15" fill="rgb(208,27,47)"/><text x="1186.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.54%)</title><rect x="1183" y="388" width="7" height="15" fill="rgb(209,149,9)"/><text x="1186.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.54%)</title><rect x="1183" y="404" width="7" height="15" fill="rgb(247,177,22)"/><text x="1186.00" y="414.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="1186" y="420" width="4" height="15" fill="rgb(248,75,30)"/><text x="1189.00" y="430.50"></text></g></g></svg>