<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:1) (1 samples, 0.41%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(234,56,2)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(222,3,11)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(209,81,48)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(213,100,19)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(224,149,25)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(242,141,40)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:149) (1 samples, 0.41%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(243,58,26)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(217,71,23)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(252,81,19)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(253,28,31)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(210,163,17)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(224,33,31)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(242,21,42)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(249,196,51)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:21) (1 samples, 0.41%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(223,162,22)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(241,92,0)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(236,162,4)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(239,89,5)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(237,194,48)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(245,71,30)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/hermite.py:1627) (1 samples, 0.41%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(213,113,32)"/><text x="13.00" y="478.50"></text></g><g><title>__new__ (abc.py:127) (1 samples, 0.41%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(236,201,49)"/><text x="13.00" y="494.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.41%)</title><rect x="14" y="852" width="5" height="15" fill="rgb(252,24,28)"/><text x="17.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.41%)</title><rect x="14" y="868" width="5" height="15" fill="rgb(245,162,48)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.41%)</title><rect x="14" y="884" width="5" height="15" fill="rgb(215,34,23)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.41%)</title><rect x="14" y="900" width="5" height="15" fill="rgb(223,120,18)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.41%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(253,59,20)"/><text x="17.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.41%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(234,205,50)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(212,105,42)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(247,100,50)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.41%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(218,167,5)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:229) (1 samples, 0.41%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(248,100,4)"/><text x="17.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:2) (2 samples, 0.83%)</title><rect x="14" y="148" width="10" height="15" fill="rgb(222,52,54)"/><text x="17.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="164" width="10" height="15" fill="rgb(217,106,1)"/><text x="17.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="14" y="180" width="10" height="15" fill="rgb(231,191,30)"/><text x="17.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="196" width="10" height="15" fill="rgb(210,190,14)"/><text x="17.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="212" width="10" height="15" fill="rgb(238,30,46)"/><text x="17.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="14" y="228" width="10" height="15" fill="rgb(214,195,15)"/><text x="17.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="14" y="244" width="10" height="15" fill="rgb(242,179,42)"/><text x="17.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="14" y="260" width="10" height="15" fill="rgb(224,29,47)"/><text x="17.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="276" width="10" height="15" fill="rgb(240,34,13)"/><text x="17.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.83%)</title><rect x="14" y="292" width="10" height="15" fill="rgb(223,29,10)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="308" width="10" height="15" fill="rgb(236,86,20)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="14" y="324" width="10" height="15" fill="rgb(232,203,44)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="14" y="340" width="10" height="15" fill="rgb(238,136,29)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="14" y="356" width="10" height="15" fill="rgb(248,101,4)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="372" width="10" height="15" fill="rgb(240,104,31)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.83%)</title><rect x="14" y="388" width="10" height="15" fill="rgb(211,37,40)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="404" width="10" height="15" fill="rgb(251,143,46)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="14" y="420" width="10" height="15" fill="rgb(239,144,42)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="14" y="436" width="10" height="15" fill="rgb(222,220,36)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="14" y="452" width="10" height="15" fill="rgb(248,32,54)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="468" width="10" height="15" fill="rgb(251,28,45)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.83%)</title><rect x="14" y="484" width="10" height="15" fill="rgb(211,157,25)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="500" width="10" height="15" fill="rgb(252,18,14)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="14" y="516" width="10" height="15" fill="rgb(241,136,14)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="14" y="532" width="10" height="15" fill="rgb(217,216,3)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="14" y="548" width="10" height="15" fill="rgb(233,24,9)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="564" width="10" height="15" fill="rgb(251,147,31)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.83%)</title><rect x="14" y="580" width="10" height="15" fill="rgb(230,102,4)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="596" width="10" height="15" fill="rgb(232,161,21)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="14" y="612" width="10" height="15" fill="rgb(219,26,37)"/><text x="17.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="628" width="10" height="15" fill="rgb(250,191,16)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="644" width="10" height="15" fill="rgb(208,192,25)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="14" y="660" width="10" height="15" fill="rgb(251,72,40)"/><text x="17.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="14" y="676" width="10" height="15" fill="rgb(215,228,15)"/><text x="17.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="14" y="692" width="10" height="15" fill="rgb(209,141,52)"/><text x="17.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="708" width="10" height="15" fill="rgb(206,27,41)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.83%)</title><rect x="14" y="724" width="10" height="15" fill="rgb(229,168,13)"/><text x="17.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="14" y="740" width="10" height="15" fill="rgb(250,155,33)"/><text x="17.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="14" y="756" width="10" height="15" fill="rgb(235,24,41)"/><text x="17.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="14" y="772" width="10" height="15" fill="rgb(205,68,26)"/><text x="17.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="14" y="788" width="10" height="15" fill="rgb(252,103,25)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="14" y="804" width="10" height="15" fill="rgb(206,213,53)"/><text x="17.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.83%)</title><rect x="14" y="820" width="10" height="15" fill="rgb(231,87,18)"/><text x="17.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.83%)</title><rect x="14" y="836" width="10" height="15" fill="rgb(210,212,20)"/><text x="17.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.41%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(253,71,8)"/><text x="22.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.41%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(237,189,9)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.41%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(246,3,24)"/><text x="22.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.41%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(230,143,3)"/><text x="22.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(215,204,50)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(216,172,32)"/><text x="22.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.41%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(239,69,33)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.41%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(239,219,19)"/><text x="22.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.41%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(211,7,14)"/><text x="22.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:118) (1 samples, 0.41%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(223,117,50)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.41%)</title><rect x="24" y="708" width="5" height="15" fill="rgb(254,161,21)"/><text x="27.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="24" y="724" width="5" height="15" fill="rgb(226,24,38)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="24" y="740" width="5" height="15" fill="rgb(251,107,46)"/><text x="27.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="24" y="756" width="5" height="15" fill="rgb(252,59,38)"/><text x="27.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="24" y="772" width="5" height="15" fill="rgb(242,65,53)"/><text x="27.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="24" y="788" width="5" height="15" fill="rgb(232,80,40)"/><text x="27.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:26) (1 samples, 0.41%)</title><rect x="24" y="804" width="5" height="15" fill="rgb(230,138,14)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="24" y="820" width="5" height="15" fill="rgb(223,175,18)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="24" y="836" width="5" height="15" fill="rgb(213,127,16)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="24" y="852" width="5" height="15" fill="rgb(208,193,1)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="24" y="868" width="5" height="15" fill="rgb(206,222,15)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="24" y="884" width="5" height="15" fill="rgb(239,160,42)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/func_inspect.py:17) (1 samples, 0.41%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(251,107,4)"/><text x="27.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="24" y="916" width="5" height="15" fill="rgb(221,162,7)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="24" y="932" width="5" height="15" fill="rgb(218,160,7)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="24" y="948" width="5" height="15" fill="rgb(238,15,40)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="24" y="964" width="5" height="15" fill="rgb(254,153,20)"/><text x="27.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="24" y="980" width="5" height="15" fill="rgb(216,213,45)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/logger.py:20) (1 samples, 0.41%)</title><rect x="24" y="996" width="5" height="15" fill="rgb(240,139,22)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="24" y="1012" width="5" height="15" fill="rgb(232,144,14)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="24" y="1028" width="5" height="15" fill="rgb(208,207,51)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="24" y="1044" width="5" height="15" fill="rgb(230,59,46)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="24" y="1060" width="5" height="15" fill="rgb(242,19,27)"/><text x="27.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="24" y="1076" width="5" height="15" fill="rgb(206,7,32)"/><text x="27.00" y="1086.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="24" y="1092" width="5" height="15" fill="rgb(238,6,31)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.83%)</title><rect x="24" y="484" width="10" height="15" fill="rgb(207,126,22)"/><text x="27.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.83%)</title><rect x="24" y="500" width="10" height="15" fill="rgb(240,177,16)"/><text x="27.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="24" y="516" width="10" height="15" fill="rgb(245,80,13)"/><text x="27.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="24" y="532" width="10" height="15" fill="rgb(243,80,49)"/><text x="27.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="24" y="548" width="10" height="15" fill="rgb(219,164,46)"/><text x="27.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="24" y="564" width="10" height="15" fill="rgb(231,18,20)"/><text x="27.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="24" y="580" width="10" height="15" fill="rgb(212,51,48)"/><text x="27.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="24" y="596" width="10" height="15" fill="rgb(243,128,37)"/><text x="27.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.83%)</title><rect x="24" y="612" width="10" height="15" fill="rgb(213,189,27)"/><text x="27.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="24" y="628" width="10" height="15" fill="rgb(238,163,23)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="24" y="644" width="10" height="15" fill="rgb(211,185,0)"/><text x="27.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="24" y="660" width="10" height="15" fill="rgb(234,118,14)"/><text x="27.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="24" y="676" width="10" height="15" fill="rgb(233,133,0)"/><text x="27.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="24" y="692" width="10" height="15" fill="rgb(249,107,30)"/><text x="27.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.41%)</title><rect x="29" y="708" width="5" height="15" fill="rgb(214,121,13)"/><text x="32.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="724" width="5" height="15" fill="rgb(237,158,33)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="740" width="5" height="15" fill="rgb(241,53,10)"/><text x="32.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="756" width="5" height="15" fill="rgb(212,51,51)"/><text x="32.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="772" width="5" height="15" fill="rgb(250,31,53)"/><text x="32.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="788" width="5" height="15" fill="rgb(241,159,0)"/><text x="32.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.41%)</title><rect x="29" y="804" width="5" height="15" fill="rgb(218,107,12)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="820" width="5" height="15" fill="rgb(205,48,35)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="836" width="5" height="15" fill="rgb(226,7,47)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="852" width="5" height="15" fill="rgb(226,43,12)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="868" width="5" height="15" fill="rgb(207,139,27)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="884" width="5" height="15" fill="rgb(239,44,33)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.41%)</title><rect x="29" y="900" width="5" height="15" fill="rgb(231,165,33)"/><text x="32.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="916" width="5" height="15" fill="rgb(239,92,1)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="932" width="5" height="15" fill="rgb(205,204,6)"/><text x="32.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="948" width="5" height="15" fill="rgb(240,128,49)"/><text x="32.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="964" width="5" height="15" fill="rgb(231,72,48)"/><text x="32.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="980" width="5" height="15" fill="rgb(244,53,50)"/><text x="32.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.41%)</title><rect x="29" y="996" width="5" height="15" fill="rgb(250,225,15)"/><text x="32.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="1012" width="5" height="15" fill="rgb(209,197,8)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.41%)</title><rect x="29" y="1028" width="5" height="15" fill="rgb(229,16,53)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1044" width="5" height="15" fill="rgb(225,138,21)"/><text x="32.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="1060" width="5" height="15" fill="rgb(217,120,17)"/><text x="32.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="1076" width="5" height="15" fill="rgb(222,159,2)"/><text x="32.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="1092" width="5" height="15" fill="rgb(235,216,54)"/><text x="32.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="1108" width="5" height="15" fill="rgb(251,31,51)"/><text x="32.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1124" width="5" height="15" fill="rgb(232,5,14)"/><text x="32.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:12) (1 samples, 0.41%)</title><rect x="29" y="1140" width="5" height="15" fill="rgb(250,63,52)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="1156" width="5" height="15" fill="rgb(243,32,40)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="1172" width="5" height="15" fill="rgb(252,162,9)"/><text x="32.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="1188" width="5" height="15" fill="rgb(210,32,10)"/><text x="32.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="1204" width="5" height="15" fill="rgb(217,207,31)"/><text x="32.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1220" width="5" height="15" fill="rgb(228,141,4)"/><text x="32.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/reduction.py:119) (1 samples, 0.41%)</title><rect x="29" y="1236" width="5" height="15" fill="rgb(237,11,0)"/><text x="32.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.41%)</title><rect x="29" y="1252" width="5" height="15" fill="rgb(239,80,49)"/><text x="32.00" y="1262.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:145) (1 samples, 0.41%)</title><rect x="29" y="1268" width="5" height="15" fill="rgb(252,130,37)"/><text x="32.00" y="1278.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.41%)</title><rect x="34" y="900" width="5" height="15" fill="rgb(235,128,10)"/><text x="37.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="916" width="5" height="15" fill="rgb(231,89,24)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="932" width="5" height="15" fill="rgb(230,64,26)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="948" width="5" height="15" fill="rgb(251,70,53)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="964" width="5" height="15" fill="rgb(230,11,22)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="980" width="5" height="15" fill="rgb(229,198,23)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.41%)</title><rect x="34" y="996" width="5" height="15" fill="rgb(207,221,7)"/><text x="37.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="34" y="1012" width="5" height="15" fill="rgb(239,125,29)"/><text x="37.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1028" width="5" height="15" fill="rgb(234,82,42)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1044" width="5" height="15" fill="rgb(239,113,51)"/><text x="37.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1060" width="5" height="15" fill="rgb(243,132,31)"/><text x="37.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1076" width="5" height="15" fill="rgb(221,122,3)"/><text x="37.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1092" width="5" height="15" fill="rgb(216,62,14)"/><text x="37.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1108" width="5" height="15" fill="rgb(242,111,41)"/><text x="37.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.41%)</title><rect x="34" y="1124" width="5" height="15" fill="rgb(235,127,30)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1140" width="5" height="15" fill="rgb(233,36,52)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1156" width="5" height="15" fill="rgb(225,20,36)"/><text x="37.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1172" width="5" height="15" fill="rgb(230,45,30)"/><text x="37.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1188" width="5" height="15" fill="rgb(228,74,39)"/><text x="37.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1204" width="5" height="15" fill="rgb(225,84,22)"/><text x="37.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.41%)</title><rect x="34" y="1220" width="5" height="15" fill="rgb(214,173,11)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1236" width="5" height="15" fill="rgb(234,157,34)"/><text x="37.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1252" width="5" height="15" fill="rgb(226,57,54)"/><text x="37.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1268" width="5" height="15" fill="rgb(220,33,45)"/><text x="37.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1284" width="5" height="15" fill="rgb(218,145,30)"/><text x="37.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1300" width="5" height="15" fill="rgb(206,204,5)"/><text x="37.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.41%)</title><rect x="34" y="1316" width="5" height="15" fill="rgb(248,14,36)"/><text x="37.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1332" width="5" height="15" fill="rgb(233,201,33)"/><text x="37.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1348" width="5" height="15" fill="rgb(226,158,2)"/><text x="37.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1364" width="5" height="15" fill="rgb(219,129,34)"/><text x="37.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1380" width="5" height="15" fill="rgb(238,0,36)"/><text x="37.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1396" width="5" height="15" fill="rgb(226,52,14)"/><text x="37.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:5) (1 samples, 0.41%)</title><rect x="34" y="1412" width="5" height="15" fill="rgb(241,53,53)"/><text x="37.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1428" width="5" height="15" fill="rgb(210,228,34)"/><text x="37.00" y="1438.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:4) (4 samples, 1.65%)</title><rect x="24" y="148" width="20" height="15" fill="rgb(231,96,7)"/><text x="27.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.65%)</title><rect x="24" y="164" width="20" height="15" fill="rgb(214,53,39)"/><text x="27.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.65%)</title><rect x="24" y="180" width="20" height="15" fill="rgb(218,157,30)"/><text x="27.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.65%)</title><rect x="24" y="196" width="20" height="15" fill="rgb(219,185,30)"/><text x="27.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.65%)</title><rect x="24" y="212" width="20" height="15" fill="rgb(220,152,54)"/><text x="27.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.65%)</title><rect x="24" y="228" width="20" height="15" fill="rgb(223,85,39)"/><text x="27.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.65%)</title><rect x="24" y="244" width="20" height="15" fill="rgb(229,183,31)"/><text x="27.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.65%)</title><rect x="24" y="260" width="20" height="15" fill="rgb(236,137,42)"/><text x="27.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.65%)</title><rect x="24" y="276" width="20" height="15" fill="rgb(225,178,43)"/><text x="27.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.65%)</title><rect x="24" y="292" width="20" height="15" fill="rgb(233,83,24)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.65%)</title><rect x="24" y="308" width="20" height="15" fill="rgb(233,9,11)"/><text x="27.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.65%)</title><rect x="24" y="324" width="20" height="15" fill="rgb(252,66,25)"/><text x="27.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.65%)</title><rect x="24" y="340" width="20" height="15" fill="rgb(221,69,33)"/><text x="27.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.65%)</title><rect x="24" y="356" width="20" height="15" fill="rgb(223,99,51)"/><text x="27.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.65%)</title><rect x="24" y="372" width="20" height="15" fill="rgb(238,56,0)"/><text x="27.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.65%)</title><rect x="24" y="388" width="20" height="15" fill="rgb(225,36,20)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.65%)</title><rect x="24" y="404" width="20" height="15" fill="rgb(208,35,13)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.65%)</title><rect x="24" y="420" width="20" height="15" fill="rgb(217,36,7)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.65%)</title><rect x="24" y="436" width="20" height="15" fill="rgb(253,41,54)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.65%)</title><rect x="24" y="452" width="20" height="15" fill="rgb(222,171,26)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.65%)</title><rect x="24" y="468" width="20" height="15" fill="rgb(231,219,8)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.83%)</title><rect x="34" y="484" width="10" height="15" fill="rgb(236,7,35)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="34" y="500" width="10" height="15" fill="rgb(244,179,1)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="34" y="516" width="10" height="15" fill="rgb(235,10,14)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="34" y="532" width="10" height="15" fill="rgb(208,32,31)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="34" y="548" width="10" height="15" fill="rgb(221,105,17)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="34" y="564" width="10" height="15" fill="rgb(221,149,10)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.83%)</title><rect x="34" y="580" width="10" height="15" fill="rgb(234,24,15)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="34" y="596" width="10" height="15" fill="rgb(205,1,24)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="34" y="612" width="10" height="15" fill="rgb(213,6,20)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="34" y="628" width="10" height="15" fill="rgb(246,116,48)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="34" y="644" width="10" height="15" fill="rgb(250,208,21)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="34" y="660" width="10" height="15" fill="rgb(249,204,33)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.83%)</title><rect x="34" y="676" width="10" height="15" fill="rgb(223,3,47)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="34" y="692" width="10" height="15" fill="rgb(232,166,17)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="34" y="708" width="10" height="15" fill="rgb(229,221,36)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="34" y="724" width="10" height="15" fill="rgb(249,195,54)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="34" y="740" width="10" height="15" fill="rgb(237,161,29)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="34" y="756" width="10" height="15" fill="rgb(244,32,14)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.83%)</title><rect x="34" y="772" width="10" height="15" fill="rgb(239,77,12)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.83%)</title><rect x="34" y="788" width="10" height="15" fill="rgb(214,103,51)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="34" y="804" width="10" height="15" fill="rgb(217,117,2)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="34" y="820" width="10" height="15" fill="rgb(242,168,42)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="34" y="836" width="10" height="15" fill="rgb(205,22,9)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="34" y="852" width="10" height="15" fill="rgb(226,135,27)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="34" y="868" width="10" height="15" fill="rgb(206,153,39)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="34" y="884" width="10" height="15" fill="rgb(248,31,40)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.41%)</title><rect x="39" y="900" width="5" height="15" fill="rgb(223,130,14)"/><text x="42.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="39" y="916" width="5" height="15" fill="rgb(231,155,30)"/><text x="42.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="39" y="932" width="5" height="15" fill="rgb(213,201,27)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="39" y="948" width="5" height="15" fill="rgb(205,121,17)"/><text x="42.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="39" y="964" width="5" height="15" fill="rgb(208,130,54)"/><text x="42.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="39" y="980" width="5" height="15" fill="rgb(250,125,45)"/><text x="42.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="39" y="996" width="5" height="15" fill="rgb(252,211,11)"/><text x="42.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="39" y="1012" width="5" height="15" fill="rgb(215,106,49)"/><text x="42.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3034) (1 samples, 0.41%)</title><rect x="39" y="1028" width="5" height="15" fill="rgb(218,131,17)"/><text x="42.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.41%)</title><rect x="39" y="1044" width="5" height="15" fill="rgb(249,73,0)"/><text x="42.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.41%)</title><rect x="39" y="1060" width="5" height="15" fill="rgb(246,31,46)"/><text x="42.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.41%)</title><rect x="39" y="1076" width="5" height="15" fill="rgb(227,141,32)"/><text x="42.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:12) (1 samples, 0.41%)</title><rect x="44" y="724" width="5" height="15" fill="rgb(254,9,27)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="44" y="740" width="5" height="15" fill="rgb(241,36,29)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="44" y="756" width="5" height="15" fill="rgb(213,64,23)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="44" y="772" width="5" height="15" fill="rgb(219,31,14)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="44" y="788" width="5" height="15" fill="rgb(232,111,8)"/><text x="47.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="44" y="804" width="5" height="15" fill="rgb(209,206,28)"/><text x="47.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="44" y="820" width="5" height="15" fill="rgb(233,186,11)"/><text x="47.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.83%)</title><rect x="44" y="244" width="9" height="15" fill="rgb(217,7,43)"/><text x="47.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="260" width="9" height="15" fill="rgb(214,154,8)"/><text x="47.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="276" width="9" height="15" fill="rgb(225,107,47)"/><text x="47.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="292" width="9" height="15" fill="rgb(251,171,12)"/><text x="47.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="308" width="9" height="15" fill="rgb(208,48,41)"/><text x="47.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="324" width="9" height="15" fill="rgb(252,184,8)"/><text x="47.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.83%)</title><rect x="44" y="340" width="9" height="15" fill="rgb(229,178,2)"/><text x="47.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="356" width="9" height="15" fill="rgb(209,1,50)"/><text x="47.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="44" y="372" width="9" height="15" fill="rgb(222,149,43)"/><text x="47.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="388" width="9" height="15" fill="rgb(219,68,5)"/><text x="47.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="404" width="9" height="15" fill="rgb(236,3,1)"/><text x="47.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="420" width="9" height="15" fill="rgb(253,144,54)"/><text x="47.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="436" width="9" height="15" fill="rgb(229,142,31)"/><text x="47.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="452" width="9" height="15" fill="rgb(213,152,45)"/><text x="47.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="468" width="9" height="15" fill="rgb(250,202,4)"/><text x="47.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.83%)</title><rect x="44" y="484" width="9" height="15" fill="rgb(217,33,48)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="500" width="9" height="15" fill="rgb(249,69,38)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="516" width="9" height="15" fill="rgb(230,197,19)"/><text x="47.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="532" width="9" height="15" fill="rgb(252,111,37)"/><text x="47.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="548" width="9" height="15" fill="rgb(228,101,8)"/><text x="47.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="564" width="9" height="15" fill="rgb(232,19,29)"/><text x="47.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.83%)</title><rect x="44" y="580" width="9" height="15" fill="rgb(215,187,12)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="596" width="9" height="15" fill="rgb(216,190,22)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="44" y="612" width="9" height="15" fill="rgb(238,150,28)"/><text x="47.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="628" width="9" height="15" fill="rgb(208,194,9)"/><text x="47.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="644" width="9" height="15" fill="rgb(236,185,33)"/><text x="47.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="660" width="9" height="15" fill="rgb(208,85,43)"/><text x="47.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="676" width="9" height="15" fill="rgb(249,160,47)"/><text x="47.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="692" width="9" height="15" fill="rgb(232,100,31)"/><text x="47.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="708" width="9" height="15" fill="rgb(227,125,18)"/><text x="47.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.41%)</title><rect x="49" y="724" width="4" height="15" fill="rgb(226,222,2)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="740" width="4" height="15" fill="rgb(250,90,26)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="49" y="756" width="4" height="15" fill="rgb(220,212,17)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="49" y="772" width="4" height="15" fill="rgb(229,130,22)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="49" y="788" width="4" height="15" fill="rgb(253,34,32)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="49" y="804" width="4" height="15" fill="rgb(205,141,25)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.41%)</title><rect x="49" y="820" width="4" height="15" fill="rgb(244,35,10)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="836" width="4" height="15" fill="rgb(230,194,20)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="49" y="852" width="4" height="15" fill="rgb(205,198,1)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="49" y="868" width="4" height="15" fill="rgb(234,90,46)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="49" y="884" width="4" height="15" fill="rgb(248,27,39)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="49" y="900" width="4" height="15" fill="rgb(213,222,30)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.41%)</title><rect x="49" y="916" width="4" height="15" fill="rgb(235,73,45)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="932" width="4" height="15" fill="rgb(245,216,52)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.41%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(206,172,49)"/><text x="52.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(234,133,25)"/><text x="52.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(236,21,35)"/><text x="52.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(217,182,1)"/><text x="52.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(252,10,47)"/><text x="52.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(252,43,50)"/><text x="52.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(233,31,20)"/><text x="52.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.41%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(254,191,38)"/><text x="52.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(223,22,30)"/><text x="52.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="49" y="1092" width="4" height="15" fill="rgb(244,33,36)"/><text x="52.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(250,182,50)"/><text x="52.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(245,3,31)"/><text x="52.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(210,70,15)"/><text x="52.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(241,111,40)"/><text x="52.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.41%)</title><rect x="53" y="1492" width="5" height="15" fill="rgb(211,225,41)"/><text x="56.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1508" width="5" height="15" fill="rgb(225,133,27)"/><text x="56.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1524" width="5" height="15" fill="rgb(220,120,46)"/><text x="56.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1540" width="5" height="15" fill="rgb(215,170,18)"/><text x="56.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="1556" width="5" height="15" fill="rgb(248,35,54)"/><text x="56.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1572" width="5" height="15" fill="rgb(209,216,7)"/><text x="56.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.41%)</title><rect x="53" y="1588" width="5" height="15" fill="rgb(234,75,47)"/><text x="56.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1604" width="5" height="15" fill="rgb(243,115,5)"/><text x="56.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1620" width="5" height="15" fill="rgb(240,176,52)"/><text x="56.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1636" width="5" height="15" fill="rgb(252,166,24)"/><text x="56.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="1652" width="5" height="15" fill="rgb(212,218,25)"/><text x="56.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1668" width="5" height="15" fill="rgb(228,100,54)"/><text x="56.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.41%)</title><rect x="53" y="1684" width="5" height="15" fill="rgb(229,61,23)"/><text x="56.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1700" width="5" height="15" fill="rgb(254,98,36)"/><text x="56.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1716" width="5" height="15" fill="rgb(223,91,26)"/><text x="56.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1732" width="5" height="15" fill="rgb(245,4,22)"/><text x="56.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="1748" width="5" height="15" fill="rgb(234,45,30)"/><text x="56.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1764" width="5" height="15" fill="rgb(212,30,20)"/><text x="56.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:30) (1 samples, 0.41%)</title><rect x="53" y="1780" width="5" height="15" fill="rgb(217,34,54)"/><text x="56.00" y="1790.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.83%)</title><rect x="53" y="436" width="10" height="15" fill="rgb(230,16,10)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="452" width="10" height="15" fill="rgb(245,15,2)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="468" width="10" height="15" fill="rgb(248,207,32)"/><text x="56.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="484" width="10" height="15" fill="rgb(227,75,45)"/><text x="56.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="500" width="10" height="15" fill="rgb(244,70,30)"/><text x="56.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="516" width="10" height="15" fill="rgb(247,69,42)"/><text x="56.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.83%)</title><rect x="53" y="532" width="10" height="15" fill="rgb(238,118,41)"/><text x="56.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="548" width="10" height="15" fill="rgb(219,189,48)"/><text x="56.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="564" width="10" height="15" fill="rgb(242,53,27)"/><text x="56.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="580" width="10" height="15" fill="rgb(237,150,14)"/><text x="56.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="596" width="10" height="15" fill="rgb(252,121,16)"/><text x="56.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="612" width="10" height="15" fill="rgb(210,162,50)"/><text x="56.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.83%)</title><rect x="53" y="628" width="10" height="15" fill="rgb(206,24,43)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="644" width="10" height="15" fill="rgb(231,93,45)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="660" width="10" height="15" fill="rgb(250,32,2)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="676" width="10" height="15" fill="rgb(236,37,13)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="692" width="10" height="15" fill="rgb(205,227,26)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="708" width="10" height="15" fill="rgb(221,69,37)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.83%)</title><rect x="53" y="724" width="10" height="15" fill="rgb(250,3,25)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="740" width="10" height="15" fill="rgb(252,50,14)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="756" width="10" height="15" fill="rgb(205,83,54)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="772" width="10" height="15" fill="rgb(217,80,42)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="788" width="10" height="15" fill="rgb(251,39,29)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="804" width="10" height="15" fill="rgb(239,105,51)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.83%)</title><rect x="53" y="820" width="10" height="15" fill="rgb(225,149,34)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="836" width="10" height="15" fill="rgb(242,194,15)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="852" width="10" height="15" fill="rgb(231,189,27)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="868" width="10" height="15" fill="rgb(212,167,7)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="884" width="10" height="15" fill="rgb(241,128,29)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="900" width="10" height="15" fill="rgb(233,179,31)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.83%)</title><rect x="53" y="916" width="10" height="15" fill="rgb(207,106,42)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="932" width="10" height="15" fill="rgb(231,58,44)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="948" width="10" height="15" fill="rgb(210,4,35)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="964" width="10" height="15" fill="rgb(208,205,26)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="980" width="10" height="15" fill="rgb(233,142,52)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="996" width="10" height="15" fill="rgb(240,26,48)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.83%)</title><rect x="53" y="1012" width="10" height="15" fill="rgb(214,17,33)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="1028" width="10" height="15" fill="rgb(238,53,29)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="1044" width="10" height="15" fill="rgb(225,6,52)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="1060" width="10" height="15" fill="rgb(209,209,6)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="1076" width="10" height="15" fill="rgb(229,74,4)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="1092" width="10" height="15" fill="rgb(253,94,50)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.83%)</title><rect x="53" y="1108" width="10" height="15" fill="rgb(232,53,38)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="1124" width="10" height="15" fill="rgb(230,176,33)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="1140" width="10" height="15" fill="rgb(232,97,31)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="1156" width="10" height="15" fill="rgb(212,197,9)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="1172" width="10" height="15" fill="rgb(250,120,13)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="1188" width="10" height="15" fill="rgb(235,65,31)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.83%)</title><rect x="53" y="1204" width="10" height="15" fill="rgb(231,139,0)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="1220" width="10" height="15" fill="rgb(240,190,35)"/><text x="56.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="1236" width="10" height="15" fill="rgb(228,21,9)"/><text x="56.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="1252" width="10" height="15" fill="rgb(238,148,47)"/><text x="56.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="1268" width="10" height="15" fill="rgb(233,211,52)"/><text x="56.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="1284" width="10" height="15" fill="rgb(246,13,40)"/><text x="56.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.83%)</title><rect x="53" y="1300" width="10" height="15" fill="rgb(225,126,54)"/><text x="56.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="1316" width="10" height="15" fill="rgb(230,3,33)"/><text x="56.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="1332" width="10" height="15" fill="rgb(220,101,33)"/><text x="56.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="1348" width="10" height="15" fill="rgb(225,157,23)"/><text x="56.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="1364" width="10" height="15" fill="rgb(237,189,0)"/><text x="56.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="1380" width="10" height="15" fill="rgb(229,138,47)"/><text x="56.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.83%)</title><rect x="53" y="1396" width="10" height="15" fill="rgb(243,64,40)"/><text x="56.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="1412" width="10" height="15" fill="rgb(225,60,20)"/><text x="56.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="1428" width="10" height="15" fill="rgb(207,89,46)"/><text x="56.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="1444" width="10" height="15" fill="rgb(229,135,32)"/><text x="56.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="1460" width="10" height="15" fill="rgb(221,55,26)"/><text x="56.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="1476" width="10" height="15" fill="rgb(227,173,9)"/><text x="56.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.41%)</title><rect x="58" y="1492" width="5" height="15" fill="rgb(225,172,44)"/><text x="61.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="1508" width="5" height="15" fill="rgb(217,67,15)"/><text x="61.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.41%)</title><rect x="58" y="1524" width="5" height="15" fill="rgb(214,117,29)"/><text x="61.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="1540" width="5" height="15" fill="rgb(228,229,24)"/><text x="61.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="1556" width="5" height="15" fill="rgb(220,207,52)"/><text x="61.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="1572" width="5" height="15" fill="rgb(237,0,18)"/><text x="61.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="1588" width="5" height="15" fill="rgb(251,112,0)"/><text x="61.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="1604" width="5" height="15" fill="rgb(236,196,4)"/><text x="61.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="1620" width="5" height="15" fill="rgb(215,192,8)"/><text x="61.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.41%)</title><rect x="58" y="1636" width="5" height="15" fill="rgb(222,151,6)"/><text x="61.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="58" y="1652" width="5" height="15" fill="rgb(211,214,47)"/><text x="61.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="1668" width="5" height="15" fill="rgb(228,81,11)"/><text x="61.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="1684" width="5" height="15" fill="rgb(227,164,1)"/><text x="61.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="1700" width="5" height="15" fill="rgb(228,7,54)"/><text x="61.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="1716" width="5" height="15" fill="rgb(219,30,6)"/><text x="61.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="1732" width="5" height="15" fill="rgb(234,211,48)"/><text x="61.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="1748" width="5" height="15" fill="rgb(254,159,16)"/><text x="61.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:25) (1 samples, 0.41%)</title><rect x="58" y="1764" width="5" height="15" fill="rgb(207,188,17)"/><text x="61.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="1780" width="5" height="15" fill="rgb(234,122,5)"/><text x="61.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="1796" width="5" height="15" fill="rgb(234,192,43)"/><text x="61.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="1812" width="5" height="15" fill="rgb(205,229,15)"/><text x="61.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="58" y="1828" width="5" height="15" fill="rgb(232,58,49)"/><text x="61.00" y="1838.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.41%)</title><rect x="58" y="1844" width="5" height="15" fill="rgb(220,194,47)"/><text x="61.00" y="1854.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.41%)</title><rect x="58" y="1860" width="5" height="15" fill="rgb(233,6,40)"/><text x="61.00" y="1870.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="1876" width="5" height="15" fill="rgb(210,157,28)"/><text x="61.00" y="1886.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.41%)</title><rect x="63" y="1460" width="5" height="15" fill="rgb(208,159,23)"/><text x="66.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.41%)</title><rect x="63" y="1476" width="5" height="15" fill="rgb(229,61,38)"/><text x="66.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.41%)</title><rect x="63" y="1492" width="5" height="15" fill="rgb(244,60,54)"/><text x="66.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.41%)</title><rect x="63" y="1508" width="5" height="15" fill="rgb(220,208,21)"/><text x="66.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.41%)</title><rect x="68" y="1668" width="5" height="15" fill="rgb(213,52,39)"/><text x="71.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="68" y="1684" width="5" height="15" fill="rgb(240,122,52)"/><text x="71.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="68" y="1700" width="5" height="15" fill="rgb(222,206,7)"/><text x="71.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="68" y="1716" width="5" height="15" fill="rgb(221,80,9)"/><text x="71.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="68" y="1732" width="5" height="15" fill="rgb(225,21,28)"/><text x="71.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="68" y="1748" width="5" height="15" fill="rgb(209,127,14)"/><text x="71.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.41%)</title><rect x="68" y="1764" width="5" height="15" fill="rgb(227,11,8)"/><text x="71.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="68" y="1780" width="5" height="15" fill="rgb(247,168,14)"/><text x="71.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="68" y="1796" width="5" height="15" fill="rgb(248,66,51)"/><text x="71.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="68" y="1812" width="5" height="15" fill="rgb(228,205,20)"/><text x="71.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="68" y="1828" width="5" height="15" fill="rgb(205,6,41)"/><text x="71.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="68" y="1844" width="5" height="15" fill="rgb(247,185,14)"/><text x="71.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="68" y="1860" width="5" height="15" fill="rgb(247,195,0)"/><text x="71.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="68" y="1876" width="5" height="15" fill="rgb(254,55,51)"/><text x="71.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.41%)</title><rect x="68" y="1892" width="5" height="15" fill="rgb(234,181,1)"/><text x="71.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="68" y="1908" width="5" height="15" fill="rgb(206,229,46)"/><text x="71.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="68" y="1924" width="5" height="15" fill="rgb(217,151,37)"/><text x="71.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="68" y="1940" width="5" height="15" fill="rgb(214,131,20)"/><text x="71.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="68" y="1956" width="5" height="15" fill="rgb(229,21,32)"/><text x="71.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="68" y="1972" width="5" height="15" fill="rgb(238,77,53)"/><text x="71.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:24) (1 samples, 0.41%)</title><rect x="68" y="1988" width="5" height="15" fill="rgb(215,33,14)"/><text x="71.00" y="1998.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.41%)</title><rect x="68" y="2004" width="5" height="15" fill="rgb(233,43,4)"/><text x="71.00" y="2014.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.41%)</title><rect x="68" y="2020" width="5" height="15" fill="rgb(252,195,5)"/><text x="71.00" y="2030.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.41%)</title><rect x="68" y="2036" width="5" height="15" fill="rgb(217,36,22)"/><text x="71.00" y="2046.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.41%)</title><rect x="68" y="2052" width="5" height="15" fill="rgb(249,195,1)"/><text x="71.00" y="2062.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.41%)</title><rect x="68" y="2068" width="5" height="15" fill="rgb(218,39,52)"/><text x="71.00" y="2078.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.41%)</title><rect x="68" y="2084" width="5" height="15" fill="rgb(238,12,28)"/><text x="71.00" y="2094.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.41%)</title><rect x="68" y="2100" width="5" height="15" fill="rgb(206,32,44)"/><text x="71.00" y="2110.50"></text></g><g><title>getwidth (sre_parse.py:198) (1 samples, 0.41%)</title><rect x="68" y="2116" width="5" height="15" fill="rgb(245,139,1)"/><text x="71.00" y="2126.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.41%)</title><rect x="68" y="2132" width="5" height="15" fill="rgb(231,3,27)"/><text x="71.00" y="2142.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:4) (14 samples, 5.79%)</title><rect x="10" y="52" width="68" height="15" fill="rgb(242,80,11)"/><text x="13.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 5.79%)</title><rect x="10" y="68" width="68" height="15" fill="rgb(224,142,32)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 5.79%)</title><rect x="10" y="84" width="68" height="15" fill="rgb(254,192,45)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 5.79%)</title><rect x="10" y="100" width="68" height="15" fill="rgb(247,200,44)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 5.79%)</title><rect x="10" y="116" width="68" height="15" fill="rgb(224,110,34)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 5.79%)</title><rect x="10" y="132" width="68" height="15" fill="rgb(252,218,8)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:7) (7 samples, 2.89%)</title><rect x="44" y="148" width="34" height="15" fill="rgb(241,214,3)"/><text x="47.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="44" y="164" width="34" height="15" fill="rgb(219,79,27)"/><text x="47.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.89%)</title><rect x="44" y="180" width="34" height="15" fill="rgb(242,96,50)"/><text x="47.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.89%)</title><rect x="44" y="196" width="34" height="15" fill="rgb(207,196,49)"/><text x="47.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.89%)</title><rect x="44" y="212" width="34" height="15" fill="rgb(208,170,23)"/><text x="47.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="44" y="228" width="34" height="15" fill="rgb(228,47,23)"/><text x="47.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.07%)</title><rect x="53" y="244" width="25" height="15" fill="rgb(249,221,19)"/><text x="56.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.07%)</title><rect x="53" y="260" width="25" height="15" fill="rgb(226,48,12)"/><text x="56.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.07%)</title><rect x="53" y="276" width="25" height="15" fill="rgb(247,66,28)"/><text x="56.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.07%)</title><rect x="53" y="292" width="25" height="15" fill="rgb(238,170,40)"/><text x="56.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.07%)</title><rect x="53" y="308" width="25" height="15" fill="rgb(220,139,26)"/><text x="56.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.07%)</title><rect x="53" y="324" width="25" height="15" fill="rgb(235,118,11)"/><text x="56.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.07%)</title><rect x="53" y="340" width="25" height="15" fill="rgb(244,227,10)"/><text x="56.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.07%)</title><rect x="53" y="356" width="25" height="15" fill="rgb(222,97,46)"/><text x="56.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.07%)</title><rect x="53" y="372" width="25" height="15" fill="rgb(211,101,28)"/><text x="56.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.07%)</title><rect x="53" y="388" width="25" height="15" fill="rgb(225,176,51)"/><text x="56.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.07%)</title><rect x="53" y="404" width="25" height="15" fill="rgb(231,96,13)"/><text x="56.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.07%)</title><rect x="53" y="420" width="25" height="15" fill="rgb(211,10,39)"/><text x="56.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.24%)</title><rect x="63" y="436" width="15" height="15" fill="rgb(252,109,21)"/><text x="66.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="452" width="15" height="15" fill="rgb(234,155,48)"/><text x="66.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.24%)</title><rect x="63" y="468" width="15" height="15" fill="rgb(243,207,51)"/><text x="66.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="484" width="15" height="15" fill="rgb(222,55,44)"/><text x="66.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="500" width="15" height="15" fill="rgb(244,7,37)"/><text x="66.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="516" width="15" height="15" fill="rgb(230,229,17)"/><text x="66.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="532" width="15" height="15" fill="rgb(217,151,36)"/><text x="66.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="548" width="15" height="15" fill="rgb(253,195,41)"/><text x="66.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="564" width="15" height="15" fill="rgb(234,133,54)"/><text x="66.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.24%)</title><rect x="63" y="580" width="15" height="15" fill="rgb(205,187,21)"/><text x="66.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="596" width="15" height="15" fill="rgb(253,211,32)"/><text x="66.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="612" width="15" height="15" fill="rgb(209,105,24)"/><text x="66.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="628" width="15" height="15" fill="rgb(211,157,8)"/><text x="66.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="644" width="15" height="15" fill="rgb(211,65,22)"/><text x="66.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="660" width="15" height="15" fill="rgb(215,125,46)"/><text x="66.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.24%)</title><rect x="63" y="676" width="15" height="15" fill="rgb(235,38,37)"/><text x="66.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="692" width="15" height="15" fill="rgb(227,184,9)"/><text x="66.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="708" width="15" height="15" fill="rgb(248,81,3)"/><text x="66.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="724" width="15" height="15" fill="rgb(238,101,25)"/><text x="66.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="740" width="15" height="15" fill="rgb(253,40,16)"/><text x="66.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="756" width="15" height="15" fill="rgb(236,17,19)"/><text x="66.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.24%)</title><rect x="63" y="772" width="15" height="15" fill="rgb(228,34,25)"/><text x="66.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="788" width="15" height="15" fill="rgb(240,108,6)"/><text x="66.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="804" width="15" height="15" fill="rgb(248,61,15)"/><text x="66.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="820" width="15" height="15" fill="rgb(246,145,52)"/><text x="66.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="836" width="15" height="15" fill="rgb(246,104,48)"/><text x="66.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="852" width="15" height="15" fill="rgb(235,134,35)"/><text x="66.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.24%)</title><rect x="63" y="868" width="15" height="15" fill="rgb(218,103,40)"/><text x="66.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="884" width="15" height="15" fill="rgb(247,181,32)"/><text x="66.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.24%)</title><rect x="63" y="900" width="15" height="15" fill="rgb(224,62,23)"/><text x="66.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="916" width="15" height="15" fill="rgb(223,52,53)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="932" width="15" height="15" fill="rgb(235,188,46)"/><text x="66.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="948" width="15" height="15" fill="rgb(213,159,43)"/><text x="66.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="964" width="15" height="15" fill="rgb(238,166,13)"/><text x="66.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="980" width="15" height="15" fill="rgb(227,176,15)"/><text x="66.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="996" width="15" height="15" fill="rgb(209,124,6)"/><text x="66.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.24%)</title><rect x="63" y="1012" width="15" height="15" fill="rgb(219,177,10)"/><text x="66.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="1028" width="15" height="15" fill="rgb(219,3,32)"/><text x="66.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="1044" width="15" height="15" fill="rgb(229,94,22)"/><text x="66.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="1060" width="15" height="15" fill="rgb(237,81,9)"/><text x="66.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="1076" width="15" height="15" fill="rgb(235,149,18)"/><text x="66.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="1092" width="15" height="15" fill="rgb(227,193,23)"/><text x="66.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 1.24%)</title><rect x="63" y="1108" width="15" height="15" fill="rgb(231,189,28)"/><text x="66.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.24%)</title><rect x="63" y="1124" width="15" height="15" fill="rgb(236,97,50)"/><text x="66.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="1140" width="15" height="15" fill="rgb(236,136,54)"/><text x="66.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="1156" width="15" height="15" fill="rgb(239,118,16)"/><text x="66.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="1172" width="15" height="15" fill="rgb(246,48,51)"/><text x="66.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="1188" width="15" height="15" fill="rgb(223,168,48)"/><text x="66.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="1204" width="15" height="15" fill="rgb(244,200,37)"/><text x="66.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="1220" width="15" height="15" fill="rgb(227,103,1)"/><text x="66.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 1.24%)</title><rect x="63" y="1236" width="15" height="15" fill="rgb(219,206,43)"/><text x="66.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.24%)</title><rect x="63" y="1252" width="15" height="15" fill="rgb(220,73,1)"/><text x="66.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="1268" width="15" height="15" fill="rgb(230,18,23)"/><text x="66.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="1284" width="15" height="15" fill="rgb(239,81,39)"/><text x="66.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="1300" width="15" height="15" fill="rgb(230,33,1)"/><text x="66.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="1316" width="15" height="15" fill="rgb(254,190,18)"/><text x="66.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="1332" width="15" height="15" fill="rgb(238,65,47)"/><text x="66.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="1348" width="15" height="15" fill="rgb(210,186,47)"/><text x="66.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 1.24%)</title><rect x="63" y="1364" width="15" height="15" fill="rgb(233,120,3)"/><text x="66.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.24%)</title><rect x="63" y="1380" width="15" height="15" fill="rgb(226,227,41)"/><text x="66.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.24%)</title><rect x="63" y="1396" width="15" height="15" fill="rgb(214,148,24)"/><text x="66.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.24%)</title><rect x="63" y="1412" width="15" height="15" fill="rgb(229,133,35)"/><text x="66.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.24%)</title><rect x="63" y="1428" width="15" height="15" fill="rgb(206,27,33)"/><text x="66.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.24%)</title><rect x="63" y="1444" width="15" height="15" fill="rgb(220,109,17)"/><text x="66.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.83%)</title><rect x="68" y="1460" width="10" height="15" fill="rgb(219,179,18)"/><text x="71.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="68" y="1476" width="10" height="15" fill="rgb(214,75,39)"/><text x="71.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="68" y="1492" width="10" height="15" fill="rgb(215,47,50)"/><text x="71.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="68" y="1508" width="10" height="15" fill="rgb(206,136,39)"/><text x="71.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="68" y="1524" width="10" height="15" fill="rgb(242,191,22)"/><text x="71.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="68" y="1540" width="10" height="15" fill="rgb(250,122,22)"/><text x="71.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.83%)</title><rect x="68" y="1556" width="10" height="15" fill="rgb(211,91,5)"/><text x="71.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (2 samples, 0.83%)</title><rect x="68" y="1572" width="10" height="15" fill="rgb(247,133,31)"/><text x="71.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="68" y="1588" width="10" height="15" fill="rgb(234,92,8)"/><text x="71.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="68" y="1604" width="10" height="15" fill="rgb(227,53,43)"/><text x="71.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="68" y="1620" width="10" height="15" fill="rgb(241,65,17)"/><text x="71.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="68" y="1636" width="10" height="15" fill="rgb(254,80,16)"/><text x="71.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="68" y="1652" width="10" height="15" fill="rgb(226,101,34)"/><text x="71.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.41%)</title><rect x="73" y="1668" width="5" height="15" fill="rgb(223,107,2)"/><text x="76.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.41%)</title><rect x="73" y="1684" width="5" height="15" fill="rgb(236,130,54)"/><text x="76.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="73" y="1700" width="5" height="15" fill="rgb(211,29,6)"/><text x="76.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="73" y="1716" width="5" height="15" fill="rgb(230,8,28)"/><text x="76.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="73" y="1732" width="5" height="15" fill="rgb(229,145,38)"/><text x="76.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="73" y="1748" width="5" height="15" fill="rgb(207,211,0)"/><text x="76.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="73" y="1764" width="5" height="15" fill="rgb(238,1,47)"/><text x="76.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.41%)</title><rect x="73" y="1780" width="5" height="15" fill="rgb(251,132,41)"/><text x="76.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="73" y="1796" width="5" height="15" fill="rgb(224,61,25)"/><text x="76.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="73" y="1812" width="5" height="15" fill="rgb(211,97,12)"/><text x="76.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="73" y="1828" width="5" height="15" fill="rgb(253,57,37)"/><text x="76.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="73" y="1844" width="5" height="15" fill="rgb(211,204,39)"/><text x="76.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="73" y="1860" width="5" height="15" fill="rgb(229,73,27)"/><text x="76.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.41%)</title><rect x="73" y="1876" width="5" height="15" fill="rgb(206,76,23)"/><text x="76.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="73" y="1892" width="5" height="15" fill="rgb(245,62,45)"/><text x="76.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="73" y="1908" width="5" height="15" fill="rgb(206,166,22)"/><text x="76.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="73" y="1924" width="5" height="15" fill="rgb(207,67,0)"/><text x="76.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="73" y="1940" width="5" height="15" fill="rgb(251,152,45)"/><text x="76.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="73" y="1956" width="5" height="15" fill="rgb(252,15,14)"/><text x="76.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py:42) (1 samples, 0.41%)</title><rect x="73" y="1972" width="5" height="15" fill="rgb(249,223,52)"/><text x="76.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="73" y="1988" width="5" height="15" fill="rgb(206,223,54)"/><text x="76.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="73" y="2004" width="5" height="15" fill="rgb(217,151,5)"/><text x="76.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="73" y="2020" width="5" height="15" fill="rgb(213,156,18)"/><text x="76.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="73" y="2036" width="5" height="15" fill="rgb(230,74,26)"/><text x="76.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="73" y="2052" width="5" height="15" fill="rgb(216,46,18)"/><text x="76.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="73" y="2068" width="5" height="15" fill="rgb(210,24,24)"/><text x="76.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="73" y="2084" width="5" height="15" fill="rgb(238,127,30)"/><text x="76.00" y="2094.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="73" y="2100" width="5" height="15" fill="rgb(240,121,37)"/><text x="76.00" y="2110.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.41%)</title><rect x="73" y="2116" width="5" height="15" fill="rgb(207,210,35)"/><text x="76.00" y="2126.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:86) (1 samples, 0.41%)</title><rect x="78" y="116" width="5" height="15" fill="rgb(236,92,45)"/><text x="81.00" y="126.50"></text></g><g><title>array_true_divide (number.c:826) (1 samples, 0.41%)</title><rect x="78" y="132" width="5" height="15" fill="rgb(215,160,45)"/><text x="81.00" y="142.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.41%)</title><rect x="78" y="148" width="5" height="15" fill="rgb(242,51,23)"/><text x="81.00" y="158.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.41%)</title><rect x="78" y="164" width="5" height="15" fill="rgb(209,112,18)"/><text x="81.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:40) (2 samples, 0.83%)</title><rect x="78" y="52" width="10" height="15" fill="rgb(207,20,40)"/><text x="81.00" y="62.50"></text></g><g><title>start (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:11) (2 samples, 0.83%)</title><rect x="78" y="68" width="10" height="15" fill="rgb(229,45,14)"/><text x="81.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:39) (2 samples, 0.83%)</title><rect x="78" y="84" width="10" height="15" fill="rgb(235,38,40)"/><text x="81.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (2 samples, 0.83%)</title><rect x="78" y="100" width="10" height="15" fill="rgb(216,135,43)"/><text x="81.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.41%)</title><rect x="83" y="116" width="5" height="15" fill="rgb(233,216,36)"/><text x="86.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:89) (1 samples, 0.41%)</title><rect x="83" y="132" width="5" height="15" fill="rgb(241,174,8)"/><text x="86.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;:6) (1 samples, 0.41%)</title><rect x="83" y="148" width="5" height="15" fill="rgb(235,53,3)"/><text x="86.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.41%)</title><rect x="83" y="164" width="5" height="15" fill="rgb(240,8,45)"/><text x="86.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py:3506) (1 samples, 0.41%)</title><rect x="83" y="180" width="5" height="15" fill="rgb(238,54,34)"/><text x="86.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py:186) (1 samples, 0.41%)</title><rect x="83" y="196" width="5" height="15" fill="rgb(246,80,34)"/><text x="86.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.41%)</title><rect x="83" y="212" width="5" height="15" fill="rgb(251,87,32)"/><text x="86.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.41%)</title><rect x="83" y="228" width="5" height="15" fill="rgb(254,42,42)"/><text x="86.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.41%)</title><rect x="83" y="244" width="5" height="15" fill="rgb(237,141,1)"/><text x="86.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.41%)</title><rect x="83" y="260" width="5" height="15" fill="rgb(244,195,13)"/><text x="86.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.41%)</title><rect x="83" y="276" width="5" height="15" fill="rgb(250,60,44)"/><text x="86.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3026) (1 samples, 0.41%)</title><rect x="83" y="292" width="5" height="15" fill="rgb(227,33,53)"/><text x="86.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.41%)</title><rect x="92" y="116" width="5" height="15" fill="rgb(221,84,30)"/><text x="95.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.41%)</title><rect x="92" y="132" width="5" height="15" fill="rgb(234,82,21)"/><text x="95.00" y="142.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.41%)</title><rect x="92" y="148" width="5" height="15" fill="rgb(219,19,27)"/><text x="95.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.41%)</title><rect x="112" y="164" width="5" height="15" fill="rgb(240,132,23)"/><text x="115.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.41%)</title><rect x="117" y="164" width="5" height="15" fill="rgb(242,1,7)"/><text x="120.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.41%)</title><rect x="141" y="180" width="5" height="15" fill="rgb(215,68,3)"/><text x="144.00" y="190.50"></text></g><g><title>0x7fd06019a1ea (libc-2.29.so) (1 samples, 0.41%)</title><rect x="156" y="196" width="5" height="15" fill="rgb(214,80,12)"/><text x="159.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.24%)</title><rect x="161" y="196" width="14" height="15" fill="rgb(219,203,34)"/><text x="164.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 2.89%)</title><rect x="146" y="180" width="34" height="15" fill="rgb(228,30,6)"/><text x="149.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.41%)</title><rect x="175" y="196" width="5" height="15" fill="rgb(249,100,12)"/><text x="178.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (13 samples, 5.37%)</title><rect x="122" y="164" width="63" height="15" fill="rgb(205,152,7)"/><text x="125.00" y="174.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.41%)</title><rect x="180" y="180" width="5" height="15" fill="rgb(240,46,22)"/><text x="183.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (16 samples, 6.61%)</title><rect x="112" y="148" width="78" height="15" fill="rgb(222,159,32)"/><text x="115.00" y="158.50">predict (..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.41%)</title><rect x="185" y="164" width="5" height="15" fill="rgb(213,163,46)"/><text x="188.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.41%)</title><rect x="205" y="180" width="4" height="15" fill="rgb(224,43,39)"/><text x="208.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (3 samples, 1.24%)</title><rect x="209" y="180" width="15" height="15" fill="rgb(229,77,35)"/><text x="212.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.41%)</title><rect x="224" y="180" width="5" height="15" fill="rgb(248,146,42)"/><text x="227.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.41%)</title><rect x="229" y="180" width="5" height="15" fill="rgb(239,220,9)"/><text x="232.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.41%)</title><rect x="234" y="180" width="5" height="15" fill="rgb(235,133,14)"/><text x="237.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.41%)</title><rect x="263" y="196" width="5" height="15" fill="rgb(209,140,22)"/><text x="266.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.41%)</title><rect x="268" y="196" width="5" height="15" fill="rgb(230,24,38)"/><text x="271.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 3.31%)</title><rect x="239" y="180" width="39" height="15" fill="rgb(239,187,28)"/><text x="242.00" y="190.50">che..</text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.41%)</title><rect x="273" y="196" width="5" height="15" fill="rgb(207,2,27)"/><text x="276.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (9 samples, 3.72%)</title><rect x="278" y="180" width="44" height="15" fill="rgb(249,187,13)"/><text x="281.00" y="190.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 2.89%)</title><rect x="287" y="196" width="35" height="15" fill="rgb(211,144,10)"/><text x="290.00" y="206.50">si..</text></g><g><title>_add_filter (warnings.py:186) (7 samples, 2.89%)</title><rect x="287" y="212" width="35" height="15" fill="rgb(247,222,46)"/><text x="290.00" y="222.50">_a..</text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.83%)</title><rect x="322" y="180" width="9" height="15" fill="rgb(232,41,43)"/><text x="325.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.24%)</title><rect x="351" y="212" width="14" height="15" fill="rgb(226,45,53)"/><text x="354.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.41%)</title><rect x="361" y="228" width="4" height="15" fill="rgb(212,71,16)"/><text x="364.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (8 samples, 3.31%)</title><rect x="331" y="180" width="39" height="15" fill="rgb(209,44,44)"/><text x="334.00" y="190.50">che..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (6 samples, 2.48%)</title><rect x="341" y="196" width="29" height="15" fill="rgb(247,80,2)"/><text x="344.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c:1684) (1 samples, 0.41%)</title><rect x="365" y="212" width="5" height="15" fill="rgb(211,90,14)"/><text x="368.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.41%)</title><rect x="375" y="196" width="5" height="15" fill="rgb(213,229,19)"/><text x="378.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.83%)</title><rect x="380" y="196" width="10" height="15" fill="rgb(213,165,22)"/><text x="383.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (2 samples, 0.83%)</title><rect x="390" y="196" width="10" height="15" fill="rgb(241,130,33)"/><text x="393.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (7 samples, 2.89%)</title><rect x="370" y="180" width="34" height="15" fill="rgb(237,6,29)"/><text x="373.00" y="190.50">ch..</text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.41%)</title><rect x="400" y="196" width="4" height="15" fill="rgb(206,66,22)"/><text x="403.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.41%)</title><rect x="404" y="196" width="5" height="15" fill="rgb(232,136,25)"/><text x="407.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.83%)</title><rect x="404" y="180" width="10" height="15" fill="rgb(216,165,26)"/><text x="407.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.41%)</title><rect x="409" y="196" width="5" height="15" fill="rgb(251,9,5)"/><text x="412.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (2 samples, 0.83%)</title><rect x="414" y="180" width="10" height="15" fill="rgb(223,26,54)"/><text x="417.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.83%)</title><rect x="468" y="212" width="10" height="15" fill="rgb(212,217,27)"/><text x="471.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.41%)</title><rect x="478" y="212" width="4" height="15" fill="rgb(210,14,27)"/><text x="481.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (12 samples, 4.96%)</title><rect x="429" y="196" width="58" height="15" fill="rgb(227,53,2)"/><text x="432.00" y="206.50">_asser..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.41%)</title><rect x="482" y="212" width="5" height="15" fill="rgb(231,98,47)"/><text x="485.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (16 samples, 6.61%)</title><rect x="424" y="180" width="78" height="15" fill="rgb(243,1,27)"/><text x="427.00" y="190.50">check_arr..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 1.24%)</title><rect x="487" y="196" width="15" height="15" fill="rgb(218,96,38)"/><text x="490.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.41%)</title><rect x="497" y="212" width="5" height="15" fill="rgb(228,192,54)"/><text x="500.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (2 samples, 0.83%)</title><rect x="502" y="180" width="10" height="15" fill="rgb(229,30,24)"/><text x="505.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.41%)</title><rect x="517" y="196" width="4" height="15" fill="rgb(220,217,24)"/><text x="520.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.41%)</title><rect x="521" y="196" width="5" height="15" fill="rgb(216,6,13)"/><text x="524.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:137) (1 samples, 0.41%)</title><rect x="546" y="212" width="5" height="15" fill="rgb(237,48,49)"/><text x="549.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 4.13%)</title><rect x="512" y="180" width="48" height="15" fill="rgb(244,2,12)"/><text x="515.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (7 samples, 2.89%)</title><rect x="526" y="196" width="34" height="15" fill="rgb(223,49,31)"/><text x="529.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.83%)</title><rect x="551" y="212" width="9" height="15" fill="rgb(251,188,23)"/><text x="554.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:141) (1 samples, 0.41%)</title><rect x="556" y="228" width="4" height="15" fill="rgb(216,118,36)"/><text x="559.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.41%)</title><rect x="560" y="180" width="5" height="15" fill="rgb(225,164,45)"/><text x="563.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.41%)</title><rect x="565" y="180" width="5" height="15" fill="rgb(207,96,16)"/><text x="568.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (79 samples, 32.64%)</title><rect x="190" y="148" width="385" height="15" fill="rgb(207,100,40)"/><text x="193.00" y="158.50">predict (sklearn/tree/_classes.py:419)</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (79 samples, 32.64%)</title><rect x="190" y="164" width="385" height="15" fill="rgb(206,40,34)"/><text x="193.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py:380)</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.41%)</title><rect x="570" y="180" width="5" height="15" fill="rgb(211,60,21)"/><text x="573.00" y="190.50"></text></g><g><title>0x7fd03a7e5d2e (?) (1 samples, 0.41%)</title><rect x="580" y="164" width="5" height="15" fill="rgb(240,130,16)"/><text x="583.00" y="174.50"></text></g><g><title>0x7fd03a7e505a (?) (1 samples, 0.41%)</title><rect x="580" y="180" width="5" height="15" fill="rgb(237,190,49)"/><text x="583.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.41%)</title><rect x="580" y="196" width="5" height="15" fill="rgb(225,28,23)"/><text x="583.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.41%)</title><rect x="580" y="212" width="5" height="15" fill="rgb(212,120,52)"/><text x="583.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.41%)</title><rect x="580" y="228" width="5" height="15" fill="rgb(248,132,8)"/><text x="583.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="580" y="244" width="5" height="15" fill="rgb(217,126,24)"/><text x="583.00" y="254.50"></text></g><g><title>0x7fd03a7f31cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="585" y="212" width="5" height="15" fill="rgb(205,74,45)"/><text x="588.00" y="222.50"></text></g><g><title>0x7fd03a7f3225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="590" y="212" width="10" height="15" fill="rgb(227,196,18)"/><text x="593.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.41%)</title><rect x="595" y="228" width="5" height="15" fill="rgb(206,71,24)"/><text x="598.00" y="238.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.41%)</title><rect x="600" y="308" width="4" height="15" fill="rgb(206,104,33)"/><text x="603.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="600" y="324" width="4" height="15" fill="rgb(214,125,13)"/><text x="603.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.83%)</title><rect x="600" y="292" width="9" height="15" fill="rgb(205,60,28)"/><text x="603.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.41%)</title><rect x="604" y="308" width="5" height="15" fill="rgb(216,113,32)"/><text x="607.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.41%)</title><rect x="604" y="324" width="5" height="15" fill="rgb(251,43,18)"/><text x="607.00" y="334.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.41%)</title><rect x="604" y="340" width="5" height="15" fill="rgb(229,186,9)"/><text x="607.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="604" y="356" width="5" height="15" fill="rgb(223,127,15)"/><text x="607.00" y="366.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.41%)</title><rect x="609" y="292" width="5" height="15" fill="rgb(242,128,26)"/><text x="612.00" y="302.50"></text></g><g><title>0x7fd03a7d7d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.65%)</title><rect x="600" y="228" width="19" height="15" fill="rgb(218,137,48)"/><text x="603.00" y="238.50"></text></g><g><title>0x7fd03a7d7666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.65%)</title><rect x="600" y="244" width="19" height="15" fill="rgb(229,22,17)"/><text x="603.00" y="254.50"></text></g><g><title>0x7fd03a7cd2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.65%)</title><rect x="600" y="260" width="19" height="15" fill="rgb(252,210,0)"/><text x="603.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.65%)</title><rect x="600" y="276" width="19" height="15" fill="rgb(248,54,22)"/><text x="603.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.41%)</title><rect x="614" y="292" width="5" height="15" fill="rgb(223,79,24)"/><text x="617.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.41%)</title><rect x="614" y="308" width="5" height="15" fill="rgb(224,21,2)"/><text x="617.00" y="318.50"></text></g><g><title>0x7fd0601886a2 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="614" y="324" width="5" height="15" fill="rgb(250,147,37)"/><text x="617.00" y="334.50"></text></g><g><title>0x7fd03a7f32df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.07%)</title><rect x="600" y="212" width="24" height="15" fill="rgb(227,65,38)"/><text x="603.00" y="222.50">0..</text></g><g><title>0x7fd03a7d7e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="619" y="228" width="5" height="15" fill="rgb(242,57,18)"/><text x="622.00" y="238.50"></text></g><g><title>0x7fd03a7cb006 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="619" y="244" width="5" height="15" fill="rgb(222,55,44)"/><text x="622.00" y="254.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 1.24%)</title><rect x="624" y="228" width="15" height="15" fill="rgb(207,2,1)"/><text x="627.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.41%)</title><rect x="634" y="244" width="5" height="15" fill="rgb(231,120,16)"/><text x="637.00" y="254.50"></text></g><g><title>0x7fd060257130 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="634" y="260" width="5" height="15" fill="rgb(205,28,33)"/><text x="637.00" y="270.50"></text></g><g><title>0x7fd03a7f3592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.65%)</title><rect x="624" y="212" width="19" height="15" fill="rgb(230,189,39)"/><text x="627.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.41%)</title><rect x="639" y="228" width="4" height="15" fill="rgb(227,122,6)"/><text x="642.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.41%)</title><rect x="639" y="244" width="4" height="15" fill="rgb(244,15,44)"/><text x="642.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.41%)</title><rect x="639" y="260" width="4" height="15" fill="rgb(242,50,18)"/><text x="642.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.41%)</title><rect x="639" y="276" width="4" height="15" fill="rgb(223,18,38)"/><text x="642.00" y="286.50"></text></g><g><title>0x7fd03a7c88b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="643" y="228" width="5" height="15" fill="rgb(205,134,42)"/><text x="646.00" y="238.50"></text></g><g><title>0x7fd03a7f392f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="643" y="212" width="10" height="15" fill="rgb(252,59,37)"/><text x="646.00" y="222.50"></text></g><g><title>0x7fd03a7c89af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="648" y="228" width="5" height="15" fill="rgb(226,227,4)"/><text x="651.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:690) (1 samples, 0.41%)</title><rect x="653" y="260" width="5" height="15" fill="rgb(207,44,14)"/><text x="656.00" y="270.50"></text></g><g><title>0x7fd03a7e4fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 6.61%)</title><rect x="585" y="180" width="78" height="15" fill="rgb(218,196,0)"/><text x="588.00" y="190.50">0x7fd03a7..</text></g><g><title>0x7fd03a7f4405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 6.61%)</title><rect x="585" y="196" width="78" height="15" fill="rgb(226,160,53)"/><text x="588.00" y="206.50">0x7fd03a7..</text></g><g><title>0x7fd03a7f3c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="653" y="212" width="10" height="15" fill="rgb(217,163,51)"/><text x="656.00" y="222.50"></text></g><g><title>0x7fd03a7cb529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="653" y="228" width="10" height="15" fill="rgb(254,9,18)"/><text x="656.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.83%)</title><rect x="653" y="244" width="10" height="15" fill="rgb(242,12,46)"/><text x="656.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.41%)</title><rect x="658" y="260" width="5" height="15" fill="rgb(246,133,8)"/><text x="661.00" y="270.50"></text></g><g><title>0x7fd03a7e505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.65%)</title><rect x="663" y="180" width="19" height="15" fill="rgb(252,146,7)"/><text x="666.00" y="190.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 1.65%)</title><rect x="663" y="196" width="19" height="15" fill="rgb(226,55,54)"/><text x="666.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.41%)</title><rect x="678" y="212" width="4" height="15" fill="rgb(208,4,54)"/><text x="681.00" y="222.50"></text></g><g><title>0x7fd03a7e513a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="682" y="180" width="5" height="15" fill="rgb(253,118,3)"/><text x="685.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.41%)</title><rect x="682" y="196" width="5" height="15" fill="rgb(251,102,35)"/><text x="685.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.41%)</title><rect x="682" y="212" width="5" height="15" fill="rgb(251,66,32)"/><text x="685.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.41%)</title><rect x="682" y="228" width="5" height="15" fill="rgb(251,98,18)"/><text x="685.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.41%)</title><rect x="692" y="196" width="5" height="15" fill="rgb(213,139,46)"/><text x="695.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.41%)</title><rect x="692" y="212" width="5" height="15" fill="rgb(241,214,9)"/><text x="695.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.41%)</title><rect x="692" y="228" width="5" height="15" fill="rgb(242,221,22)"/><text x="695.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (26 samples, 10.74%)</title><rect x="575" y="148" width="127" height="15" fill="rgb(239,126,26)"/><text x="578.00" y="158.50">predict (sklear..</text></g><g><title>0x7fd03a7e5d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 9.92%)</title><rect x="585" y="164" width="117" height="15" fill="rgb(227,121,10)"/><text x="588.00" y="174.50">0x7fd03a7e5d2e..</text></g><g><title>0x7fd03a7e5328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.24%)</title><rect x="687" y="180" width="15" height="15" fill="rgb(236,112,37)"/><text x="690.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.41%)</title><rect x="697" y="196" width="5" height="15" fill="rgb(248,78,17)"/><text x="700.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.41%)</title><rect x="697" y="212" width="5" height="15" fill="rgb(235,72,27)"/><text x="700.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.41%)</title><rect x="697" y="228" width="5" height="15" fill="rgb(214,193,9)"/><text x="700.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.41%)</title><rect x="697" y="244" width="5" height="15" fill="rgb(222,62,2)"/><text x="700.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.41%)</title><rect x="697" y="260" width="5" height="15" fill="rgb(253,203,9)"/><text x="700.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.41%)</title><rect x="702" y="148" width="5" height="15" fill="rgb(217,207,1)"/><text x="705.00" y="158.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 1.24%)</title><rect x="707" y="148" width="14" height="15" fill="rgb(253,166,7)"/><text x="710.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (2 samples, 0.83%)</title><rect x="712" y="164" width="9" height="15" fill="rgb(211,57,53)"/><text x="715.00" y="174.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (1 samples, 0.41%)</title><rect x="721" y="148" width="5" height="15" fill="rgb(254,212,44)"/><text x="724.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.41%)</title><rect x="736" y="164" width="5" height="15" fill="rgb(233,174,9)"/><text x="739.00" y="174.50"></text></g><g><title>prepare_index (mapping.c:458) (1 samples, 0.41%)</title><rect x="736" y="180" width="5" height="15" fill="rgb(238,65,48)"/><text x="739.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (132 samples, 54.55%)</title><rect x="102" y="132" width="644" height="15" fill="rgb(224,178,40)"/><text x="105.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/tree/_classes.py:442) (4 samples, 1.65%)</title><rect x="726" y="148" width="20" height="15" fill="rgb(223,52,13)"/><text x="729.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.41%)</title><rect x="741" y="164" width="5" height="15" fill="rgb(248,22,32)"/><text x="744.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.41%)</title><rect x="741" y="180" width="5" height="15" fill="rgb(238,171,8)"/><text x="744.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.41%)</title><rect x="741" y="196" width="5" height="15" fill="rgb(254,199,17)"/><text x="744.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.41%)</title><rect x="741" y="212" width="5" height="15" fill="rgb(207,129,49)"/><text x="744.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:54) (136 samples, 56.20%)</title><rect x="88" y="52" width="663" height="15" fill="rgb(250,135,2)"/><text x="91.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:53) (136 samples, 56.20%)</title><rect x="88" y="68" width="663" height="15" fill="rgb(242,227,31)"/><text x="91.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:37) (136 samples, 56.20%)</title><rect x="88" y="84" width="663" height="15" fill="rgb(232,199,52)"/><text x="91.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:31) (136 samples, 56.20%)</title><rect x="88" y="100" width="663" height="15" fill="rgb(245,37,19)"/><text x="91.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (134 samples, 55.37%)</title><rect x="97" y="116" width="654" height="15" fill="rgb(206,139,27)"/><text x="100.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.41%)</title><rect x="746" y="132" width="5" height="15" fill="rgb(229,17,4)"/><text x="749.00" y="142.50"></text></g><g><title>0x7fd020c5254f (?) (1 samples, 0.41%)</title><rect x="751" y="244" width="5" height="15" fill="rgb(221,11,39)"/><text x="754.00" y="254.50"></text></g><g><title>0x7fd020c5865e (?) (1 samples, 0.41%)</title><rect x="751" y="260" width="5" height="15" fill="rgb(209,133,40)"/><text x="754.00" y="270.50"></text></g><g><title>0x7fd020c5850f (?) (1 samples, 0.41%)</title><rect x="751" y="276" width="5" height="15" fill="rgb(252,110,3)"/><text x="754.00" y="286.50"></text></g><g><title>0x7fd020c5ed6c (?) (1 samples, 0.41%)</title><rect x="751" y="292" width="5" height="15" fill="rgb(245,203,1)"/><text x="754.00" y="302.50"></text></g><g><title>0x7fd02a17fab9 (libgomp.so.1.0.0) (1 samples, 0.41%)</title><rect x="751" y="308" width="5" height="15" fill="rgb(208,33,12)"/><text x="754.00" y="318.50"></text></g><g><title>0x7fd02a180ead (libgomp.so.1.0.0) (1 samples, 0.41%)</title><rect x="751" y="324" width="5" height="15" fill="rgb(228,21,19)"/><text x="754.00" y="334.50"></text></g><g><title>0x7fd02a180ea9 (libgomp.so.1.0.0) (10 samples, 4.13%)</title><rect x="756" y="484" width="48" height="15" fill="rgb(250,41,27)"/><text x="759.00" y="494.50">0x7f..</text></g><g><title>0x7fd02a180eab (libgomp.so.1.0.0) (13 samples, 5.37%)</title><rect x="804" y="484" width="64" height="15" fill="rgb(209,9,38)"/><text x="807.00" y="494.50">0x7fd02..</text></g><g><title>0x7fd02a17fab9 (libgomp.so.1.0.0) (33 samples, 13.64%)</title><rect x="756" y="468" width="160" height="15" fill="rgb(240,150,15)"/><text x="759.00" y="478.50">0x7fd02a17fab9 (libg..</text></g><g><title>0x7fd02a180ead (libgomp.so.1.0.0) (10 samples, 4.13%)</title><rect x="868" y="484" width="48" height="15" fill="rgb(224,53,24)"/><text x="871.00" y="494.50">0x7f..</text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:61) (36 samples, 14.88%)</title><rect x="751" y="52" width="175" height="15" fill="rgb(246,160,18)"/><text x="754.00" y="62.50">&lt;module&gt; (bench_Decisi..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:60) (36 samples, 14.88%)</title><rect x="751" y="68" width="175" height="15" fill="rgb(213,113,15)"/><text x="754.00" y="78.50">profile_pyrt (bench_De..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:37) (36 samples, 14.88%)</title><rect x="751" y="84" width="175" height="15" fill="rgb(210,175,20)"/><text x="754.00" y="94.50">setup_profile (bench_D..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:31) (36 samples, 14.88%)</title><rect x="751" y="100" width="175" height="15" fill="rgb(225,107,44)"/><text x="754.00" y="110.50">profile (bench_Decisio..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (36 samples, 14.88%)</title><rect x="751" y="116" width="175" height="15" fill="rgb(211,180,51)"/><text x="754.00" y="126.50">time_predict (mlprodic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (36 samples, 14.88%)</title><rect x="751" y="132" width="175" height="15" fill="rgb(243,189,7)"/><text x="754.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (36 samples, 14.88%)</title><rect x="751" y="148" width="175" height="15" fill="rgb(217,127,17)"/><text x="754.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (36 samples, 14.88%)</title><rect x="751" y="164" width="175" height="15" fill="rgb(234,94,23)"/><text x="754.00" y="174.50">_run_sequence_runtime ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (36 samples, 14.88%)</title><rect x="751" y="180" width="175" height="15" fill="rgb(215,139,7)"/><text x="754.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 14.88%)</title><rect x="751" y="196" width="175" height="15" fill="rgb(246,91,43)"/><text x="754.00" y="206.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 14.88%)</title><rect x="751" y="212" width="175" height="15" fill="rgb(236,180,39)"/><text x="754.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (36 samples, 14.88%)</title><rect x="751" y="228" width="175" height="15" fill="rgb(246,209,36)"/><text x="754.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (35 samples, 14.46%)</title><rect x="756" y="244" width="170" height="15" fill="rgb(227,90,16)"/><text x="759.00" y="254.50">pybind11::cpp_function..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (35 samples, 14.46%)</title><rect x="756" y="260" width="170" height="15" fill="rgb(205,194,20)"/><text x="759.00" y="270.50">void pybind11::cpp_fun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (35 samples, 14.46%)</title><rect x="756" y="276" width="170" height="15" fill="rgb(253,2,15)"/><text x="759.00" y="286.50">void pybind11::cpp_fun..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (35 samples, 14.46%)</title><rect x="756" y="292" width="170" height="15" fill="rgb(212,188,22)"/><text x="759.00" y="302.50">pybind11::detail::argu..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (35 samples, 14.46%)</title><rect x="756" y="308" width="170" height="15" fill="rgb(207,103,28)"/><text x="759.00" y="318.50">pybind11::detail::argu..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (35 samples, 14.46%)</title><rect x="756" y="324" width="170" height="15" fill="rgb(228,101,22)"/><text x="759.00" y="334.50">pybind11::cpp_function..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (35 samples, 14.46%)</title><rect x="756" y="340" width="170" height="15" fill="rgb(237,187,4)"/><text x="759.00" y="350.50">pybind11::array_t&lt;floa..</text></g><g><title>pybind11::array::~array (numpy.h:538) (35 samples, 14.46%)</title><rect x="756" y="356" width="170" height="15" fill="rgb(237,197,34)"/><text x="759.00" y="366.50">pybind11::array::~arra..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (35 samples, 14.46%)</title><rect x="756" y="372" width="170" height="15" fill="rgb(252,168,35)"/><text x="759.00" y="382.50">pybind11::buffer::~buf..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (35 samples, 14.46%)</title><rect x="756" y="388" width="170" height="15" fill="rgb(243,115,6)"/><text x="759.00" y="398.50">pybind11::object::~obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (35 samples, 14.46%)</title><rect x="756" y="404" width="170" height="15" fill="rgb(220,166,24)"/><text x="759.00" y="414.50">pybind11::handle::dec_..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (35 samples, 14.46%)</title><rect x="756" y="420" width="170" height="15" fill="rgb(205,15,14)"/><text x="759.00" y="430.50">RuntimeTreeEnsembleReg..</text></g><g><title>pybind11::array::size (numpy.h:619) (35 samples, 14.46%)</title><rect x="756" y="436" width="170" height="15" fill="rgb(223,70,49)"/><text x="759.00" y="446.50">pybind11::array::size ..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (35 samples, 14.46%)</title><rect x="756" y="452" width="170" height="15" fill="rgb(235,208,18)"/><text x="759.00" y="462.50">std::accumulate&lt;long c..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.83%)</title><rect x="916" y="468" width="10" height="15" fill="rgb(211,100,31)"/><text x="919.00" y="478.50"></text></g><g><title>0x7fd02a17edaa (libgomp.so.1.0.0) (2 samples, 0.83%)</title><rect x="916" y="484" width="10" height="15" fill="rgb(234,132,32)"/><text x="919.00" y="494.50"></text></g><g><title>0x7fd02a180cfd (libgomp.so.1.0.0) (2 samples, 0.83%)</title><rect x="916" y="500" width="10" height="15" fill="rgb(205,111,37)"/><text x="919.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.41%)</title><rect x="955" y="148" width="5" height="15" fill="rgb(244,129,38)"/><text x="958.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.41%)</title><rect x="975" y="196" width="5" height="15" fill="rgb(216,121,34)"/><text x="978.00" y="206.50"></text></g><g><title>0x7fd0201fe930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="985" y="244" width="5" height="15" fill="rgb(233,135,46)"/><text x="988.00" y="254.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 1.24%)</title><rect x="980" y="196" width="14" height="15" fill="rgb(210,70,14)"/><text x="983.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 1.24%)</title><rect x="980" y="212" width="14" height="15" fill="rgb(237,225,0)"/><text x="983.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="985" y="228" width="9" height="15" fill="rgb(252,33,46)"/><text x="988.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="990" y="244" width="4" height="15" fill="rgb(215,97,22)"/><text x="993.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="990" y="260" width="4" height="15" fill="rgb(244,108,16)"/><text x="993.00" y="270.50"></text></g><g><title>0x7fd020237ff9 (?) (1 samples, 0.41%)</title><rect x="999" y="212" width="5" height="15" fill="rgb(248,103,3)"/><text x="1002.00" y="222.50"></text></g><g><title>0x7fd020232ef6 (?) (1 samples, 0.41%)</title><rect x="999" y="228" width="5" height="15" fill="rgb(217,0,33)"/><text x="1002.00" y="238.50"></text></g><g><title>0x7fd020227962 (?) (1 samples, 0.41%)</title><rect x="999" y="244" width="5" height="15" fill="rgb(237,188,1)"/><text x="1002.00" y="254.50"></text></g><g><title>0x7fd02025b7a7 (?) (1 samples, 0.41%)</title><rect x="999" y="260" width="5" height="15" fill="rgb(251,110,44)"/><text x="1002.00" y="270.50"></text></g><g><title>0x7fd02025b379 (?) (1 samples, 0.41%)</title><rect x="999" y="276" width="5" height="15" fill="rgb(243,33,7)"/><text x="1002.00" y="286.50"></text></g><g><title>0x7fd0206b98b8 (?) (1 samples, 0.41%)</title><rect x="999" y="292" width="5" height="15" fill="rgb(212,33,1)"/><text x="1002.00" y="302.50"></text></g><g><title>0x7fd0206b7c7f (?) (1 samples, 0.41%)</title><rect x="999" y="308" width="5" height="15" fill="rgb(249,69,16)"/><text x="1002.00" y="318.50"></text></g><g><title>0x7fd0206ca99c (?) (1 samples, 0.41%)</title><rect x="999" y="324" width="5" height="15" fill="rgb(247,130,39)"/><text x="1002.00" y="334.50"></text></g><g><title>0x7fd0203f1cb7 (?) (1 samples, 0.41%)</title><rect x="999" y="340" width="5" height="15" fill="rgb(240,186,44)"/><text x="1002.00" y="350.50"></text></g><g><title>0x7fd0206865e6 (?) (1 samples, 0.41%)</title><rect x="999" y="356" width="5" height="15" fill="rgb(207,9,12)"/><text x="1002.00" y="366.50"></text></g><g><title>0x7fd020686486 (?) (1 samples, 0.41%)</title><rect x="999" y="372" width="5" height="15" fill="rgb(250,27,23)"/><text x="1002.00" y="382.50"></text></g><g><title>0x7fd020670c8d (?) (1 samples, 0.41%)</title><rect x="999" y="388" width="5" height="15" fill="rgb(234,162,42)"/><text x="1002.00" y="398.50"></text></g><g><title>0x7fd020670202 (?) (1 samples, 0.41%)</title><rect x="999" y="404" width="5" height="15" fill="rgb(253,97,26)"/><text x="1002.00" y="414.50"></text></g><g><title>0x7fd02066f913 (?) (1 samples, 0.41%)</title><rect x="999" y="420" width="5" height="15" fill="rgb(211,69,18)"/><text x="1002.00" y="430.50"></text></g><g><title>0x7fd02066e79d (?) (1 samples, 0.41%)</title><rect x="999" y="436" width="5" height="15" fill="rgb(254,96,0)"/><text x="1002.00" y="446.50"></text></g><g><title>0x7fd02069f223 (?) (1 samples, 0.41%)</title><rect x="999" y="452" width="5" height="15" fill="rgb(209,200,24)"/><text x="1002.00" y="462.50"></text></g><g><title>0x7fd02069eb3d (?) (1 samples, 0.41%)</title><rect x="999" y="468" width="5" height="15" fill="rgb(236,169,47)"/><text x="1002.00" y="478.50"></text></g><g><title>0x7fd020353344 (?) (1 samples, 0.41%)</title><rect x="999" y="484" width="5" height="15" fill="rgb(212,228,35)"/><text x="1002.00" y="494.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1004" y="228" width="5" height="15" fill="rgb(206,44,17)"/><text x="1007.00" y="238.50"></text></g><g><title>0x7fd0201ff0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1014" y="260" width="5" height="15" fill="rgb(232,20,38)"/><text x="1017.00" y="270.50"></text></g><g><title>0x7fd0201ff9d0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1019" y="260" width="5" height="15" fill="rgb(248,17,1)"/><text x="1022.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1024" y="260" width="5" height="15" fill="rgb(250,218,24)"/><text x="1027.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1024" y="276" width="5" height="15" fill="rgb(250,189,44)"/><text x="1027.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="1024" y="292" width="5" height="15" fill="rgb(235,182,36)"/><text x="1027.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1029" y="292" width="4" height="15" fill="rgb(244,140,20)"/><text x="1032.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1029" y="308" width="4" height="15" fill="rgb(218,18,13)"/><text x="1032.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1029" y="324" width="4" height="15" fill="rgb(208,119,51)"/><text x="1032.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1029" y="340" width="4" height="15" fill="rgb(242,179,46)"/><text x="1032.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1033" y="292" width="5" height="15" fill="rgb(236,84,26)"/><text x="1036.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1033" y="308" width="5" height="15" fill="rgb(239,39,36)"/><text x="1036.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1033" y="324" width="5" height="15" fill="rgb(225,9,36)"/><text x="1036.00" y="334.50"></text></g><g><title>0x7fd06017ac48 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1033" y="340" width="5" height="15" fill="rgb(236,32,27)"/><text x="1036.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1053" y="356" width="5" height="15" fill="rgb(220,75,32)"/><text x="1056.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1053" y="340" width="10" height="15" fill="rgb(206,213,20)"/><text x="1056.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1058" y="356" width="5" height="15" fill="rgb(239,32,19)"/><text x="1061.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1063" y="340" width="5" height="15" fill="rgb(211,3,21)"/><text x="1066.00" y="350.50"></text></g><g><title>0x7fd060179a41 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1063" y="356" width="5" height="15" fill="rgb(227,55,20)"/><text x="1066.00" y="366.50"></text></g><g><title>onnxruntime::SessionState::Profiler (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1068" y="340" width="4" height="15" fill="rgb(206,35,29)"/><text x="1071.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1097" y="500" width="5" height="15" fill="rgb(232,24,2)"/><text x="1100.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1097" y="516" width="5" height="15" fill="rgb(227,54,48)"/><text x="1100.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.48%)</title><rect x="1077" y="356" width="30" height="15" fill="rgb(239,127,13)"/><text x="1080.00" y="366.50">on..</text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.48%)</title><rect x="1077" y="372" width="30" height="15" fill="rgb(244,224,9)"/><text x="1080.00" y="382.50">on..</text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.48%)</title><rect x="1077" y="388" width="30" height="15" fill="rgb(218,37,15)"/><text x="1080.00" y="398.50">on..</text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.07%)</title><rect x="1082" y="404" width="25" height="15" fill="rgb(249,90,3)"/><text x="1085.00" y="414.50">o..</text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.07%)</title><rect x="1082" y="420" width="25" height="15" fill="rgb(232,127,19)"/><text x="1085.00" y="430.50">o..</text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.07%)</title><rect x="1082" y="436" width="25" height="15" fill="rgb(217,62,12)"/><text x="1085.00" y="446.50">o..</text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.24%)</title><rect x="1092" y="452" width="15" height="15" fill="rgb(250,96,20)"/><text x="1095.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1097" y="468" width="10" height="15" fill="rgb(207,19,28)"/><text x="1100.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1097" y="484" width="10" height="15" fill="rgb(238,225,13)"/><text x="1100.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1102" y="500" width="5" height="15" fill="rgb(240,100,12)"/><text x="1105.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1102" y="516" width="5" height="15" fill="rgb(205,124,6)"/><text x="1105.00" y="526.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1111" y="404" width="5" height="15" fill="rgb(242,130,24)"/><text x="1114.00" y="414.50"></text></g><g><title>0x7fd06019a124 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1111" y="420" width="5" height="15" fill="rgb(243,126,22)"/><text x="1114.00" y="430.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 6.61%)</title><rect x="1043" y="308" width="78" height="15" fill="rgb(223,48,17)"/><text x="1046.00" y="318.50">onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 6.61%)</title><rect x="1043" y="324" width="78" height="15" fill="rgb(211,30,28)"/><text x="1046.00" y="334.50">onnxrunti..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.13%)</title><rect x="1072" y="340" width="49" height="15" fill="rgb(249,55,44)"/><text x="1075.00" y="350.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.24%)</title><rect x="1107" y="356" width="14" height="15" fill="rgb(233,43,40)"/><text x="1110.00" y="366.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1111" y="372" width="10" height="15" fill="rgb(224,165,2)"/><text x="1114.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1111" y="388" width="10" height="15" fill="rgb(234,182,34)"/><text x="1114.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1116" y="404" width="5" height="15" fill="rgb(220,37,39)"/><text x="1119.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1116" y="420" width="5" height="15" fill="rgb(222,58,43)"/><text x="1119.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.26%)</title><rect x="1029" y="260" width="97" height="15" fill="rgb(222,87,11)"/><text x="1032.00" y="270.50">onnxruntime..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.26%)</title><rect x="1029" y="276" width="97" height="15" fill="rgb(213,214,6)"/><text x="1032.00" y="286.50">onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 7.44%)</title><rect x="1038" y="292" width="88" height="15" fill="rgb(213,113,22)"/><text x="1041.00" y="302.50">onnxruntim..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1121" y="308" width="5" height="15" fill="rgb(254,214,43)"/><text x="1124.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1121" y="324" width="5" height="15" fill="rgb(208,212,49)"/><text x="1124.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1121" y="340" width="5" height="15" fill="rgb(206,139,19)"/><text x="1124.00" y="350.50"></text></g><g><title>0x7fd060258066 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1121" y="356" width="5" height="15" fill="rgb(226,77,27)"/><text x="1124.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.41%)</title><rect x="1126" y="292" width="5" height="15" fill="rgb(215,188,25)"/><text x="1129.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.41%)</title><rect x="1126" y="308" width="5" height="15" fill="rgb(218,25,15)"/><text x="1129.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1126" y="260" width="10" height="15" fill="rgb(219,68,31)"/><text x="1129.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.83%)</title><rect x="1126" y="276" width="10" height="15" fill="rgb(218,54,16)"/><text x="1129.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.41%)</title><rect x="1131" y="292" width="5" height="15" fill="rgb(212,113,54)"/><text x="1134.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1131" y="308" width="5" height="15" fill="rgb(220,195,29)"/><text x="1134.00" y="318.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.925] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1136" y="260" width="5" height="15" fill="rgb(229,104,41)"/><text x="1139.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 11.57%)</title><rect x="1009" y="244" width="137" height="15" fill="rgb(206,170,27)"/><text x="1012.00" y="254.50">onnxruntime::pyth..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1141" y="260" width="5" height="15" fill="rgb(220,18,10)"/><text x="1144.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1146" y="244" width="9" height="15" fill="rgb(214,209,17)"/><text x="1149.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1150" y="260" width="5" height="15" fill="rgb(223,83,16)"/><text x="1153.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1155" y="244" width="5" height="15" fill="rgb(232,97,23)"/><text x="1158.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1155" y="260" width="5" height="15" fill="rgb(228,31,32)"/><text x="1158.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (42 samples, 17.36%)</title><rect x="960" y="164" width="205" height="15" fill="rgb(234,116,9)"/><text x="963.00" y="174.50">_run_whole_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (42 samples, 17.36%)</title><rect x="960" y="180" width="205" height="15" fill="rgb(227,219,44)"/><text x="963.00" y="190.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>run (onnxruntime/capi/session.py:136) (35 samples, 14.46%)</title><rect x="994" y="196" width="171" height="15" fill="rgb(243,147,29)"/><text x="997.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 13.64%)</title><rect x="1004" y="212" width="161" height="15" fill="rgb(221,128,5)"/><text x="1007.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 13.22%)</title><rect x="1009" y="228" width="156" height="15" fill="rgb(239,51,24)"/><text x="1012.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1160" y="244" width="5" height="15" fill="rgb(221,202,10)"/><text x="1163.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (50 samples, 20.66%)</title><rect x="941" y="132" width="244" height="15" fill="rgb(219,96,40)"/><text x="944.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (46 samples, 19.01%)</title><rect x="960" y="148" width="225" height="15" fill="rgb(254,12,19)"/><text x="963.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.65%)</title><rect x="1165" y="164" width="20" height="15" fill="rgb(236,80,5)"/><text x="1168.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.41%)</title><rect x="1180" y="180" width="5" height="15" fill="rgb(235,72,50)"/><text x="1183.00" y="190.50"></text></g><g><title>all (242 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,199,52)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:68) (54 samples, 22.31%)</title><rect x="926" y="52" width="264" height="15" fill="rgb(229,184,15)"/><text x="929.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegress..</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:67) (54 samples, 22.31%)</title><rect x="926" y="68" width="264" height="15" fill="rgb(227,79,1)"/><text x="929.00" y="78.50">profile_ort (bench_DecisionTreeRegr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:37) (54 samples, 22.31%)</title><rect x="926" y="84" width="264" height="15" fill="rgb(219,173,29)"/><text x="929.00" y="94.50">setup_profile (bench_DecisionTreeRe..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_50_12_float_.py:31) (54 samples, 22.31%)</title><rect x="926" y="100" width="264" height="15" fill="rgb(212,139,27)"/><text x="929.00" y="110.50">profile (bench_DecisionTreeRegresso..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (52 samples, 21.49%)</title><rect x="936" y="116" width="254" height="15" fill="rgb(243,180,12)"/><text x="939.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.41%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(249,135,46)"/><text x="1188.00" y="142.50"></text></g><g><title>0x7fd060257130 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(241,31,21)"/><text x="1188.00" y="158.50"></text></g></g></svg>