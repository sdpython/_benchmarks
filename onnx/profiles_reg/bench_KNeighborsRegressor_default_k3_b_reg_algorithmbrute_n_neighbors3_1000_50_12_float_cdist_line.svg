<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1670" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1653.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1653.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:1) (1 samples, 0.12%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(221,217,39)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(245,122,23)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(246,137,36)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(233,173,39)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(245,101,13)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(227,38,41)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.12%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(240,146,11)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(243,82,50)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(214,147,20)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(247,53,27)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(238,59,42)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(249,144,27)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(237,74,37)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(213,101,23)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:11) (1 samples, 0.12%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(230,4,29)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(209,188,21)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(232,116,39)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(236,176,35)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(207,190,51)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(246,157,4)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/mixins.py:63) (1 samples, 0.12%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(228,154,30)"/><text x="13.00" y="478.50"></text></g><g><title>NDArrayOperatorsMixin (numpy/lib/mixins.py:144) (1 samples, 0.12%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(208,0,6)"/><text x="13.00" y="494.50"></text></g><g><title>_binary_method (numpy/lib/mixins.py:22) (1 samples, 0.12%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(228,110,5)"/><text x="13.00" y="510.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.12%)</title><rect x="11" y="852" width="1" height="15" fill="rgb(229,141,29)"/><text x="14.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.12%)</title><rect x="11" y="868" width="1" height="15" fill="rgb(205,109,29)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.12%)</title><rect x="11" y="884" width="1" height="15" fill="rgb(228,84,9)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="11" y="900" width="1" height="15" fill="rgb(209,196,52)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(228,73,18)"/><text x="14.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(233,66,25)"/><text x="14.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(230,171,22)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(254,77,24)"/><text x="14.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.12%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(210,140,7)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.12%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(221,13,35)"/><text x="14.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:370) (1 samples, 0.12%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(237,62,36)"/><text x="14.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.23%)</title><rect x="11" y="820" width="3" height="15" fill="rgb(232,172,48)"/><text x="14.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.23%)</title><rect x="11" y="836" width="3" height="15" fill="rgb(221,141,18)"/><text x="14.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="12" y="852" width="2" height="15" fill="rgb(238,108,38)"/><text x="15.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(228,4,15)"/><text x="15.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.12%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(215,55,7)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.12%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(240,186,47)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.12%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(247,186,37)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.12%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(250,31,37)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.12%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(206,165,44)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:2) (3 samples, 0.35%)</title><rect x="11" y="148" width="4" height="15" fill="rgb(242,214,12)"/><text x="14.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="164" width="4" height="15" fill="rgb(210,116,23)"/><text x="14.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.35%)</title><rect x="11" y="180" width="4" height="15" fill="rgb(212,80,27)"/><text x="14.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="196" width="4" height="15" fill="rgb(239,111,23)"/><text x="14.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="212" width="4" height="15" fill="rgb(236,206,54)"/><text x="14.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="11" y="228" width="4" height="15" fill="rgb(231,171,19)"/><text x="14.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="11" y="244" width="4" height="15" fill="rgb(218,128,29)"/><text x="14.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="11" y="260" width="4" height="15" fill="rgb(251,228,51)"/><text x="14.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="276" width="4" height="15" fill="rgb(247,0,4)"/><text x="14.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.35%)</title><rect x="11" y="292" width="4" height="15" fill="rgb(244,181,29)"/><text x="14.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="308" width="4" height="15" fill="rgb(227,226,29)"/><text x="14.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="11" y="324" width="4" height="15" fill="rgb(216,79,23)"/><text x="14.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="11" y="340" width="4" height="15" fill="rgb(231,84,53)"/><text x="14.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="11" y="356" width="4" height="15" fill="rgb(218,178,3)"/><text x="14.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="372" width="4" height="15" fill="rgb(227,183,18)"/><text x="14.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.35%)</title><rect x="11" y="388" width="4" height="15" fill="rgb(218,50,37)"/><text x="14.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="404" width="4" height="15" fill="rgb(246,0,37)"/><text x="14.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="11" y="420" width="4" height="15" fill="rgb(217,134,9)"/><text x="14.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="11" y="436" width="4" height="15" fill="rgb(214,144,35)"/><text x="14.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="11" y="452" width="4" height="15" fill="rgb(239,14,43)"/><text x="14.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="468" width="4" height="15" fill="rgb(238,183,19)"/><text x="14.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.35%)</title><rect x="11" y="484" width="4" height="15" fill="rgb(249,208,22)"/><text x="14.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="500" width="4" height="15" fill="rgb(252,109,39)"/><text x="14.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="11" y="516" width="4" height="15" fill="rgb(237,186,35)"/><text x="14.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="11" y="532" width="4" height="15" fill="rgb(238,7,42)"/><text x="14.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="11" y="548" width="4" height="15" fill="rgb(241,77,9)"/><text x="14.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="564" width="4" height="15" fill="rgb(221,98,48)"/><text x="14.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.35%)</title><rect x="11" y="580" width="4" height="15" fill="rgb(222,0,42)"/><text x="14.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="596" width="4" height="15" fill="rgb(215,130,53)"/><text x="14.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.35%)</title><rect x="11" y="612" width="4" height="15" fill="rgb(233,30,48)"/><text x="14.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="628" width="4" height="15" fill="rgb(239,108,8)"/><text x="14.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="644" width="4" height="15" fill="rgb(210,191,8)"/><text x="14.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="11" y="660" width="4" height="15" fill="rgb(236,203,28)"/><text x="14.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="11" y="676" width="4" height="15" fill="rgb(226,216,51)"/><text x="14.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="11" y="692" width="4" height="15" fill="rgb(216,30,14)"/><text x="14.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="708" width="4" height="15" fill="rgb(220,47,2)"/><text x="14.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.35%)</title><rect x="11" y="724" width="4" height="15" fill="rgb(235,193,15)"/><text x="14.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="11" y="740" width="4" height="15" fill="rgb(232,27,12)"/><text x="14.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="11" y="756" width="4" height="15" fill="rgb(227,48,12)"/><text x="14.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="11" y="772" width="4" height="15" fill="rgb(209,100,41)"/><text x="14.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="11" y="788" width="4" height="15" fill="rgb(250,151,22)"/><text x="14.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="11" y="804" width="4" height="15" fill="rgb(233,17,21)"/><text x="14.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.12%)</title><rect x="14" y="820" width="1" height="15" fill="rgb(235,62,34)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="14" y="836" width="1" height="15" fill="rgb(216,132,29)"/><text x="17.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="14" y="852" width="1" height="15" fill="rgb(230,78,25)"/><text x="17.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(224,199,4)"/><text x="17.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(231,16,30)"/><text x="17.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(210,196,48)"/><text x="17.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.12%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(246,191,0)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(233,33,52)"/><text x="17.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(224,74,1)"/><text x="17.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.12%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(218,14,17)"/><text x="17.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.12%)</title><rect x="14" y="980" width="1" height="15" fill="rgb(247,112,22)"/><text x="17.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.12%)</title><rect x="14" y="996" width="1" height="15" fill="rgb(223,36,43)"/><text x="17.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="14" y="1012" width="1" height="15" fill="rgb(222,134,34)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="14" y="1028" width="1" height="15" fill="rgb(248,45,14)"/><text x="17.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="14" y="1044" width="1" height="15" fill="rgb(210,161,52)"/><text x="17.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="14" y="1060" width="1" height="15" fill="rgb(233,16,54)"/><text x="17.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="14" y="1076" width="1" height="15" fill="rgb(246,48,39)"/><text x="17.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5372) (1 samples, 0.12%)</title><rect x="14" y="1092" width="1" height="15" fill="rgb(217,56,22)"/><text x="17.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.12%)</title><rect x="14" y="1108" width="1" height="15" fill="rgb(250,131,47)"/><text x="17.00" y="1118.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="14" y="1124" width="1" height="15" fill="rgb(227,179,28)"/><text x="17.00" y="1134.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="14" y="1140" width="1" height="15" fill="rgb(207,18,33)"/><text x="17.00" y="1150.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="14" y="1156" width="1" height="15" fill="rgb(246,148,11)"/><text x="17.00" y="1166.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="14" y="1172" width="1" height="15" fill="rgb(213,101,51)"/><text x="17.00" y="1182.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="14" y="1188" width="1" height="15" fill="rgb(231,99,47)"/><text x="17.00" y="1198.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="14" y="1204" width="1" height="15" fill="rgb(246,135,34)"/><text x="17.00" y="1214.50"></text></g><g><title>_parse_sub (sre_parse.py:433) (1 samples, 0.12%)</title><rect x="14" y="1220" width="1" height="15" fill="rgb(246,109,45)"/><text x="17.00" y="1230.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:4) (1 samples, 0.12%)</title><rect x="15" y="148" width="1" height="15" fill="rgb(247,41,15)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="164" width="1" height="15" fill="rgb(245,46,45)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="15" y="180" width="1" height="15" fill="rgb(245,87,38)"/><text x="18.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="196" width="1" height="15" fill="rgb(206,201,23)"/><text x="18.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="212" width="1" height="15" fill="rgb(221,226,14)"/><text x="18.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="228" width="1" height="15" fill="rgb(240,139,27)"/><text x="18.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="244" width="1" height="15" fill="rgb(221,45,3)"/><text x="18.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="260" width="1" height="15" fill="rgb(230,80,47)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="276" width="1" height="15" fill="rgb(248,188,26)"/><text x="18.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.12%)</title><rect x="15" y="292" width="1" height="15" fill="rgb(223,42,24)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="308" width="1" height="15" fill="rgb(250,11,37)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="324" width="1" height="15" fill="rgb(254,209,48)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="340" width="1" height="15" fill="rgb(212,2,7)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="356" width="1" height="15" fill="rgb(234,4,50)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="372" width="1" height="15" fill="rgb(225,38,8)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.12%)</title><rect x="15" y="388" width="1" height="15" fill="rgb(213,68,11)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="404" width="1" height="15" fill="rgb(251,144,0)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="420" width="1" height="15" fill="rgb(251,53,35)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="436" width="1" height="15" fill="rgb(207,14,10)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="452" width="1" height="15" fill="rgb(240,208,42)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="468" width="1" height="15" fill="rgb(225,146,43)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.12%)</title><rect x="15" y="484" width="1" height="15" fill="rgb(242,114,37)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="15" y="500" width="1" height="15" fill="rgb(246,49,36)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="516" width="1" height="15" fill="rgb(242,43,2)"/><text x="18.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="532" width="1" height="15" fill="rgb(241,27,33)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="548" width="1" height="15" fill="rgb(229,218,7)"/><text x="18.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="564" width="1" height="15" fill="rgb(211,143,26)"/><text x="18.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="580" width="1" height="15" fill="rgb(228,88,37)"/><text x="18.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="596" width="1" height="15" fill="rgb(235,124,29)"/><text x="18.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.12%)</title><rect x="15" y="612" width="1" height="15" fill="rgb(250,199,47)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="628" width="1" height="15" fill="rgb(235,163,31)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="644" width="1" height="15" fill="rgb(234,214,53)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="660" width="1" height="15" fill="rgb(223,27,21)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="676" width="1" height="15" fill="rgb(253,163,3)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="692" width="1" height="15" fill="rgb(253,123,28)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.12%)</title><rect x="15" y="708" width="1" height="15" fill="rgb(251,206,26)"/><text x="18.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="724" width="1" height="15" fill="rgb(212,3,39)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="740" width="1" height="15" fill="rgb(216,78,40)"/><text x="18.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="756" width="1" height="15" fill="rgb(250,183,17)"/><text x="18.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="772" width="1" height="15" fill="rgb(254,44,5)"/><text x="18.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="788" width="1" height="15" fill="rgb(242,50,9)"/><text x="18.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.12%)</title><rect x="15" y="804" width="1" height="15" fill="rgb(210,199,54)"/><text x="18.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="820" width="1" height="15" fill="rgb(208,10,29)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(225,191,34)"/><text x="18.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(205,99,53)"/><text x="18.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(252,228,21)"/><text x="18.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(242,170,26)"/><text x="18.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:20) (1 samples, 0.12%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(225,221,23)"/><text x="18.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(207,25,38)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(208,119,32)"/><text x="18.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(235,47,39)"/><text x="18.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(212,154,41)"/><text x="18.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(207,9,17)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/pool.py:38) (1 samples, 0.12%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(238,116,30)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(213,171,21)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="1028" width="1" height="15" fill="rgb(239,67,3)"/><text x="18.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="1044" width="1" height="15" fill="rgb(213,159,8)"/><text x="18.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="1060" width="1" height="15" fill="rgb(241,106,13)"/><text x="18.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1076" width="1" height="15" fill="rgb(224,154,33)"/><text x="18.00" y="1086.50"></text></g><g><title>&lt;module&gt; (multiprocessing/pool.py:17) (1 samples, 0.12%)</title><rect x="15" y="1092" width="1" height="15" fill="rgb(232,209,46)"/><text x="18.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1108" width="1" height="15" fill="rgb(212,124,2)"/><text x="18.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="15" y="1124" width="1" height="15" fill="rgb(208,94,14)"/><text x="18.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="15" y="1140" width="1" height="15" fill="rgb(215,35,13)"/><text x="18.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="15" y="1156" width="1" height="15" fill="rgb(243,30,35)"/><text x="18.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="15" y="1172" width="1" height="15" fill="rgb(221,40,13)"/><text x="18.00" y="1182.50"></text></g><g><title>&lt;module&gt; (queue.py:8) (1 samples, 0.12%)</title><rect x="15" y="1188" width="1" height="15" fill="rgb(205,33,31)"/><text x="18.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="15" y="1204" width="1" height="15" fill="rgb(227,71,43)"/><text x="18.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="15" y="1220" width="1" height="15" fill="rgb(236,181,1)"/><text x="18.00" y="1230.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="15" y="1236" width="1" height="15" fill="rgb(254,114,13)"/><text x="18.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="15" y="1252" width="1" height="15" fill="rgb(218,27,51)"/><text x="18.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.12%)</title><rect x="15" y="1268" width="1" height="15" fill="rgb(221,197,6)"/><text x="18.00" y="1278.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1362) (1 samples, 0.12%)</title><rect x="15" y="1284" width="1" height="15" fill="rgb(215,114,42)"/><text x="18.00" y="1294.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.12%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(216,216,7)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(205,84,51)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="276" width="2" height="15" fill="rgb(210,68,16)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(228,25,44)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="308" width="2" height="15" fill="rgb(248,17,48)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="324" width="2" height="15" fill="rgb(229,44,20)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.12%)</title><rect x="16" y="340" width="2" height="15" fill="rgb(239,88,8)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="356" width="2" height="15" fill="rgb(210,2,38)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="16" y="372" width="2" height="15" fill="rgb(246,153,32)"/><text x="19.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="388" width="2" height="15" fill="rgb(249,12,25)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="404" width="2" height="15" fill="rgb(211,183,45)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="420" width="2" height="15" fill="rgb(218,48,14)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="436" width="2" height="15" fill="rgb(214,19,42)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="452" width="2" height="15" fill="rgb(251,39,51)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="468" width="2" height="15" fill="rgb(250,37,30)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.12%)</title><rect x="16" y="484" width="2" height="15" fill="rgb(223,0,17)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="500" width="2" height="15" fill="rgb(248,3,27)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="516" width="2" height="15" fill="rgb(231,112,37)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="532" width="2" height="15" fill="rgb(223,196,1)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="548" width="2" height="15" fill="rgb(221,211,32)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="564" width="2" height="15" fill="rgb(219,44,45)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.12%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(235,72,13)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(245,93,12)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(246,18,52)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(254,75,37)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(212,175,21)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(232,186,54)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.12%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(210,84,18)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(213,146,31)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(238,225,16)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(228,197,0)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="740" width="2" height="15" fill="rgb(213,68,23)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="756" width="2" height="15" fill="rgb(214,87,32)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:115) (1 samples, 0.12%)</title><rect x="16" y="772" width="2" height="15" fill="rgb(208,36,5)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="788" width="2" height="15" fill="rgb(213,26,37)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="804" width="2" height="15" fill="rgb(235,171,41)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="820" width="2" height="15" fill="rgb(223,3,23)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(215,178,52)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(254,199,29)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (requests/api.py:13) (1 samples, 0.12%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(240,44,27)"/><text x="19.00" y="878.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(239,58,29)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(225,53,44)"/><text x="19.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(241,85,33)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(244,83,11)"/><text x="19.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(214,224,20)"/><text x="19.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(216,28,5)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(235,44,50)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/sessions.py:27) (1 samples, 0.12%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(209,169,31)"/><text x="19.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(208,68,16)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(208,181,31)"/><text x="19.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(215,134,44)"/><text x="19.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(205,15,22)"/><text x="19.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(210,153,35)"/><text x="19.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/adapters.py:44) (1 samples, 0.12%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(214,162,9)"/><text x="19.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="1108" width="2" height="15" fill="rgb(242,209,30)"/><text x="19.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="16" y="1124" width="2" height="15" fill="rgb(229,96,28)"/><text x="19.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="16" y="1140" width="2" height="15" fill="rgb(208,180,46)"/><text x="19.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="16" y="1156" width="2" height="15" fill="rgb(235,144,32)"/><text x="19.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="16" y="1172" width="2" height="15" fill="rgb(231,96,48)"/><text x="19.00" y="1182.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/socks.py:40) (1 samples, 0.12%)</title><rect x="16" y="1188" width="2" height="15" fill="rgb(239,52,39)"/><text x="19.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="16" y="1204" width="2" height="15" fill="rgb(250,205,0)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="16" y="1220" width="2" height="15" fill="rgb(253,45,14)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="16" y="1236" width="2" height="15" fill="rgb(233,168,31)"/><text x="19.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="16" y="1252" width="2" height="15" fill="rgb(241,147,20)"/><text x="19.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.12%)</title><rect x="16" y="1268" width="2" height="15" fill="rgb(244,50,27)"/><text x="19.00" y="1278.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1219) (1 samples, 0.12%)</title><rect x="16" y="1284" width="2" height="15" fill="rgb(222,10,29)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:4) (7 samples, 0.82%)</title><rect x="10" y="52" width="9" height="15" fill="rgb(226,47,33)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.82%)</title><rect x="10" y="68" width="9" height="15" fill="rgb(249,187,39)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.82%)</title><rect x="10" y="84" width="9" height="15" fill="rgb(214,27,43)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.82%)</title><rect x="10" y="100" width="9" height="15" fill="rgb(230,70,18)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.82%)</title><rect x="10" y="116" width="9" height="15" fill="rgb(241,101,28)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.82%)</title><rect x="10" y="132" width="9" height="15" fill="rgb(208,220,51)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py:7) (2 samples, 0.23%)</title><rect x="16" y="148" width="3" height="15" fill="rgb(250,221,53)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(228,158,27)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="16" y="180" width="3" height="15" fill="rgb(221,23,50)"/><text x="19.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="16" y="196" width="3" height="15" fill="rgb(238,201,12)"/><text x="19.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="16" y="212" width="3" height="15" fill="rgb(252,182,38)"/><text x="19.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="16" y="228" width="3" height="15" fill="rgb(217,36,50)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (1 samples, 0.12%)</title><rect x="18" y="244" width="1" height="15" fill="rgb(233,128,23)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="260" width="1" height="15" fill="rgb(231,10,44)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="276" width="1" height="15" fill="rgb(207,125,40)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="292" width="1" height="15" fill="rgb(244,214,40)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="308" width="1" height="15" fill="rgb(213,87,44)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="324" width="1" height="15" fill="rgb(241,193,26)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (1 samples, 0.12%)</title><rect x="18" y="340" width="1" height="15" fill="rgb(212,229,46)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="356" width="1" height="15" fill="rgb(207,162,7)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="372" width="1" height="15" fill="rgb(216,37,14)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="388" width="1" height="15" fill="rgb(235,88,1)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="404" width="1" height="15" fill="rgb(223,4,12)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="420" width="1" height="15" fill="rgb(238,116,5)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.12%)</title><rect x="18" y="436" width="1" height="15" fill="rgb(212,99,44)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="452" width="1" height="15" fill="rgb(227,141,44)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="18" y="468" width="1" height="15" fill="rgb(232,101,35)"/><text x="21.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="484" width="1" height="15" fill="rgb(237,151,6)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="500" width="1" height="15" fill="rgb(228,192,53)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="516" width="1" height="15" fill="rgb(222,111,3)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="532" width="1" height="15" fill="rgb(243,116,17)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="548" width="1" height="15" fill="rgb(220,61,14)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="564" width="1" height="15" fill="rgb(211,101,2)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.12%)</title><rect x="18" y="580" width="1" height="15" fill="rgb(209,219,30)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="596" width="1" height="15" fill="rgb(247,12,12)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="612" width="1" height="15" fill="rgb(212,191,5)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="628" width="1" height="15" fill="rgb(228,204,0)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="644" width="1" height="15" fill="rgb(229,176,26)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="660" width="1" height="15" fill="rgb(249,14,8)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.12%)</title><rect x="18" y="676" width="1" height="15" fill="rgb(252,140,7)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="692" width="1" height="15" fill="rgb(243,185,14)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="708" width="1" height="15" fill="rgb(249,131,18)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="724" width="1" height="15" fill="rgb(222,147,30)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="740" width="1" height="15" fill="rgb(227,131,11)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="756" width="1" height="15" fill="rgb(241,52,33)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.12%)</title><rect x="18" y="772" width="1" height="15" fill="rgb(237,211,49)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="788" width="1" height="15" fill="rgb(218,203,32)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="804" width="1" height="15" fill="rgb(208,37,17)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="820" width="1" height="15" fill="rgb(243,13,19)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="836" width="1" height="15" fill="rgb(209,193,19)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="852" width="1" height="15" fill="rgb(205,100,40)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.12%)</title><rect x="18" y="868" width="1" height="15" fill="rgb(217,69,13)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(213,122,1)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(218,42,47)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(234,137,18)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(205,100,30)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(224,227,16)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(225,113,53)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(231,90,23)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(230,50,43)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.12%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(214,24,1)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(216,23,21)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(237,90,8)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1060" width="1" height="15" fill="rgb(208,228,34)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1076" width="1" height="15" fill="rgb(251,168,42)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1092" width="1" height="15" fill="rgb(207,158,37)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.12%)</title><rect x="18" y="1108" width="1" height="15" fill="rgb(208,102,14)"/><text x="21.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(224,34,38)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(246,79,37)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(216,10,8)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(242,155,8)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1188" width="1" height="15" fill="rgb(210,204,43)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1204" width="1" height="15" fill="rgb(226,7,11)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1220" width="1" height="15" fill="rgb(224,99,6)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.12%)</title><rect x="18" y="1236" width="1" height="15" fill="rgb(206,12,2)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="18" y="1252" width="1" height="15" fill="rgb(240,208,54)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1268" width="1" height="15" fill="rgb(213,30,46)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1284" width="1" height="15" fill="rgb(252,60,21)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1300" width="1" height="15" fill="rgb(207,78,35)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1316" width="1" height="15" fill="rgb(242,193,43)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1332" width="1" height="15" fill="rgb(216,207,17)"/><text x="21.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1348" width="1" height="15" fill="rgb(247,204,12)"/><text x="21.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.12%)</title><rect x="18" y="1364" width="1" height="15" fill="rgb(211,9,39)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="18" y="1380" width="1" height="15" fill="rgb(230,44,14)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="18" y="1396" width="1" height="15" fill="rgb(252,134,29)"/><text x="21.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="18" y="1412" width="1" height="15" fill="rgb(206,173,49)"/><text x="21.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="18" y="1428" width="1" height="15" fill="rgb(244,63,42)"/><text x="21.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="18" y="1444" width="1" height="15" fill="rgb(219,114,36)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.12%)</title><rect x="18" y="1460" width="1" height="15" fill="rgb(208,168,14)"/><text x="21.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.12%)</title><rect x="18" y="1476" width="1" height="15" fill="rgb(220,200,5)"/><text x="21.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.12%)</title><rect x="18" y="1492" width="1" height="15" fill="rgb(237,108,52)"/><text x="21.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.12%)</title><rect x="18" y="1508" width="1" height="15" fill="rgb(209,116,24)"/><text x="21.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.12%)</title><rect x="18" y="1524" width="1" height="15" fill="rgb(243,169,7)"/><text x="21.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.12%)</title><rect x="18" y="1540" width="1" height="15" fill="rgb(250,227,44)"/><text x="21.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="18" y="1556" width="1" height="15" fill="rgb(211,89,6)"/><text x="21.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.12%)</title><rect x="18" y="1572" width="1" height="15" fill="rgb(213,173,15)"/><text x="21.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.12%)</title><rect x="18" y="1588" width="1" height="15" fill="rgb(207,58,29)"/><text x="21.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.12%)</title><rect x="18" y="1604" width="1" height="15" fill="rgb(252,188,0)"/><text x="21.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:432) (1 samples, 0.12%)</title><rect x="18" y="1620" width="1" height="15" fill="rgb(233,213,6)"/><text x="21.00" y="1630.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.12%)</title><rect x="19" y="308" width="2" height="15" fill="rgb(233,187,44)"/><text x="22.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (2 samples, 0.23%)</title><rect x="19" y="196" width="3" height="15" fill="rgb(211,184,18)"/><text x="22.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (2 samples, 0.23%)</title><rect x="19" y="212" width="3" height="15" fill="rgb(212,170,47)"/><text x="22.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.23%)</title><rect x="19" y="228" width="3" height="15" fill="rgb(212,60,4)"/><text x="22.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (2 samples, 0.23%)</title><rect x="19" y="244" width="3" height="15" fill="rgb(245,210,38)"/><text x="22.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.23%)</title><rect x="19" y="260" width="3" height="15" fill="rgb(216,55,13)"/><text x="22.00" y="270.50"></text></g><g><title>array_argpartition (methods.c:1454) (2 samples, 0.23%)</title><rect x="19" y="276" width="3" height="15" fill="rgb(253,165,39)"/><text x="22.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (2 samples, 0.23%)</title><rect x="19" y="292" width="3" height="15" fill="rgb(248,64,47)"/><text x="22.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (1 samples, 0.12%)</title><rect x="21" y="308" width="1" height="15" fill="rgb(209,71,50)"/><text x="24.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src:322) (1 samples, 0.12%)</title><rect x="21" y="324" width="1" height="15" fill="rgb(253,31,5)"/><text x="24.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src:257) (1 samples, 0.12%)</title><rect x="21" y="340" width="1" height="15" fill="rgb(210,114,9)"/><text x="24.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:47) (3 samples, 0.35%)</title><rect x="19" y="52" width="4" height="15" fill="rgb(246,71,28)"/><text x="22.00" y="62.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:46) (3 samples, 0.35%)</title><rect x="19" y="68" width="4" height="15" fill="rgb(250,24,44)"/><text x="22.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:26) (3 samples, 0.35%)</title><rect x="19" y="84" width="4" height="15" fill="rgb(243,220,36)"/><text x="22.00" y="94.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:18) (3 samples, 0.35%)</title><rect x="19" y="100" width="4" height="15" fill="rgb(222,113,35)"/><text x="22.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.35%)</title><rect x="19" y="116" width="4" height="15" fill="rgb(233,6,35)"/><text x="22.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (3 samples, 0.35%)</title><rect x="19" y="132" width="4" height="15" fill="rgb(209,45,36)"/><text x="22.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (3 samples, 0.35%)</title><rect x="19" y="148" width="4" height="15" fill="rgb(223,55,7)"/><text x="22.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (3 samples, 0.35%)</title><rect x="19" y="164" width="4" height="15" fill="rgb(207,216,17)"/><text x="22.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (3 samples, 0.35%)</title><rect x="19" y="180" width="4" height="15" fill="rgb(241,132,3)"/><text x="22.00" y="190.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:521) (1 samples, 0.12%)</title><rect x="22" y="196" width="1" height="15" fill="rgb(217,38,39)"/><text x="25.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="22" y="212" width="1" height="15" fill="rgb(230,176,52)"/><text x="25.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2516) (1 samples, 0.12%)</title><rect x="22" y="228" width="1" height="15" fill="rgb(244,82,45)"/><text x="25.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.12%)</title><rect x="23" y="164" width="2" height="15" fill="rgb(232,8,16)"/><text x="26.00" y="174.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.12%)</title><rect x="23" y="180" width="2" height="15" fill="rgb(220,102,35)"/><text x="26.00" y="190.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:172) (4 samples, 0.47%)</title><rect x="23" y="148" width="6" height="15" fill="rgb(209,203,14)"/><text x="26.00" y="158.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.35%)</title><rect x="25" y="164" width="4" height="15" fill="rgb(227,53,28)"/><text x="28.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.35%)</title><rect x="25" y="180" width="4" height="15" fill="rgb(224,90,45)"/><text x="28.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.12%)</title><rect x="29" y="164" width="1" height="15" fill="rgb(225,38,13)"/><text x="32.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.12%)</title><rect x="29" y="180" width="1" height="15" fill="rgb(232,111,17)"/><text x="32.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.12%)</title><rect x="29" y="196" width="1" height="15" fill="rgb(225,155,0)"/><text x="32.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.12%)</title><rect x="29" y="212" width="1" height="15" fill="rgb(226,156,34)"/><text x="32.00" y="222.50"></text></g><g><title>0x7f8a7e562a33 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="29" y="228" width="1" height="15" fill="rgb(212,65,0)"/><text x="32.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="30" y="196" width="2" height="15" fill="rgb(214,215,8)"/><text x="33.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:583) (3 samples, 0.35%)</title><rect x="30" y="164" width="4" height="15" fill="rgb(252,12,52)"/><text x="33.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.35%)</title><rect x="30" y="180" width="4" height="15" fill="rgb(240,108,38)"/><text x="33.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.23%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(247,125,15)"/><text x="35.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="33" y="212" width="1" height="15" fill="rgb(244,166,42)"/><text x="36.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.12%)</title><rect x="34" y="180" width="2" height="15" fill="rgb(237,186,19)"/><text x="37.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.12%)</title><rect x="34" y="196" width="2" height="15" fill="rgb(210,145,10)"/><text x="37.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:604) (2 samples, 0.23%)</title><rect x="34" y="164" width="3" height="15" fill="rgb(235,183,6)"/><text x="37.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.12%)</title><rect x="36" y="180" width="1" height="15" fill="rgb(220,126,19)"/><text x="39.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.12%)</title><rect x="36" y="196" width="1" height="15" fill="rgb(233,84,10)"/><text x="39.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.12%)</title><rect x="36" y="212" width="1" height="15" fill="rgb(233,5,30)"/><text x="39.00" y="222.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:631) (1 samples, 0.12%)</title><rect x="37" y="164" width="1" height="15" fill="rgb(212,117,24)"/><text x="40.00" y="174.50"></text></g><g><title>0x7f8a7e5831d1 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="37" y="180" width="1" height="15" fill="rgb(243,137,7)"/><text x="40.00" y="190.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1579) (1 samples, 0.12%)</title><rect x="38" y="180" width="2" height="15" fill="rgb(227,179,4)"/><text x="41.00" y="190.50"></text></g><g><title>get_chunk_n_rows (sklearn/utils/__init__.py:960) (1 samples, 0.12%)</title><rect x="38" y="196" width="2" height="15" fill="rgb(216,26,25)"/><text x="41.00" y="206.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1345) (1 samples, 0.12%)</title><rect x="40" y="212" width="1" height="15" fill="rgb(241,70,25)"/><text x="43.00" y="222.50"></text></g><g><title>_return_float_dtype (sklearn/metrics/pairwise.py:42) (1 samples, 0.12%)</title><rect x="40" y="228" width="1" height="15" fill="rgb(218,200,16)"/><text x="43.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.12%)</title><rect x="40" y="244" width="1" height="15" fill="rgb(254,53,45)"/><text x="43.00" y="254.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.12%)</title><rect x="41" y="228" width="2" height="15" fill="rgb(233,143,45)"/><text x="44.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.12%)</title><rect x="41" y="244" width="2" height="15" fill="rgb(206,212,8)"/><text x="44.00" y="254.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1347) (2 samples, 0.23%)</title><rect x="41" y="212" width="3" height="15" fill="rgb(253,67,16)"/><text x="44.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:389) (1 samples, 0.12%)</title><rect x="43" y="228" width="1" height="15" fill="rgb(224,134,43)"/><text x="46.00" y="238.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py:529) (1 samples, 0.12%)</title><rect x="43" y="244" width="1" height="15" fill="rgb(211,88,31)"/><text x="46.00" y="254.50"></text></g><g><title>in_main_thread (joblib/_parallel_backends.py:180) (1 samples, 0.12%)</title><rect x="43" y="260" width="1" height="15" fill="rgb(253,215,10)"/><text x="46.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (1 samples, 0.12%)</title><rect x="45" y="340" width="2" height="15" fill="rgb(226,8,6)"/><text x="48.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.12%)</title><rect x="45" y="356" width="2" height="15" fill="rgb(215,43,45)"/><text x="48.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.12%)</title><rect x="45" y="372" width="2" height="15" fill="rgb(244,44,54)"/><text x="48.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.12%)</title><rect x="45" y="388" width="2" height="15" fill="rgb(216,84,0)"/><text x="48.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="45" y="404" width="2" height="15" fill="rgb(242,144,28)"/><text x="48.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="45" y="420" width="2" height="15" fill="rgb(224,22,47)"/><text x="48.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="45" y="436" width="2" height="15" fill="rgb(238,185,16)"/><text x="48.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.12%)</title><rect x="45" y="452" width="2" height="15" fill="rgb(218,82,14)"/><text x="48.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="45" y="468" width="2" height="15" fill="rgb(218,6,42)"/><text x="48.00" y="478.50"></text></g><g><title>0x7f8a7e56421f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="45" y="484" width="2" height="15" fill="rgb(252,44,24)"/><text x="48.00" y="494.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.12%)</title><rect x="47" y="372" width="1" height="15" fill="rgb(254,224,8)"/><text x="50.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.12%)</title><rect x="47" y="388" width="1" height="15" fill="rgb(251,25,45)"/><text x="50.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.12%)</title><rect x="47" y="404" width="1" height="15" fill="rgb(234,202,52)"/><text x="50.00" y="414.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 0.47%)</title><rect x="45" y="260" width="6" height="15" fill="rgb(243,200,41)"/><text x="48.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 0.47%)</title><rect x="45" y="276" width="6" height="15" fill="rgb(253,219,32)"/><text x="48.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (4 samples, 0.47%)</title><rect x="45" y="292" width="6" height="15" fill="rgb(233,186,2)"/><text x="48.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (4 samples, 0.47%)</title><rect x="45" y="308" width="6" height="15" fill="rgb(232,95,5)"/><text x="48.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (4 samples, 0.47%)</title><rect x="45" y="324" width="6" height="15" fill="rgb(241,150,42)"/><text x="48.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (3 samples, 0.35%)</title><rect x="47" y="340" width="4" height="15" fill="rgb(218,150,11)"/><text x="50.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.35%)</title><rect x="47" y="356" width="4" height="15" fill="rgb(220,162,30)"/><text x="50.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.23%)</title><rect x="48" y="372" width="3" height="15" fill="rgb(249,205,40)"/><text x="51.00" y="382.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.23%)</title><rect x="48" y="388" width="3" height="15" fill="rgb(222,120,48)"/><text x="51.00" y="398.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.12%)</title><rect x="51" y="260" width="1" height="15" fill="rgb(220,65,5)"/><text x="54.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.35%)</title><rect x="52" y="276" width="4" height="15" fill="rgb(234,33,26)"/><text x="55.00" y="286.50"></text></g><g><title>0x7f8a7e578e66 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="55" y="292" width="1" height="15" fill="rgb(236,107,33)"/><text x="58.00" y="302.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:141) (9 samples, 1.05%)</title><rect x="45" y="244" width="13" height="15" fill="rgb(247,140,28)"/><text x="48.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.47%)</title><rect x="52" y="260" width="6" height="15" fill="rgb(208,165,40)"/><text x="55.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.12%)</title><rect x="56" y="276" width="2" height="15" fill="rgb(205,161,1)"/><text x="59.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.12%)</title><rect x="58" y="260" width="1" height="15" fill="rgb(229,223,13)"/><text x="61.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.12%)</title><rect x="59" y="260" width="1" height="15" fill="rgb(231,79,18)"/><text x="62.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.12%)</title><rect x="59" y="276" width="1" height="15" fill="rgb(212,164,1)"/><text x="62.00" y="286.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:262) (12 samples, 1.40%)</title><rect x="45" y="228" width="17" height="15" fill="rgb(227,6,30)"/><text x="48.00" y="238.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:144) (3 samples, 0.35%)</title><rect x="58" y="244" width="4" height="15" fill="rgb(215,165,1)"/><text x="61.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.12%)</title><rect x="60" y="260" width="2" height="15" fill="rgb(216,203,20)"/><text x="63.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.12%)</title><rect x="60" y="276" width="2" height="15" fill="rgb(226,132,21)"/><text x="63.00" y="286.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.12%)</title><rect x="60" y="292" width="2" height="15" fill="rgb(249,137,5)"/><text x="63.00" y="302.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:279) (2 samples, 0.23%)</title><rect x="62" y="228" width="3" height="15" fill="rgb(248,163,15)"/><text x="65.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (2 samples, 0.23%)</title><rect x="62" y="244" width="3" height="15" fill="rgb(206,54,12)"/><text x="65.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.23%)</title><rect x="62" y="260" width="3" height="15" fill="rgb(208,221,16)"/><text x="65.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.23%)</title><rect x="62" y="276" width="3" height="15" fill="rgb(217,58,9)"/><text x="65.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (2 samples, 0.23%)</title><rect x="62" y="292" width="3" height="15" fill="rgb(234,59,13)"/><text x="65.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (2 samples, 0.23%)</title><rect x="62" y="308" width="3" height="15" fill="rgb(248,17,30)"/><text x="65.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2803) (2 samples, 0.23%)</title><rect x="62" y="324" width="3" height="15" fill="rgb(220,56,36)"/><text x="65.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src:2392) (2 samples, 0.23%)</title><rect x="62" y="340" width="3" height="15" fill="rgb(237,103,17)"/><text x="65.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src:643) (2 samples, 0.23%)</title><rect x="62" y="356" width="3" height="15" fill="rgb(230,32,49)"/><text x="65.00" y="366.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2768) (1 samples, 0.12%)</title><rect x="66" y="324" width="1" height="15" fill="rgb(251,94,52)"/><text x="69.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:328) (1 samples, 0.12%)</title><rect x="66" y="340" width="1" height="15" fill="rgb(223,226,35)"/><text x="69.00" y="350.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:295) (3 samples, 0.35%)</title><rect x="65" y="228" width="4" height="15" fill="rgb(237,49,35)"/><text x="68.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (2 samples, 0.23%)</title><rect x="66" y="244" width="3" height="15" fill="rgb(249,73,51)"/><text x="69.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.23%)</title><rect x="66" y="260" width="3" height="15" fill="rgb(232,200,39)"/><text x="69.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.23%)</title><rect x="66" y="276" width="3" height="15" fill="rgb(214,47,5)"/><text x="69.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (2 samples, 0.23%)</title><rect x="66" y="292" width="3" height="15" fill="rgb(228,0,40)"/><text x="69.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (2 samples, 0.23%)</title><rect x="66" y="308" width="3" height="15" fill="rgb(209,107,43)"/><text x="69.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2803) (1 samples, 0.12%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(216,189,16)"/><text x="70.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src:2392) (1 samples, 0.12%)</title><rect x="67" y="340" width="2" height="15" fill="rgb(214,208,27)"/><text x="70.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src:650) (1 samples, 0.12%)</title><rect x="67" y="356" width="2" height="15" fill="rgb(208,64,9)"/><text x="70.00" y="366.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (1 samples, 0.12%)</title><rect x="67" y="372" width="2" height="15" fill="rgb(229,121,26)"/><text x="70.00" y="382.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:297) (1 samples, 0.12%)</title><rect x="69" y="228" width="1" height="15" fill="rgb(205,133,3)"/><text x="72.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.12%)</title><rect x="69" y="244" width="1" height="15" fill="rgb(223,88,29)"/><text x="72.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.12%)</title><rect x="69" y="260" width="1" height="15" fill="rgb(223,224,52)"/><text x="72.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:434) (1 samples, 0.12%)</title><rect x="69" y="276" width="1" height="15" fill="rgb(235,164,7)"/><text x="72.00" y="286.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="70" y="260" width="1" height="15" fill="rgb(236,195,28)"/><text x="73.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 1.52%)</title><rect x="71" y="260" width="18" height="15" fill="rgb(223,167,45)"/><text x="74.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2755) (1 samples, 0.12%)</title><rect x="89" y="292" width="2" height="15" fill="rgb(236,144,12)"/><text x="92.00" y="302.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 1.17%)</title><rect x="92" y="388" width="14" height="15" fill="rgb(219,169,31)"/><text x="95.00" y="398.50"></text></g><g><title>sched_yield (libc-2.29.so) (10 samples, 1.17%)</title><rect x="92" y="404" width="14" height="15" fill="rgb(209,198,39)"/><text x="95.00" y="414.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:303) (27 samples, 3.15%)</title><rect x="70" y="228" width="37" height="15" fill="rgb(254,15,0)"/><text x="73.00" y="238.50">euc..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (27 samples, 3.15%)</title><rect x="70" y="244" width="37" height="15" fill="rgb(216,84,51)"/><text x="73.00" y="254.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.52%)</title><rect x="89" y="260" width="18" height="15" fill="rgb(238,90,5)"/><text x="92.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (13 samples, 1.52%)</title><rect x="89" y="276" width="18" height="15" fill="rgb(230,159,13)"/><text x="92.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (12 samples, 1.40%)</title><rect x="91" y="292" width="16" height="15" fill="rgb(222,167,5)"/><text x="94.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (12 samples, 1.40%)</title><rect x="91" y="308" width="16" height="15" fill="rgb(253,194,46)"/><text x="94.00" y="318.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 1.40%)</title><rect x="91" y="324" width="16" height="15" fill="rgb(212,19,46)"/><text x="94.00" y="334.50"></text></g><g><title>dgemm_thread_tn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.28%)</title><rect x="92" y="340" width="15" height="15" fill="rgb(206,63,53)"/><text x="95.00" y="350.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.28%)</title><rect x="92" y="356" width="15" height="15" fill="rgb(224,203,16)"/><text x="95.00" y="366.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.28%)</title><rect x="92" y="372" width="15" height="15" fill="rgb(253,27,12)"/><text x="95.00" y="382.50"></text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="106" y="388" width="1" height="15" fill="rgb(217,141,54)"/><text x="109.00" y="398.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="106" y="404" width="1" height="15" fill="rgb(205,229,27)"/><text x="109.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.12%)</title><rect x="107" y="292" width="2" height="15" fill="rgb(246,218,51)"/><text x="110.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.12%)</title><rect x="107" y="308" width="2" height="15" fill="rgb(240,219,35)"/><text x="110.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.12%)</title><rect x="107" y="324" width="2" height="15" fill="rgb(216,86,25)"/><text x="110.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.12%)</title><rect x="109" y="292" width="1" height="15" fill="rgb(207,156,9)"/><text x="112.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.12%)</title><rect x="109" y="308" width="1" height="15" fill="rgb(210,48,46)"/><text x="112.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="109" y="324" width="1" height="15" fill="rgb(213,158,24)"/><text x="112.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="109" y="340" width="1" height="15" fill="rgb(214,186,3)"/><text x="112.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.12%)</title><rect x="109" y="356" width="1" height="15" fill="rgb(238,64,50)"/><text x="112.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (4 samples, 0.47%)</title><rect x="110" y="340" width="6" height="15" fill="rgb(222,155,35)"/><text x="113.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (4 samples, 0.47%)</title><rect x="110" y="356" width="6" height="15" fill="rgb(241,31,50)"/><text x="113.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (7 samples, 0.82%)</title><rect x="110" y="308" width="10" height="15" fill="rgb(213,140,35)"/><text x="113.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (7 samples, 0.82%)</title><rect x="110" y="324" width="10" height="15" fill="rgb(244,20,33)"/><text x="113.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (3 samples, 0.35%)</title><rect x="116" y="340" width="4" height="15" fill="rgb(217,93,28)"/><text x="119.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.35%)</title><rect x="116" y="356" width="4" height="15" fill="rgb(232,99,22)"/><text x="119.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 1.75%)</title><rect x="107" y="244" width="21" height="15" fill="rgb(218,189,2)"/><text x="110.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 1.75%)</title><rect x="107" y="260" width="21" height="15" fill="rgb(223,115,39)"/><text x="110.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (15 samples, 1.75%)</title><rect x="107" y="276" width="21" height="15" fill="rgb(208,211,21)"/><text x="110.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (13 samples, 1.52%)</title><rect x="110" y="292" width="18" height="15" fill="rgb(230,56,49)"/><text x="113.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (6 samples, 0.70%)</title><rect x="120" y="308" width="8" height="15" fill="rgb(223,89,26)"/><text x="123.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.70%)</title><rect x="120" y="324" width="8" height="15" fill="rgb(251,225,9)"/><text x="123.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (6 samples, 0.70%)</title><rect x="120" y="340" width="8" height="15" fill="rgb(249,102,28)"/><text x="123.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (6 samples, 0.70%)</title><rect x="120" y="356" width="8" height="15" fill="rgb(254,169,43)"/><text x="123.00" y="366.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:304) (16 samples, 1.87%)</title><rect x="107" y="228" width="22" height="15" fill="rgb(230,58,41)"/><text x="110.00" y="238.50">e..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.12%)</title><rect x="128" y="244" width="1" height="15" fill="rgb(225,168,41)"/><text x="131.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.12%)</title><rect x="128" y="260" width="1" height="15" fill="rgb(209,10,44)"/><text x="131.00" y="270.50"></text></g><g><title>0x7f8a7e583124 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="128" y="276" width="1" height="15" fill="rgb(216,228,14)"/><text x="131.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.12%)</title><rect x="129" y="292" width="2" height="15" fill="rgb(226,23,20)"/><text x="132.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.12%)</title><rect x="129" y="308" width="2" height="15" fill="rgb(250,113,10)"/><text x="132.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.12%)</title><rect x="129" y="324" width="2" height="15" fill="rgb(219,157,53)"/><text x="132.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="129" y="340" width="2" height="15" fill="rgb(209,128,8)"/><text x="132.00" y="350.50"></text></g><g><title>0x7f8a7e582f58 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="129" y="356" width="2" height="15" fill="rgb(211,47,46)"/><text x="132.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.12%)</title><rect x="131" y="340" width="1" height="15" fill="rgb(220,97,46)"/><text x="134.00" y="350.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (3 samples, 0.35%)</title><rect x="132" y="340" width="4" height="15" fill="rgb(249,160,2)"/><text x="135.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (3 samples, 0.35%)</title><rect x="132" y="356" width="4" height="15" fill="rgb(220,218,41)"/><text x="135.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (6 samples, 0.70%)</title><rect x="131" y="308" width="8" height="15" fill="rgb(248,56,25)"/><text x="134.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (6 samples, 0.70%)</title><rect x="131" y="324" width="8" height="15" fill="rgb(208,222,46)"/><text x="134.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.23%)</title><rect x="136" y="340" width="3" height="15" fill="rgb(224,68,8)"/><text x="139.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.23%)</title><rect x="136" y="356" width="3" height="15" fill="rgb(239,82,50)"/><text x="139.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.12%)</title><rect x="139" y="340" width="1" height="15" fill="rgb(251,84,19)"/><text x="142.00" y="350.50"></text></g><g><title>0x7f8a7e582f3a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="140" y="356" width="2" height="15" fill="rgb(228,177,36)"/><text x="143.00" y="366.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:305) (10 samples, 1.17%)</title><rect x="129" y="228" width="14" height="15" fill="rgb(234,163,53)"/><text x="132.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.17%)</title><rect x="129" y="244" width="14" height="15" fill="rgb(234,134,22)"/><text x="132.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.17%)</title><rect x="129" y="260" width="14" height="15" fill="rgb(227,160,53)"/><text x="132.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.17%)</title><rect x="129" y="276" width="14" height="15" fill="rgb(210,13,37)"/><text x="132.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (9 samples, 1.05%)</title><rect x="131" y="292" width="12" height="15" fill="rgb(245,104,9)"/><text x="134.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (3 samples, 0.35%)</title><rect x="139" y="308" width="4" height="15" fill="rgb(239,223,27)"/><text x="142.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.35%)</title><rect x="139" y="324" width="4" height="15" fill="rgb(222,26,9)"/><text x="142.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.23%)</title><rect x="140" y="340" width="3" height="15" fill="rgb(222,44,16)"/><text x="143.00" y="350.50"></text></g><g><title>0x7f8a7e582f46 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="142" y="356" width="1" height="15" fill="rgb(211,209,29)"/><text x="145.00" y="366.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (4 samples, 0.47%)</title><rect x="143" y="308" width="6" height="15" fill="rgb(215,27,21)"/><text x="146.00" y="318.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1868) (3 samples, 0.35%)</title><rect x="149" y="308" width="4" height="15" fill="rgb(232,141,16)"/><text x="152.00" y="318.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1869) (2 samples, 0.23%)</title><rect x="153" y="308" width="2" height="15" fill="rgb(211,219,33)"/><text x="156.00" y="318.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (3 samples, 0.35%)</title><rect x="155" y="308" width="5" height="15" fill="rgb(248,65,37)"/><text x="158.00" y="318.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1592) (89 samples, 10.39%)</title><rect x="40" y="180" width="122" height="15" fill="rgb(238,38,15)"/><text x="43.00" y="190.50">pairwise_distan..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1749) (89 samples, 10.39%)</title><rect x="40" y="196" width="122" height="15" fill="rgb(244,122,14)"/><text x="43.00" y="206.50">pairwise_distan..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1348) (86 samples, 10.04%)</title><rect x="44" y="212" width="118" height="15" fill="rgb(243,116,32)"/><text x="47.00" y="222.50">_parallel_pair..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:306) (14 samples, 1.63%)</title><rect x="143" y="228" width="19" height="15" fill="rgb(251,182,5)"/><text x="146.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 1.63%)</title><rect x="143" y="244" width="19" height="15" fill="rgb(227,155,28)"/><text x="146.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 1.63%)</title><rect x="143" y="260" width="19" height="15" fill="rgb(208,195,0)"/><text x="146.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (14 samples, 1.63%)</title><rect x="143" y="276" width="19" height="15" fill="rgb(217,35,33)"/><text x="146.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (14 samples, 1.63%)</title><rect x="143" y="292" width="19" height="15" fill="rgb(239,114,31)"/><text x="146.00" y="302.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1872) (2 samples, 0.23%)</title><rect x="160" y="308" width="2" height="15" fill="rgb(235,155,36)"/><text x="163.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:516) (1 samples, 0.12%)</title><rect x="164" y="196" width="1" height="15" fill="rgb(245,16,41)"/><text x="167.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.12%)</title><rect x="164" y="212" width="1" height="15" fill="rgb(234,127,6)"/><text x="167.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.12%)</title><rect x="164" y="228" width="1" height="15" fill="rgb(247,125,20)"/><text x="167.00" y="238.50"></text></g><g><title>unpack_indices (mapping.c:225) (1 samples, 0.12%)</title><rect x="164" y="244" width="1" height="15" fill="rgb(237,200,49)"/><text x="167.00" y="254.50"></text></g><g><title>unpack_tuple (mapping.c:164) (1 samples, 0.12%)</title><rect x="164" y="260" width="1" height="15" fill="rgb(228,177,3)"/><text x="167.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (7 samples, 0.82%)</title><rect x="165" y="308" width="10" height="15" fill="rgb(228,80,10)"/><text x="168.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src:292) (1 samples, 0.12%)</title><rect x="175" y="324" width="1" height="15" fill="rgb(206,111,21)"/><text x="178.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src:253) (1 samples, 0.12%)</title><rect x="176" y="340" width="1" height="15" fill="rgb(229,132,46)"/><text x="179.00" y="350.50"></text></g><g><title>adumb_select_double (selection.c.src:257) (12 samples, 1.40%)</title><rect x="177" y="340" width="17" height="15" fill="rgb(254,183,1)"/><text x="180.00" y="350.50"></text></g><g><title>adumb_select_double (selection.c.src:258) (43 samples, 5.02%)</title><rect x="194" y="340" width="59" height="15" fill="rgb(218,200,47)"/><text x="197.00" y="350.50">adumb_..</text></g><g><title>DOUBLE_LT (npysort_common.h:130) (38 samples, 4.43%)</title><rect x="201" y="356" width="52" height="15" fill="rgb(224,16,41)"/><text x="204.00" y="366.50">DOUBL..</text></g><g><title>_new_argsortlike (item_selection.c:1084) (58 samples, 6.77%)</title><rect x="175" y="308" width="80" height="15" fill="rgb(216,148,16)"/><text x="178.00" y="318.50">_new_args..</text></g><g><title>aintroselect_double (selection.c.src:322) (57 samples, 6.65%)</title><rect x="176" y="324" width="79" height="15" fill="rgb(223,171,33)"/><text x="179.00" y="334.50">aintrosel..</text></g><g><title>adumb_select_double (selection.c.src:260) (1 samples, 0.12%)</title><rect x="253" y="340" width="2" height="15" fill="rgb(224,195,42)"/><text x="256.00" y="350.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (68 samples, 7.93%)</title><rect x="165" y="196" width="94" height="15" fill="rgb(234,129,44)"/><text x="168.00" y="206.50">_kneighbors..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (68 samples, 7.93%)</title><rect x="165" y="212" width="94" height="15" fill="rgb(236,147,52)"/><text x="168.00" y="222.50">argpartitio..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (68 samples, 7.93%)</title><rect x="165" y="228" width="94" height="15" fill="rgb(208,78,54)"/><text x="168.00" y="238.50">array_imple..</text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (68 samples, 7.93%)</title><rect x="165" y="244" width="94" height="15" fill="rgb(211,164,10)"/><text x="168.00" y="254.50">argpartitio..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (68 samples, 7.93%)</title><rect x="165" y="260" width="94" height="15" fill="rgb(244,24,46)"/><text x="168.00" y="270.50">_wrapfunc (..</text></g><g><title>array_argpartition (methods.c:1454) (68 samples, 7.93%)</title><rect x="165" y="276" width="94" height="15" fill="rgb(219,221,37)"/><text x="168.00" y="286.50">array_argpa..</text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (68 samples, 7.93%)</title><rect x="165" y="292" width="94" height="15" fill="rgb(208,223,13)"/><text x="168.00" y="302.50">PyArray_Arg..</text></g><g><title>_new_argsortlike (item_selection.c:1101) (3 samples, 0.35%)</title><rect x="255" y="308" width="4" height="15" fill="rgb(252,99,41)"/><text x="258.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:518) (1 samples, 0.12%)</title><rect x="259" y="196" width="1" height="15" fill="rgb(212,128,47)"/><text x="262.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.12%)</title><rect x="259" y="212" width="1" height="15" fill="rgb(223,202,36)"/><text x="262.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.12%)</title><rect x="259" y="228" width="1" height="15" fill="rgb(225,35,33)"/><text x="262.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.12%)</title><rect x="259" y="244" width="1" height="15" fill="rgb(205,218,41)"/><text x="262.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.12%)</title><rect x="259" y="260" width="1" height="15" fill="rgb(234,146,49)"/><text x="262.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.12%)</title><rect x="259" y="276" width="1" height="15" fill="rgb(212,101,4)"/><text x="262.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.12%)</title><rect x="259" y="292" width="1" height="15" fill="rgb(206,215,1)"/><text x="262.00" y="302.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.12%)</title><rect x="259" y="308" width="1" height="15" fill="rgb(227,53,9)"/><text x="262.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="260" y="212" width="1" height="15" fill="rgb(213,90,28)"/><text x="263.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="260" y="228" width="1" height="15" fill="rgb(220,173,26)"/><text x="263.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.12%)</title><rect x="260" y="244" width="1" height="15" fill="rgb(246,179,39)"/><text x="263.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.12%)</title><rect x="260" y="260" width="1" height="15" fill="rgb(212,202,43)"/><text x="263.00" y="270.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.12%)</title><rect x="260" y="276" width="1" height="15" fill="rgb(205,183,43)"/><text x="263.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.12%)</title><rect x="260" y="292" width="1" height="15" fill="rgb(249,126,4)"/><text x="263.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (1 samples, 0.12%)</title><rect x="260" y="308" width="1" height="15" fill="rgb(213,125,22)"/><text x="263.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:218) (1 samples, 0.12%)</title><rect x="260" y="324" width="1" height="15" fill="rgb(246,16,11)"/><text x="263.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.12%)</title><rect x="261" y="292" width="2" height="15" fill="rgb(210,168,11)"/><text x="264.00" y="302.50"></text></g><g><title>0x7f8a7e582d67 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="263" y="308" width="1" height="15" fill="rgb(218,70,24)"/><text x="266.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.35%)</title><rect x="261" y="212" width="5" height="15" fill="rgb(245,101,22)"/><text x="264.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (3 samples, 0.35%)</title><rect x="261" y="228" width="5" height="15" fill="rgb(231,140,10)"/><text x="264.00" y="238.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (3 samples, 0.35%)</title><rect x="261" y="244" width="5" height="15" fill="rgb(239,55,23)"/><text x="264.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (3 samples, 0.35%)</title><rect x="261" y="260" width="5" height="15" fill="rgb(214,213,6)"/><text x="264.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.35%)</title><rect x="261" y="276" width="5" height="15" fill="rgb(249,31,8)"/><text x="264.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.23%)</title><rect x="263" y="292" width="3" height="15" fill="rgb(226,99,8)"/><text x="266.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.12%)</title><rect x="264" y="308" width="2" height="15" fill="rgb(247,135,43)"/><text x="267.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="266" y="212" width="1" height="15" fill="rgb(213,162,37)"/><text x="269.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (1 samples, 0.12%)</title><rect x="266" y="228" width="1" height="15" fill="rgb(220,160,34)"/><text x="269.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.12%)</title><rect x="267" y="228" width="1" height="15" fill="rgb(232,84,11)"/><text x="270.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.12%)</title><rect x="268" y="228" width="2" height="15" fill="rgb(217,213,3)"/><text x="271.00" y="238.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:521) (8 samples, 0.93%)</title><rect x="260" y="196" width="11" height="15" fill="rgb(211,9,49)"/><text x="263.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1676) (3 samples, 0.35%)</title><rect x="267" y="212" width="4" height="15" fill="rgb(213,43,20)"/><text x="270.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.12%)</title><rect x="270" y="228" width="1" height="15" fill="rgb(205,31,49)"/><text x="273.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="271" y="212" width="1" height="15" fill="rgb(231,56,22)"/><text x="274.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="271" y="228" width="1" height="15" fill="rgb(205,47,14)"/><text x="274.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.12%)</title><rect x="271" y="244" width="1" height="15" fill="rgb(237,67,10)"/><text x="274.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.12%)</title><rect x="272" y="212" width="2" height="15" fill="rgb(222,199,51)"/><text x="275.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.12%)</title><rect x="272" y="228" width="2" height="15" fill="rgb(219,68,52)"/><text x="275.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="272" y="244" width="2" height="15" fill="rgb(241,210,39)"/><text x="275.00" y="254.50"></text></g><g><title>0x7f8a7e563d7e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="272" y="260" width="2" height="15" fill="rgb(235,8,40)"/><text x="275.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="274" y="212" width="1" height="15" fill="rgb(222,101,32)"/><text x="277.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2497) (1 samples, 0.12%)</title><rect x="274" y="228" width="1" height="15" fill="rgb(236,72,35)"/><text x="277.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.12%)</title><rect x="275" y="228" width="2" height="15" fill="rgb(249,226,24)"/><text x="278.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.23%)</title><rect x="275" y="212" width="3" height="15" fill="rgb(223,221,25)"/><text x="278.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.12%)</title><rect x="277" y="228" width="1" height="15" fill="rgb(236,107,40)"/><text x="280.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.12%)</title><rect x="278" y="260" width="1" height="15" fill="rgb(243,144,38)"/><text x="281.00" y="270.50"></text></g><g><title>DOUBLE_sqrt (loops.c.src:1584) (1 samples, 0.12%)</title><rect x="278" y="276" width="1" height="15" fill="rgb(220,152,3)"/><text x="281.00" y="286.50"></text></g><g><title>run_unary_simd_sqrt_DOUBLE (simd.inc.src:195) (1 samples, 0.12%)</title><rect x="278" y="292" width="1" height="15" fill="rgb(217,134,33)"/><text x="281.00" y="302.50"></text></g><g><title>sse2_sqrt_DOUBLE (simd.inc.src:1005) (1 samples, 0.12%)</title><rect x="278" y="308" width="1" height="15" fill="rgb(227,11,42)"/><text x="281.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.12%)</title><rect x="278" y="324" width="1" height="15" fill="rgb(228,85,2)"/><text x="281.00" y="334.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (176 samples, 20.54%)</title><rect x="38" y="164" width="243" height="15" fill="rgb(246,167,23)"/><text x="41.00" y="174.50">kneighbors (sklearn/neighbors/_b..</text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (86 samples, 10.04%)</title><rect x="162" y="180" width="119" height="15" fill="rgb(229,55,54)"/><text x="165.00" y="190.50">pairwise_dista..</text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:524) (7 samples, 0.82%)</title><rect x="271" y="196" width="10" height="15" fill="rgb(229,104,34)"/><text x="274.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.23%)</title><rect x="278" y="212" width="3" height="15" fill="rgb(225,109,46)"/><text x="281.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.23%)</title><rect x="278" y="228" width="3" height="15" fill="rgb(206,50,5)"/><text x="281.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.23%)</title><rect x="278" y="244" width="3" height="15" fill="rgb(208,133,11)"/><text x="281.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.12%)</title><rect x="279" y="260" width="2" height="15" fill="rgb(230,89,26)"/><text x="282.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="279" y="276" width="2" height="15" fill="rgb(244,193,38)"/><text x="282.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.12%)</title><rect x="281" y="196" width="1" height="15" fill="rgb(228,131,48)"/><text x="284.00" y="206.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (185 samples, 21.59%)</title><rect x="29" y="148" width="255" height="15" fill="rgb(233,201,24)"/><text x="32.00" y="158.50">predict (sklearn/neighbors/_regres..</text></g><g><title>kneighbors (sklearn/neighbors/_base.py:671) (2 samples, 0.23%)</title><rect x="281" y="164" width="3" height="15" fill="rgb(212,168,0)"/><text x="284.00" y="174.50"></text></g><g><title>vstack (&lt;__array_function__ internals&gt;:6) (2 samples, 0.23%)</title><rect x="281" y="180" width="3" height="15" fill="rgb(214,31,42)"/><text x="284.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="282" y="196" width="2" height="15" fill="rgb(210,197,32)"/><text x="285.00" y="206.50"></text></g><g><title>vstack (numpy/core/shape_base.py:279) (1 samples, 0.12%)</title><rect x="282" y="212" width="2" height="15" fill="rgb(217,36,19)"/><text x="285.00" y="222.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (1 samples, 0.12%)</title><rect x="282" y="228" width="2" height="15" fill="rgb(251,221,49)"/><text x="285.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="282" y="244" width="2" height="15" fill="rgb(231,65,4)"/><text x="285.00" y="254.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:129) (1 samples, 0.12%)</title><rect x="282" y="260" width="2" height="15" fill="rgb(237,178,33)"/><text x="285.00" y="270.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:176) (1 samples, 0.12%)</title><rect x="284" y="148" width="1" height="15" fill="rgb(215,113,16)"/><text x="287.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.12%)</title><rect x="285" y="164" width="1" height="15" fill="rgb(234,152,51)"/><text x="288.00" y="174.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.12%)</title><rect x="285" y="180" width="1" height="15" fill="rgb(243,19,3)"/><text x="288.00" y="190.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.12%)</title><rect x="286" y="164" width="2" height="15" fill="rgb(205,173,26)"/><text x="289.00" y="174.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.12%)</title><rect x="286" y="180" width="2" height="15" fill="rgb(252,15,7)"/><text x="289.00" y="190.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.12%)</title><rect x="286" y="196" width="2" height="15" fill="rgb(238,52,8)"/><text x="289.00" y="206.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.12%)</title><rect x="289" y="276" width="1" height="15" fill="rgb(229,80,30)"/><text x="292.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.12%)</title><rect x="289" y="292" width="1" height="15" fill="rgb(231,229,22)"/><text x="292.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.12%)</title><rect x="289" y="308" width="1" height="15" fill="rgb(211,19,36)"/><text x="292.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.12%)</title><rect x="289" y="324" width="1" height="15" fill="rgb(249,207,41)"/><text x="292.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.12%)</title><rect x="290" y="276" width="2" height="15" fill="rgb(209,166,9)"/><text x="293.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.12%)</title><rect x="290" y="292" width="2" height="15" fill="rgb(213,16,38)"/><text x="293.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1478) (1 samples, 0.12%)</title><rect x="290" y="308" width="2" height="15" fill="rgb(233,65,11)"/><text x="293.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.12%)</title><rect x="292" y="276" width="1" height="15" fill="rgb(236,188,20)"/><text x="295.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.12%)</title><rect x="292" y="292" width="1" height="15" fill="rgb(241,53,16)"/><text x="295.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.12%)</title><rect x="292" y="308" width="1" height="15" fill="rgb(206,171,20)"/><text x="295.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.12%)</title><rect x="292" y="324" width="1" height="15" fill="rgb(206,197,16)"/><text x="295.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.12%)</title><rect x="293" y="308" width="2" height="15" fill="rgb(237,176,31)"/><text x="296.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (198 samples, 23.10%)</title><rect x="23" y="132" width="273" height="15" fill="rgb(206,163,20)"/><text x="26.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>predict (sklearn/neighbors/_regression.py:183) (8 samples, 0.93%)</title><rect x="285" y="148" width="11" height="15" fill="rgb(236,135,52)"/><text x="288.00" y="158.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (6 samples, 0.70%)</title><rect x="288" y="164" width="8" height="15" fill="rgb(247,228,29)"/><text x="291.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.70%)</title><rect x="288" y="180" width="8" height="15" fill="rgb(232,147,30)"/><text x="291.00" y="190.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (6 samples, 0.70%)</title><rect x="288" y="196" width="8" height="15" fill="rgb(242,71,34)"/><text x="291.00" y="206.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (5 samples, 0.58%)</title><rect x="289" y="212" width="7" height="15" fill="rgb(245,221,42)"/><text x="292.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 0.58%)</title><rect x="289" y="228" width="7" height="15" fill="rgb(207,97,20)"/><text x="292.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 0.58%)</title><rect x="289" y="244" width="7" height="15" fill="rgb(216,50,19)"/><text x="292.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 0.58%)</title><rect x="289" y="260" width="7" height="15" fill="rgb(229,59,53)"/><text x="292.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.23%)</title><rect x="293" y="276" width="3" height="15" fill="rgb(218,2,30)"/><text x="296.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.23%)</title><rect x="293" y="292" width="3" height="15" fill="rgb(240,212,44)"/><text x="296.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.12%)</title><rect x="295" y="308" width="1" height="15" fill="rgb(213,68,2)"/><text x="298.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:54) (199 samples, 23.22%)</title><rect x="23" y="52" width="274" height="15" fill="rgb(208,76,45)"/><text x="26.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_..</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:53) (199 samples, 23.22%)</title><rect x="23" y="68" width="274" height="15" fill="rgb(249,188,0)"/><text x="26.00" y="78.50">profile_skl (bench_KNeighborsRegress..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:37) (199 samples, 23.22%)</title><rect x="23" y="84" width="274" height="15" fill="rgb(250,58,30)"/><text x="26.00" y="94.50">setup_profile (bench_KNeighborsRegre..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:31) (199 samples, 23.22%)</title><rect x="23" y="100" width="274" height="15" fill="rgb(216,227,47)"/><text x="26.00" y="110.50">profile (bench_KNeighborsRegressor_d..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (199 samples, 23.22%)</title><rect x="23" y="116" width="274" height="15" fill="rgb(237,92,7)"/><text x="26.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="296" y="132" width="1" height="15" fill="rgb(245,195,9)"/><text x="299.00" y="142.50"></text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:36) (1 samples, 0.12%)</title><rect x="297" y="84" width="2" height="15" fill="rgb(217,157,43)"/><text x="300.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.12%)</title><rect x="297" y="100" width="2" height="15" fill="rgb(213,55,17)"/><text x="300.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.12%)</title><rect x="297" y="116" width="2" height="15" fill="rgb(248,201,53)"/><text x="300.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.12%)</title><rect x="297" y="132" width="2" height="15" fill="rgb(228,10,29)"/><text x="300.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.12%)</title><rect x="297" y="148" width="2" height="15" fill="rgb(217,60,38)"/><text x="300.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.12%)</title><rect x="297" y="164" width="2" height="15" fill="rgb(218,41,37)"/><text x="300.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.12%)</title><rect x="297" y="180" width="2" height="15" fill="rgb(252,24,51)"/><text x="300.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.12%)</title><rect x="297" y="196" width="2" height="15" fill="rgb(248,9,31)"/><text x="300.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="297" y="212" width="2" height="15" fill="rgb(235,85,44)"/><text x="300.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="297" y="228" width="2" height="15" fill="rgb(212,55,7)"/><text x="300.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="297" y="244" width="2" height="15" fill="rgb(234,155,48)"/><text x="300.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="297" y="260" width="2" height="15" fill="rgb(221,25,22)"/><text x="300.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="297" y="276" width="2" height="15" fill="rgb(214,43,48)"/><text x="300.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.12%)</title><rect x="297" y="292" width="2" height="15" fill="rgb(219,19,33)"/><text x="300.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="297" y="308" width="2" height="15" fill="rgb(245,24,48)"/><text x="300.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="297" y="324" width="2" height="15" fill="rgb(221,209,14)"/><text x="300.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="297" y="340" width="2" height="15" fill="rgb(214,172,46)"/><text x="300.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="297" y="356" width="2" height="15" fill="rgb(233,204,31)"/><text x="300.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="297" y="372" width="2" height="15" fill="rgb(252,83,41)"/><text x="300.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:8) (1 samples, 0.12%)</title><rect x="297" y="388" width="2" height="15" fill="rgb(254,210,41)"/><text x="300.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="297" y="404" width="2" height="15" fill="rgb(208,4,4)"/><text x="300.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="297" y="420" width="2" height="15" fill="rgb(250,131,11)"/><text x="300.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="297" y="436" width="2" height="15" fill="rgb(225,215,11)"/><text x="300.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="297" y="452" width="2" height="15" fill="rgb(238,141,16)"/><text x="300.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="297" y="468" width="2" height="15" fill="rgb(215,194,9)"/><text x="300.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py:25) (1 samples, 0.12%)</title><rect x="297" y="484" width="2" height="15" fill="rgb(245,165,14)"/><text x="300.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py:13) (1 samples, 0.12%)</title><rect x="297" y="500" width="2" height="15" fill="rgb(221,75,44)"/><text x="300.00" y="510.50"></text></g><g><title>0x7f8a6e61e0e9 (?) (1 samples, 0.12%)</title><rect x="297" y="516" width="2" height="15" fill="rgb(226,34,47)"/><text x="300.00" y="526.50"></text></g><g><title>0x7f8a6e604c02 (?) (1 samples, 0.12%)</title><rect x="297" y="532" width="2" height="15" fill="rgb(221,227,24)"/><text x="300.00" y="542.50"></text></g><g><title>0x7f8a6e62b07c (?) (1 samples, 0.12%)</title><rect x="297" y="548" width="2" height="15" fill="rgb(238,61,35)"/><text x="300.00" y="558.50"></text></g><g><title>0x7f8a6e6259a4 (?) (1 samples, 0.12%)</title><rect x="297" y="564" width="2" height="15" fill="rgb(207,81,9)"/><text x="300.00" y="574.50"></text></g><g><title>0x7f8a6e5ffdc5 (?) (1 samples, 0.12%)</title><rect x="297" y="580" width="2" height="15" fill="rgb(251,126,41)"/><text x="300.00" y="590.50"></text></g><g><title>0x7f8a6e03e6f5 (?) (1 samples, 0.12%)</title><rect x="297" y="596" width="2" height="15" fill="rgb(230,46,11)"/><text x="300.00" y="606.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="297" y="612" width="2" height="15" fill="rgb(207,111,24)"/><text x="300.00" y="622.50"></text></g><g><title>0x7f8a7e563dd2 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="297" y="628" width="2" height="15" fill="rgb(235,175,35)"/><text x="300.00" y="638.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.12%)</title><rect x="299" y="180" width="1" height="15" fill="rgb(215,201,22)"/><text x="302.00" y="190.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.12%)</title><rect x="300" y="228" width="1" height="15" fill="rgb(215,71,4)"/><text x="303.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.12%)</title><rect x="300" y="244" width="1" height="15" fill="rgb(206,156,9)"/><text x="303.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.12%)</title><rect x="300" y="260" width="1" height="15" fill="rgb(238,36,34)"/><text x="303.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (2 samples, 0.23%)</title><rect x="300" y="212" width="3" height="15" fill="rgb(212,174,14)"/><text x="303.00" y="222.50"></text></g><g><title>array_tolist (methods.c:539) (1 samples, 0.12%)</title><rect x="301" y="228" width="2" height="15" fill="rgb(247,59,48)"/><text x="304.00" y="238.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.12%)</title><rect x="303" y="276" width="1" height="15" fill="rgb(246,200,38)"/><text x="306.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (1 samples, 0.12%)</title><rect x="304" y="308" width="2" height="15" fill="rgb(215,26,30)"/><text x="307.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.12%)</title><rect x="307" y="324" width="1" height="15" fill="rgb(245,160,24)"/><text x="310.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (1 samples, 0.12%)</title><rect x="308" y="340" width="2" height="15" fill="rgb(249,78,16)"/><text x="311.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (2 samples, 0.23%)</title><rect x="308" y="324" width="3" height="15" fill="rgb(239,95,5)"/><text x="311.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (1 samples, 0.12%)</title><rect x="310" y="340" width="1" height="15" fill="rgb(219,171,21)"/><text x="313.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:511) (1 samples, 0.12%)</title><rect x="311" y="324" width="1" height="15" fill="rgb(234,203,51)"/><text x="314.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (2 samples, 0.23%)</title><rect x="314" y="340" width="3" height="15" fill="rgb(227,205,33)"/><text x="317.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (4 samples, 0.47%)</title><rect x="312" y="324" width="6" height="15" fill="rgb(227,129,52)"/><text x="315.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.12%)</title><rect x="317" y="340" width="1" height="15" fill="rgb(236,72,14)"/><text x="320.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.12%)</title><rect x="317" y="356" width="1" height="15" fill="rgb(209,155,34)"/><text x="320.00" y="366.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (11 samples, 1.28%)</title><rect x="304" y="276" width="15" height="15" fill="rgb(244,142,29)"/><text x="307.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (11 samples, 1.28%)</title><rect x="304" y="292" width="15" height="15" fill="rgb(248,203,25)"/><text x="307.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (10 samples, 1.17%)</title><rect x="306" y="308" width="13" height="15" fill="rgb(239,123,25)"/><text x="309.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:537) (1 samples, 0.12%)</title><rect x="318" y="324" width="1" height="15" fill="rgb(230,81,10)"/><text x="321.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:883) (1 samples, 0.12%)</title><rect x="319" y="292" width="2" height="15" fill="rgb(225,129,8)"/><text x="322.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:693) (1 samples, 0.12%)</title><rect x="322" y="308" width="1" height="15" fill="rgb(254,3,14)"/><text x="325.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.12%)</title><rect x="323" y="308" width="2" height="15" fill="rgb(220,101,4)"/><text x="326.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (17 samples, 1.98%)</title><rect x="303" y="260" width="23" height="15" fill="rgb(205,125,37)"/><text x="306.00" y="270.50">P..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (5 samples, 0.58%)</title><rect x="319" y="276" width="7" height="15" fill="rgb(220,44,8)"/><text x="322.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (4 samples, 0.47%)</title><rect x="321" y="292" width="5" height="15" fill="rgb(247,111,27)"/><text x="324.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:701) (1 samples, 0.12%)</title><rect x="325" y="308" width="1" height="15" fill="rgb(227,111,8)"/><text x="328.00" y="318.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.12%)</title><rect x="326" y="292" width="2" height="15" fill="rgb(224,82,42)"/><text x="329.00" y="302.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (2 samples, 0.23%)</title><rect x="328" y="340" width="2" height="15" fill="rgb(208,23,13)"/><text x="331.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (22 samples, 2.57%)</title><rect x="303" y="228" width="30" height="15" fill="rgb(235,46,21)"/><text x="306.00" y="238.50">ar..</text></g><g><title>prepare_index (mapping.c:516) (22 samples, 2.57%)</title><rect x="303" y="244" width="30" height="15" fill="rgb(227,5,10)"/><text x="306.00" y="254.50">pr..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (5 samples, 0.58%)</title><rect x="326" y="260" width="7" height="15" fill="rgb(208,140,31)"/><text x="329.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (5 samples, 0.58%)</title><rect x="326" y="276" width="7" height="15" fill="rgb(212,108,41)"/><text x="329.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (4 samples, 0.47%)</title><rect x="328" y="292" width="5" height="15" fill="rgb(243,195,26)"/><text x="331.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (4 samples, 0.47%)</title><rect x="328" y="308" width="5" height="15" fill="rgb(205,58,15)"/><text x="331.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (4 samples, 0.47%)</title><rect x="328" y="324" width="5" height="15" fill="rgb(208,60,32)"/><text x="331.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (2 samples, 0.23%)</title><rect x="330" y="340" width="3" height="15" fill="rgb(239,84,22)"/><text x="333.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (23 samples, 2.68%)</title><rect x="303" y="212" width="31" height="15" fill="rgb(233,49,29)"/><text x="306.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.12%)</title><rect x="333" y="228" width="1" height="15" fill="rgb(252,120,22)"/><text x="336.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="333" y="244" width="1" height="15" fill="rgb(254,140,54)"/><text x="336.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.12%)</title><rect x="334" y="212" width="2" height="15" fill="rgb(233,79,23)"/><text x="337.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.12%)</title><rect x="334" y="228" width="2" height="15" fill="rgb(247,166,7)"/><text x="337.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.12%)</title><rect x="334" y="244" width="2" height="15" fill="rgb(211,167,31)"/><text x="337.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.12%)</title><rect x="334" y="260" width="2" height="15" fill="rgb(205,172,50)"/><text x="337.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.12%)</title><rect x="334" y="276" width="2" height="15" fill="rgb(236,52,17)"/><text x="337.00" y="286.50"></text></g><g><title>_aligned_contig_cast_long_to_float (lowlevel_strided_loops.c.src:855) (1 samples, 0.12%)</title><rect x="334" y="292" width="2" height="15" fill="rgb(249,89,3)"/><text x="337.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py:18) (1 samples, 0.12%)</title><rect x="336" y="212" width="1" height="15" fill="rgb(208,99,49)"/><text x="339.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.12%)</title><rect x="336" y="228" width="1" height="15" fill="rgb(254,194,28)"/><text x="339.00" y="238.50"></text></g><g><title>array_argpartition (methods.c:1451) (1 samples, 0.12%)</title><rect x="337" y="324" width="2" height="15" fill="rgb(222,69,35)"/><text x="340.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.12%)</title><rect x="337" y="340" width="2" height="15" fill="rgb(218,55,0)"/><text x="340.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1600) (1 samples, 0.12%)</title><rect x="337" y="356" width="2" height="15" fill="rgb(220,107,29)"/><text x="340.00" y="366.50"></text></g><g><title>0x7f8a7d7850a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="337" y="372" width="2" height="15" fill="rgb(209,99,45)"/><text x="340.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (4 samples, 0.47%)</title><rect x="339" y="356" width="5" height="15" fill="rgb(246,108,31)"/><text x="342.00" y="366.50"></text></g><g><title>adumb_select_float (selection.c.src:257) (8 samples, 0.93%)</title><rect x="344" y="388" width="11" height="15" fill="rgb(215,6,43)"/><text x="347.00" y="398.50"></text></g><g><title>adumb_select_float (selection.c.src:258) (43 samples, 5.02%)</title><rect x="355" y="388" width="59" height="15" fill="rgb(219,223,22)"/><text x="358.00" y="398.50">adumb_..</text></g><g><title>FLOAT_LT (npysort_common.h:123) (41 samples, 4.78%)</title><rect x="358" y="404" width="56" height="15" fill="rgb(220,217,24)"/><text x="361.00" y="414.50">FLOAT..</text></g><g><title>_new_argsortlike (item_selection.c:1084) (52 samples, 6.07%)</title><rect x="344" y="356" width="72" height="15" fill="rgb(236,74,4)"/><text x="347.00" y="366.50">_new_arg..</text></g><g><title>aintroselect_float (selection.c.src:322) (52 samples, 6.07%)</title><rect x="344" y="372" width="72" height="15" fill="rgb(216,198,28)"/><text x="347.00" y="382.50">aintrose..</text></g><g><title>adumb_select_float (selection.c.src:260) (1 samples, 0.12%)</title><rect x="414" y="388" width="2" height="15" fill="rgb(236,23,34)"/><text x="417.00" y="398.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (58 samples, 6.77%)</title><rect x="337" y="260" width="80" height="15" fill="rgb(240,94,1)"/><text x="340.00" y="270.50">argpartit..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (58 samples, 6.77%)</title><rect x="337" y="276" width="80" height="15" fill="rgb(251,43,43)"/><text x="340.00" y="286.50">array_imp..</text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (58 samples, 6.77%)</title><rect x="337" y="292" width="80" height="15" fill="rgb(243,158,21)"/><text x="340.00" y="302.50">argpartit..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (58 samples, 6.77%)</title><rect x="337" y="308" width="80" height="15" fill="rgb(211,60,35)"/><text x="340.00" y="318.50">_wrapfunc..</text></g><g><title>array_argpartition (methods.c:1454) (57 samples, 6.65%)</title><rect x="339" y="324" width="78" height="15" fill="rgb(214,193,40)"/><text x="342.00" y="334.50">array_arg..</text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (57 samples, 6.65%)</title><rect x="339" y="340" width="78" height="15" fill="rgb(218,194,41)"/><text x="342.00" y="350.50">PyArray_A..</text></g><g><title>_new_argsortlike (item_selection.c:1101) (1 samples, 0.12%)</title><rect x="416" y="356" width="1" height="15" fill="rgb(248,18,42)"/><text x="419.00" y="366.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:28) (59 samples, 6.88%)</title><rect x="337" y="244" width="81" height="15" fill="rgb(208,154,40)"/><text x="340.00" y="254.50">topk_sort..</text></g><g><title>long_subtract (scalarmath.c.src:825) (1 samples, 0.12%)</title><rect x="417" y="260" width="1" height="15" fill="rgb(209,64,47)"/><text x="420.00" y="270.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.12%)</title><rect x="417" y="276" width="1" height="15" fill="rgb(206,33,6)"/><text x="420.00" y="286.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:115) (1 samples, 0.12%)</title><rect x="417" y="292" width="1" height="15" fill="rgb(226,9,2)"/><text x="420.00" y="302.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src:4574) (1 samples, 0.12%)</title><rect x="417" y="308" width="1" height="15" fill="rgb(206,215,11)"/><text x="420.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4556) (1 samples, 0.12%)</title><rect x="417" y="324" width="1" height="15" fill="rgb(214,111,28)"/><text x="420.00" y="334.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (1 samples, 0.12%)</title><rect x="418" y="356" width="2" height="15" fill="rgb(231,10,52)"/><text x="421.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:175) (1 samples, 0.12%)</title><rect x="420" y="372" width="1" height="15" fill="rgb(242,134,51)"/><text x="423.00" y="382.50"></text></g><g><title>npy_get_msb (npy_sort.h.src:15) (1 samples, 0.12%)</title><rect x="420" y="388" width="1" height="15" fill="rgb(223,49,18)"/><text x="423.00" y="398.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (3 samples, 0.35%)</title><rect x="418" y="260" width="5" height="15" fill="rgb(208,134,37)"/><text x="421.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.35%)</title><rect x="418" y="276" width="5" height="15" fill="rgb(241,50,31)"/><text x="421.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (3 samples, 0.35%)</title><rect x="418" y="292" width="5" height="15" fill="rgb(250,85,25)"/><text x="421.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.35%)</title><rect x="418" y="308" width="5" height="15" fill="rgb(245,149,9)"/><text x="421.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (3 samples, 0.35%)</title><rect x="418" y="324" width="5" height="15" fill="rgb(249,65,34)"/><text x="421.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (3 samples, 0.35%)</title><rect x="418" y="340" width="5" height="15" fill="rgb(232,113,43)"/><text x="421.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (2 samples, 0.23%)</title><rect x="420" y="356" width="3" height="15" fill="rgb(212,64,26)"/><text x="423.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:219) (1 samples, 0.12%)</title><rect x="421" y="372" width="2" height="15" fill="rgb(213,19,2)"/><text x="424.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="423" y="260" width="1" height="15" fill="rgb(246,197,27)"/><text x="426.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="423" y="276" width="1" height="15" fill="rgb(209,169,3)"/><text x="426.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="423" y="292" width="1" height="15" fill="rgb(238,172,34)"/><text x="426.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.12%)</title><rect x="424" y="276" width="1" height="15" fill="rgb(253,94,49)"/><text x="427.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.12%)</title><rect x="424" y="292" width="1" height="15" fill="rgb(209,20,47)"/><text x="427.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.12%)</title><rect x="424" y="308" width="1" height="15" fill="rgb(221,152,2)"/><text x="427.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="425" y="340" width="2" height="15" fill="rgb(243,71,38)"/><text x="428.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.12%)</title><rect x="425" y="356" width="2" height="15" fill="rgb(223,89,41)"/><text x="428.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.35%)</title><rect x="424" y="260" width="4" height="15" fill="rgb(245,100,52)"/><text x="427.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (2 samples, 0.23%)</title><rect x="425" y="276" width="3" height="15" fill="rgb(237,9,46)"/><text x="428.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (2 samples, 0.23%)</title><rect x="425" y="292" width="3" height="15" fill="rgb(246,222,52)"/><text x="428.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (2 samples, 0.23%)</title><rect x="425" y="308" width="3" height="15" fill="rgb(237,47,50)"/><text x="428.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.23%)</title><rect x="425" y="324" width="3" height="15" fill="rgb(238,209,36)"/><text x="428.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.12%)</title><rect x="427" y="340" width="1" height="15" fill="rgb(228,21,4)"/><text x="430.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.12%)</title><rect x="428" y="276" width="1" height="15" fill="rgb(221,2,1)"/><text x="431.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.12%)</title><rect x="428" y="292" width="1" height="15" fill="rgb(245,76,35)"/><text x="431.00" y="302.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2535) (1 samples, 0.12%)</title><rect x="429" y="276" width="2" height="15" fill="rgb(247,72,19)"/><text x="432.00" y="286.50"></text></g><g><title>NpyIter_New (nditer_constr.c:534) (1 samples, 0.12%)</title><rect x="429" y="292" width="2" height="15" fill="rgb(243,150,9)"/><text x="432.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.12%)</title><rect x="429" y="308" width="2" height="15" fill="rgb(242,170,30)"/><text x="432.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.12%)</title><rect x="429" y="324" width="2" height="15" fill="rgb(244,23,26)"/><text x="432.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="429" y="340" width="2" height="15" fill="rgb(232,163,32)"/><text x="432.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2552) (1 samples, 0.12%)</title><rect x="431" y="276" width="1" height="15" fill="rgb(206,37,41)"/><text x="434.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1666) (4 samples, 0.47%)</title><rect x="428" y="260" width="6" height="15" fill="rgb(226,67,0)"/><text x="431.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2560) (1 samples, 0.12%)</title><rect x="432" y="276" width="2" height="15" fill="rgb(243,90,45)"/><text x="435.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (2 samples, 0.23%)</title><rect x="434" y="276" width="2" height="15" fill="rgb(210,157,9)"/><text x="437.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:32) (15 samples, 1.75%)</title><rect x="418" y="244" width="21" height="15" fill="rgb(247,163,15)"/><text x="421.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (4 samples, 0.47%)</title><rect x="434" y="260" width="5" height="15" fill="rgb(236,117,23)"/><text x="437.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (2 samples, 0.23%)</title><rect x="436" y="276" width="3" height="15" fill="rgb(254,203,33)"/><text x="439.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.12%)</title><rect x="439" y="340" width="1" height="15" fill="rgb(248,49,33)"/><text x="442.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.12%)</title><rect x="440" y="356" width="2" height="15" fill="rgb(235,184,44)"/><text x="443.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.35%)</title><rect x="439" y="260" width="4" height="15" fill="rgb(251,229,4)"/><text x="442.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (3 samples, 0.35%)</title><rect x="439" y="276" width="4" height="15" fill="rgb(207,18,46)"/><text x="442.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (3 samples, 0.35%)</title><rect x="439" y="292" width="4" height="15" fill="rgb(243,176,21)"/><text x="442.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (3 samples, 0.35%)</title><rect x="439" y="308" width="4" height="15" fill="rgb(208,113,42)"/><text x="442.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.35%)</title><rect x="439" y="324" width="4" height="15" fill="rgb(226,160,12)"/><text x="442.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.23%)</title><rect x="440" y="340" width="3" height="15" fill="rgb(237,213,8)"/><text x="443.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.12%)</title><rect x="442" y="356" width="1" height="15" fill="rgb(220,129,53)"/><text x="445.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.12%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(226,2,51)"/><text x="446.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2516) (1 samples, 0.12%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(239,80,49)"/><text x="446.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (2 samples, 0.23%)</title><rect x="445" y="276" width="2" height="15" fill="rgb(227,180,6)"/><text x="448.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.12%)</title><rect x="447" y="276" width="2" height="15" fill="rgb(209,18,31)"/><text x="450.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (109 samples, 12.72%)</title><rect x="300" y="196" width="150" height="15" fill="rgb(244,139,10)"/><text x="303.00" y="206.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (82 samples, 9.57%)</title><rect x="337" y="212" width="113" height="15" fill="rgb(206,87,51)"/><text x="340.00" y="222.50">_run (mlprodi..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (82 samples, 9.57%)</title><rect x="337" y="228" width="113" height="15" fill="rgb(228,145,41)"/><text x="340.00" y="238.50">_common_run (..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (8 samples, 0.93%)</title><rect x="439" y="244" width="11" height="15" fill="rgb(253,167,30)"/><text x="442.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (4 samples, 0.47%)</title><rect x="445" y="260" width="5" height="15" fill="rgb(205,49,40)"/><text x="448.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.12%)</title><rect x="449" y="276" width="1" height="15" fill="rgb(254,168,10)"/><text x="452.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.12%)</title><rect x="453" y="276" width="1" height="15" fill="rgb(233,84,28)"/><text x="456.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4416) (1 samples, 0.12%)</title><rect x="454" y="308" width="2" height="15" fill="rgb(250,71,26)"/><text x="457.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.12%)</title><rect x="456" y="308" width="1" height="15" fill="rgb(216,158,46)"/><text x="459.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.12%)</title><rect x="456" y="324" width="1" height="15" fill="rgb(221,25,19)"/><text x="459.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.12%)</title><rect x="456" y="340" width="1" height="15" fill="rgb(229,59,51)"/><text x="459.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.12%)</title><rect x="456" y="356" width="1" height="15" fill="rgb(238,179,13)"/><text x="459.00" y="366.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.12%)</title><rect x="456" y="372" width="1" height="15" fill="rgb(225,111,34)"/><text x="459.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:24) (6 samples, 0.70%)</title><rect x="450" y="212" width="8" height="15" fill="rgb(219,67,23)"/><text x="453.00" y="222.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (6 samples, 0.70%)</title><rect x="450" y="228" width="8" height="15" fill="rgb(205,197,50)"/><text x="453.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.70%)</title><rect x="450" y="244" width="8" height="15" fill="rgb(218,104,3)"/><text x="453.00" y="254.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:2911) (6 samples, 0.70%)</title><rect x="450" y="260" width="8" height="15" fill="rgb(229,1,48)"/><text x="453.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.35%)</title><rect x="454" y="276" width="4" height="15" fill="rgb(242,87,51)"/><text x="457.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.35%)</title><rect x="454" y="292" width="4" height="15" fill="rgb(247,100,0)"/><text x="457.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4683) (1 samples, 0.12%)</title><rect x="457" y="308" width="1" height="15" fill="rgb(228,117,47)"/><text x="460.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 0.82%)</title><rect x="450" y="196" width="10" height="15" fill="rgb(209,70,19)"/><text x="453.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:25) (1 samples, 0.12%)</title><rect x="458" y="212" width="2" height="15" fill="rgb(209,152,53)"/><text x="461.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.12%)</title><rect x="458" y="228" width="2" height="15" fill="rgb(240,208,23)"/><text x="461.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.12%)</title><rect x="458" y="244" width="2" height="15" fill="rgb(226,85,0)"/><text x="461.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.12%)</title><rect x="458" y="260" width="2" height="15" fill="rgb(205,216,41)"/><text x="461.00" y="270.50"></text></g><g><title>_mean (numpy/core/_methods.py:135) (1 samples, 0.12%)</title><rect x="460" y="292" width="1" height="15" fill="rgb(227,73,9)"/><text x="463.00" y="302.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.12%)</title><rect x="460" y="308" width="1" height="15" fill="rgb(247,195,27)"/><text x="463.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.12%)</title><rect x="461" y="308" width="1" height="15" fill="rgb(238,59,37)"/><text x="464.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.12%)</title><rect x="461" y="324" width="1" height="15" fill="rgb(236,136,3)"/><text x="464.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.12%)</title><rect x="461" y="340" width="1" height="15" fill="rgb(214,140,5)"/><text x="464.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.12%)</title><rect x="461" y="356" width="1" height="15" fill="rgb(237,179,40)"/><text x="464.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.12%)</title><rect x="461" y="372" width="1" height="15" fill="rgb(219,159,7)"/><text x="464.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.12%)</title><rect x="461" y="388" width="1" height="15" fill="rgb(250,218,21)"/><text x="464.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.12%)</title><rect x="462" y="372" width="2" height="15" fill="rgb(218,65,50)"/><text x="465.00" y="382.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (3 samples, 0.35%)</title><rect x="461" y="292" width="4" height="15" fill="rgb(238,181,40)"/><text x="464.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.23%)</title><rect x="462" y="308" width="3" height="15" fill="rgb(221,172,12)"/><text x="465.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.23%)</title><rect x="462" y="324" width="3" height="15" fill="rgb(250,149,38)"/><text x="465.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.23%)</title><rect x="462" y="340" width="3" height="15" fill="rgb(207,22,18)"/><text x="465.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.23%)</title><rect x="462" y="356" width="3" height="15" fill="rgb(213,127,21)"/><text x="465.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.12%)</title><rect x="464" y="372" width="1" height="15" fill="rgb(226,42,20)"/><text x="467.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.12%)</title><rect x="464" y="388" width="1" height="15" fill="rgb(246,198,49)"/><text x="467.00" y="398.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.12%)</title><rect x="465" y="340" width="2" height="15" fill="rgb(254,194,13)"/><text x="468.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.12%)</title><rect x="465" y="356" width="2" height="15" fill="rgb(228,50,54)"/><text x="468.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (6 samples, 0.70%)</title><rect x="460" y="196" width="8" height="15" fill="rgb(245,77,23)"/><text x="463.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (6 samples, 0.70%)</title><rect x="460" y="212" width="8" height="15" fill="rgb(213,107,7)"/><text x="463.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py:29) (6 samples, 0.70%)</title><rect x="460" y="228" width="8" height="15" fill="rgb(253,32,17)"/><text x="463.00" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (6 samples, 0.70%)</title><rect x="460" y="244" width="8" height="15" fill="rgb(237,6,11)"/><text x="463.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.70%)</title><rect x="460" y="260" width="8" height="15" fill="rgb(212,74,20)"/><text x="463.00" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (6 samples, 0.70%)</title><rect x="460" y="276" width="8" height="15" fill="rgb(214,94,2)"/><text x="463.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:154) (2 samples, 0.23%)</title><rect x="465" y="292" width="3" height="15" fill="rgb(211,200,27)"/><text x="468.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.23%)</title><rect x="465" y="308" width="3" height="15" fill="rgb(214,157,28)"/><text x="468.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.23%)</title><rect x="465" y="324" width="3" height="15" fill="rgb(241,120,29)"/><text x="468.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.12%)</title><rect x="467" y="340" width="1" height="15" fill="rgb(236,71,36)"/><text x="470.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.12%)</title><rect x="467" y="356" width="1" height="15" fill="rgb(214,161,6)"/><text x="470.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.12%)</title><rect x="467" y="372" width="1" height="15" fill="rgb(208,47,29)"/><text x="470.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.12%)</title><rect x="467" y="388" width="1" height="15" fill="rgb(246,47,54)"/><text x="470.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.12%)</title><rect x="467" y="404" width="1" height="15" fill="rgb(229,18,40)"/><text x="470.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.12%)</title><rect x="467" y="420" width="1" height="15" fill="rgb(206,13,54)"/><text x="470.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.12%)</title><rect x="467" y="436" width="1" height="15" fill="rgb(230,17,17)"/><text x="470.00" y="446.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2771) (1 samples, 0.12%)</title><rect x="468" y="244" width="1" height="15" fill="rgb(251,203,1)"/><text x="471.00" y="254.50"></text></g><g><title>_select_weighted_metric (scipy/spatial/distance.py:1714) (1 samples, 0.12%)</title><rect x="468" y="260" width="1" height="15" fill="rgb(244,83,49)"/><text x="471.00" y="270.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:250) (2 samples, 0.23%)</title><rect x="469" y="260" width="3" height="15" fill="rgb(229,204,43)"/><text x="472.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (2 samples, 0.23%)</title><rect x="469" y="276" width="3" height="15" fill="rgb(209,111,30)"/><text x="472.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (2 samples, 0.23%)</title><rect x="469" y="292" width="3" height="15" fill="rgb(218,49,48)"/><text x="472.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.23%)</title><rect x="469" y="308" width="3" height="15" fill="rgb(207,181,36)"/><text x="472.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.23%)</title><rect x="469" y="324" width="3" height="15" fill="rgb(247,71,7)"/><text x="472.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 0.23%)</title><rect x="469" y="340" width="3" height="15" fill="rgb(249,169,42)"/><text x="472.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (2 samples, 0.23%)</title><rect x="469" y="356" width="3" height="15" fill="rgb(225,151,21)"/><text x="472.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.23%)</title><rect x="469" y="372" width="3" height="15" fill="rgb(231,204,47)"/><text x="472.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.23%)</title><rect x="469" y="388" width="3" height="15" fill="rgb(240,74,49)"/><text x="472.00" y="398.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.23%)</title><rect x="469" y="404" width="3" height="15" fill="rgb(206,199,5)"/><text x="472.00" y="414.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2776) (3 samples, 0.35%)</title><rect x="469" y="244" width="5" height="15" fill="rgb(217,205,45)"/><text x="472.00" y="254.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:251) (1 samples, 0.12%)</title><rect x="472" y="260" width="2" height="15" fill="rgb(228,43,40)"/><text x="475.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (1 samples, 0.12%)</title><rect x="472" y="276" width="2" height="15" fill="rgb(241,158,49)"/><text x="475.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (1 samples, 0.12%)</title><rect x="472" y="292" width="2" height="15" fill="rgb(226,104,46)"/><text x="475.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.12%)</title><rect x="472" y="308" width="2" height="15" fill="rgb(237,100,22)"/><text x="475.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.12%)</title><rect x="472" y="324" width="2" height="15" fill="rgb(242,162,10)"/><text x="475.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.12%)</title><rect x="472" y="340" width="2" height="15" fill="rgb(238,43,13)"/><text x="475.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.12%)</title><rect x="472" y="356" width="2" height="15" fill="rgb(227,196,46)"/><text x="475.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.12%)</title><rect x="472" y="372" width="2" height="15" fill="rgb(210,117,6)"/><text x="475.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.12%)</title><rect x="472" y="388" width="2" height="15" fill="rgb(208,21,47)"/><text x="475.00" y="398.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.12%)</title><rect x="472" y="404" width="2" height="15" fill="rgb(223,118,44)"/><text x="475.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.12%)</title><rect x="472" y="420" width="2" height="15" fill="rgb(241,169,24)"/><text x="475.00" y="430.50"></text></g><g><title>0x7f8a5b7885d1 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="474" y="260" width="1" height="15" fill="rgb(228,147,1)"/><text x="477.00" y="270.50"></text></g><g><title>0x7f8a5b7886a7 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="475" y="260" width="1" height="15" fill="rgb(247,94,52)"/><text x="478.00" y="270.50"></text></g><g><title>0x7f8a5b788739 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="476" y="260" width="4" height="15" fill="rgb(252,145,1)"/><text x="479.00" y="270.50"></text></g><g><title>0x7f8a5b788750 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.17%)</title><rect x="480" y="260" width="14" height="15" fill="rgb(252,133,47)"/><text x="483.00" y="270.50"></text></g><g><title>0x7f8a5b78875f (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="494" y="260" width="6" height="15" fill="rgb(215,1,28)"/><text x="497.00" y="270.50"></text></g><g><title>0x7f8a5b788771 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="500" y="260" width="2" height="15" fill="rgb(221,116,14)"/><text x="503.00" y="270.50"></text></g><g><title>0x7f8a5b788775 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="502" y="260" width="2" height="15" fill="rgb(228,22,37)"/><text x="505.00" y="270.50"></text></g><g><title>0x7f8a5b7888c0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="504" y="260" width="4" height="15" fill="rgb(217,25,41)"/><text x="507.00" y="270.50"></text></g><g><title>0x7f8a5b7888c5 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="508" y="260" width="3" height="15" fill="rgb(221,69,2)"/><text x="511.00" y="270.50"></text></g><g><title>0x7f8a5b7888c9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="511" y="260" width="1" height="15" fill="rgb(209,206,45)"/><text x="514.00" y="270.50"></text></g><g><title>0x7f8a5b7888cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="512" y="260" width="4" height="15" fill="rgb(206,139,28)"/><text x="515.00" y="270.50"></text></g><g><title>0x7f8a5b7888d3 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="516" y="260" width="4" height="15" fill="rgb(241,218,5)"/><text x="519.00" y="270.50"></text></g><g><title>0x7f8a5b7888d9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="520" y="260" width="3" height="15" fill="rgb(210,42,50)"/><text x="523.00" y="270.50"></text></g><g><title>0x7f8a5b7888dc (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="523" y="260" width="3" height="15" fill="rgb(237,217,39)"/><text x="526.00" y="270.50"></text></g><g><title>0x7f8a5b7888e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="526" y="260" width="3" height="15" fill="rgb(252,27,34)"/><text x="529.00" y="270.50"></text></g><g><title>0x7f8a5b7888e6 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.70%)</title><rect x="529" y="260" width="8" height="15" fill="rgb(232,145,24)"/><text x="532.00" y="270.50"></text></g><g><title>0x7f8a5b7888ec (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="537" y="260" width="1" height="15" fill="rgb(210,122,42)"/><text x="540.00" y="270.50"></text></g><g><title>0x7f8a5b7888f0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.05%)</title><rect x="538" y="260" width="13" height="15" fill="rgb(240,142,0)"/><text x="541.00" y="270.50"></text></g><g><title>0x7f8a5b7888f4 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="551" y="260" width="4" height="15" fill="rgb(211,150,28)"/><text x="554.00" y="270.50"></text></g><g><title>0x7f8a5b7888fe (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.58%)</title><rect x="555" y="260" width="7" height="15" fill="rgb(214,98,0)"/><text x="558.00" y="270.50"></text></g><g><title>0x7f8a5b788904 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="562" y="260" width="2" height="15" fill="rgb(254,196,44)"/><text x="565.00" y="270.50"></text></g><g><title>0x7f8a5b78890a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="564" y="260" width="6" height="15" fill="rgb(217,115,23)"/><text x="567.00" y="270.50"></text></g><g><title>0x7f8a5b78890e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.58%)</title><rect x="570" y="260" width="7" height="15" fill="rgb(224,51,42)"/><text x="573.00" y="270.50"></text></g><g><title>0x7f8a5b788912 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.82%)</title><rect x="577" y="260" width="9" height="15" fill="rgb(241,98,30)"/><text x="580.00" y="270.50"></text></g><g><title>0x7f8a5b788918 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="586" y="260" width="2" height="15" fill="rgb(242,82,35)"/><text x="589.00" y="270.50"></text></g><g><title>0x7f8a5b788920 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="588" y="260" width="3" height="15" fill="rgb(214,205,47)"/><text x="591.00" y="270.50"></text></g><g><title>0x7f8a5b788926 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.05%)</title><rect x="591" y="260" width="12" height="15" fill="rgb(245,220,28)"/><text x="594.00" y="270.50"></text></g><g><title>0x7f8a5b78892c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="603" y="260" width="5" height="15" fill="rgb(248,12,46)"/><text x="606.00" y="270.50"></text></g><g><title>0x7f8a5b788930 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="608" y="260" width="3" height="15" fill="rgb(239,68,40)"/><text x="611.00" y="270.50"></text></g><g><title>0x7f8a5b788934 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.28%)</title><rect x="611" y="260" width="15" height="15" fill="rgb(208,203,43)"/><text x="614.00" y="270.50"></text></g><g><title>0x7f8a5b78893a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="626" y="260" width="4" height="15" fill="rgb(222,158,41)"/><text x="629.00" y="270.50"></text></g><g><title>0x7f8a5b788944 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="630" y="260" width="3" height="15" fill="rgb(233,49,7)"/><text x="633.00" y="270.50"></text></g><g><title>0x7f8a5b78894a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.40%)</title><rect x="633" y="260" width="17" height="15" fill="rgb(233,132,37)"/><text x="636.00" y="270.50"></text></g><g><title>0x7f8a5b78894e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="650" y="260" width="4" height="15" fill="rgb(228,182,29)"/><text x="653.00" y="270.50"></text></g><g><title>0x7f8a5b788952 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.93%)</title><rect x="654" y="260" width="11" height="15" fill="rgb(206,36,54)"/><text x="657.00" y="270.50"></text></g><g><title>0x7f8a5b788958 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="665" y="260" width="5" height="15" fill="rgb(238,34,48)"/><text x="668.00" y="270.50"></text></g><g><title>0x7f8a5b78895c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="670" y="260" width="2" height="15" fill="rgb(235,16,4)"/><text x="673.00" y="270.50"></text></g><g><title>0x7f8a5b788968 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.70%)</title><rect x="672" y="260" width="8" height="15" fill="rgb(254,85,23)"/><text x="675.00" y="270.50"></text></g><g><title>0x7f8a5b78896c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.58%)</title><rect x="680" y="260" width="7" height="15" fill="rgb(252,207,9)"/><text x="683.00" y="270.50"></text></g><g><title>0x7f8a5b788970 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.58%)</title><rect x="687" y="260" width="7" height="15" fill="rgb(228,2,2)"/><text x="690.00" y="270.50"></text></g><g><title>0x7f8a5b78897a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="694" y="260" width="1" height="15" fill="rgb(213,74,49)"/><text x="697.00" y="270.50"></text></g><g><title>0x7f8a5b788980 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="695" y="260" width="4" height="15" fill="rgb(248,197,13)"/><text x="698.00" y="270.50"></text></g><g><title>0x7f8a5b788986 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.93%)</title><rect x="699" y="260" width="11" height="15" fill="rgb(207,23,29)"/><text x="702.00" y="270.50"></text></g><g><title>0x7f8a5b78898a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="710" y="260" width="4" height="15" fill="rgb(207,129,22)"/><text x="713.00" y="270.50"></text></g><g><title>0x7f8a5b78898e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.93%)</title><rect x="714" y="260" width="11" height="15" fill="rgb(229,189,16)"/><text x="717.00" y="270.50"></text></g><g><title>0x7f8a5b78899e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="725" y="260" width="2" height="15" fill="rgb(213,164,39)"/><text x="728.00" y="270.50"></text></g><g><title>0x7f8a5b7889a4 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.93%)</title><rect x="727" y="260" width="11" height="15" fill="rgb(208,18,33)"/><text x="730.00" y="270.50"></text></g><g><title>0x7f8a5b7889ac (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.52%)</title><rect x="738" y="260" width="18" height="15" fill="rgb(212,36,18)"/><text x="741.00" y="270.50"></text></g><g><title>0x7f8a5b7889b2 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="756" y="260" width="5" height="15" fill="rgb(226,45,47)"/><text x="759.00" y="270.50"></text></g><g><title>0x7f8a5b7889be (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.17%)</title><rect x="761" y="260" width="14" height="15" fill="rgb(226,10,12)"/><text x="764.00" y="270.50"></text></g><g><title>0x7f8a5b7889cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.70%)</title><rect x="775" y="260" width="8" height="15" fill="rgb(221,155,16)"/><text x="778.00" y="270.50"></text></g><g><title>0x7f8a5b7889dc (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.17%)</title><rect x="783" y="260" width="14" height="15" fill="rgb(219,83,21)"/><text x="786.00" y="270.50"></text></g><g><title>0x7f8a5b7889e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.52%)</title><rect x="797" y="260" width="18" height="15" fill="rgb(250,118,51)"/><text x="800.00" y="270.50"></text></g><g><title>0x7f8a5b7889f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (81 samples, 9.45%)</title><rect x="815" y="260" width="112" height="15" fill="rgb(217,146,35)"/><text x="818.00" y="270.50">0x7f8a5b7889f..</text></g><g><title>0x7f8a5b7889fd (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (19 samples, 2.22%)</title><rect x="927" y="260" width="26" height="15" fill="rgb(220,136,18)"/><text x="930.00" y="270.50">0..</text></g><g><title>0x7f8a5b788a03 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="953" y="260" width="2" height="15" fill="rgb(207,213,53)"/><text x="956.00" y="270.50"></text></g><g><title>0x7f8a5b788a12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.70%)</title><rect x="955" y="260" width="9" height="15" fill="rgb(225,136,50)"/><text x="958.00" y="270.50"></text></g><g><title>0x7f8a5b788a30 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="964" y="260" width="1" height="15" fill="rgb(228,34,7)"/><text x="967.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:27) (365 samples, 42.59%)</title><rect x="468" y="228" width="503" height="15" fill="rgb(250,150,52)"/><text x="471.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:27)</text></g><g><title>cdist (scipy/spatial/distance.py:2780) (361 samples, 42.12%)</title><rect x="474" y="244" width="497" height="15" fill="rgb(245,145,40)"/><text x="477.00" y="254.50">cdist (scipy/spatial/distance.py:2780)</text></g><g><title>0x7f8a5b788a70 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.47%)</title><rect x="965" y="260" width="6" height="15" fill="rgb(250,177,34)"/><text x="968.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (494 samples, 57.64%)</title><rect x="300" y="180" width="680" height="15" fill="rgb(250,66,2)"/><text x="303.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (372 samples, 43.41%)</title><rect x="468" y="196" width="512" height="15" fill="rgb(231,139,25)"/><text x="471.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:489)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (372 samples, 43.41%)</title><rect x="468" y="212" width="512" height="15" fill="rgb(245,89,7)"/><text x="471.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:432)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:29) (7 samples, 0.82%)</title><rect x="971" y="228" width="9" height="15" fill="rgb(206,88,44)"/><text x="974.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (7 samples, 0.82%)</title><rect x="971" y="244" width="9" height="15" fill="rgb(205,180,33)"/><text x="974.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (7 samples, 0.82%)</title><rect x="971" y="260" width="9" height="15" fill="rgb(242,192,12)"/><text x="974.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (7 samples, 0.82%)</title><rect x="971" y="276" width="9" height="15" fill="rgb(232,10,36)"/><text x="974.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (7 samples, 0.82%)</title><rect x="971" y="292" width="9" height="15" fill="rgb(221,108,7)"/><text x="974.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.23%)</title><rect x="980" y="180" width="3" height="15" fill="rgb(221,120,11)"/><text x="983.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (498 samples, 58.11%)</title><rect x="299" y="164" width="685" height="15" fill="rgb(240,126,24)"/><text x="302.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.12%)</title><rect x="983" y="180" width="1" height="15" fill="rgb(231,32,37)"/><text x="986.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:61) (500 samples, 58.34%)</title><rect x="297" y="52" width="689" height="15" fill="rgb(212,38,52)"/><text x="300.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_flo..</text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:60) (500 samples, 58.34%)</title><rect x="297" y="68" width="689" height="15" fill="rgb(235,208,19)"/><text x="300.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:37) (499 samples, 58.23%)</title><rect x="299" y="84" width="687" height="15" fill="rgb(239,204,16)"/><text x="302.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_1..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:31) (499 samples, 58.23%)</title><rect x="299" y="100" width="687" height="15" fill="rgb(247,98,7)"/><text x="302.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (499 samples, 58.23%)</title><rect x="299" y="116" width="687" height="15" fill="rgb(238,90,51)"/><text x="302.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (499 samples, 58.23%)</title><rect x="299" y="132" width="687" height="15" fill="rgb(232,58,38)"/><text x="302.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (499 samples, 58.23%)</title><rect x="299" y="148" width="687" height="15" fill="rgb(250,17,26)"/><text x="302.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.12%)</title><rect x="984" y="164" width="2" height="15" fill="rgb(237,157,6)"/><text x="987.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.12%)</title><rect x="984" y="180" width="2" height="15" fill="rgb(209,223,43)"/><text x="987.00" y="190.50"></text></g><g><title>0x7f8a3c595ff9 (?) (1 samples, 0.12%)</title><rect x="986" y="212" width="1" height="15" fill="rgb(235,63,41)"/><text x="989.00" y="222.50"></text></g><g><title>0x7f8a3c590ef6 (?) (1 samples, 0.12%)</title><rect x="986" y="228" width="1" height="15" fill="rgb(247,62,41)"/><text x="989.00" y="238.50"></text></g><g><title>0x7f8a3c585962 (?) (1 samples, 0.12%)</title><rect x="986" y="244" width="1" height="15" fill="rgb(227,43,47)"/><text x="989.00" y="254.50"></text></g><g><title>0x7f8a3c5b97a7 (?) (1 samples, 0.12%)</title><rect x="986" y="260" width="1" height="15" fill="rgb(245,145,51)"/><text x="989.00" y="270.50"></text></g><g><title>0x7f8a3c5b9379 (?) (1 samples, 0.12%)</title><rect x="986" y="276" width="1" height="15" fill="rgb(233,43,14)"/><text x="989.00" y="286.50"></text></g><g><title>0x7f8a3ca178b8 (?) (1 samples, 0.12%)</title><rect x="986" y="292" width="1" height="15" fill="rgb(206,82,51)"/><text x="989.00" y="302.50"></text></g><g><title>0x7f8a3ca15c7f (?) (1 samples, 0.12%)</title><rect x="986" y="308" width="1" height="15" fill="rgb(247,9,49)"/><text x="989.00" y="318.50"></text></g><g><title>0x7f8a3ca2899c (?) (1 samples, 0.12%)</title><rect x="986" y="324" width="1" height="15" fill="rgb(223,45,42)"/><text x="989.00" y="334.50"></text></g><g><title>0x7f8a3c6e0e79 (?) (1 samples, 0.12%)</title><rect x="986" y="340" width="1" height="15" fill="rgb(206,19,34)"/><text x="989.00" y="350.50"></text></g><g><title>0x7f8a3c6df1bc (?) (1 samples, 0.12%)</title><rect x="986" y="356" width="1" height="15" fill="rgb(238,133,31)"/><text x="989.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="988" y="292" width="2" height="15" fill="rgb(248,58,16)"/><text x="991.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="988" y="308" width="2" height="15" fill="rgb(248,142,8)"/><text x="991.00" y="318.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="990" y="340" width="1" height="15" fill="rgb(250,141,25)"/><text x="993.00" y="350.50"></text></g><g><title>0x7f8a7e562b05 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1165" y="372" width="1" height="15" fill="rgb(240,53,38)"/><text x="1168.00" y="382.50"></text></g><g><title>0x7f8a7e562b87 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1166" y="372" width="3" height="15" fill="rgb(211,97,43)"/><text x="1169.00" y="382.50"></text></g><g><title>0x7f8a7e562cb0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1169" y="372" width="1" height="15" fill="rgb(228,57,6)"/><text x="1172.00" y="382.50"></text></g><g><title>0x7f8a7e734dd0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1170" y="372" width="2" height="15" fill="rgb(214,39,24)"/><text x="1173.00" y="382.50"></text></g><g><title>0x7f8a7e734e40 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1172" y="372" width="1" height="15" fill="rgb(225,102,17)"/><text x="1175.00" y="382.50"></text></g><g><title>0x7f8a7e734ea2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1173" y="372" width="1" height="15" fill="rgb(244,228,52)"/><text x="1176.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1174" y="372" width="2" height="15" fill="rgb(248,192,5)"/><text x="1177.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1174" y="388" width="2" height="15" fill="rgb(243,27,49)"/><text x="1177.00" y="398.50"></text></g><g><title>0x7f8a7e563e72 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1174" y="404" width="2" height="15" fill="rgb(244,103,19)"/><text x="1177.00" y="414.50"></text></g><g><title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1176" y="372" width="1" height="15" fill="rgb(242,145,22)"/><text x="1179.00" y="382.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (139 samples, 16.22%)</title><rect x="991" y="340" width="192" height="15" fill="rgb(220,86,4)"/><text x="994.00" y="350.50">onnxruntime::TopK&lt;11, flo..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (139 samples, 16.22%)</title><rect x="991" y="356" width="192" height="15" fill="rgb(253,206,12)"/><text x="994.00" y="366.50">onnxruntime::TopKImpl (on..</text></g><g><title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.47%)</title><rect x="1177" y="372" width="6" height="15" fill="rgb(226,228,48)"/><text x="1180.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::Schedule (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1183" y="404" width="1" height="15" fill="rgb(205,67,11)"/><text x="1186.00" y="414.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::ScheduleWithHint (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1183" y="420" width="1" height="15" fill="rgb(234,162,0)"/><text x="1186.00" y="430.50"></text></g><g><title>Eigen::EventCount::Unpark [clone .isra.126] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1183" y="436" width="1" height="15" fill="rgb(221,36,24)"/><text x="1186.00" y="446.50"></text></g><g><title>std::condition_variable::notify_one (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1183" y="452" width="1" height="15" fill="rgb(212,154,15)"/><text x="1186.00" y="462.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="1183" y="468" width="1" height="15" fill="rgb(233,158,41)"/><text x="1186.00" y="478.50"></text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="1183" y="340" width="2" height="15" fill="rgb(237,90,38)"/><text x="1186.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::EuclideanWithEigen&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="1183" y="356" width="2" height="15" fill="rgb(244,155,28)"/><text x="1186.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="1183" y="372" width="2" height="15" fill="rgb(215,181,41)"/><text x="1186.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="1183" y="388" width="2" height="15" fill="rgb(246,21,9)"/><text x="1186.00" y="398.50"></text></g><g><title>std::condition_variable::wait (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1184" y="404" width="1" height="15" fill="rgb(217,105,40)"/><text x="1187.00" y="414.50"></text></g><g><title>__pthread_cond_wait (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="1184" y="420" width="1" height="15" fill="rgb(234,82,46)"/><text x="1187.00" y="430.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (146 samples, 17.04%)</title><rect x="986" y="164" width="201" height="15" fill="rgb(212,209,12)"/><text x="989.00" y="174.50">_run_whole_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (146 samples, 17.04%)</title><rect x="986" y="180" width="201" height="15" fill="rgb(216,5,53)"/><text x="989.00" y="190.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>run (onnxruntime/capi/session.py:136) (146 samples, 17.04%)</title><rect x="986" y="196" width="201" height="15" fill="rgb(246,226,33)"/><text x="989.00" y="206.50">run (onnxruntime/capi/sess..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 16.92%)</title><rect x="987" y="212" width="200" height="15" fill="rgb(249,76,35)"/><text x="990.00" y="222.50">pybind11::cpp_function::di..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 16.92%)</title><rect x="987" y="228" width="200" height="15" fill="rgb(228,45,18)"/><text x="990.00" y="238.50">void pybind11::cpp_functio..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 16.80%)</title><rect x="988" y="244" width="199" height="15" fill="rgb(211,43,33)"/><text x="991.00" y="254.50">onnxruntime::python::addOb..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 16.80%)</title><rect x="988" y="260" width="199" height="15" fill="rgb(218,61,10)"/><text x="991.00" y="270.50">onnxruntime::InferenceSess..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 16.80%)</title><rect x="988" y="276" width="199" height="15" fill="rgb(229,105,54)"/><text x="991.00" y="286.50">onnxruntime::InferenceSess..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 16.69%)</title><rect x="990" y="292" width="197" height="15" fill="rgb(228,28,7)"/><text x="993.00" y="302.50">onnxruntime::utils::Execu..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 16.69%)</title><rect x="990" y="308" width="197" height="15" fill="rgb(250,192,36)"/><text x="993.00" y="318.50">onnxruntime::utils::Execu..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 16.69%)</title><rect x="990" y="324" width="197" height="15" fill="rgb(248,218,27)"/><text x="993.00" y="334.50">onnxruntime::SequentialEx..</text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1185" y="340" width="2" height="15" fill="rgb(236,40,44)"/><text x="1188.00" y="350.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (147 samples, 17.15%)</title><rect x="986" y="132" width="202" height="15" fill="rgb(227,29,3)"/><text x="989.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (147 samples, 17.15%)</title><rect x="986" y="148" width="202" height="15" fill="rgb(238,159,45)"/><text x="989.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.12%)</title><rect x="1187" y="164" width="1" height="15" fill="rgb(216,75,44)"/><text x="1190.00" y="174.50"></text></g><g><title>all (857 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,135,48)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:68) (148 samples, 17.27%)</title><rect x="986" y="52" width="204" height="15" fill="rgb(246,75,10)"/><text x="989.00" y="62.50">&lt;module&gt; (bench_KNeighbors..</text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:67) (148 samples, 17.27%)</title><rect x="986" y="68" width="204" height="15" fill="rgb(216,212,7)"/><text x="989.00" y="78.50">profile_ort (bench_KNeighb..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:37) (148 samples, 17.27%)</title><rect x="986" y="84" width="204" height="15" fill="rgb(245,164,31)"/><text x="989.00" y="94.50">setup_profile (bench_KNeig..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py:31) (148 samples, 17.27%)</title><rect x="986" y="100" width="204" height="15" fill="rgb(246,131,45)"/><text x="989.00" y="110.50">profile (bench_KNeighborsR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (148 samples, 17.27%)</title><rect x="986" y="116" width="204" height="15" fill="rgb(235,105,26)"/><text x="989.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(252,42,37)"/><text x="1191.00" y="142.50"></text></g></g></svg>