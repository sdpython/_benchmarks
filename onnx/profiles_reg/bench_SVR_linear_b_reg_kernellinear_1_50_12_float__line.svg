<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1013.00"> </text><svg id="frames" x="10" width="1180"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.70%)</title><rect x="0.5682%" y="852" width="1.7045%" height="15" fill="rgb(227,0,7)"/><text x="0.8182%" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.70%)</title><rect x="0.5682%" y="868" width="1.7045%" height="15" fill="rgb(217,0,24)"/><text x="0.8182%" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.70%)</title><rect x="0.5682%" y="884" width="1.7045%" height="15" fill="rgb(221,193,54)"/><text x="0.8182%" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.70%)</title><rect x="0.5682%" y="900" width="1.7045%" height="15" fill="rgb(248,212,6)"/><text x="0.8182%" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 1.14%)</title><rect x="1.1364%" y="916" width="1.1364%" height="15" fill="rgb(208,68,35)"/><text x="1.3864%" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 1.14%)</title><rect x="1.1364%" y="932" width="1.1364%" height="15" fill="rgb(232,128,0)"/><text x="1.3864%" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 1.14%)</title><rect x="1.1364%" y="948" width="1.1364%" height="15" fill="rgb(207,160,47)"/><text x="1.3864%" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 1.14%)</title><rect x="1.1364%" y="964" width="1.1364%" height="15" fill="rgb(228,23,34)"/><text x="1.3864%" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (2 samples, 1.14%)</title><rect x="1.1364%" y="980" width="1.1364%" height="15" fill="rgb(218,30,26)"/><text x="1.3864%" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 2.84%)</title><rect x="0.5682%" y="820" width="2.8409%" height="15" fill="rgb(220,122,19)"/><text x="0.8182%" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 2.84%)</title><rect x="0.5682%" y="836" width="2.8409%" height="15" fill="rgb(250,228,42)"/><text x="0.8182%" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 1.14%)</title><rect x="2.2727%" y="852" width="1.1364%" height="15" fill="rgb(240,193,28)"/><text x="2.5227%" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 1.14%)</title><rect x="2.2727%" y="868" width="1.1364%" height="15" fill="rgb(216,20,37)"/><text x="2.5227%" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 1.14%)</title><rect x="2.2727%" y="884" width="1.1364%" height="15" fill="rgb(206,188,39)"/><text x="2.5227%" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 1.14%)</title><rect x="2.2727%" y="900" width="1.1364%" height="15" fill="rgb(217,207,13)"/><text x="2.5227%" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 1.14%)</title><rect x="2.2727%" y="916" width="1.1364%" height="15" fill="rgb(231,73,38)"/><text x="2.5227%" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_linear_b_reg_kernellinear.py:2) (6 samples, 3.41%)</title><rect x="0.5682%" y="148" width="3.4091%" height="15" fill="rgb(225,20,46)"/><text x="0.8182%" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="164" width="3.4091%" height="15" fill="rgb(210,31,41)"/><text x="0.8182%" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 3.41%)</title><rect x="0.5682%" y="180" width="3.4091%" height="15" fill="rgb(221,200,47)"/><text x="0.8182%" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="196" width="3.4091%" height="15" fill="rgb(226,26,5)"/><text x="0.8182%" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="212" width="3.4091%" height="15" fill="rgb(249,33,26)"/><text x="0.8182%" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.41%)</title><rect x="0.5682%" y="228" width="3.4091%" height="15" fill="rgb(235,183,28)"/><text x="0.8182%" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.41%)</title><rect x="0.5682%" y="244" width="3.4091%" height="15" fill="rgb(221,5,38)"/><text x="0.8182%" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.41%)</title><rect x="0.5682%" y="260" width="3.4091%" height="15" fill="rgb(247,18,42)"/><text x="0.8182%" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="276" width="3.4091%" height="15" fill="rgb(241,131,45)"/><text x="0.8182%" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 3.41%)</title><rect x="0.5682%" y="292" width="3.4091%" height="15" fill="rgb(249,31,29)"/><text x="0.8182%" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="308" width="3.4091%" height="15" fill="rgb(225,111,53)"/><text x="0.8182%" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.41%)</title><rect x="0.5682%" y="324" width="3.4091%" height="15" fill="rgb(238,160,17)"/><text x="0.8182%" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.41%)</title><rect x="0.5682%" y="340" width="3.4091%" height="15" fill="rgb(214,148,48)"/><text x="0.8182%" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.41%)</title><rect x="0.5682%" y="356" width="3.4091%" height="15" fill="rgb(232,36,49)"/><text x="0.8182%" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="372" width="3.4091%" height="15" fill="rgb(209,103,24)"/><text x="0.8182%" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 3.41%)</title><rect x="0.5682%" y="388" width="3.4091%" height="15" fill="rgb(229,88,8)"/><text x="0.8182%" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="404" width="3.4091%" height="15" fill="rgb(213,181,19)"/><text x="0.8182%" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.41%)</title><rect x="0.5682%" y="420" width="3.4091%" height="15" fill="rgb(254,191,54)"/><text x="0.8182%" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.41%)</title><rect x="0.5682%" y="436" width="3.4091%" height="15" fill="rgb(241,83,37)"/><text x="0.8182%" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.41%)</title><rect x="0.5682%" y="452" width="3.4091%" height="15" fill="rgb(233,36,39)"/><text x="0.8182%" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="468" width="3.4091%" height="15" fill="rgb(226,3,54)"/><text x="0.8182%" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 3.41%)</title><rect x="0.5682%" y="484" width="3.4091%" height="15" fill="rgb(245,192,40)"/><text x="0.8182%" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="500" width="3.4091%" height="15" fill="rgb(238,167,29)"/><text x="0.8182%" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.41%)</title><rect x="0.5682%" y="516" width="3.4091%" height="15" fill="rgb(232,182,51)"/><text x="0.8182%" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.41%)</title><rect x="0.5682%" y="532" width="3.4091%" height="15" fill="rgb(231,60,39)"/><text x="0.8182%" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.41%)</title><rect x="0.5682%" y="548" width="3.4091%" height="15" fill="rgb(208,69,12)"/><text x="0.8182%" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="564" width="3.4091%" height="15" fill="rgb(235,93,37)"/><text x="0.8182%" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 3.41%)</title><rect x="0.5682%" y="580" width="3.4091%" height="15" fill="rgb(213,116,39)"/><text x="0.8182%" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="596" width="3.4091%" height="15" fill="rgb(222,207,29)"/><text x="0.8182%" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 3.41%)</title><rect x="0.5682%" y="612" width="3.4091%" height="15" fill="rgb(206,96,30)"/><text x="0.8182%" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="628" width="3.4091%" height="15" fill="rgb(218,138,4)"/><text x="0.8182%" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="644" width="3.4091%" height="15" fill="rgb(250,191,14)"/><text x="0.8182%" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.41%)</title><rect x="0.5682%" y="660" width="3.4091%" height="15" fill="rgb(239,60,40)"/><text x="0.8182%" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.41%)</title><rect x="0.5682%" y="676" width="3.4091%" height="15" fill="rgb(206,27,48)"/><text x="0.8182%" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.41%)</title><rect x="0.5682%" y="692" width="3.4091%" height="15" fill="rgb(225,35,8)"/><text x="0.8182%" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="708" width="3.4091%" height="15" fill="rgb(250,213,24)"/><text x="0.8182%" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 3.41%)</title><rect x="0.5682%" y="724" width="3.4091%" height="15" fill="rgb(247,123,22)"/><text x="0.8182%" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.41%)</title><rect x="0.5682%" y="740" width="3.4091%" height="15" fill="rgb(231,138,38)"/><text x="0.8182%" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.41%)</title><rect x="0.5682%" y="756" width="3.4091%" height="15" fill="rgb(231,145,46)"/><text x="0.8182%" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.41%)</title><rect x="0.5682%" y="772" width="3.4091%" height="15" fill="rgb(251,118,11)"/><text x="0.8182%" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.41%)</title><rect x="0.5682%" y="788" width="3.4091%" height="15" fill="rgb(217,147,25)"/><text x="0.8182%" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.41%)</title><rect x="0.5682%" y="804" width="3.4091%" height="15" fill="rgb(247,81,37)"/><text x="0.8182%" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 1.14%)</title><rect x="4.5455%" y="436" width="1.1364%" height="15" fill="rgb(209,12,38)"/><text x="4.7955%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.14%)</title><rect x="4.5455%" y="452" width="1.1364%" height="15" fill="rgb(227,1,9)"/><text x="4.7955%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.14%)</title><rect x="4.5455%" y="468" width="1.1364%" height="15" fill="rgb(248,47,43)"/><text x="4.7955%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.14%)</title><rect x="4.5455%" y="484" width="1.1364%" height="15" fill="rgb(221,10,30)"/><text x="4.7955%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.14%)</title><rect x="4.5455%" y="500" width="1.1364%" height="15" fill="rgb(210,229,1)"/><text x="4.7955%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.14%)</title><rect x="4.5455%" y="516" width="1.1364%" height="15" fill="rgb(222,148,37)"/><text x="4.7955%" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:13) (2 samples, 1.14%)</title><rect x="4.5455%" y="532" width="1.1364%" height="15" fill="rgb(234,67,33)"/><text x="4.7955%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.14%)</title><rect x="4.5455%" y="548" width="1.1364%" height="15" fill="rgb(247,98,35)"/><text x="4.7955%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.14%)</title><rect x="4.5455%" y="564" width="1.1364%" height="15" fill="rgb(247,138,52)"/><text x="4.7955%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.14%)</title><rect x="4.5455%" y="580" width="1.1364%" height="15" fill="rgb(213,79,30)"/><text x="4.7955%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.14%)</title><rect x="4.5455%" y="596" width="1.1364%" height="15" fill="rgb(246,177,23)"/><text x="4.7955%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.14%)</title><rect x="4.5455%" y="612" width="1.1364%" height="15" fill="rgb(230,62,27)"/><text x="4.7955%" y="622.50"></text></g><g><title>&lt;module&gt; (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:4) (11 samples, 6.25%)</title><rect x="0.0000%" y="52" width="6.2500%" height="15" fill="rgb(216,154,8)"/><text x="0.2500%" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 6.25%)</title><rect x="0.0000%" y="68" width="6.2500%" height="15" fill="rgb(244,35,45)"/><text x="0.2500%" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 6.25%)</title><rect x="0.0000%" y="84" width="6.2500%" height="15" fill="rgb(251,115,12)"/><text x="0.2500%" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 6.25%)</title><rect x="0.0000%" y="100" width="6.2500%" height="15" fill="rgb(240,54,50)"/><text x="0.2500%" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 6.25%)</title><rect x="0.0000%" y="116" width="6.2500%" height="15" fill="rgb(233,84,52)"/><text x="0.2500%" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 6.25%)</title><rect x="0.0000%" y="132" width="6.2500%" height="15" fill="rgb(207,117,47)"/><text x="0.2500%" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_linear_b_reg_kernellinear.py:7) (3 samples, 1.70%)</title><rect x="4.5455%" y="148" width="1.7045%" height="15" fill="rgb(249,43,39)"/><text x="4.7955%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.70%)</title><rect x="4.5455%" y="164" width="1.7045%" height="15" fill="rgb(209,38,44)"/><text x="4.7955%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.70%)</title><rect x="4.5455%" y="180" width="1.7045%" height="15" fill="rgb(236,212,23)"/><text x="4.7955%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.70%)</title><rect x="4.5455%" y="196" width="1.7045%" height="15" fill="rgb(242,79,21)"/><text x="4.7955%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.70%)</title><rect x="4.5455%" y="212" width="1.7045%" height="15" fill="rgb(211,96,35)"/><text x="4.7955%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.70%)</title><rect x="4.5455%" y="228" width="1.7045%" height="15" fill="rgb(253,215,40)"/><text x="4.7955%" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 1.70%)</title><rect x="4.5455%" y="244" width="1.7045%" height="15" fill="rgb(211,81,21)"/><text x="4.7955%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.70%)</title><rect x="4.5455%" y="260" width="1.7045%" height="15" fill="rgb(208,190,38)"/><text x="4.7955%" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.70%)</title><rect x="4.5455%" y="276" width="1.7045%" height="15" fill="rgb(235,213,38)"/><text x="4.7955%" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.70%)</title><rect x="4.5455%" y="292" width="1.7045%" height="15" fill="rgb(237,122,38)"/><text x="4.7955%" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.70%)</title><rect x="4.5455%" y="308" width="1.7045%" height="15" fill="rgb(244,218,35)"/><text x="4.7955%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.70%)</title><rect x="4.5455%" y="324" width="1.7045%" height="15" fill="rgb(240,68,47)"/><text x="4.7955%" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:27) (3 samples, 1.70%)</title><rect x="4.5455%" y="340" width="1.7045%" height="15" fill="rgb(210,16,53)"/><text x="4.7955%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.70%)</title><rect x="4.5455%" y="356" width="1.7045%" height="15" fill="rgb(235,124,12)"/><text x="4.7955%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.70%)</title><rect x="4.5455%" y="372" width="1.7045%" height="15" fill="rgb(224,169,11)"/><text x="4.7955%" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.70%)</title><rect x="4.5455%" y="388" width="1.7045%" height="15" fill="rgb(250,166,2)"/><text x="4.7955%" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.70%)</title><rect x="4.5455%" y="404" width="1.7045%" height="15" fill="rgb(242,216,29)"/><text x="4.7955%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.70%)</title><rect x="4.5455%" y="420" width="1.7045%" height="15" fill="rgb(230,116,27)"/><text x="4.7955%" y="430.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:949) (3 samples, 1.70%)</title><rect x="14.2045%" y="180" width="1.7045%" height="15" fill="rgb(228,99,48)"/><text x="14.4545%" y="190.50"></text></g><g><title>isclass (inspect.py:78) (3 samples, 1.70%)</title><rect x="14.2045%" y="196" width="1.7045%" height="15" fill="rgb(253,11,6)"/><text x="14.4545%" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 2.27%)</title><rect x="21.5909%" y="212" width="2.2727%" height="15" fill="rgb(247,143,39)"/><text x="21.8409%" y="222.50">u..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (20 samples, 11.36%)</title><rect x="13.0682%" y="164" width="11.3636%" height="15" fill="rgb(236,97,10)"/><text x="13.3182%" y="174.50">_validate_for_pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:963) (14 samples, 7.95%)</title><rect x="16.4773%" y="180" width="7.9545%" height="15" fill="rgb(233,208,19)"/><text x="16.7273%" y="190.50">check_is_fi..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:964) (12 samples, 6.82%)</title><rect x="17.6136%" y="196" width="6.8182%" height="15" fill="rgb(216,164,2)"/><text x="17.8636%" y="206.50">&lt;listcomp..</text></g><g><title>check_array (sklearn/utils/validation.py:457) (2 samples, 1.14%)</title><rect x="24.4318%" y="180" width="1.1364%" height="15" fill="rgb(220,129,5)"/><text x="24.6818%" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:493) (2 samples, 1.14%)</title><rect x="26.7045%" y="180" width="1.1364%" height="15" fill="rgb(242,17,10)"/><text x="26.9545%" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (2 samples, 1.14%)</title><rect x="28.9773%" y="196" width="1.1364%" height="15" fill="rgb(242,107,0)"/><text x="29.2273%" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 1.14%)</title><rect x="30.1136%" y="196" width="1.1364%" height="15" fill="rgb(251,28,31)"/><text x="30.3636%" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (6 samples, 3.41%)</title><rect x="28.4091%" y="180" width="3.4091%" height="15" fill="rgb(233,223,10)"/><text x="28.6591%" y="190.50">che..</text></g><g><title>_add_filter (warnings.py:186) (6 samples, 3.41%)</title><rect x="32.3864%" y="212" width="3.4091%" height="15" fill="rgb(215,21,27)"/><text x="32.6364%" y="222.50">_ad..</text></g><g><title>check_array (sklearn/utils/validation.py:520) (8 samples, 4.55%)</title><rect x="31.8182%" y="180" width="4.5455%" height="15" fill="rgb(232,23,21)"/><text x="32.0682%" y="190.50">check..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 3.98%)</title><rect x="32.3864%" y="196" width="3.9773%" height="15" fill="rgb(244,5,23)"/><text x="32.6364%" y="206.50">simp..</text></g><g><title>check_array (sklearn/utils/validation.py:521) (3 samples, 1.70%)</title><rect x="36.3636%" y="180" width="1.7045%" height="15" fill="rgb(226,81,46)"/><text x="36.6136%" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1656) (4 samples, 2.27%)</title><rect x="39.2045%" y="212" width="2.2727%" height="15" fill="rgb(247,70,30)"/><text x="39.4545%" y="222.50">_..</text></g><g><title>PyArray_FromArray (ctors.c:2217) (2 samples, 1.14%)</title><rect x="42.0455%" y="260" width="1.1364%" height="15" fill="rgb(212,68,19)"/><text x="42.2955%" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1333) (2 samples, 1.14%)</title><rect x="42.0455%" y="276" width="1.1364%" height="15" fill="rgb(240,187,13)"/><text x="42.2955%" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1253) (2 samples, 1.14%)</title><rect x="42.0455%" y="292" width="1.1364%" height="15" fill="rgb(223,113,26)"/><text x="42.2955%" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1268) (2 samples, 1.14%)</title><rect x="42.0455%" y="308" width="1.1364%" height="15" fill="rgb(206,192,2)"/><text x="42.2955%" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (2 samples, 1.14%)</title><rect x="43.1818%" y="276" width="1.1364%" height="15" fill="rgb(241,108,4)"/><text x="43.4318%" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:531) (12 samples, 6.82%)</title><rect x="38.0682%" y="180" width="6.8182%" height="15" fill="rgb(247,173,49)"/><text x="38.3182%" y="190.50">check_arr..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (12 samples, 6.82%)</title><rect x="38.0682%" y="196" width="6.8182%" height="15" fill="rgb(224,114,35)"/><text x="38.3182%" y="206.50">asarray (..</text></g><g><title>_array_fromobject (multiarraymodule.c:1726) (6 samples, 3.41%)</title><rect x="41.4773%" y="212" width="3.4091%" height="15" fill="rgb(245,159,27)"/><text x="41.7273%" y="222.50">_ar..</text></g><g><title>PyArray_CheckFromAny (ctors.c:2090) (6 samples, 3.41%)</title><rect x="41.4773%" y="228" width="3.4091%" height="15" fill="rgb(245,172,44)"/><text x="41.7273%" y="238.50">PyA..</text></g><g><title>PyArray_FromAny (ctors.c:2015) (5 samples, 2.84%)</title><rect x="42.0455%" y="244" width="2.8409%" height="15" fill="rgb(236,23,11)"/><text x="42.2955%" y="254.50">Py..</text></g><g><title>PyArray_FromArray (ctors.c:2221) (3 samples, 1.70%)</title><rect x="43.1818%" y="260" width="1.7045%" height="15" fill="rgb(205,117,38)"/><text x="43.4318%" y="270.50"></text></g><g><title>__exit__ (warnings.py:494) (2 samples, 1.14%)</title><rect x="44.8864%" y="196" width="1.1364%" height="15" fill="rgb(237,72,25)"/><text x="45.1364%" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:534) (4 samples, 2.27%)</title><rect x="44.8864%" y="180" width="2.2727%" height="15" fill="rgb(244,70,9)"/><text x="45.1364%" y="190.50">c..</text></g><g><title>__exit__ (warnings.py:496) (2 samples, 1.14%)</title><rect x="46.0227%" y="196" width="1.1364%" height="15" fill="rgb(217,125,39)"/><text x="46.2727%" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.70%)</title><rect x="51.1364%" y="212" width="1.7045%" height="15" fill="rgb(235,36,10)"/><text x="51.3864%" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 5.68%)</title><rect x="48.2955%" y="196" width="5.6818%" height="15" fill="rgb(251,123,47)"/><text x="48.5455%" y="206.50">_assert..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 1.14%)</title><rect x="52.8409%" y="212" width="1.1364%" height="15" fill="rgb(221,13,13)"/><text x="53.0909%" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:578) (13 samples, 7.39%)</title><rect x="48.2955%" y="180" width="7.3864%" height="15" fill="rgb(238,131,9)"/><text x="48.5455%" y="190.50">check_arra..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 1.70%)</title><rect x="53.9773%" y="196" width="1.7045%" height="15" fill="rgb(211,50,8)"/><text x="54.2273%" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (2 samples, 1.14%)</title><rect x="56.2500%" y="196" width="1.1364%" height="15" fill="rgb(245,182,24)"/><text x="56.5000%" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:581) (11 samples, 6.25%)</title><rect x="55.6818%" y="180" width="6.2500%" height="15" fill="rgb(242,14,37)"/><text x="55.9318%" y="190.50">check_ar..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (8 samples, 4.55%)</title><rect x="57.3864%" y="196" width="4.5455%" height="15" fill="rgb(246,228,12)"/><text x="57.6364%" y="206.50">_num_..</text></g><g><title>__instancecheck__ (abc.py:139) (8 samples, 4.55%)</title><rect x="57.3864%" y="212" width="4.5455%" height="15" fill="rgb(213,55,15)"/><text x="57.6364%" y="222.50">__ins..</text></g><g><title>__subclasscheck__ (abc.py:143) (4 samples, 2.27%)</title><rect x="59.6591%" y="228" width="2.2727%" height="15" fill="rgb(209,9,3)"/><text x="59.9091%" y="238.50">_..</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (68 samples, 38.64%)</title><rect x="24.4318%" y="164" width="38.6364%" height="15" fill="rgb(230,59,30)"/><text x="24.6818%" y="174.50">_validate_for_predict (sklearn/svm/_base.py:447)</text></g><g><title>predict (sklearn/svm/_base.py:315) (91 samples, 51.70%)</title><rect x="13.0682%" y="148" width="51.7045%" height="15" fill="rgb(209,121,21)"/><text x="13.3182%" y="158.50">predict (sklearn/svm/_base.py:315)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (3 samples, 1.70%)</title><rect x="63.0682%" y="164" width="1.7045%" height="15" fill="rgb(220,109,13)"/><text x="63.3182%" y="174.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py:332) (2 samples, 1.14%)</title><rect x="65.9091%" y="164" width="1.1364%" height="15" fill="rgb(232,18,1)"/><text x="66.1591%" y="174.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 1.14%)</title><rect x="69.3182%" y="228" width="1.1364%" height="15" fill="rgb(215,41,42)"/><text x="69.5682%" y="238.50"></text></g><g><title>0x7f03dcd9bdcc (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="69.3182%" y="196" width="1.7045%" height="15" fill="rgb(224,123,36)"/><text x="69.5682%" y="206.50"></text></g><g><title>0x7f03dcd815ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="69.3182%" y="212" width="1.7045%" height="15" fill="rgb(240,125,3)"/><text x="69.5682%" y="222.50"></text></g><g><title>0x7f03dcd9be4d (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="71.5909%" y="196" width="1.1364%" height="15" fill="rgb(205,98,50)"/><text x="71.8409%" y="206.50"></text></g><g><title>0x7f03dcd815ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="71.5909%" y="212" width="1.1364%" height="15" fill="rgb(205,185,37)"/><text x="71.8409%" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 1.14%)</title><rect x="71.5909%" y="228" width="1.1364%" height="15" fill="rgb(238,207,15)"/><text x="71.8409%" y="238.50"></text></g><g><title>0x7f03dcd9be8f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="72.7273%" y="196" width="1.1364%" height="15" fill="rgb(213,199,42)"/><text x="72.9773%" y="206.50"></text></g><g><title>0x7f03dcd81e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="72.7273%" y="212" width="1.1364%" height="15" fill="rgb(235,201,11)"/><text x="72.9773%" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 1.14%)</title><rect x="72.7273%" y="228" width="1.1364%" height="15" fill="rgb(207,46,11)"/><text x="72.9773%" y="238.50"></text></g><g><title>0x7f03dcd9bed1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="73.8636%" y="196" width="1.7045%" height="15" fill="rgb(241,35,35)"/><text x="74.1136%" y="206.50"></text></g><g><title>0x7f03dcd81e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="73.8636%" y="212" width="1.7045%" height="15" fill="rgb(243,32,47)"/><text x="74.1136%" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.70%)</title><rect x="73.8636%" y="228" width="1.7045%" height="15" fill="rgb(247,202,23)"/><text x="74.1136%" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (3 samples, 1.70%)</title><rect x="73.8636%" y="244" width="1.7045%" height="15" fill="rgb(219,102,11)"/><text x="74.1136%" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 1.14%)</title><rect x="74.4318%" y="260" width="1.1364%" height="15" fill="rgb(243,110,44)"/><text x="74.6818%" y="270.50"></text></g><g><title>0x7f03dcd9bfed (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="77.2727%" y="196" width="1.7045%" height="15" fill="rgb(222,74,54)"/><text x="77.5227%" y="206.50"></text></g><g><title>0x7f03dcd81e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="77.2727%" y="212" width="1.7045%" height="15" fill="rgb(216,99,12)"/><text x="77.5227%" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 1.14%)</title><rect x="77.8409%" y="228" width="1.1364%" height="15" fill="rgb(226,22,26)"/><text x="78.0909%" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c:2749) (6 samples, 3.41%)</title><rect x="79.5455%" y="212" width="3.4091%" height="15" fill="rgb(217,163,10)"/><text x="79.7955%" y="222.50">arr..</text></g><g><title>0x7f03dcd9c17f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (8 samples, 4.55%)</title><rect x="79.5455%" y="196" width="4.5455%" height="15" fill="rgb(213,25,53)"/><text x="79.7955%" y="206.50">0x7f0..</text></g><g><title>array_arange (multiarraymodule.c:2758) (2 samples, 1.14%)</title><rect x="82.9545%" y="212" width="1.1364%" height="15" fill="rgb(252,105,26)"/><text x="83.2045%" y="222.50"></text></g><g><title>0x7f03dcd9c4c8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="85.2273%" y="196" width="1.1364%" height="15" fill="rgb(220,39,43)"/><text x="85.4773%" y="206.50"></text></g><g><title>0x7f03dcd9c4d5 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="86.3636%" y="196" width="1.1364%" height="15" fill="rgb(229,68,48)"/><text x="86.6136%" y="206.50"></text></g><g><title>0x7f03dcd9c4f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 5.68%)</title><rect x="87.5000%" y="196" width="5.6818%" height="15" fill="rgb(252,8,32)"/><text x="87.7500%" y="206.50">0x7f03d..</text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 5.68%)</title><rect x="87.5000%" y="212" width="5.6818%" height="15" fill="rgb(223,20,43)"/><text x="87.7500%" y="222.50">copy_pr..</text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (10 samples, 5.68%)</title><rect x="87.5000%" y="228" width="5.6818%" height="15" fill="rgb(229,81,49)"/><text x="87.7500%" y="238.50">svm_pre..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (9 samples, 5.11%)</title><rect x="88.0682%" y="244" width="5.1136%" height="15" fill="rgb(236,28,36)"/><text x="88.3182%" y="254.50">svm_pr..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (8 samples, 4.55%)</title><rect x="88.6364%" y="260" width="4.5455%" height="15" fill="rgb(249,185,26)"/><text x="88.8864%" y="270.50">svm::..</text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 1.14%)</title><rect x="93.1818%" y="212" width="1.1364%" height="15" fill="rgb(249,174,33)"/><text x="93.4318%" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 1.14%)</title><rect x="93.1818%" y="228" width="1.1364%" height="15" fill="rgb(233,201,37)"/><text x="93.4318%" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (2 samples, 1.14%)</title><rect x="93.1818%" y="244" width="1.1364%" height="15" fill="rgb(221,78,26)"/><text x="93.4318%" y="254.50"></text></g><g><title>0x7f03dcd9c752 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="93.1818%" y="196" width="1.7045%" height="15" fill="rgb(250,127,30)"/><text x="93.4318%" y="206.50"></text></g><g><title>0x7f03dcd9ccec (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.84%)</title><rect x="95.4545%" y="196" width="2.8409%" height="15" fill="rgb(230,49,44)"/><text x="95.7045%" y="206.50">0x..</text></g><g><title>0x7f03dcd7b9a1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.84%)</title><rect x="95.4545%" y="212" width="2.8409%" height="15" fill="rgb(229,67,23)"/><text x="95.7045%" y="222.50">0x..</text></g><g><title>0x7f03dcd7ffdf (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.27%)</title><rect x="96.0227%" y="228" width="2.2727%" height="15" fill="rgb(249,83,47)"/><text x="96.2727%" y="238.50">0..</text></g><g><title>array_empty (multiarraymodule.c:1829) (3 samples, 1.70%)</title><rect x="96.5909%" y="244" width="1.7045%" height="15" fill="rgb(215,43,3)"/><text x="96.8409%" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (3 samples, 1.70%)</title><rect x="96.5909%" y="260" width="1.7045%" height="15" fill="rgb(238,154,13)"/><text x="96.8409%" y="270.50"></text></g><g><title>PyArray_Empty (ctors.c:3139) (2 samples, 1.14%)</title><rect x="97.1591%" y="276" width="1.1364%" height="15" fill="rgb(219,56,2)"/><text x="97.4091%" y="286.50"></text></g><g><title>0x7f03dcd9e1dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (53 samples, 30.11%)</title><rect x="68.7500%" y="180" width="30.1136%" height="15" fill="rgb(233,0,4)"/><text x="69.0000%" y="190.50">0x7f03dcd9e1dd (sklearn/svm/_libsvm.cpython-37m-x..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:375) (153 samples, 86.93%)</title><rect x="12.5000%" y="132" width="86.9318%" height="15" fill="rgb(235,30,7)"/><text x="12.7500%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:375)</text></g><g><title>predict (sklearn/svm/_base.py:317) (61 samples, 34.66%)</title><rect x="64.7727%" y="148" width="34.6591%" height="15" fill="rgb(250,79,13)"/><text x="65.0227%" y="158.50">predict (sklearn/svm/_base.py:317)</text></g><g><title>_dense_predict (sklearn/svm/_base.py:339) (57 samples, 32.39%)</title><rect x="67.0455%" y="164" width="32.3864%" height="15" fill="rgb(211,146,34)"/><text x="67.2955%" y="174.50">_dense_predict (sklearn/svm/_base.py:339)</text></g><g><title>all (176 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(228,22,38)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:54) (164 samples, 93.18%)</title><rect x="6.8182%" y="52" width="93.1818%" height="15" fill="rgb(235,168,5)"/><text x="7.0682%" y="62.50">&lt;module&gt; (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:53) (164 samples, 93.18%)</title><rect x="6.8182%" y="68" width="93.1818%" height="15" fill="rgb(221,155,16)"/><text x="7.0682%" y="78.50">profile_skl (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:37) (164 samples, 93.18%)</title><rect x="6.8182%" y="84" width="93.1818%" height="15" fill="rgb(215,215,53)"/><text x="7.0682%" y="94.50">setup_profile (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:37)</text></g><g><title>profile (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:31) (163 samples, 92.61%)</title><rect x="7.3864%" y="100" width="92.6136%" height="15" fill="rgb(223,4,10)"/><text x="7.6364%" y="110.50">profile (bench_SVR_linear_b_reg_kernellinear_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182) (160 samples, 90.91%)</title><rect x="9.0909%" y="116" width="90.9091%" height="15" fill="rgb(234,103,6)"/><text x="9.3409%" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182)</text></g></svg></svg>