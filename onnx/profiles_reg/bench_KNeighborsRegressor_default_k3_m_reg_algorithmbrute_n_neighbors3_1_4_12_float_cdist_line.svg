<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:1) (1 samples, 0.46%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(224,103,25)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(205,135,51)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(247,106,27)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(210,162,10)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(215,59,41)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(235,43,48)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.46%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(224,73,14)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.46%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(236,31,35)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(252,133,15)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(253,167,34)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(219,167,42)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(207,30,4)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(221,194,3)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(230,36,7)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.46%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(250,177,53)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(215,177,26)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(225,132,39)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(252,129,35)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(236,7,28)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(239,155,49)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:9) (1 samples, 0.46%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(213,154,13)"/><text x="13.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:981) (1 samples, 0.46%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(246,207,5)"/><text x="13.00" y="494.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.46%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(246,73,31)"/><text x="18.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.46%)</title><rect x="15" y="1012" width="5" height="15" fill="rgb(252,181,23)"/><text x="18.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.38%)</title><rect x="15" y="852" width="16" height="15" fill="rgb(218,200,21)"/><text x="18.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.38%)</title><rect x="15" y="868" width="16" height="15" fill="rgb(217,158,25)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.38%)</title><rect x="15" y="884" width="16" height="15" fill="rgb(253,93,9)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.38%)</title><rect x="15" y="900" width="16" height="15" fill="rgb(230,21,35)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 1.38%)</title><rect x="15" y="916" width="16" height="15" fill="rgb(221,128,52)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 1.38%)</title><rect x="15" y="932" width="16" height="15" fill="rgb(245,94,43)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 1.38%)</title><rect x="15" y="948" width="16" height="15" fill="rgb(237,115,47)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 1.38%)</title><rect x="15" y="964" width="16" height="15" fill="rgb(250,17,44)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (3 samples, 1.38%)</title><rect x="15" y="980" width="16" height="15" fill="rgb(227,146,52)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (2 samples, 0.92%)</title><rect x="20" y="996" width="11" height="15" fill="rgb(208,193,39)"/><text x="23.00" y="1006.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.46%)</title><rect x="26" y="1012" width="5" height="15" fill="rgb(213,18,20)"/><text x="29.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.46%)</title><rect x="31" y="852" width="6" height="15" fill="rgb(242,92,9)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.46%)</title><rect x="31" y="868" width="6" height="15" fill="rgb(222,200,28)"/><text x="34.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.46%)</title><rect x="31" y="884" width="6" height="15" fill="rgb(253,192,10)"/><text x="34.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.46%)</title><rect x="31" y="900" width="6" height="15" fill="rgb(235,169,1)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.46%)</title><rect x="31" y="916" width="6" height="15" fill="rgb(233,99,16)"/><text x="34.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.46%)</title><rect x="31" y="932" width="6" height="15" fill="rgb(231,80,47)"/><text x="34.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.46%)</title><rect x="31" y="948" width="6" height="15" fill="rgb(207,70,29)"/><text x="34.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.46%)</title><rect x="31" y="964" width="6" height="15" fill="rgb(235,217,7)"/><text x="34.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.46%)</title><rect x="31" y="980" width="6" height="15" fill="rgb(248,85,35)"/><text x="34.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.46%)</title><rect x="31" y="996" width="6" height="15" fill="rgb(254,2,11)"/><text x="34.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.46%)</title><rect x="31" y="1012" width="6" height="15" fill="rgb(214,225,7)"/><text x="34.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.46%)</title><rect x="31" y="1028" width="6" height="15" fill="rgb(219,141,23)"/><text x="34.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.46%)</title><rect x="31" y="1044" width="6" height="15" fill="rgb(235,75,18)"/><text x="34.00" y="1054.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.46%)</title><rect x="37" y="884" width="5" height="15" fill="rgb(219,125,11)"/><text x="40.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.46%)</title><rect x="37" y="900" width="5" height="15" fill="rgb(215,204,13)"/><text x="40.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.46%)</title><rect x="37" y="916" width="5" height="15" fill="rgb(212,225,18)"/><text x="40.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.46%)</title><rect x="37" y="932" width="5" height="15" fill="rgb(230,202,5)"/><text x="40.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.46%)</title><rect x="37" y="948" width="5" height="15" fill="rgb(229,204,33)"/><text x="40.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.46%)</title><rect x="37" y="964" width="5" height="15" fill="rgb(242,182,20)"/><text x="40.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.46%)</title><rect x="37" y="980" width="5" height="15" fill="rgb(222,152,53)"/><text x="40.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.46%)</title><rect x="37" y="996" width="5" height="15" fill="rgb(215,84,1)"/><text x="40.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.46%)</title><rect x="37" y="1012" width="5" height="15" fill="rgb(238,135,14)"/><text x="40.00" y="1022.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.46%)</title><rect x="37" y="1028" width="5" height="15" fill="rgb(239,67,3)"/><text x="40.00" y="1038.50"></text></g><g><title>0x7f25221f0700 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="37" y="1044" width="5" height="15" fill="rgb(244,152,34)"/><text x="40.00" y="1054.50"></text></g><g><title>0x7f25221edaa4 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="37" y="1060" width="5" height="15" fill="rgb(251,208,48)"/><text x="40.00" y="1070.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:2) (6 samples, 2.76%)</title><rect x="15" y="148" width="33" height="15" fill="rgb(212,186,9)"/><text x="18.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="164" width="33" height="15" fill="rgb(214,102,7)"/><text x="18.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.76%)</title><rect x="15" y="180" width="33" height="15" fill="rgb(251,91,34)"/><text x="18.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="196" width="33" height="15" fill="rgb(215,37,9)"/><text x="18.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="212" width="33" height="15" fill="rgb(253,73,12)"/><text x="18.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.76%)</title><rect x="15" y="228" width="33" height="15" fill="rgb(219,176,22)"/><text x="18.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.76%)</title><rect x="15" y="244" width="33" height="15" fill="rgb(224,97,42)"/><text x="18.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.76%)</title><rect x="15" y="260" width="33" height="15" fill="rgb(234,68,16)"/><text x="18.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="276" width="33" height="15" fill="rgb(210,138,8)"/><text x="18.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.76%)</title><rect x="15" y="292" width="33" height="15" fill="rgb(248,58,54)"/><text x="18.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="308" width="33" height="15" fill="rgb(254,99,37)"/><text x="18.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.76%)</title><rect x="15" y="324" width="33" height="15" fill="rgb(208,156,26)"/><text x="18.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.76%)</title><rect x="15" y="340" width="33" height="15" fill="rgb(209,35,29)"/><text x="18.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.76%)</title><rect x="15" y="356" width="33" height="15" fill="rgb(216,11,54)"/><text x="18.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="372" width="33" height="15" fill="rgb(210,175,50)"/><text x="18.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.76%)</title><rect x="15" y="388" width="33" height="15" fill="rgb(221,171,7)"/><text x="18.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="404" width="33" height="15" fill="rgb(212,167,27)"/><text x="18.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.76%)</title><rect x="15" y="420" width="33" height="15" fill="rgb(236,172,40)"/><text x="18.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.76%)</title><rect x="15" y="436" width="33" height="15" fill="rgb(230,213,32)"/><text x="18.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.76%)</title><rect x="15" y="452" width="33" height="15" fill="rgb(225,86,29)"/><text x="18.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="468" width="33" height="15" fill="rgb(223,201,14)"/><text x="18.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.76%)</title><rect x="15" y="484" width="33" height="15" fill="rgb(210,73,37)"/><text x="18.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="500" width="33" height="15" fill="rgb(248,185,1)"/><text x="18.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.76%)</title><rect x="15" y="516" width="33" height="15" fill="rgb(215,57,35)"/><text x="18.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.76%)</title><rect x="15" y="532" width="33" height="15" fill="rgb(213,16,10)"/><text x="18.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.76%)</title><rect x="15" y="548" width="33" height="15" fill="rgb(252,203,48)"/><text x="18.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="564" width="33" height="15" fill="rgb(244,176,27)"/><text x="18.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.76%)</title><rect x="15" y="580" width="33" height="15" fill="rgb(238,113,53)"/><text x="18.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="596" width="33" height="15" fill="rgb(248,118,38)"/><text x="18.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.76%)</title><rect x="15" y="612" width="33" height="15" fill="rgb(221,141,9)"/><text x="18.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="628" width="33" height="15" fill="rgb(208,207,36)"/><text x="18.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="644" width="33" height="15" fill="rgb(247,43,30)"/><text x="18.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.76%)</title><rect x="15" y="660" width="33" height="15" fill="rgb(242,152,1)"/><text x="18.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.76%)</title><rect x="15" y="676" width="33" height="15" fill="rgb(238,41,50)"/><text x="18.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.76%)</title><rect x="15" y="692" width="33" height="15" fill="rgb(233,192,10)"/><text x="18.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="708" width="33" height="15" fill="rgb(247,174,29)"/><text x="18.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 2.76%)</title><rect x="15" y="724" width="33" height="15" fill="rgb(220,55,13)"/><text x="18.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.76%)</title><rect x="15" y="740" width="33" height="15" fill="rgb(222,48,45)"/><text x="18.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.76%)</title><rect x="15" y="756" width="33" height="15" fill="rgb(240,204,22)"/><text x="18.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.76%)</title><rect x="15" y="772" width="33" height="15" fill="rgb(235,153,53)"/><text x="18.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.76%)</title><rect x="15" y="788" width="33" height="15" fill="rgb(247,118,1)"/><text x="18.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.76%)</title><rect x="15" y="804" width="33" height="15" fill="rgb(235,136,35)"/><text x="18.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 2.76%)</title><rect x="15" y="820" width="33" height="15" fill="rgb(220,47,42)"/><text x="18.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 2.76%)</title><rect x="15" y="836" width="33" height="15" fill="rgb(241,136,0)"/><text x="18.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.92%)</title><rect x="37" y="852" width="11" height="15" fill="rgb(230,143,3)"/><text x="40.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.92%)</title><rect x="37" y="868" width="11" height="15" fill="rgb(245,199,3)"/><text x="40.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.46%)</title><rect x="42" y="884" width="6" height="15" fill="rgb(248,150,51)"/><text x="45.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.46%)</title><rect x="42" y="900" width="6" height="15" fill="rgb(243,77,21)"/><text x="45.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.46%)</title><rect x="42" y="916" width="6" height="15" fill="rgb(207,226,38)"/><text x="45.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.46%)</title><rect x="42" y="932" width="6" height="15" fill="rgb(215,212,28)"/><text x="45.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:4) (1 samples, 0.46%)</title><rect x="48" y="148" width="5" height="15" fill="rgb(213,180,39)"/><text x="51.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="164" width="5" height="15" fill="rgb(221,190,24)"/><text x="51.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.46%)</title><rect x="48" y="180" width="5" height="15" fill="rgb(254,226,13)"/><text x="51.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="196" width="5" height="15" fill="rgb(221,63,6)"/><text x="51.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="212" width="5" height="15" fill="rgb(219,65,11)"/><text x="51.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="48" y="228" width="5" height="15" fill="rgb(249,66,37)"/><text x="51.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="48" y="244" width="5" height="15" fill="rgb(238,211,8)"/><text x="51.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="48" y="260" width="5" height="15" fill="rgb(214,159,53)"/><text x="51.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="276" width="5" height="15" fill="rgb(241,187,5)"/><text x="51.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.46%)</title><rect x="48" y="292" width="5" height="15" fill="rgb(249,25,42)"/><text x="51.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="308" width="5" height="15" fill="rgb(249,68,21)"/><text x="51.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="48" y="324" width="5" height="15" fill="rgb(219,143,47)"/><text x="51.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="48" y="340" width="5" height="15" fill="rgb(241,99,25)"/><text x="51.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="48" y="356" width="5" height="15" fill="rgb(248,197,20)"/><text x="51.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="372" width="5" height="15" fill="rgb(211,67,35)"/><text x="51.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.46%)</title><rect x="48" y="388" width="5" height="15" fill="rgb(242,49,46)"/><text x="51.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="404" width="5" height="15" fill="rgb(221,120,51)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="48" y="420" width="5" height="15" fill="rgb(239,25,28)"/><text x="51.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="48" y="436" width="5" height="15" fill="rgb(224,96,54)"/><text x="51.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="48" y="452" width="5" height="15" fill="rgb(232,123,25)"/><text x="51.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="468" width="5" height="15" fill="rgb(244,179,27)"/><text x="51.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.46%)</title><rect x="48" y="484" width="5" height="15" fill="rgb(248,210,14)"/><text x="51.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.46%)</title><rect x="48" y="500" width="5" height="15" fill="rgb(226,36,18)"/><text x="51.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="516" width="5" height="15" fill="rgb(235,135,26)"/><text x="51.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="532" width="5" height="15" fill="rgb(221,92,45)"/><text x="51.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="48" y="548" width="5" height="15" fill="rgb(240,62,5)"/><text x="51.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="48" y="564" width="5" height="15" fill="rgb(235,26,31)"/><text x="51.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="48" y="580" width="5" height="15" fill="rgb(233,134,19)"/><text x="51.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="596" width="5" height="15" fill="rgb(243,14,32)"/><text x="51.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.46%)</title><rect x="48" y="612" width="5" height="15" fill="rgb(212,0,24)"/><text x="51.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="628" width="5" height="15" fill="rgb(251,178,40)"/><text x="51.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="48" y="644" width="5" height="15" fill="rgb(239,109,23)"/><text x="51.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="48" y="660" width="5" height="15" fill="rgb(235,132,36)"/><text x="51.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="48" y="676" width="5" height="15" fill="rgb(216,202,22)"/><text x="51.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="692" width="5" height="15" fill="rgb(227,38,48)"/><text x="51.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.46%)</title><rect x="48" y="708" width="5" height="15" fill="rgb(226,30,22)"/><text x="51.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="724" width="5" height="15" fill="rgb(205,160,51)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="48" y="740" width="5" height="15" fill="rgb(239,26,6)"/><text x="51.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="48" y="756" width="5" height="15" fill="rgb(207,38,0)"/><text x="51.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="48" y="772" width="5" height="15" fill="rgb(205,96,4)"/><text x="51.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="788" width="5" height="15" fill="rgb(250,15,41)"/><text x="51.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:24) (1 samples, 0.46%)</title><rect x="48" y="804" width="5" height="15" fill="rgb(211,92,40)"/><text x="51.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="48" y="820" width="5" height="15" fill="rgb(205,212,35)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="48" y="836" width="5" height="15" fill="rgb(229,221,27)"/><text x="51.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="48" y="852" width="5" height="15" fill="rgb(213,24,37)"/><text x="51.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="48" y="868" width="5" height="15" fill="rgb(210,143,7)"/><text x="51.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="48" y="884" width="5" height="15" fill="rgb(221,178,10)"/><text x="51.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py:125) (1 samples, 0.46%)</title><rect x="48" y="900" width="5" height="15" fill="rgb(233,29,50)"/><text x="51.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py:118) (1 samples, 0.46%)</title><rect x="48" y="916" width="5" height="15" fill="rgb(214,67,41)"/><text x="51.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py:92) (1 samples, 0.46%)</title><rect x="48" y="932" width="5" height="15" fill="rgb(240,47,20)"/><text x="51.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.46%)</title><rect x="53" y="340" width="5" height="15" fill="rgb(214,190,52)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="53" y="356" width="5" height="15" fill="rgb(221,192,29)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="53" y="372" width="5" height="15" fill="rgb(238,3,22)"/><text x="56.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="53" y="388" width="5" height="15" fill="rgb(242,5,33)"/><text x="56.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="53" y="404" width="5" height="15" fill="rgb(234,167,16)"/><text x="56.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="53" y="420" width="5" height="15" fill="rgb(244,192,50)"/><text x="56.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.46%)</title><rect x="53" y="436" width="5" height="15" fill="rgb(225,3,4)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="53" y="452" width="5" height="15" fill="rgb(243,130,36)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="53" y="468" width="5" height="15" fill="rgb(226,20,37)"/><text x="56.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="53" y="484" width="5" height="15" fill="rgb(250,205,29)"/><text x="56.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="53" y="500" width="5" height="15" fill="rgb(233,92,50)"/><text x="56.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="53" y="516" width="5" height="15" fill="rgb(230,218,43)"/><text x="56.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.46%)</title><rect x="53" y="532" width="5" height="15" fill="rgb(210,61,20)"/><text x="56.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="53" y="548" width="5" height="15" fill="rgb(206,139,47)"/><text x="56.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.46%)</title><rect x="53" y="564" width="5" height="15" fill="rgb(220,53,18)"/><text x="56.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="53" y="580" width="5" height="15" fill="rgb(211,3,36)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="53" y="596" width="5" height="15" fill="rgb(236,129,23)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="53" y="612" width="5" height="15" fill="rgb(240,223,0)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="53" y="628" width="5" height="15" fill="rgb(228,79,25)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="53" y="644" width="5" height="15" fill="rgb(221,189,40)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="53" y="660" width="5" height="15" fill="rgb(213,105,17)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:103) (1 samples, 0.46%)</title><rect x="53" y="676" width="5" height="15" fill="rgb(213,53,39)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="53" y="692" width="5" height="15" fill="rgb(224,114,44)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="53" y="708" width="5" height="15" fill="rgb(242,154,15)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="53" y="724" width="5" height="15" fill="rgb(205,225,42)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="53" y="740" width="5" height="15" fill="rgb(234,214,23)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="53" y="756" width="5" height="15" fill="rgb(219,159,17)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.46%)</title><rect x="58" y="436" width="6" height="15" fill="rgb(254,87,35)"/><text x="61.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="452" width="6" height="15" fill="rgb(209,101,0)"/><text x="61.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="468" width="6" height="15" fill="rgb(222,218,39)"/><text x="61.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="484" width="6" height="15" fill="rgb(214,102,28)"/><text x="61.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="500" width="6" height="15" fill="rgb(232,122,44)"/><text x="61.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="516" width="6" height="15" fill="rgb(240,150,10)"/><text x="61.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.46%)</title><rect x="58" y="532" width="6" height="15" fill="rgb(243,30,13)"/><text x="61.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="548" width="6" height="15" fill="rgb(252,203,11)"/><text x="61.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="564" width="6" height="15" fill="rgb(246,28,10)"/><text x="61.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="580" width="6" height="15" fill="rgb(209,199,31)"/><text x="61.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="596" width="6" height="15" fill="rgb(236,37,42)"/><text x="61.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="612" width="6" height="15" fill="rgb(250,79,38)"/><text x="61.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.46%)</title><rect x="58" y="628" width="6" height="15" fill="rgb(232,49,46)"/><text x="61.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="644" width="6" height="15" fill="rgb(235,5,3)"/><text x="61.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="660" width="6" height="15" fill="rgb(218,8,18)"/><text x="61.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="676" width="6" height="15" fill="rgb(230,123,35)"/><text x="61.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="692" width="6" height="15" fill="rgb(229,97,39)"/><text x="61.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="708" width="6" height="15" fill="rgb(248,169,33)"/><text x="61.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.46%)</title><rect x="58" y="724" width="6" height="15" fill="rgb(227,185,34)"/><text x="61.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="740" width="6" height="15" fill="rgb(241,180,24)"/><text x="61.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="756" width="6" height="15" fill="rgb(220,207,17)"/><text x="61.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="772" width="6" height="15" fill="rgb(227,37,42)"/><text x="61.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="788" width="6" height="15" fill="rgb(229,38,14)"/><text x="61.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="804" width="6" height="15" fill="rgb(234,134,16)"/><text x="61.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.46%)</title><rect x="58" y="820" width="6" height="15" fill="rgb(220,87,6)"/><text x="61.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="836" width="6" height="15" fill="rgb(208,38,48)"/><text x="61.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="852" width="6" height="15" fill="rgb(228,70,53)"/><text x="61.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="868" width="6" height="15" fill="rgb(242,207,33)"/><text x="61.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="884" width="6" height="15" fill="rgb(246,54,16)"/><text x="61.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="900" width="6" height="15" fill="rgb(235,123,50)"/><text x="61.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.46%)</title><rect x="58" y="916" width="6" height="15" fill="rgb(254,102,43)"/><text x="61.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="932" width="6" height="15" fill="rgb(245,161,20)"/><text x="61.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="948" width="6" height="15" fill="rgb(209,11,54)"/><text x="61.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="964" width="6" height="15" fill="rgb(229,113,52)"/><text x="61.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="980" width="6" height="15" fill="rgb(228,39,36)"/><text x="61.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="996" width="6" height="15" fill="rgb(234,44,0)"/><text x="61.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.46%)</title><rect x="58" y="1012" width="6" height="15" fill="rgb(223,7,12)"/><text x="61.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1028" width="6" height="15" fill="rgb(248,66,7)"/><text x="61.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1044" width="6" height="15" fill="rgb(233,207,15)"/><text x="61.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1060" width="6" height="15" fill="rgb(224,206,19)"/><text x="61.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1076" width="6" height="15" fill="rgb(240,63,33)"/><text x="61.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1092" width="6" height="15" fill="rgb(236,181,22)"/><text x="61.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.46%)</title><rect x="58" y="1108" width="6" height="15" fill="rgb(206,105,8)"/><text x="61.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1124" width="6" height="15" fill="rgb(221,73,0)"/><text x="61.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1140" width="6" height="15" fill="rgb(224,87,33)"/><text x="61.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1156" width="6" height="15" fill="rgb(229,28,15)"/><text x="61.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1172" width="6" height="15" fill="rgb(212,128,17)"/><text x="61.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1188" width="6" height="15" fill="rgb(246,154,11)"/><text x="61.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.46%)</title><rect x="58" y="1204" width="6" height="15" fill="rgb(244,104,35)"/><text x="61.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1220" width="6" height="15" fill="rgb(252,72,31)"/><text x="61.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1236" width="6" height="15" fill="rgb(244,139,2)"/><text x="61.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1252" width="6" height="15" fill="rgb(252,125,43)"/><text x="61.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1268" width="6" height="15" fill="rgb(226,68,43)"/><text x="61.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1284" width="6" height="15" fill="rgb(222,186,12)"/><text x="61.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.46%)</title><rect x="58" y="1300" width="6" height="15" fill="rgb(217,0,42)"/><text x="61.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1316" width="6" height="15" fill="rgb(240,35,30)"/><text x="61.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1332" width="6" height="15" fill="rgb(236,127,8)"/><text x="61.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1348" width="6" height="15" fill="rgb(226,229,11)"/><text x="61.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1364" width="6" height="15" fill="rgb(214,89,2)"/><text x="61.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1380" width="6" height="15" fill="rgb(251,7,33)"/><text x="61.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.46%)</title><rect x="58" y="1396" width="6" height="15" fill="rgb(212,202,38)"/><text x="61.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1412" width="6" height="15" fill="rgb(243,72,33)"/><text x="61.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1428" width="6" height="15" fill="rgb(211,130,4)"/><text x="61.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1444" width="6" height="15" fill="rgb(207,139,5)"/><text x="61.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1460" width="6" height="15" fill="rgb(232,220,5)"/><text x="61.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1476" width="6" height="15" fill="rgb(252,101,5)"/><text x="61.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.46%)</title><rect x="58" y="1492" width="6" height="15" fill="rgb(206,97,44)"/><text x="61.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1508" width="6" height="15" fill="rgb(210,132,42)"/><text x="61.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1524" width="6" height="15" fill="rgb(216,200,47)"/><text x="61.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1540" width="6" height="15" fill="rgb(229,14,31)"/><text x="61.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1556" width="6" height="15" fill="rgb(239,146,39)"/><text x="61.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1572" width="6" height="15" fill="rgb(247,93,7)"/><text x="61.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.46%)</title><rect x="58" y="1588" width="6" height="15" fill="rgb(210,196,9)"/><text x="61.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1604" width="6" height="15" fill="rgb(241,216,47)"/><text x="61.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1620" width="6" height="15" fill="rgb(214,59,39)"/><text x="61.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1636" width="6" height="15" fill="rgb(254,78,1)"/><text x="61.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1652" width="6" height="15" fill="rgb(232,48,35)"/><text x="61.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1668" width="6" height="15" fill="rgb(226,140,4)"/><text x="61.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.46%)</title><rect x="58" y="1684" width="6" height="15" fill="rgb(245,181,40)"/><text x="61.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1700" width="6" height="15" fill="rgb(247,78,16)"/><text x="61.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1716" width="6" height="15" fill="rgb(248,40,10)"/><text x="61.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1732" width="6" height="15" fill="rgb(248,219,25)"/><text x="61.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1748" width="6" height="15" fill="rgb(230,165,51)"/><text x="61.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1764" width="6" height="15" fill="rgb(253,35,22)"/><text x="61.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.46%)</title><rect x="58" y="1780" width="6" height="15" fill="rgb(232,205,48)"/><text x="61.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1796" width="6" height="15" fill="rgb(232,138,8)"/><text x="61.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1812" width="6" height="15" fill="rgb(241,42,53)"/><text x="61.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1828" width="6" height="15" fill="rgb(248,150,40)"/><text x="61.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="58" y="1844" width="6" height="15" fill="rgb(209,226,14)"/><text x="61.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="58" y="1860" width="6" height="15" fill="rgb(247,89,52)"/><text x="61.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.46%)</title><rect x="58" y="1876" width="6" height="15" fill="rgb(227,63,51)"/><text x="61.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="58" y="1892" width="6" height="15" fill="rgb(207,97,43)"/><text x="61.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="58" y="1908" width="6" height="15" fill="rgb(228,177,42)"/><text x="61.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="58" y="1924" width="6" height="15" fill="rgb(244,115,15)"/><text x="61.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.46%)</title><rect x="58" y="1940" width="6" height="15" fill="rgb(206,86,29)"/><text x="61.00" y="1950.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.46%)</title><rect x="58" y="1956" width="6" height="15" fill="rgb(220,60,36)"/><text x="61.00" y="1966.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.46%)</title><rect x="58" y="1972" width="6" height="15" fill="rgb(213,98,20)"/><text x="61.00" y="1982.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.46%)</title><rect x="58" y="1988" width="6" height="15" fill="rgb(234,182,41)"/><text x="61.00" y="1998.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.46%)</title><rect x="64" y="1108" width="5" height="15" fill="rgb(211,11,36)"/><text x="67.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="64" y="1124" width="5" height="15" fill="rgb(249,64,18)"/><text x="67.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="64" y="1140" width="5" height="15" fill="rgb(240,59,35)"/><text x="67.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="64" y="1156" width="5" height="15" fill="rgb(211,160,37)"/><text x="67.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="64" y="1172" width="5" height="15" fill="rgb(207,116,52)"/><text x="67.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="64" y="1188" width="5" height="15" fill="rgb(231,41,24)"/><text x="67.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.46%)</title><rect x="64" y="1204" width="5" height="15" fill="rgb(250,123,46)"/><text x="67.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="64" y="1220" width="5" height="15" fill="rgb(224,227,10)"/><text x="67.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="64" y="1236" width="5" height="15" fill="rgb(207,31,7)"/><text x="67.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="64" y="1252" width="5" height="15" fill="rgb(235,132,3)"/><text x="67.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="64" y="1268" width="5" height="15" fill="rgb(213,224,41)"/><text x="67.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="64" y="1284" width="5" height="15" fill="rgb(219,172,11)"/><text x="67.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.46%)</title><rect x="64" y="1300" width="5" height="15" fill="rgb(240,5,2)"/><text x="67.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.46%)</title><rect x="64" y="1316" width="5" height="15" fill="rgb(210,49,10)"/><text x="67.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.46%)</title><rect x="64" y="1332" width="5" height="15" fill="rgb(251,4,6)"/><text x="67.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.46%)</title><rect x="64" y="1348" width="5" height="15" fill="rgb(214,191,33)"/><text x="67.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.46%)</title><rect x="64" y="1364" width="5" height="15" fill="rgb(232,142,47)"/><text x="67.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.46%)</title><rect x="64" y="1380" width="5" height="15" fill="rgb(237,225,53)"/><text x="67.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.46%)</title><rect x="69" y="1460" width="6" height="15" fill="rgb(252,142,50)"/><text x="72.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.46%)</title><rect x="69" y="1476" width="6" height="15" fill="rgb(209,177,5)"/><text x="72.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.46%)</title><rect x="69" y="1492" width="6" height="15" fill="rgb(212,128,39)"/><text x="72.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.46%)</title><rect x="69" y="1508" width="6" height="15" fill="rgb(214,119,53)"/><text x="72.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.46%)</title><rect x="69" y="1524" width="6" height="15" fill="rgb(242,198,5)"/><text x="72.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.46%)</title><rect x="69" y="1540" width="6" height="15" fill="rgb(247,20,26)"/><text x="72.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.46%)</title><rect x="69" y="1556" width="6" height="15" fill="rgb(214,195,39)"/><text x="72.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:95) (1 samples, 0.46%)</title><rect x="69" y="1572" width="6" height="15" fill="rgb(249,103,7)"/><text x="72.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:217) (1 samples, 0.46%)</title><rect x="69" y="1588" width="6" height="15" fill="rgb(206,213,40)"/><text x="72.00" y="1598.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:128) (1 samples, 0.46%)</title><rect x="69" y="1604" width="6" height="15" fill="rgb(247,50,32)"/><text x="72.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:4) (13 samples, 5.99%)</title><rect x="10" y="52" width="70" height="15" fill="rgb(240,4,54)"/><text x="13.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 5.99%)</title><rect x="10" y="68" width="70" height="15" fill="rgb(228,226,25)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 5.99%)</title><rect x="10" y="84" width="70" height="15" fill="rgb(217,24,8)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 5.99%)</title><rect x="10" y="100" width="70" height="15" fill="rgb(206,205,37)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 5.99%)</title><rect x="10" y="116" width="70" height="15" fill="rgb(226,7,29)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 5.99%)</title><rect x="10" y="132" width="70" height="15" fill="rgb(221,81,45)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:7) (5 samples, 2.30%)</title><rect x="53" y="148" width="27" height="15" fill="rgb(208,127,15)"/><text x="56.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.30%)</title><rect x="53" y="164" width="27" height="15" fill="rgb(244,145,33)"/><text x="56.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.30%)</title><rect x="53" y="180" width="27" height="15" fill="rgb(233,211,36)"/><text x="56.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.30%)</title><rect x="53" y="196" width="27" height="15" fill="rgb(220,127,45)"/><text x="56.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.30%)</title><rect x="53" y="212" width="27" height="15" fill="rgb(222,140,37)"/><text x="56.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.30%)</title><rect x="53" y="228" width="27" height="15" fill="rgb(252,75,52)"/><text x="56.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.30%)</title><rect x="53" y="244" width="27" height="15" fill="rgb(220,78,4)"/><text x="56.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.30%)</title><rect x="53" y="260" width="27" height="15" fill="rgb(233,217,36)"/><text x="56.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.30%)</title><rect x="53" y="276" width="27" height="15" fill="rgb(224,167,46)"/><text x="56.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.30%)</title><rect x="53" y="292" width="27" height="15" fill="rgb(207,141,5)"/><text x="56.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.30%)</title><rect x="53" y="308" width="27" height="15" fill="rgb(209,23,7)"/><text x="56.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.30%)</title><rect x="53" y="324" width="27" height="15" fill="rgb(245,128,1)"/><text x="56.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.84%)</title><rect x="58" y="340" width="22" height="15" fill="rgb(220,92,20)"/><text x="61.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.84%)</title><rect x="58" y="356" width="22" height="15" fill="rgb(248,78,5)"/><text x="61.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.84%)</title><rect x="58" y="372" width="22" height="15" fill="rgb(214,193,38)"/><text x="61.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.84%)</title><rect x="58" y="388" width="22" height="15" fill="rgb(245,174,45)"/><text x="61.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.84%)</title><rect x="58" y="404" width="22" height="15" fill="rgb(236,211,21)"/><text x="61.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.84%)</title><rect x="58" y="420" width="22" height="15" fill="rgb(219,113,50)"/><text x="61.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.38%)</title><rect x="64" y="436" width="16" height="15" fill="rgb(233,160,49)"/><text x="67.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="452" width="16" height="15" fill="rgb(245,22,39)"/><text x="67.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.38%)</title><rect x="64" y="468" width="16" height="15" fill="rgb(221,188,13)"/><text x="67.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="484" width="16" height="15" fill="rgb(218,148,54)"/><text x="67.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="500" width="16" height="15" fill="rgb(217,188,12)"/><text x="67.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.38%)</title><rect x="64" y="516" width="16" height="15" fill="rgb(221,72,11)"/><text x="67.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.38%)</title><rect x="64" y="532" width="16" height="15" fill="rgb(207,61,4)"/><text x="67.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.38%)</title><rect x="64" y="548" width="16" height="15" fill="rgb(239,17,0)"/><text x="67.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="564" width="16" height="15" fill="rgb(248,6,50)"/><text x="67.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.38%)</title><rect x="64" y="580" width="16" height="15" fill="rgb(209,117,26)"/><text x="67.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="596" width="16" height="15" fill="rgb(220,26,3)"/><text x="67.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.38%)</title><rect x="64" y="612" width="16" height="15" fill="rgb(222,50,31)"/><text x="67.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.38%)</title><rect x="64" y="628" width="16" height="15" fill="rgb(218,216,38)"/><text x="67.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.38%)</title><rect x="64" y="644" width="16" height="15" fill="rgb(207,179,54)"/><text x="67.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="660" width="16" height="15" fill="rgb(207,153,19)"/><text x="67.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.38%)</title><rect x="64" y="676" width="16" height="15" fill="rgb(221,27,46)"/><text x="67.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="692" width="16" height="15" fill="rgb(245,177,48)"/><text x="67.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.38%)</title><rect x="64" y="708" width="16" height="15" fill="rgb(243,7,50)"/><text x="67.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.38%)</title><rect x="64" y="724" width="16" height="15" fill="rgb(219,6,19)"/><text x="67.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.38%)</title><rect x="64" y="740" width="16" height="15" fill="rgb(247,32,18)"/><text x="67.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="756" width="16" height="15" fill="rgb(219,207,25)"/><text x="67.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.38%)</title><rect x="64" y="772" width="16" height="15" fill="rgb(234,229,14)"/><text x="67.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="788" width="16" height="15" fill="rgb(214,23,23)"/><text x="67.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.38%)</title><rect x="64" y="804" width="16" height="15" fill="rgb(251,41,5)"/><text x="67.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.38%)</title><rect x="64" y="820" width="16" height="15" fill="rgb(224,59,30)"/><text x="67.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.38%)</title><rect x="64" y="836" width="16" height="15" fill="rgb(235,11,54)"/><text x="67.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="852" width="16" height="15" fill="rgb(250,92,3)"/><text x="67.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.38%)</title><rect x="64" y="868" width="16" height="15" fill="rgb(234,67,21)"/><text x="67.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="884" width="16" height="15" fill="rgb(207,146,44)"/><text x="67.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.38%)</title><rect x="64" y="900" width="16" height="15" fill="rgb(214,145,41)"/><text x="67.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="916" width="16" height="15" fill="rgb(241,167,16)"/><text x="67.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="932" width="16" height="15" fill="rgb(244,55,24)"/><text x="67.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.38%)</title><rect x="64" y="948" width="16" height="15" fill="rgb(248,58,43)"/><text x="67.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.38%)</title><rect x="64" y="964" width="16" height="15" fill="rgb(217,206,38)"/><text x="67.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.38%)</title><rect x="64" y="980" width="16" height="15" fill="rgb(246,202,37)"/><text x="67.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="996" width="16" height="15" fill="rgb(212,138,6)"/><text x="67.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.38%)</title><rect x="64" y="1012" width="16" height="15" fill="rgb(246,193,25)"/><text x="67.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.38%)</title><rect x="64" y="1028" width="16" height="15" fill="rgb(230,208,14)"/><text x="67.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.38%)</title><rect x="64" y="1044" width="16" height="15" fill="rgb(211,134,13)"/><text x="67.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.38%)</title><rect x="64" y="1060" width="16" height="15" fill="rgb(216,170,32)"/><text x="67.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.38%)</title><rect x="64" y="1076" width="16" height="15" fill="rgb(242,5,53)"/><text x="67.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.38%)</title><rect x="64" y="1092" width="16" height="15" fill="rgb(209,173,1)"/><text x="67.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.92%)</title><rect x="69" y="1108" width="11" height="15" fill="rgb(251,116,11)"/><text x="72.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.92%)</title><rect x="69" y="1124" width="11" height="15" fill="rgb(254,227,1)"/><text x="72.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.92%)</title><rect x="69" y="1140" width="11" height="15" fill="rgb(252,55,50)"/><text x="72.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.92%)</title><rect x="69" y="1156" width="11" height="15" fill="rgb(205,190,3)"/><text x="72.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.92%)</title><rect x="69" y="1172" width="11" height="15" fill="rgb(222,145,40)"/><text x="72.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.92%)</title><rect x="69" y="1188" width="11" height="15" fill="rgb(243,212,13)"/><text x="72.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.92%)</title><rect x="69" y="1204" width="11" height="15" fill="rgb(227,156,33)"/><text x="72.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.92%)</title><rect x="69" y="1220" width="11" height="15" fill="rgb(226,13,4)"/><text x="72.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.92%)</title><rect x="69" y="1236" width="11" height="15" fill="rgb(216,161,11)"/><text x="72.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.92%)</title><rect x="69" y="1252" width="11" height="15" fill="rgb(209,145,9)"/><text x="72.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.92%)</title><rect x="69" y="1268" width="11" height="15" fill="rgb(226,211,33)"/><text x="72.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.92%)</title><rect x="69" y="1284" width="11" height="15" fill="rgb(240,166,25)"/><text x="72.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.92%)</title><rect x="69" y="1300" width="11" height="15" fill="rgb(221,167,19)"/><text x="72.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.92%)</title><rect x="69" y="1316" width="11" height="15" fill="rgb(215,42,32)"/><text x="72.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.92%)</title><rect x="69" y="1332" width="11" height="15" fill="rgb(211,214,22)"/><text x="72.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.92%)</title><rect x="69" y="1348" width="11" height="15" fill="rgb(246,173,11)"/><text x="72.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.92%)</title><rect x="69" y="1364" width="11" height="15" fill="rgb(246,21,18)"/><text x="72.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.92%)</title><rect x="69" y="1380" width="11" height="15" fill="rgb(212,137,39)"/><text x="72.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.92%)</title><rect x="69" y="1396" width="11" height="15" fill="rgb(224,7,43)"/><text x="72.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.92%)</title><rect x="69" y="1412" width="11" height="15" fill="rgb(216,71,38)"/><text x="72.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.92%)</title><rect x="69" y="1428" width="11" height="15" fill="rgb(205,221,40)"/><text x="72.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.92%)</title><rect x="69" y="1444" width="11" height="15" fill="rgb(233,84,18)"/><text x="72.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.46%)</title><rect x="75" y="1460" width="5" height="15" fill="rgb(232,144,49)"/><text x="78.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.46%)</title><rect x="75" y="1476" width="5" height="15" fill="rgb(253,180,8)"/><text x="78.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.46%)</title><rect x="75" y="1492" width="5" height="15" fill="rgb(243,148,2)"/><text x="78.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.46%)</title><rect x="75" y="1508" width="5" height="15" fill="rgb(229,154,15)"/><text x="78.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.46%)</title><rect x="75" y="1524" width="5" height="15" fill="rgb(231,146,0)"/><text x="78.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.46%)</title><rect x="75" y="1540" width="5" height="15" fill="rgb(218,141,8)"/><text x="78.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.46%)</title><rect x="75" y="1556" width="5" height="15" fill="rgb(252,25,21)"/><text x="78.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.46%)</title><rect x="75" y="1572" width="5" height="15" fill="rgb(244,147,51)"/><text x="78.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.46%)</title><rect x="75" y="1588" width="5" height="15" fill="rgb(252,216,8)"/><text x="78.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.46%)</title><rect x="75" y="1604" width="5" height="15" fill="rgb(222,108,26)"/><text x="78.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.46%)</title><rect x="75" y="1620" width="5" height="15" fill="rgb(231,75,47)"/><text x="78.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.46%)</title><rect x="75" y="1636" width="5" height="15" fill="rgb(222,109,53)"/><text x="78.00" y="1646.50"></text></g><g><title>__init__ (jinja2/parser.py:40) (1 samples, 0.46%)</title><rect x="75" y="1652" width="5" height="15" fill="rgb(217,224,52)"/><text x="78.00" y="1662.50"></text></g><g><title>_tokenize (jinja2/environment.py:529) (1 samples, 0.46%)</title><rect x="75" y="1668" width="5" height="15" fill="rgb(240,75,6)"/><text x="78.00" y="1678.50"></text></g><g><title>get_lexer (jinja2/lexer.py:407) (1 samples, 0.46%)</title><rect x="75" y="1684" width="5" height="15" fill="rgb(241,132,9)"/><text x="78.00" y="1694.50"></text></g><g><title>__init__ (jinja2/lexer.py:533) (1 samples, 0.46%)</title><rect x="75" y="1700" width="5" height="15" fill="rgb(211,219,52)"/><text x="78.00" y="1710.50"></text></g><g><title>&lt;lambda&gt; (jinja2/lexer.py:422) (1 samples, 0.46%)</title><rect x="75" y="1716" width="5" height="15" fill="rgb(246,155,46)"/><text x="78.00" y="1726.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.46%)</title><rect x="75" y="1732" width="5" height="15" fill="rgb(236,192,14)"/><text x="78.00" y="1742.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.46%)</title><rect x="75" y="1748" width="5" height="15" fill="rgb(220,146,19)"/><text x="78.00" y="1758.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.46%)</title><rect x="75" y="1764" width="5" height="15" fill="rgb(251,184,38)"/><text x="78.00" y="1774.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.46%)</title><rect x="75" y="1780" width="5" height="15" fill="rgb(220,71,5)"/><text x="78.00" y="1790.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.46%)</title><rect x="75" y="1796" width="5" height="15" fill="rgb(250,171,9)"/><text x="78.00" y="1806.50"></text></g><g><title>_compile (sre_compile.py:211) (1 samples, 0.46%)</title><rect x="75" y="1812" width="5" height="15" fill="rgb(222,43,12)"/><text x="78.00" y="1822.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.46%)</title><rect x="80" y="164" width="6" height="15" fill="rgb(237,203,40)"/><text x="83.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:466) (1 samples, 0.46%)</title><rect x="86" y="164" width="5" height="15" fill="rgb(250,228,0)"/><text x="89.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (2 samples, 0.92%)</title><rect x="91" y="164" width="11" height="15" fill="rgb(212,3,2)"/><text x="94.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.46%)</title><rect x="102" y="164" width="5" height="15" fill="rgb(223,204,8)"/><text x="105.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.46%)</title><rect x="107" y="164" width="6" height="15" fill="rgb(207,184,12)"/><text x="110.00" y="174.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.46%)</title><rect x="107" y="180" width="6" height="15" fill="rgb(254,189,10)"/><text x="110.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.92%)</title><rect x="113" y="164" width="11" height="15" fill="rgb(220,128,19)"/><text x="116.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.92%)</title><rect x="113" y="180" width="11" height="15" fill="rgb(249,114,25)"/><text x="116.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.46%)</title><rect x="118" y="196" width="6" height="15" fill="rgb(236,119,16)"/><text x="121.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.46%)</title><rect x="124" y="164" width="5" height="15" fill="rgb(223,220,28)"/><text x="127.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.46%)</title><rect x="129" y="164" width="6" height="15" fill="rgb(246,216,5)"/><text x="132.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.46%)</title><rect x="135" y="164" width="5" height="15" fill="rgb(251,67,15)"/><text x="138.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.46%)</title><rect x="135" y="180" width="5" height="15" fill="rgb(254,111,18)"/><text x="138.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.46%)</title><rect x="140" y="164" width="5" height="15" fill="rgb(242,171,17)"/><text x="143.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 2.76%)</title><rect x="145" y="164" width="33" height="15" fill="rgb(242,70,50)"/><text x="148.00" y="174.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 2.76%)</title><rect x="145" y="180" width="33" height="15" fill="rgb(235,71,19)"/><text x="148.00" y="190.50">_a..</text></g><g><title>predict (sklearn/neighbors/_regression.py:172) (19 samples, 8.76%)</title><rect x="80" y="148" width="104" height="15" fill="rgb(245,198,3)"/><text x="83.00" y="158.50">predict (skl..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.46%)</title><rect x="178" y="164" width="6" height="15" fill="rgb(220,141,11)"/><text x="181.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.46%)</title><rect x="178" y="180" width="6" height="15" fill="rgb(246,222,22)"/><text x="181.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.46%)</title><rect x="189" y="180" width="5" height="15" fill="rgb(238,204,39)"/><text x="192.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.46%)</title><rect x="194" y="196" width="6" height="15" fill="rgb(233,201,35)"/><text x="197.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:583) (3 samples, 1.38%)</title><rect x="189" y="164" width="16" height="15" fill="rgb(246,14,6)"/><text x="192.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.92%)</title><rect x="194" y="180" width="11" height="15" fill="rgb(216,22,18)"/><text x="197.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.46%)</title><rect x="200" y="196" width="5" height="15" fill="rgb(231,143,16)"/><text x="203.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:481) (1 samples, 0.46%)</title><rect x="205" y="180" width="6" height="15" fill="rgb(207,185,36)"/><text x="208.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.46%)</title><rect x="211" y="180" width="5" height="15" fill="rgb(218,169,29)"/><text x="214.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.46%)</title><rect x="211" y="196" width="5" height="15" fill="rgb(248,151,19)"/><text x="214.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.46%)</title><rect x="211" y="212" width="5" height="15" fill="rgb(216,7,50)"/><text x="214.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.46%)</title><rect x="216" y="180" width="6" height="15" fill="rgb(227,129,10)"/><text x="219.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.46%)</title><rect x="222" y="180" width="5" height="15" fill="rgb(243,188,15)"/><text x="225.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.46%)</title><rect x="227" y="180" width="5" height="15" fill="rgb(247,181,37)"/><text x="230.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.46%)</title><rect x="227" y="196" width="5" height="15" fill="rgb(254,24,1)"/><text x="230.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.46%)</title><rect x="227" y="212" width="5" height="15" fill="rgb(228,62,21)"/><text x="230.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.46%)</title><rect x="232" y="212" width="6" height="15" fill="rgb(248,91,39)"/><text x="235.00" y="222.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:604) (7 samples, 3.23%)</title><rect x="205" y="164" width="38" height="15" fill="rgb(227,109,30)"/><text x="208.00" y="174.50">kne..</text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.92%)</title><rect x="232" y="180" width="11" height="15" fill="rgb(232,44,5)"/><text x="235.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.92%)</title><rect x="232" y="196" width="11" height="15" fill="rgb(209,196,27)"/><text x="235.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.46%)</title><rect x="238" y="212" width="5" height="15" fill="rgb(218,176,43)"/><text x="241.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (2 samples, 0.92%)</title><rect x="249" y="196" width="11" height="15" fill="rgb(215,154,17)"/><text x="252.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.46%)</title><rect x="254" y="212" width="6" height="15" fill="rgb(248,51,12)"/><text x="257.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (3 samples, 1.38%)</title><rect x="249" y="180" width="16" height="15" fill="rgb(216,185,23)"/><text x="252.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.46%)</title><rect x="260" y="196" width="5" height="15" fill="rgb(241,66,13)"/><text x="263.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:620) (5 samples, 2.30%)</title><rect x="243" y="164" width="28" height="15" fill="rgb(228,66,46)"/><text x="246.00" y="174.50">k..</text></g><g><title>effective_n_jobs (joblib/parallel.py:389) (1 samples, 0.46%)</title><rect x="265" y="180" width="6" height="15" fill="rgb(239,118,52)"/><text x="268.00" y="190.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py:517) (1 samples, 0.46%)</title><rect x="265" y="196" width="6" height="15" fill="rgb(223,58,50)"/><text x="268.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:631) (1 samples, 0.46%)</title><rect x="271" y="164" width="5" height="15" fill="rgb(242,163,9)"/><text x="274.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.46%)</title><rect x="276" y="196" width="5" height="15" fill="rgb(235,225,39)"/><text x="279.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1577) (2 samples, 0.92%)</title><rect x="276" y="180" width="11" height="15" fill="rgb(248,73,35)"/><text x="279.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.46%)</title><rect x="281" y="196" width="6" height="15" fill="rgb(230,69,46)"/><text x="284.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1579) (1 samples, 0.46%)</title><rect x="287" y="180" width="5" height="15" fill="rgb(218,58,11)"/><text x="290.00" y="190.50"></text></g><g><title>get_chunk_n_rows (sklearn/utils/__init__.py:956) (1 samples, 0.46%)</title><rect x="287" y="196" width="5" height="15" fill="rgb(239,148,27)"/><text x="290.00" y="206.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py:774) (1 samples, 0.46%)</title><rect x="292" y="196" width="6" height="15" fill="rgb(235,148,20)"/><text x="295.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1586) (2 samples, 0.92%)</title><rect x="292" y="180" width="11" height="15" fill="rgb(219,148,2)"/><text x="295.00" y="190.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py:780) (1 samples, 0.46%)</title><rect x="298" y="196" width="5" height="15" fill="rgb(207,124,24)"/><text x="301.00" y="206.50"></text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1720) (1 samples, 0.46%)</title><rect x="309" y="196" width="5" height="15" fill="rgb(213,154,44)"/><text x="312.00" y="206.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1345) (2 samples, 0.92%)</title><rect x="314" y="212" width="11" height="15" fill="rgb(249,166,9)"/><text x="317.00" y="222.50"></text></g><g><title>_return_float_dtype (sklearn/metrics/pairwise.py:42) (2 samples, 0.92%)</title><rect x="314" y="228" width="11" height="15" fill="rgb(212,187,48)"/><text x="317.00" y="238.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.46%)</title><rect x="330" y="228" width="6" height="15" fill="rgb(238,180,37)"/><text x="333.00" y="238.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1347) (3 samples, 1.38%)</title><rect x="325" y="212" width="16" height="15" fill="rgb(245,50,29)"/><text x="328.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:389) (1 samples, 0.46%)</title><rect x="336" y="228" width="5" height="15" fill="rgb(248,191,24)"/><text x="339.00" y="238.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py:529) (1 samples, 0.46%)</title><rect x="336" y="244" width="5" height="15" fill="rgb(213,207,0)"/><text x="339.00" y="254.50"></text></g><g><title>in_main_thread (joblib/_parallel_backends.py:180) (1 samples, 0.46%)</title><rect x="336" y="260" width="5" height="15" fill="rgb(246,30,18)"/><text x="339.00" y="270.50"></text></g><g><title>current_thread (threading.py:1214) (1 samples, 0.46%)</title><rect x="336" y="276" width="5" height="15" fill="rgb(235,223,33)"/><text x="339.00" y="286.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:134) (1 samples, 0.46%)</title><rect x="341" y="244" width="6" height="15" fill="rgb(226,178,10)"/><text x="344.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.92%)</title><rect x="347" y="260" width="11" height="15" fill="rgb(205,12,29)"/><text x="350.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:482) (2 samples, 0.92%)</title><rect x="347" y="276" width="11" height="15" fill="rgb(221,77,49)"/><text x="350.00" y="286.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.46%)</title><rect x="358" y="276" width="5" height="15" fill="rgb(216,162,38)"/><text x="361.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.92%)</title><rect x="358" y="260" width="10" height="15" fill="rgb(231,161,34)"/><text x="361.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.46%)</title><rect x="363" y="276" width="5" height="15" fill="rgb(233,59,53)"/><text x="366.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.46%)</title><rect x="363" y="292" width="5" height="15" fill="rgb(210,143,51)"/><text x="366.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.46%)</title><rect x="368" y="292" width="6" height="15" fill="rgb(205,149,21)"/><text x="371.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1674) (1 samples, 0.46%)</title><rect x="374" y="292" width="5" height="15" fill="rgb(215,32,42)"/><text x="377.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.38%)</title><rect x="368" y="260" width="17" height="15" fill="rgb(234,64,35)"/><text x="371.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 1.38%)</title><rect x="368" y="276" width="17" height="15" fill="rgb(229,176,18)"/><text x="371.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.46%)</title><rect x="379" y="292" width="6" height="15" fill="rgb(252,160,11)"/><text x="382.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.46%)</title><rect x="379" y="308" width="6" height="15" fill="rgb(245,37,44)"/><text x="382.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.46%)</title><rect x="379" y="324" width="6" height="15" fill="rgb(241,52,41)"/><text x="382.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.46%)</title><rect x="379" y="340" width="6" height="15" fill="rgb(250,170,22)"/><text x="382.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.46%)</title><rect x="379" y="356" width="6" height="15" fill="rgb(244,168,54)"/><text x="382.00" y="366.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.92%)</title><rect x="385" y="260" width="11" height="15" fill="rgb(246,187,46)"/><text x="388.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.92%)</title><rect x="385" y="276" width="11" height="15" fill="rgb(253,57,51)"/><text x="388.00" y="286.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:141) (10 samples, 4.61%)</title><rect x="347" y="244" width="54" height="15" fill="rgb(234,133,18)"/><text x="350.00" y="254.50">check..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.46%)</title><rect x="396" y="260" width="5" height="15" fill="rgb(222,227,33)"/><text x="399.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.46%)</title><rect x="396" y="276" width="5" height="15" fill="rgb(228,85,40)"/><text x="399.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.46%)</title><rect x="396" y="292" width="5" height="15" fill="rgb(226,110,53)"/><text x="399.00" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.46%)</title><rect x="396" y="308" width="5" height="15" fill="rgb(219,105,17)"/><text x="399.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.46%)</title><rect x="406" y="260" width="6" height="15" fill="rgb(231,11,34)"/><text x="409.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.46%)</title><rect x="412" y="260" width="5" height="15" fill="rgb(227,200,4)"/><text x="415.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.92%)</title><rect x="417" y="260" width="11" height="15" fill="rgb(221,216,16)"/><text x="420.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.92%)</title><rect x="417" y="276" width="11" height="15" fill="rgb(231,5,33)"/><text x="420.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.92%)</title><rect x="417" y="292" width="11" height="15" fill="rgb(235,65,46)"/><text x="420.00" y="302.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:543) (1 samples, 0.46%)</title><rect x="428" y="308" width="6" height="15" fill="rgb(213,151,20)"/><text x="431.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.92%)</title><rect x="428" y="260" width="11" height="15" fill="rgb(234,193,32)"/><text x="431.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.92%)</title><rect x="428" y="276" width="11" height="15" fill="rgb(232,55,35)"/><text x="431.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.92%)</title><rect x="428" y="292" width="11" height="15" fill="rgb(233,32,54)"/><text x="431.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.46%)</title><rect x="434" y="308" width="5" height="15" fill="rgb(219,176,33)"/><text x="437.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.46%)</title><rect x="439" y="260" width="6" height="15" fill="rgb(253,134,9)"/><text x="442.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.46%)</title><rect x="445" y="276" width="5" height="15" fill="rgb(218,97,18)"/><text x="448.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.92%)</title><rect x="445" y="260" width="10" height="15" fill="rgb(223,219,22)"/><text x="448.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.46%)</title><rect x="450" y="276" width="5" height="15" fill="rgb(212,24,10)"/><text x="453.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.46%)</title><rect x="455" y="276" width="6" height="15" fill="rgb(236,37,15)"/><text x="458.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 1.38%)</title><rect x="455" y="260" width="17" height="15" fill="rgb(228,72,22)"/><text x="458.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.92%)</title><rect x="461" y="276" width="11" height="15" fill="rgb(251,68,45)"/><text x="464.00" y="286.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:262) (25 samples, 11.52%)</title><rect x="341" y="228" width="136" height="15" fill="rgb(233,72,28)"/><text x="344.00" y="238.50">euclidean_distanc..</text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:144) (14 samples, 6.45%)</title><rect x="401" y="244" width="76" height="15" fill="rgb(223,149,6)"/><text x="404.00" y="254.50">check_pa..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.46%)</title><rect x="472" y="260" width="5" height="15" fill="rgb(253,190,27)"/><text x="475.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.46%)</title><rect x="472" y="276" width="5" height="15" fill="rgb(234,192,6)"/><text x="475.00" y="286.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:69) (1 samples, 0.46%)</title><rect x="477" y="244" width="6" height="15" fill="rgb(235,27,21)"/><text x="480.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (2 samples, 0.92%)</title><rect x="483" y="276" width="10" height="15" fill="rgb(217,192,52)"/><text x="486.00" y="286.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:279) (4 samples, 1.84%)</title><rect x="477" y="228" width="22" height="15" fill="rgb(253,205,31)"/><text x="480.00" y="238.50">e..</text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (3 samples, 1.38%)</title><rect x="483" y="244" width="16" height="15" fill="rgb(239,75,13)"/><text x="486.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (3 samples, 1.38%)</title><rect x="483" y="260" width="16" height="15" fill="rgb(238,181,13)"/><text x="486.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.46%)</title><rect x="493" y="276" width="6" height="15" fill="rgb(223,16,24)"/><text x="496.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (1 samples, 0.46%)</title><rect x="493" y="292" width="6" height="15" fill="rgb(228,118,48)"/><text x="496.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (1 samples, 0.46%)</title><rect x="493" y="308" width="6" height="15" fill="rgb(238,210,36)"/><text x="496.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2774) (1 samples, 0.46%)</title><rect x="493" y="324" width="6" height="15" fill="rgb(227,44,35)"/><text x="496.00" y="334.50"></text></g><g><title>PyArray_AssignZero (convert.c:542) (1 samples, 0.46%)</title><rect x="493" y="340" width="6" height="15" fill="rgb(222,125,28)"/><text x="496.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.46%)</title><rect x="493" y="356" width="6" height="15" fill="rgb(223,142,11)"/><text x="496.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.46%)</title><rect x="493" y="372" width="6" height="15" fill="rgb(243,23,41)"/><text x="496.00" y="382.50"></text></g><g><title>_aligned_cast_bool_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.46%)</title><rect x="493" y="388" width="6" height="15" fill="rgb(226,102,11)"/><text x="496.00" y="398.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.46%)</title><rect x="504" y="260" width="6" height="15" fill="rgb(219,8,46)"/><text x="507.00" y="270.50"></text></g><g><title>array_einsum (multiarraymodule.c:2689) (1 samples, 0.46%)</title><rect x="521" y="308" width="5" height="15" fill="rgb(239,12,52)"/><text x="524.00" y="318.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:295) (6 samples, 2.76%)</title><rect x="499" y="228" width="33" height="15" fill="rgb(250,162,3)"/><text x="502.00" y="238.50">eu..</text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (5 samples, 2.30%)</title><rect x="504" y="244" width="28" height="15" fill="rgb(222,61,42)"/><text x="507.00" y="254.50">r..</text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.84%)</title><rect x="510" y="260" width="22" height="15" fill="rgb(206,127,26)"/><text x="513.00" y="270.50">e..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.38%)</title><rect x="515" y="276" width="17" height="15" fill="rgb(246,9,49)"/><text x="518.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (2 samples, 0.92%)</title><rect x="521" y="292" width="11" height="15" fill="rgb(207,183,21)"/><text x="524.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (1 samples, 0.46%)</title><rect x="526" y="308" width="6" height="15" fill="rgb(222,174,4)"/><text x="529.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2768) (1 samples, 0.46%)</title><rect x="526" y="324" width="6" height="15" fill="rgb(214,117,52)"/><text x="529.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:126) (1 samples, 0.46%)</title><rect x="526" y="340" width="6" height="15" fill="rgb(232,135,13)"/><text x="529.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.46%)</title><rect x="532" y="276" width="5" height="15" fill="rgb(238,227,35)"/><text x="535.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.92%)</title><rect x="532" y="244" width="10" height="15" fill="rgb(237,16,48)"/><text x="535.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.92%)</title><rect x="532" y="260" width="10" height="15" fill="rgb(227,173,27)"/><text x="535.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.46%)</title><rect x="537" y="276" width="5" height="15" fill="rgb(243,68,30)"/><text x="540.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.46%)</title><rect x="542" y="276" width="6" height="15" fill="rgb(214,77,44)"/><text x="545.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.46%)</title><rect x="542" y="292" width="6" height="15" fill="rgb(207,123,25)"/><text x="545.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.46%)</title><rect x="542" y="308" width="6" height="15" fill="rgb(249,20,46)"/><text x="545.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.46%)</title><rect x="542" y="324" width="6" height="15" fill="rgb(224,95,45)"/><text x="545.00" y="334.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.92%)</title><rect x="542" y="244" width="11" height="15" fill="rgb(226,103,22)"/><text x="545.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.92%)</title><rect x="542" y="260" width="11" height="15" fill="rgb(208,56,15)"/><text x="545.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.46%)</title><rect x="548" y="276" width="5" height="15" fill="rgb(241,81,6)"/><text x="551.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.46%)</title><rect x="548" y="292" width="5" height="15" fill="rgb(215,206,1)"/><text x="551.00" y="302.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:303) (5 samples, 2.30%)</title><rect x="532" y="228" width="27" height="15" fill="rgb(252,185,49)"/><text x="535.00" y="238.50">e..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.46%)</title><rect x="553" y="244" width="6" height="15" fill="rgb(225,124,21)"/><text x="556.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.46%)</title><rect x="553" y="260" width="6" height="15" fill="rgb(218,175,10)"/><text x="556.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.46%)</title><rect x="553" y="276" width="6" height="15" fill="rgb(211,85,45)"/><text x="556.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.46%)</title><rect x="553" y="292" width="6" height="15" fill="rgb(225,58,7)"/><text x="556.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.46%)</title><rect x="553" y="308" width="6" height="15" fill="rgb(221,113,44)"/><text x="556.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3069) (1 samples, 0.46%)</title><rect x="553" y="324" width="6" height="15" fill="rgb(210,48,21)"/><text x="556.00" y="334.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:305) (1 samples, 0.46%)</title><rect x="559" y="228" width="5" height="15" fill="rgb(212,13,4)"/><text x="562.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.46%)</title><rect x="559" y="244" width="5" height="15" fill="rgb(230,67,26)"/><text x="562.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.46%)</title><rect x="559" y="260" width="5" height="15" fill="rgb(230,70,43)"/><text x="562.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.46%)</title><rect x="559" y="276" width="5" height="15" fill="rgb(252,24,14)"/><text x="562.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.46%)</title><rect x="559" y="292" width="5" height="15" fill="rgb(211,162,4)"/><text x="562.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.46%)</title><rect x="559" y="308" width="5" height="15" fill="rgb(209,134,24)"/><text x="562.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.46%)</title><rect x="564" y="244" width="6" height="15" fill="rgb(217,140,38)"/><text x="567.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.46%)</title><rect x="564" y="260" width="6" height="15" fill="rgb(235,98,24)"/><text x="567.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.46%)</title><rect x="564" y="276" width="6" height="15" fill="rgb(254,12,0)"/><text x="567.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.46%)</title><rect x="564" y="292" width="6" height="15" fill="rgb(223,136,13)"/><text x="567.00" y="302.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.46%)</title><rect x="564" y="308" width="6" height="15" fill="rgb(208,151,54)"/><text x="567.00" y="318.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1592) (50 samples, 23.04%)</title><rect x="303" y="180" width="272" height="15" fill="rgb(226,219,37)"/><text x="306.00" y="190.50">pairwise_distances_chunked (sklearn/..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1749) (48 samples, 22.12%)</title><rect x="314" y="196" width="261" height="15" fill="rgb(215,57,24)"/><text x="317.00" y="206.50">pairwise_distances (sklearn/metric..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1348) (43 samples, 19.82%)</title><rect x="341" y="212" width="234" height="15" fill="rgb(214,76,41)"/><text x="344.00" y="222.50">_parallel_pairwise (sklearn/met..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:306) (2 samples, 0.92%)</title><rect x="564" y="228" width="11" height="15" fill="rgb(239,112,31)"/><text x="567.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.46%)</title><rect x="570" y="244" width="5" height="15" fill="rgb(226,126,9)"/><text x="573.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.46%)</title><rect x="570" y="260" width="5" height="15" fill="rgb(206,43,3)"/><text x="573.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.46%)</title><rect x="570" y="276" width="5" height="15" fill="rgb(223,44,7)"/><text x="573.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.46%)</title><rect x="570" y="292" width="5" height="15" fill="rgb(243,222,30)"/><text x="573.00" y="302.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1868) (1 samples, 0.46%)</title><rect x="570" y="308" width="5" height="15" fill="rgb(235,109,14)"/><text x="573.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.46%)</title><rect x="575" y="212" width="5" height="15" fill="rgb(208,163,14)"/><text x="578.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.46%)</title><rect x="575" y="228" width="5" height="15" fill="rgb(222,158,7)"/><text x="578.00" y="238.50"></text></g><g><title>unpack_indices (mapping.c:225) (1 samples, 0.46%)</title><rect x="575" y="244" width="5" height="15" fill="rgb(254,4,39)"/><text x="578.00" y="254.50"></text></g><g><title>unpack_tuple (mapping.c:165) (1 samples, 0.46%)</title><rect x="575" y="260" width="5" height="15" fill="rgb(243,198,42)"/><text x="578.00" y="270.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:516) (2 samples, 0.92%)</title><rect x="575" y="196" width="11" height="15" fill="rgb(216,13,28)"/><text x="578.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.46%)</title><rect x="580" y="212" width="6" height="15" fill="rgb(208,95,24)"/><text x="583.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.46%)</title><rect x="580" y="228" width="6" height="15" fill="rgb(240,79,7)"/><text x="583.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.46%)</title><rect x="580" y="244" width="6" height="15" fill="rgb(249,104,48)"/><text x="583.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.46%)</title><rect x="580" y="260" width="6" height="15" fill="rgb(229,225,24)"/><text x="583.00" y="270.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.46%)</title><rect x="580" y="276" width="6" height="15" fill="rgb(211,155,13)"/><text x="583.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.46%)</title><rect x="597" y="260" width="5" height="15" fill="rgb(238,144,14)"/><text x="600.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1057) (1 samples, 0.46%)</title><rect x="602" y="308" width="6" height="15" fill="rgb(243,104,47)"/><text x="605.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (5 samples, 2.30%)</title><rect x="586" y="196" width="27" height="15" fill="rgb(245,139,36)"/><text x="589.00" y="206.50">_..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (4 samples, 1.84%)</title><rect x="591" y="212" width="22" height="15" fill="rgb(223,229,0)"/><text x="594.00" y="222.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.38%)</title><rect x="597" y="228" width="16" height="15" fill="rgb(227,220,7)"/><text x="600.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (3 samples, 1.38%)</title><rect x="597" y="244" width="16" height="15" fill="rgb(209,103,17)"/><text x="600.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.92%)</title><rect x="602" y="260" width="11" height="15" fill="rgb(216,63,15)"/><text x="605.00" y="270.50"></text></g><g><title>array_argpartition (methods.c:1454) (2 samples, 0.92%)</title><rect x="602" y="276" width="11" height="15" fill="rgb(214,42,11)"/><text x="605.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (2 samples, 0.92%)</title><rect x="602" y="292" width="11" height="15" fill="rgb(236,136,12)"/><text x="605.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (1 samples, 0.46%)</title><rect x="608" y="308" width="5" height="15" fill="rgb(232,108,26)"/><text x="611.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src:292) (1 samples, 0.46%)</title><rect x="608" y="324" width="5" height="15" fill="rgb(237,117,12)"/><text x="611.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.46%)</title><rect x="613" y="228" width="6" height="15" fill="rgb(248,167,50)"/><text x="616.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.46%)</title><rect x="613" y="244" width="6" height="15" fill="rgb(224,178,15)"/><text x="616.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.46%)</title><rect x="613" y="260" width="6" height="15" fill="rgb(222,166,29)"/><text x="616.00" y="270.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.46%)</title><rect x="613" y="276" width="6" height="15" fill="rgb(243,197,34)"/><text x="616.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.46%)</title><rect x="613" y="292" width="6" height="15" fill="rgb(211,225,3)"/><text x="616.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:984) (1 samples, 0.46%)</title><rect x="613" y="308" width="6" height="15" fill="rgb(237,4,8)"/><text x="616.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.46%)</title><rect x="613" y="324" width="6" height="15" fill="rgb(206,75,43)"/><text x="616.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.46%)</title><rect x="613" y="340" width="6" height="15" fill="rgb(245,193,23)"/><text x="616.00" y="350.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.46%)</title><rect x="613" y="356" width="6" height="15" fill="rgb(240,202,39)"/><text x="616.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (2 samples, 0.92%)</title><rect x="613" y="212" width="11" height="15" fill="rgb(213,96,37)"/><text x="616.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.46%)</title><rect x="619" y="228" width="5" height="15" fill="rgb(218,27,18)"/><text x="622.00" y="238.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:521) (3 samples, 1.38%)</title><rect x="613" y="196" width="16" height="15" fill="rgb(226,13,36)"/><text x="616.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.46%)</title><rect x="624" y="212" width="5" height="15" fill="rgb(237,36,37)"/><text x="627.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.46%)</title><rect x="624" y="228" width="5" height="15" fill="rgb(218,2,33)"/><text x="627.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.46%)</title><rect x="624" y="244" width="5" height="15" fill="rgb(218,201,15)"/><text x="627.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.46%)</title><rect x="624" y="260" width="5" height="15" fill="rgb(235,131,9)"/><text x="627.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.46%)</title><rect x="624" y="276" width="5" height="15" fill="rgb(206,222,49)"/><text x="627.00" y="286.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:523) (1 samples, 0.46%)</title><rect x="629" y="196" width="6" height="15" fill="rgb(212,206,19)"/><text x="632.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (13 samples, 5.99%)</title><rect x="575" y="180" width="71" height="15" fill="rgb(231,13,16)"/><text x="578.00" y="190.50">pairwise..</text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:524) (2 samples, 0.92%)</title><rect x="635" y="196" width="11" height="15" fill="rgb(245,86,28)"/><text x="638.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.46%)</title><rect x="640" y="212" width="6" height="15" fill="rgb(221,2,52)"/><text x="643.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1540) (1 samples, 0.46%)</title><rect x="640" y="228" width="6" height="15" fill="rgb(216,205,46)"/><text x="643.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="640" y="244" width="6" height="15" fill="rgb(254,60,48)"/><text x="643.00" y="254.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1411) (1 samples, 0.46%)</title><rect x="651" y="196" width="6" height="15" fill="rgb(232,132,24)"/><text x="654.00" y="206.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1415) (2 samples, 0.92%)</title><rect x="657" y="196" width="10" height="15" fill="rgb(217,50,9)"/><text x="660.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py:1415) (1 samples, 0.46%)</title><rect x="662" y="212" width="5" height="15" fill="rgb(216,1,53)"/><text x="665.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.38%)</title><rect x="667" y="228" width="17" height="15" fill="rgb(246,159,5)"/><text x="670.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.46%)</title><rect x="684" y="228" width="5" height="15" fill="rgb(254,18,34)"/><text x="687.00" y="238.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (77 samples, 35.48%)</title><rect x="276" y="164" width="419" height="15" fill="rgb(253,23,15)"/><text x="279.00" y="174.50">kneighbors (sklearn/neighbors/_base.py:642)</text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1602) (9 samples, 4.15%)</title><rect x="646" y="180" width="49" height="15" fill="rgb(226,10,37)"/><text x="649.00" y="190.50">pair..</text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1419) (5 samples, 2.30%)</title><rect x="667" y="196" width="28" height="15" fill="rgb(213,30,13)"/><text x="670.00" y="206.50">_..</text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py:1419) (5 samples, 2.30%)</title><rect x="667" y="212" width="28" height="15" fill="rgb(230,141,22)"/><text x="670.00" y="222.50">&lt;..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.46%)</title><rect x="689" y="228" width="6" height="15" fill="rgb(241,91,13)"/><text x="692.00" y="238.50"></text></g><g><title>vstack (numpy/core/shape_base.py:276) (1 samples, 0.46%)</title><rect x="700" y="212" width="6" height="15" fill="rgb(246,208,52)"/><text x="703.00" y="222.50"></text></g><g><title>array_concatenate (multiarraymodule.c:2184) (1 samples, 0.46%)</title><rect x="711" y="260" width="5" height="15" fill="rgb(223,127,47)"/><text x="714.00" y="270.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (99 samples, 45.62%)</title><rect x="184" y="148" width="538" height="15" fill="rgb(242,37,28)"/><text x="187.00" y="158.50">predict (sklearn/neighbors/_regression.py:174)</text></g><g><title>kneighbors (sklearn/neighbors/_base.py:671) (5 samples, 2.30%)</title><rect x="695" y="164" width="27" height="15" fill="rgb(241,214,41)"/><text x="698.00" y="174.50">k..</text></g><g><title>vstack (&lt;__array_function__ internals&gt;:6) (5 samples, 2.30%)</title><rect x="695" y="180" width="27" height="15" fill="rgb(214,7,3)"/><text x="698.00" y="190.50">v..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 2.30%)</title><rect x="695" y="196" width="27" height="15" fill="rgb(227,100,20)"/><text x="698.00" y="206.50">a..</text></g><g><title>vstack (numpy/core/shape_base.py:282) (3 samples, 1.38%)</title><rect x="706" y="212" width="16" height="15" fill="rgb(214,92,23)"/><text x="709.00" y="222.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:6) (3 samples, 1.38%)</title><rect x="706" y="228" width="16" height="15" fill="rgb(250,79,13)"/><text x="709.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.92%)</title><rect x="711" y="244" width="11" height="15" fill="rgb(253,217,34)"/><text x="714.00" y="254.50"></text></g><g><title>array_concatenate (multiarraymodule.c:2198) (1 samples, 0.46%)</title><rect x="716" y="260" width="6" height="15" fill="rgb(208,45,44)"/><text x="719.00" y="270.50"></text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c:671) (1 samples, 0.46%)</title><rect x="716" y="276" width="6" height="15" fill="rgb(246,120,37)"/><text x="719.00" y="286.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c:510) (1 samples, 0.46%)</title><rect x="716" y="292" width="6" height="15" fill="rgb(229,35,42)"/><text x="719.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.46%)</title><rect x="716" y="308" width="6" height="15" fill="rgb(233,72,0)"/><text x="719.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.46%)</title><rect x="716" y="324" width="6" height="15" fill="rgb(229,41,40)"/><text x="719.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.46%)</title><rect x="716" y="340" width="6" height="15" fill="rgb(233,112,31)"/><text x="719.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.46%)</title><rect x="716" y="356" width="6" height="15" fill="rgb(241,85,12)"/><text x="719.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.46%)</title><rect x="716" y="372" width="6" height="15" fill="rgb(229,205,11)"/><text x="719.00" y="382.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:180) (1 samples, 0.46%)</title><rect x="722" y="148" width="5" height="15" fill="rgb(213,65,54)"/><text x="725.00" y="158.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.46%)</title><rect x="722" y="164" width="5" height="15" fill="rgb(246,30,50)"/><text x="725.00" y="174.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.46%)</title><rect x="722" y="180" width="5" height="15" fill="rgb(217,86,13)"/><text x="725.00" y="190.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.46%)</title><rect x="733" y="164" width="5" height="15" fill="rgb(253,11,24)"/><text x="736.00" y="174.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2695) (1 samples, 0.46%)</title><rect x="733" y="180" width="5" height="15" fill="rgb(253,98,32)"/><text x="736.00" y="190.50"></text></g><g><title>_mean (numpy/core/_methods.py:145) (1 samples, 0.46%)</title><rect x="749" y="212" width="5" height="15" fill="rgb(218,73,53)"/><text x="752.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.46%)</title><rect x="754" y="228" width="6" height="15" fill="rgb(205,62,35)"/><text x="757.00" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:146) (2 samples, 0.92%)</title><rect x="754" y="212" width="11" height="15" fill="rgb(235,88,38)"/><text x="757.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.46%)</title><rect x="760" y="228" width="5" height="15" fill="rgb(244,213,30)"/><text x="763.00" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (1 samples, 0.46%)</title><rect x="765" y="212" width="6" height="15" fill="rgb(236,7,49)"/><text x="768.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.46%)</title><rect x="765" y="228" width="6" height="15" fill="rgb(226,175,21)"/><text x="768.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.46%)</title><rect x="765" y="244" width="6" height="15" fill="rgb(215,181,42)"/><text x="768.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.46%)</title><rect x="765" y="260" width="6" height="15" fill="rgb(227,228,52)"/><text x="768.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.46%)</title><rect x="765" y="276" width="6" height="15" fill="rgb(233,176,40)"/><text x="768.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.46%)</title><rect x="765" y="292" width="6" height="15" fill="rgb(234,75,50)"/><text x="768.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.46%)</title><rect x="765" y="308" width="6" height="15" fill="rgb(243,51,26)"/><text x="768.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.46%)</title><rect x="765" y="324" width="6" height="15" fill="rgb(213,180,11)"/><text x="768.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.46%)</title><rect x="765" y="340" width="6" height="15" fill="rgb(239,149,4)"/><text x="768.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.46%)</title><rect x="765" y="356" width="6" height="15" fill="rgb(229,23,23)"/><text x="768.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.46%)</title><rect x="765" y="372" width="6" height="15" fill="rgb(205,127,51)"/><text x="768.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.46%)</title><rect x="765" y="388" width="6" height="15" fill="rgb(226,118,52)"/><text x="768.00" y="398.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (129 samples, 59.45%)</title><rect x="80" y="132" width="702" height="15" fill="rgb(216,228,33)"/><text x="83.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neighbors/_regression.py:183) (10 samples, 4.61%)</title><rect x="727" y="148" width="55" height="15" fill="rgb(234,103,3)"/><text x="730.00" y="158.50">predi..</text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (8 samples, 3.69%)</title><rect x="738" y="164" width="44" height="15" fill="rgb(242,138,14)"/><text x="741.00" y="174.50">mean..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 3.69%)</title><rect x="738" y="180" width="44" height="15" fill="rgb(240,126,51)"/><text x="741.00" y="190.50">arra..</text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (8 samples, 3.69%)</title><rect x="738" y="196" width="44" height="15" fill="rgb(229,20,20)"/><text x="741.00" y="206.50">mean..</text></g><g><title>_mean (numpy/core/_methods.py:154) (2 samples, 0.92%)</title><rect x="771" y="212" width="11" height="15" fill="rgb(207,74,14)"/><text x="774.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.46%)</title><rect x="776" y="228" width="6" height="15" fill="rgb(212,81,43)"/><text x="779.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.46%)</title><rect x="776" y="244" width="6" height="15" fill="rgb(235,2,3)"/><text x="779.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.46%)</title><rect x="776" y="260" width="6" height="15" fill="rgb(249,229,46)"/><text x="779.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.46%)</title><rect x="776" y="276" width="6" height="15" fill="rgb(207,120,14)"/><text x="779.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:54) (130 samples, 59.91%)</title><rect x="80" y="52" width="707" height="15" fill="rgb(232,124,4)"/><text x="83.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdi..</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:53) (130 samples, 59.91%)</title><rect x="80" y="68" width="707" height="15" fill="rgb(245,229,9)"/><text x="83.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:37) (130 samples, 59.91%)</title><rect x="80" y="84" width="707" height="15" fill="rgb(243,59,46)"/><text x="83.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_floa..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:31) (130 samples, 59.91%)</title><rect x="80" y="100" width="707" height="15" fill="rgb(209,106,25)"/><text x="83.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (130 samples, 59.91%)</title><rect x="80" y="116" width="707" height="15" fill="rgb(241,155,21)"/><text x="83.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.46%)</title><rect x="782" y="132" width="5" height="15" fill="rgb(247,112,34)"/><text x="785.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.46%)</title><rect x="787" y="148" width="6" height="15" fill="rgb(224,172,13)"/><text x="790.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.92%)</title><rect x="803" y="180" width="11" height="15" fill="rgb(214,99,34)"/><text x="806.00" y="190.50"></text></g><g><title>0x7f252220f1ef (libc-2.29.so) (1 samples, 0.46%)</title><rect x="809" y="196" width="5" height="15" fill="rgb(220,141,29)"/><text x="812.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.46%)</title><rect x="831" y="212" width="5" height="15" fill="rgb(246,142,41)"/><text x="834.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.46%)</title><rect x="831" y="228" width="5" height="15" fill="rgb(222,216,20)"/><text x="834.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.46%)</title><rect x="831" y="244" width="5" height="15" fill="rgb(247,151,9)"/><text x="834.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.46%)</title><rect x="831" y="260" width="5" height="15" fill="rgb(214,222,2)"/><text x="834.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.46%)</title><rect x="836" y="260" width="5" height="15" fill="rgb(251,163,23)"/><text x="839.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.46%)</title><rect x="836" y="276" width="5" height="15" fill="rgb(241,33,18)"/><text x="839.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.46%)</title><rect x="841" y="260" width="6" height="15" fill="rgb(224,179,41)"/><text x="844.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.46%)</title><rect x="841" y="276" width="6" height="15" fill="rgb(247,107,50)"/><text x="844.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.46%)</title><rect x="841" y="292" width="6" height="15" fill="rgb(235,80,25)"/><text x="844.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (3 samples, 1.38%)</title><rect x="836" y="228" width="16" height="15" fill="rgb(235,203,50)"/><text x="839.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (3 samples, 1.38%)</title><rect x="836" y="244" width="16" height="15" fill="rgb(253,157,41)"/><text x="839.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.46%)</title><rect x="847" y="260" width="5" height="15" fill="rgb(205,142,20)"/><text x="850.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.46%)</title><rect x="847" y="276" width="5" height="15" fill="rgb(210,220,44)"/><text x="850.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.46%)</title><rect x="847" y="292" width="5" height="15" fill="rgb(248,134,5)"/><text x="850.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.46%)</title><rect x="852" y="244" width="6" height="15" fill="rgb(230,22,52)"/><text x="855.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.46%)</title><rect x="852" y="260" width="6" height="15" fill="rgb(233,209,40)"/><text x="855.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (5 samples, 2.30%)</title><rect x="836" y="212" width="27" height="15" fill="rgb(229,70,17)"/><text x="839.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.92%)</title><rect x="852" y="228" width="11" height="15" fill="rgb(226,64,9)"/><text x="855.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.46%)</title><rect x="858" y="244" width="5" height="15" fill="rgb(224,73,51)"/><text x="861.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:213) (1 samples, 0.46%)</title><rect x="858" y="260" width="5" height="15" fill="rgb(217,54,32)"/><text x="861.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.46%)</title><rect x="863" y="212" width="6" height="15" fill="rgb(225,16,29)"/><text x="866.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.46%)</title><rect x="869" y="212" width="5" height="15" fill="rgb(246,140,53)"/><text x="872.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.46%)</title><rect x="869" y="228" width="5" height="15" fill="rgb(250,90,36)"/><text x="872.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.46%)</title><rect x="869" y="244" width="5" height="15" fill="rgb(226,68,39)"/><text x="872.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:378) (1 samples, 0.46%)</title><rect x="869" y="260" width="5" height="15" fill="rgb(221,139,30)"/><text x="872.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py:18) (1 samples, 0.46%)</title><rect x="874" y="212" width="6" height="15" fill="rgb(245,16,6)"/><text x="877.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1724) (1 samples, 0.46%)</title><rect x="874" y="228" width="6" height="15" fill="rgb(206,227,16)"/><text x="877.00" y="238.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:73) (1 samples, 0.46%)</title><rect x="880" y="228" width="5" height="15" fill="rgb(206,25,14)"/><text x="883.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.46%)</title><rect x="880" y="244" width="5" height="15" fill="rgb(213,24,24)"/><text x="883.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:824) (1 samples, 0.46%)</title><rect x="880" y="260" width="5" height="15" fill="rgb(225,178,30)"/><text x="883.00" y="270.50"></text></g><g><title>multi_DECREF (mapping.c:149) (1 samples, 0.46%)</title><rect x="880" y="276" width="5" height="15" fill="rgb(217,212,9)"/><text x="883.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:26) (1 samples, 0.46%)</title><rect x="885" y="244" width="5" height="15" fill="rgb(244,153,25)"/><text x="888.00" y="254.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.46%)</title><rect x="885" y="260" width="5" height="15" fill="rgb(226,55,40)"/><text x="888.00" y="270.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.46%)</title><rect x="885" y="276" width="5" height="15" fill="rgb(242,191,2)"/><text x="888.00" y="286.50"></text></g><g><title>_calc_length (ctors.c:3285) (1 samples, 0.46%)</title><rect x="885" y="292" width="5" height="15" fill="rgb(253,131,31)"/><text x="888.00" y="302.50"></text></g><g><title>array_argpartition (methods.c:1414) (1 samples, 0.46%)</title><rect x="896" y="324" width="5" height="15" fill="rgb(245,213,40)"/><text x="899.00" y="334.50"></text></g><g><title>PyArray_SelectkindConverter (conversion_utils.c:469) (1 samples, 0.46%)</title><rect x="896" y="340" width="5" height="15" fill="rgb(216,195,23)"/><text x="899.00" y="350.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (2 samples, 0.92%)</title><rect x="896" y="260" width="11" height="15" fill="rgb(248,177,27)"/><text x="899.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.92%)</title><rect x="896" y="276" width="11" height="15" fill="rgb(212,130,49)"/><text x="899.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (2 samples, 0.92%)</title><rect x="896" y="292" width="11" height="15" fill="rgb(249,98,31)"/><text x="899.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.92%)</title><rect x="896" y="308" width="11" height="15" fill="rgb(212,1,32)"/><text x="899.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (1 samples, 0.46%)</title><rect x="901" y="324" width="6" height="15" fill="rgb(216,34,44)"/><text x="904.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (1 samples, 0.46%)</title><rect x="901" y="340" width="6" height="15" fill="rgb(249,85,40)"/><text x="904.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:998) (1 samples, 0.46%)</title><rect x="901" y="356" width="6" height="15" fill="rgb(207,97,53)"/><text x="904.00" y="366.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c:288) (1 samples, 0.46%)</title><rect x="901" y="372" width="6" height="15" fill="rgb(253,26,52)"/><text x="904.00" y="382.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (1 samples, 0.46%)</title><rect x="901" y="388" width="6" height="15" fill="rgb(254,194,43)"/><text x="904.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.46%)</title><rect x="901" y="404" width="6" height="15" fill="rgb(245,89,17)"/><text x="904.00" y="414.50"></text></g><g><title>long_subtract (scalarmath.c.src:825) (1 samples, 0.46%)</title><rect x="907" y="260" width="5" height="15" fill="rgb(226,94,17)"/><text x="910.00" y="270.50"></text></g><g><title>binop_should_defer (binop_override.h:97) (1 samples, 0.46%)</title><rect x="907" y="276" width="5" height="15" fill="rgb(232,198,31)"/><text x="910.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:28) (5 samples, 2.30%)</title><rect x="890" y="244" width="28" height="15" fill="rgb(248,3,34)"/><text x="893.00" y="254.50">t..</text></g><g><title>long_subtract (scalarmath.c.src:859) (1 samples, 0.46%)</title><rect x="912" y="260" width="6" height="15" fill="rgb(224,52,42)"/><text x="915.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.46%)</title><rect x="912" y="276" width="6" height="15" fill="rgb(235,52,10)"/><text x="915.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.46%)</title><rect x="912" y="292" width="6" height="15" fill="rgb(227,73,35)"/><text x="915.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.46%)</title><rect x="912" y="308" width="6" height="15" fill="rgb(205,42,26)"/><text x="915.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.46%)</title><rect x="918" y="260" width="5" height="15" fill="rgb(246,107,20)"/><text x="921.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:821) (1 samples, 0.46%)</title><rect x="918" y="276" width="5" height="15" fill="rgb(214,3,5)"/><text x="921.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2925) (1 samples, 0.46%)</title><rect x="923" y="276" width="5" height="15" fill="rgb(215,226,1)"/><text x="926.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.46%)</title><rect x="928" y="308" width="6" height="15" fill="rgb(250,58,7)"/><text x="931.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.46%)</title><rect x="928" y="324" width="6" height="15" fill="rgb(207,212,31)"/><text x="931.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2604) (1 samples, 0.46%)</title><rect x="928" y="340" width="6" height="15" fill="rgb(251,218,12)"/><text x="931.00" y="350.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.92%)</title><rect x="928" y="276" width="11" height="15" fill="rgb(232,229,16)"/><text x="931.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.92%)</title><rect x="928" y="292" width="11" height="15" fill="rgb(222,137,6)"/><text x="931.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.46%)</title><rect x="934" y="308" width="5" height="15" fill="rgb(241,110,18)"/><text x="937.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.46%)</title><rect x="934" y="324" width="5" height="15" fill="rgb(253,196,23)"/><text x="937.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (4 samples, 1.84%)</title><rect x="923" y="260" width="22" height="15" fill="rgb(238,173,23)"/><text x="926.00" y="270.50">a..</text></g><g><title>PyArray_MapIterNew (mapping.c:2975) (1 samples, 0.46%)</title><rect x="939" y="276" width="6" height="15" fill="rgb(221,102,26)"/><text x="942.00" y="286.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.46%)</title><rect x="939" y="292" width="6" height="15" fill="rgb(206,203,51)"/><text x="942.00" y="302.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (12 samples, 5.53%)</title><rect x="885" y="228" width="65" height="15" fill="rgb(223,49,27)"/><text x="888.00" y="238.50">_common..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:32) (6 samples, 2.76%)</title><rect x="918" y="244" width="32" height="15" fill="rgb(207,10,53)"/><text x="921.00" y="254.50">to..</text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.46%)</title><rect x="945" y="260" width="5" height="15" fill="rgb(231,116,4)"/><text x="948.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2493) (1 samples, 0.46%)</title><rect x="945" y="276" width="5" height="15" fill="rgb(231,205,43)"/><text x="948.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (23 samples, 10.60%)</title><rect x="831" y="196" width="125" height="15" fill="rgb(248,218,18)"/><text x="834.00" y="206.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (14 samples, 6.45%)</title><rect x="880" y="212" width="76" height="15" fill="rgb(239,30,40)"/><text x="883.00" y="222.50">_run (ml..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.46%)</title><rect x="950" y="228" width="6" height="15" fill="rgb(247,221,39)"/><text x="953.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.46%)</title><rect x="950" y="244" width="6" height="15" fill="rgb(231,122,0)"/><text x="953.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.46%)</title><rect x="950" y="260" width="6" height="15" fill="rgb(206,170,33)"/><text x="953.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.46%)</title><rect x="950" y="276" width="6" height="15" fill="rgb(212,128,45)"/><text x="953.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:61) (1 samples, 0.46%)</title><rect x="950" y="292" width="6" height="15" fill="rgb(231,215,34)"/><text x="953.00" y="302.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src:179) (1 samples, 0.46%)</title><rect x="956" y="228" width="5" height="15" fill="rgb(239,128,29)"/><text x="959.00" y="238.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.46%)</title><rect x="956" y="244" width="5" height="15" fill="rgb(250,195,0)"/><text x="959.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.46%)</title><rect x="956" y="260" width="5" height="15" fill="rgb(237,72,31)"/><text x="959.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.46%)</title><rect x="956" y="276" width="5" height="15" fill="rgb(207,118,8)"/><text x="959.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.46%)</title><rect x="956" y="292" width="5" height="15" fill="rgb(236,95,38)"/><text x="959.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.46%)</title><rect x="956" y="308" width="5" height="15" fill="rgb(250,168,22)"/><text x="959.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.46%)</title><rect x="956" y="324" width="5" height="15" fill="rgb(247,102,52)"/><text x="959.00" y="334.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src:188) (1 samples, 0.46%)</title><rect x="961" y="228" width="6" height="15" fill="rgb(248,162,19)"/><text x="964.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.46%)</title><rect x="961" y="244" width="6" height="15" fill="rgb(232,201,36)"/><text x="964.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.46%)</title><rect x="961" y="260" width="6" height="15" fill="rgb(210,124,49)"/><text x="964.00" y="270.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.46%)</title><rect x="961" y="276" width="6" height="15" fill="rgb(241,54,30)"/><text x="964.00" y="286.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.46%)</title><rect x="961" y="292" width="6" height="15" fill="rgb(228,143,20)"/><text x="964.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.46%)</title><rect x="961" y="308" width="6" height="15" fill="rgb(247,159,16)"/><text x="964.00" y="318.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.46%)</title><rect x="961" y="324" width="6" height="15" fill="rgb(209,65,37)"/><text x="964.00" y="334.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.46%)</title><rect x="961" y="340" width="6" height="15" fill="rgb(244,56,54)"/><text x="964.00" y="350.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:79) (2 samples, 0.92%)</title><rect x="972" y="276" width="11" height="15" fill="rgb(248,2,52)"/><text x="975.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.46%)</title><rect x="983" y="308" width="5" height="15" fill="rgb(239,40,23)"/><text x="986.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.92%)</title><rect x="988" y="324" width="11" height="15" fill="rgb(210,222,22)"/><text x="991.00" y="334.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.92%)</title><rect x="988" y="340" width="11" height="15" fill="rgb(212,10,39)"/><text x="991.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.92%)</title><rect x="988" y="356" width="11" height="15" fill="rgb(207,184,16)"/><text x="991.00" y="366.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2175) (1 samples, 0.46%)</title><rect x="994" y="372" width="5" height="15" fill="rgb(243,221,26)"/><text x="997.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:24) (9 samples, 4.15%)</title><rect x="956" y="212" width="49" height="15" fill="rgb(245,42,6)"/><text x="959.00" y="222.50">_run..</text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (7 samples, 3.23%)</title><rect x="967" y="228" width="38" height="15" fill="rgb(239,75,29)"/><text x="970.00" y="238.50">pro..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 3.23%)</title><rect x="967" y="244" width="38" height="15" fill="rgb(212,49,47)"/><text x="970.00" y="254.50">arr..</text></g><g><title>prod (numpy/core/fromnumeric.py:2911) (7 samples, 3.23%)</title><rect x="967" y="260" width="38" height="15" fill="rgb(212,155,44)"/><text x="970.00" y="270.50">pro..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 1.84%)</title><rect x="983" y="276" width="22" height="15" fill="rgb(215,98,1)"/><text x="986.00" y="286.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 1.84%)</title><rect x="983" y="292" width="22" height="15" fill="rgb(215,172,51)"/><text x="986.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.38%)</title><rect x="988" y="308" width="17" height="15" fill="rgb(236,157,2)"/><text x="991.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.46%)</title><rect x="999" y="324" width="6" height="15" fill="rgb(233,223,9)"/><text x="1002.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.46%)</title><rect x="999" y="340" width="6" height="15" fill="rgb(242,117,19)"/><text x="1002.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.46%)</title><rect x="999" y="356" width="6" height="15" fill="rgb(233,156,14)"/><text x="1002.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3069) (1 samples, 0.46%)</title><rect x="999" y="372" width="6" height="15" fill="rgb(231,148,50)"/><text x="1002.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (10 samples, 4.61%)</title><rect x="956" y="196" width="54" height="15" fill="rgb(243,90,34)"/><text x="959.00" y="206.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:25) (1 samples, 0.46%)</title><rect x="1005" y="212" width="5" height="15" fill="rgb(233,131,47)"/><text x="1008.00" y="222.50"></text></g><g><title>_mean (numpy/core/_methods.py:135) (1 samples, 0.46%)</title><rect x="1010" y="292" width="5" height="15" fill="rgb(228,115,14)"/><text x="1013.00" y="302.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.46%)</title><rect x="1010" y="308" width="5" height="15" fill="rgb(229,104,46)"/><text x="1013.00" y="318.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.46%)</title><rect x="1010" y="324" width="5" height="15" fill="rgb(213,114,13)"/><text x="1013.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.46%)</title><rect x="1015" y="308" width="6" height="15" fill="rgb(223,4,15)"/><text x="1018.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.46%)</title><rect x="1015" y="324" width="6" height="15" fill="rgb(234,61,33)"/><text x="1018.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.46%)</title><rect x="1015" y="340" width="6" height="15" fill="rgb(245,196,36)"/><text x="1018.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.46%)</title><rect x="1015" y="356" width="6" height="15" fill="rgb(228,131,47)"/><text x="1018.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1967) (1 samples, 0.46%)</title><rect x="1021" y="340" width="5" height="15" fill="rgb(215,219,53)"/><text x="1024.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.92%)</title><rect x="1021" y="324" width="11" height="15" fill="rgb(233,88,13)"/><text x="1024.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.46%)</title><rect x="1026" y="340" width="6" height="15" fill="rgb(207,216,33)"/><text x="1029.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.46%)</title><rect x="1032" y="372" width="5" height="15" fill="rgb(232,228,11)"/><text x="1035.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.46%)</title><rect x="1032" y="388" width="5" height="15" fill="rgb(253,176,51)"/><text x="1035.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.46%)</title><rect x="1032" y="404" width="5" height="15" fill="rgb(220,205,8)"/><text x="1035.00" y="414.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.46%)</title><rect x="1032" y="420" width="5" height="15" fill="rgb(225,13,52)"/><text x="1035.00" y="430.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.46%)</title><rect x="1032" y="436" width="5" height="15" fill="rgb(224,18,4)"/><text x="1035.00" y="446.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.46%)</title><rect x="1032" y="452" width="5" height="15" fill="rgb(228,186,39)"/><text x="1035.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (6 samples, 2.76%)</title><rect x="1010" y="196" width="33" height="15" fill="rgb(238,198,21)"/><text x="1013.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (6 samples, 2.76%)</title><rect x="1010" y="212" width="33" height="15" fill="rgb(215,8,35)"/><text x="1013.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py:29) (6 samples, 2.76%)</title><rect x="1010" y="228" width="33" height="15" fill="rgb(243,36,41)"/><text x="1013.00" y="238.50">_r..</text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (6 samples, 2.76%)</title><rect x="1010" y="244" width="33" height="15" fill="rgb(229,18,16)"/><text x="1013.00" y="254.50">me..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.76%)</title><rect x="1010" y="260" width="33" height="15" fill="rgb(227,48,48)"/><text x="1013.00" y="270.50">ar..</text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (6 samples, 2.76%)</title><rect x="1010" y="276" width="33" height="15" fill="rgb(216,54,38)"/><text x="1013.00" y="286.50">me..</text></g><g><title>_mean (numpy/core/_methods.py:154) (5 samples, 2.30%)</title><rect x="1015" y="292" width="28" height="15" fill="rgb(207,172,14)"/><text x="1018.00" y="302.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.84%)</title><rect x="1021" y="308" width="22" height="15" fill="rgb(242,7,51)"/><text x="1024.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.92%)</title><rect x="1032" y="324" width="11" height="15" fill="rgb(221,7,14)"/><text x="1035.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.92%)</title><rect x="1032" y="340" width="11" height="15" fill="rgb(231,179,23)"/><text x="1035.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.92%)</title><rect x="1032" y="356" width="11" height="15" fill="rgb(216,11,52)"/><text x="1035.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.46%)</title><rect x="1037" y="372" width="6" height="15" fill="rgb(209,128,45)"/><text x="1040.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.46%)</title><rect x="1037" y="388" width="6" height="15" fill="rgb(252,114,31)"/><text x="1040.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:23) (1 samples, 0.46%)</title><rect x="1043" y="228" width="5" height="15" fill="rgb(250,101,49)"/><text x="1046.00" y="238.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2708) (1 samples, 0.46%)</title><rect x="1054" y="244" width="5" height="15" fill="rgb(245,122,52)"/><text x="1057.00" y="254.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2756) (1 samples, 0.46%)</title><rect x="1059" y="244" width="5" height="15" fill="rgb(216,131,16)"/><text x="1062.00" y="254.50"></text></g><g><title>callable (scipy/_lib/six.py:131) (1 samples, 0.46%)</title><rect x="1059" y="260" width="5" height="15" fill="rgb(245,41,33)"/><text x="1062.00" y="270.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:244) (1 samples, 0.46%)</title><rect x="1064" y="260" width="6" height="15" fill="rgb(250,188,50)"/><text x="1067.00" y="270.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:248) (2 samples, 0.92%)</title><rect x="1070" y="260" width="11" height="15" fill="rgb(223,167,32)"/><text x="1073.00" y="270.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2776) (5 samples, 2.30%)</title><rect x="1064" y="244" width="28" height="15" fill="rgb(249,210,6)"/><text x="1067.00" y="254.50">c..</text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:250) (2 samples, 0.92%)</title><rect x="1081" y="260" width="11" height="15" fill="rgb(216,70,33)"/><text x="1084.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (2 samples, 0.92%)</title><rect x="1081" y="276" width="11" height="15" fill="rgb(246,75,19)"/><text x="1084.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (2 samples, 0.92%)</title><rect x="1081" y="292" width="11" height="15" fill="rgb(217,65,35)"/><text x="1084.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.92%)</title><rect x="1081" y="308" width="11" height="15" fill="rgb(228,55,51)"/><text x="1084.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.46%)</title><rect x="1086" y="324" width="6" height="15" fill="rgb(252,60,25)"/><text x="1089.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (1 samples, 0.46%)</title><rect x="1086" y="340" width="6" height="15" fill="rgb(208,195,40)"/><text x="1089.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1694) (1 samples, 0.46%)</title><rect x="1086" y="356" width="6" height="15" fill="rgb(230,191,29)"/><text x="1089.00" y="366.50"></text></g><g><title>0x7f25222be8fd (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1086" y="372" width="6" height="15" fill="rgb(239,16,39)"/><text x="1089.00" y="382.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2779) (1 samples, 0.46%)</title><rect x="1092" y="244" width="5" height="15" fill="rgb(249,81,33)"/><text x="1095.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (53 samples, 24.42%)</title><rect x="814" y="180" width="288" height="15" fill="rgb(216,66,26)"/><text x="817.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (11 samples, 5.07%)</title><rect x="1043" y="196" width="59" height="15" fill="rgb(222,142,48)"/><text x="1046.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (11 samples, 5.07%)</title><rect x="1043" y="212" width="59" height="15" fill="rgb(246,186,38)"/><text x="1046.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:27) (10 samples, 4.61%)</title><rect x="1048" y="228" width="54" height="15" fill="rgb(218,59,33)"/><text x="1051.00" y="238.50">_run ..</text></g><g><title>cdist (scipy/spatial/distance.py:2780) (1 samples, 0.46%)</title><rect x="1097" y="244" width="5" height="15" fill="rgb(237,202,42)"/><text x="1100.00" y="254.50"></text></g><g><title>0x7f24ff4149f9 (?) (1 samples, 0.46%)</title><rect x="1097" y="260" width="5" height="15" fill="rgb(242,5,8)"/><text x="1100.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.46%)</title><rect x="1102" y="180" width="6" height="15" fill="rgb(230,87,12)"/><text x="1105.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.46%)</title><rect x="1108" y="180" width="5" height="15" fill="rgb(252,52,47)"/><text x="1111.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.92%)</title><rect x="1113" y="180" width="11" height="15" fill="rgb(252,122,10)"/><text x="1116.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:61) (63 samples, 29.03%)</title><rect x="787" y="52" width="343" height="15" fill="rgb(210,81,3)"/><text x="790.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3..</text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:60) (63 samples, 29.03%)</title><rect x="787" y="68" width="343" height="15" fill="rgb(216,158,5)"/><text x="790.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_defaul..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:37) (63 samples, 29.03%)</title><rect x="787" y="84" width="343" height="15" fill="rgb(206,126,26)"/><text x="790.00" y="94.50">setup_profile (bench_KNeighborsRegressor_defau..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:31) (63 samples, 29.03%)</title><rect x="787" y="100" width="343" height="15" fill="rgb(236,165,35)"/><text x="790.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (63 samples, 29.03%)</title><rect x="787" y="116" width="343" height="15" fill="rgb(206,38,28)"/><text x="790.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (63 samples, 29.03%)</title><rect x="787" y="132" width="343" height="15" fill="rgb(212,49,48)"/><text x="790.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (62 samples, 28.57%)</title><rect x="793" y="148" width="337" height="15" fill="rgb(220,19,30)"/><text x="796.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (62 samples, 28.57%)</title><rect x="793" y="164" width="337" height="15" fill="rgb(211,103,3)"/><text x="796.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.46%)</title><rect x="1124" y="180" width="6" height="15" fill="rgb(235,107,18)"/><text x="1127.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.46%)</title><rect x="1130" y="196" width="5" height="15" fill="rgb(250,158,9)"/><text x="1133.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.46%)</title><rect x="1130" y="212" width="5" height="15" fill="rgb(239,202,2)"/><text x="1133.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="228" width="5" height="15" fill="rgb(251,131,9)"/><text x="1133.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="244" width="5" height="15" fill="rgb(218,144,19)"/><text x="1133.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1130" y="260" width="5" height="15" fill="rgb(207,188,12)"/><text x="1133.00" y="270.50"></text></g><g><title>0x7f24e2221ff9 (?) (1 samples, 0.46%)</title><rect x="1135" y="212" width="6" height="15" fill="rgb(205,192,37)"/><text x="1138.00" y="222.50"></text></g><g><title>0x7f24e221cef6 (?) (1 samples, 0.46%)</title><rect x="1135" y="228" width="6" height="15" fill="rgb(252,82,17)"/><text x="1138.00" y="238.50"></text></g><g><title>0x7f24e2211d49 (?) (1 samples, 0.46%)</title><rect x="1135" y="244" width="6" height="15" fill="rgb(250,69,45)"/><text x="1138.00" y="254.50"></text></g><g><title>0x7f24e221fc1a (?) (1 samples, 0.46%)</title><rect x="1135" y="260" width="6" height="15" fill="rgb(254,158,33)"/><text x="1138.00" y="270.50"></text></g><g><title>0x7f24e2644e0e (?) (1 samples, 0.46%)</title><rect x="1135" y="276" width="6" height="15" fill="rgb(206,18,30)"/><text x="1138.00" y="286.50"></text></g><g><title>0x7f24e2687f6e (?) (1 samples, 0.46%)</title><rect x="1135" y="292" width="6" height="15" fill="rgb(211,115,4)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7f24e263bd3d (?) (1 samples, 0.46%)</title><rect x="1135" y="308" width="6" height="15" fill="rgb(245,58,42)"/><text x="1138.00" y="318.50"></text></g><g><title>0x7f24e263b860 (?) (1 samples, 0.46%)</title><rect x="1135" y="324" width="6" height="15" fill="rgb(234,168,28)"/><text x="1138.00" y="334.50"></text></g><g><title>0x7f24e263b734 (?) (1 samples, 0.46%)</title><rect x="1135" y="340" width="6" height="15" fill="rgb(214,30,40)"/><text x="1138.00" y="350.50"></text></g><g><title>0x7f24e2638c9d (?) (1 samples, 0.46%)</title><rect x="1135" y="356" width="6" height="15" fill="rgb(240,131,19)"/><text x="1138.00" y="366.50"></text></g><g><title>0x7f24e26370f8 (?) (1 samples, 0.46%)</title><rect x="1135" y="372" width="6" height="15" fill="rgb(245,151,2)"/><text x="1138.00" y="382.50"></text></g><g><title>0x7f25221ee991 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1141" y="244" width="5" height="15" fill="rgb(240,191,33)"/><text x="1144.00" y="254.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.92%)</title><rect x="1146" y="340" width="11" height="15" fill="rgb(252,95,7)"/><text x="1149.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1151" y="356" width="6" height="15" fill="rgb(230,127,49)"/><text x="1154.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1151" y="372" width="6" height="15" fill="rgb(225,52,47)"/><text x="1154.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1151" y="388" width="6" height="15" fill="rgb(234,182,42)"/><text x="1154.00" y="398.50"></text></g><g><title>onnxruntime::Flatten::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1157" y="340" width="5" height="15" fill="rgb(242,118,23)"/><text x="1160.00" y="350.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1162" y="340" width="6" height="15" fill="rgb(226,90,2)"/><text x="1165.00" y="350.50"></text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1162" y="356" width="6" height="15" fill="rgb(242,124,23)"/><text x="1165.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1162" y="372" width="6" height="15" fill="rgb(225,141,30)"/><text x="1165.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="1146" y="260" width="27" height="15" fill="rgb(217,164,2)"/><text x="1149.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="1146" y="276" width="27" height="15" fill="rgb(215,183,50)"/><text x="1149.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="1146" y="292" width="27" height="15" fill="rgb(247,197,11)"/><text x="1149.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="1146" y="308" width="27" height="15" fill="rgb(225,11,10)"/><text x="1149.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="1146" y="324" width="27" height="15" fill="rgb(219,208,52)"/><text x="1149.00" y="334.50">o..</text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1168" y="340" width="5" height="15" fill="rgb(225,25,44)"/><text x="1171.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::Euclidean&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1168" y="356" width="5" height="15" fill="rgb(218,57,38)"/><text x="1171.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1168" y="372" width="5" height="15" fill="rgb(235,56,42)"/><text x="1171.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1168" y="388" width="5" height="15" fill="rgb(221,4,2)"/><text x="1171.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), onnxruntime::contrib::CDistOneBlock&lt;float, onnxruntime::Euclidean&lt;float&gt; &gt; &gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1168" y="404" width="5" height="15" fill="rgb(240,145,45)"/><text x="1171.00" y="414.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (9 samples, 4.15%)</title><rect x="1130" y="164" width="49" height="15" fill="rgb(230,7,29)"/><text x="1133.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (9 samples, 4.15%)</title><rect x="1130" y="180" width="49" height="15" fill="rgb(228,42,9)"/><text x="1133.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py:136) (8 samples, 3.69%)</title><rect x="1135" y="196" width="44" height="15" fill="rgb(206,102,23)"/><text x="1138.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.23%)</title><rect x="1141" y="212" width="38" height="15" fill="rgb(251,13,25)"/><text x="1144.00" y="222.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.23%)</title><rect x="1141" y="228" width="38" height="15" fill="rgb(215,174,0)"/><text x="1144.00" y="238.50">voi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.76%)</title><rect x="1146" y="244" width="33" height="15" fill="rgb(249,132,19)"/><text x="1149.00" y="254.50">on..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1173" y="260" width="6" height="15" fill="rgb(231,114,38)"/><text x="1176.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1173" y="276" width="6" height="15" fill="rgb(221,35,40)"/><text x="1176.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="1173" y="292" width="6" height="15" fill="rgb(206,6,31)"/><text x="1176.00" y="302.50"></text></g><g><title>all (217 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,201,33)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:68) (11 samples, 5.07%)</title><rect x="1130" y="52" width="60" height="15" fill="rgb(232,118,31)"/><text x="1133.00" y="62.50">&lt;modul..</text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:67) (11 samples, 5.07%)</title><rect x="1130" y="68" width="60" height="15" fill="rgb(220,8,41)"/><text x="1133.00" y="78.50">profil..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:37) (11 samples, 5.07%)</title><rect x="1130" y="84" width="60" height="15" fill="rgb(236,79,28)"/><text x="1133.00" y="94.50">setup_..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py:31) (11 samples, 5.07%)</title><rect x="1130" y="100" width="60" height="15" fill="rgb(240,70,46)"/><text x="1133.00" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (11 samples, 5.07%)</title><rect x="1130" y="116" width="60" height="15" fill="rgb(229,96,44)"/><text x="1133.00" y="126.50">time_p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (11 samples, 5.07%)</title><rect x="1130" y="132" width="60" height="15" fill="rgb(245,40,37)"/><text x="1133.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (11 samples, 5.07%)</title><rect x="1130" y="148" width="60" height="15" fill="rgb(252,60,7)"/><text x="1133.00" y="158.50">run (m..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.92%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(228,204,11)"/><text x="1182.00" y="174.50"></text></g></g></svg>