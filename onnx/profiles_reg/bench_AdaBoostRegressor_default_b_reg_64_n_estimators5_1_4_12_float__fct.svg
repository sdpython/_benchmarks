<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(206,151,10)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(241,156,44)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(230,215,15)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="980" width="7" height="15" fill="rgb(229,222,40)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="996" width="7" height="15" fill="rgb(215,160,45)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="10" y="1012" width="7" height="15" fill="rgb(235,116,33)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.67%)</title><rect x="10" y="1028" width="7" height="15" fill="rgb(216,0,53)"/><text x="13.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="868" width="11" height="15" fill="rgb(232,98,25)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="884" width="11" height="15" fill="rgb(254,93,6)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="900" width="11" height="15" fill="rgb(205,129,47)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="916" width="11" height="15" fill="rgb(230,202,13)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.33%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(221,222,44)"/><text x="20.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.33%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(245,222,37)"/><text x="20.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(238,39,43)"/><text x="24.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(208,109,12)"/><text x="24.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(247,42,1)"/><text x="24.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(223,118,45)"/><text x="24.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(223,95,53)"/><text x="24.00" y="1006.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(239,162,9)"/><text x="28.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.33%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(252,191,17)"/><text x="28.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.33%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(208,21,34)"/><text x="28.00" y="990.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.33%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(207,222,50)"/><text x="28.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="21" y="868" width="12" height="15" fill="rgb(253,47,5)"/><text x="24.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="21" y="884" width="12" height="15" fill="rgb(232,151,51)"/><text x="24.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="21" y="900" width="12" height="15" fill="rgb(235,121,36)"/><text x="24.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="21" y="916" width="12" height="15" fill="rgb(210,71,29)"/><text x="24.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="25" y="932" width="8" height="15" fill="rgb(247,152,37)"/><text x="28.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.33%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(229,104,18)"/><text x="32.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(252,129,17)"/><text x="32.00" y="974.50"></text></g><g><title>0x7fd9b3f82237 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(239,85,28)"/><text x="32.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 2.33%)</title><rect x="10" y="292" width="27" height="15" fill="rgb(252,208,12)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="308" width="27" height="15" fill="rgb(217,138,29)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="324" width="27" height="15" fill="rgb(205,74,8)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="340" width="27" height="15" fill="rgb(228,136,15)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="10" y="356" width="27" height="15" fill="rgb(247,188,53)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="372" width="27" height="15" fill="rgb(220,15,5)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 2.33%)</title><rect x="10" y="388" width="27" height="15" fill="rgb(218,179,18)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="404" width="27" height="15" fill="rgb(247,116,50)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="420" width="27" height="15" fill="rgb(220,130,17)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="436" width="27" height="15" fill="rgb(215,188,31)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="10" y="452" width="27" height="15" fill="rgb(238,113,22)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="468" width="27" height="15" fill="rgb(236,108,50)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 2.33%)</title><rect x="10" y="484" width="27" height="15" fill="rgb(223,171,51)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="500" width="27" height="15" fill="rgb(209,140,7)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="516" width="27" height="15" fill="rgb(217,144,49)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="532" width="27" height="15" fill="rgb(244,152,6)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="10" y="548" width="27" height="15" fill="rgb(229,169,38)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="564" width="27" height="15" fill="rgb(253,104,17)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 2.33%)</title><rect x="10" y="580" width="27" height="15" fill="rgb(238,96,47)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="596" width="27" height="15" fill="rgb(252,206,54)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="612" width="27" height="15" fill="rgb(236,200,7)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="628" width="27" height="15" fill="rgb(207,81,23)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="644" width="27" height="15" fill="rgb(220,162,2)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="660" width="27" height="15" fill="rgb(228,126,25)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="676" width="27" height="15" fill="rgb(214,166,41)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="10" y="692" width="27" height="15" fill="rgb(247,175,18)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="708" width="27" height="15" fill="rgb(228,203,25)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 2.33%)</title><rect x="10" y="724" width="27" height="15" fill="rgb(241,183,15)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="740" width="27" height="15" fill="rgb(242,107,35)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="756" width="27" height="15" fill="rgb(246,56,38)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="772" width="27" height="15" fill="rgb(242,8,37)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="10" y="788" width="27" height="15" fill="rgb(223,86,10)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="10" y="804" width="27" height="15" fill="rgb(252,142,12)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 2.33%)</title><rect x="10" y="820" width="27" height="15" fill="rgb(240,13,36)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 2.33%)</title><rect x="10" y="836" width="27" height="15" fill="rgb(207,160,33)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 2.33%)</title><rect x="10" y="852" width="27" height="15" fill="rgb(213,77,27)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="33" y="868" width="4" height="15" fill="rgb(247,78,19)"/><text x="36.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="33" y="884" width="4" height="15" fill="rgb(236,166,35)"/><text x="36.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="33" y="900" width="4" height="15" fill="rgb(206,2,8)"/><text x="36.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.33%)</title><rect x="33" y="916" width="4" height="15" fill="rgb(208,62,22)"/><text x="36.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.33%)</title><rect x="33" y="932" width="4" height="15" fill="rgb(223,102,54)"/><text x="36.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.33%)</title><rect x="33" y="948" width="4" height="15" fill="rgb(220,124,18)"/><text x="36.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.33%)</title><rect x="37" y="1028" width="4" height="15" fill="rgb(252,25,46)"/><text x="40.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="37" y="1044" width="4" height="15" fill="rgb(240,199,8)"/><text x="40.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="37" y="1060" width="4" height="15" fill="rgb(211,162,24)"/><text x="40.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.33%)</title><rect x="37" y="1076" width="4" height="15" fill="rgb(243,118,49)"/><text x="40.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.33%)</title><rect x="37" y="1092" width="4" height="15" fill="rgb(234,167,25)"/><text x="40.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="10" y="196" width="35" height="15" fill="rgb(242,98,14)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="10" y="212" width="35" height="15" fill="rgb(229,219,34)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="10" y="228" width="35" height="15" fill="rgb(246,71,28)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="10" y="244" width="35" height="15" fill="rgb(253,82,10)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.00%)</title><rect x="10" y="260" width="35" height="15" fill="rgb(237,99,23)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.00%)</title><rect x="10" y="276" width="35" height="15" fill="rgb(236,60,31)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.67%)</title><rect x="37" y="292" width="8" height="15" fill="rgb(210,183,0)"/><text x="40.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="308" width="8" height="15" fill="rgb(245,199,22)"/><text x="40.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="324" width="8" height="15" fill="rgb(220,206,18)"/><text x="40.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="340" width="8" height="15" fill="rgb(224,146,35)"/><text x="40.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="37" y="356" width="8" height="15" fill="rgb(209,78,51)"/><text x="40.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="372" width="8" height="15" fill="rgb(217,101,33)"/><text x="40.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.67%)</title><rect x="37" y="388" width="8" height="15" fill="rgb(214,14,20)"/><text x="40.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="404" width="8" height="15" fill="rgb(241,140,33)"/><text x="40.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="420" width="8" height="15" fill="rgb(232,155,5)"/><text x="40.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="436" width="8" height="15" fill="rgb(215,227,27)"/><text x="40.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="37" y="452" width="8" height="15" fill="rgb(238,36,8)"/><text x="40.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="468" width="8" height="15" fill="rgb(211,182,34)"/><text x="40.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.67%)</title><rect x="37" y="484" width="8" height="15" fill="rgb(238,47,51)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="500" width="8" height="15" fill="rgb(213,172,27)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="516" width="8" height="15" fill="rgb(212,193,17)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="532" width="8" height="15" fill="rgb(223,46,17)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="37" y="548" width="8" height="15" fill="rgb(239,7,2)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="564" width="8" height="15" fill="rgb(236,20,9)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.67%)</title><rect x="37" y="580" width="8" height="15" fill="rgb(205,9,54)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="596" width="8" height="15" fill="rgb(239,106,21)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="612" width="8" height="15" fill="rgb(252,122,23)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="628" width="8" height="15" fill="rgb(251,202,23)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="37" y="644" width="8" height="15" fill="rgb(243,201,6)"/><text x="40.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="660" width="8" height="15" fill="rgb(226,199,51)"/><text x="40.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.67%)</title><rect x="37" y="676" width="8" height="15" fill="rgb(213,31,50)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="692" width="8" height="15" fill="rgb(252,52,23)"/><text x="40.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="708" width="8" height="15" fill="rgb(227,72,45)"/><text x="40.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="724" width="8" height="15" fill="rgb(236,164,53)"/><text x="40.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="37" y="740" width="8" height="15" fill="rgb(230,57,24)"/><text x="40.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="756" width="8" height="15" fill="rgb(224,177,51)"/><text x="40.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.67%)</title><rect x="37" y="772" width="8" height="15" fill="rgb(244,47,44)"/><text x="40.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="788" width="8" height="15" fill="rgb(234,45,1)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="804" width="8" height="15" fill="rgb(239,26,8)"/><text x="40.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="820" width="8" height="15" fill="rgb(230,224,23)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="836" width="8" height="15" fill="rgb(229,119,4)"/><text x="40.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="852" width="8" height="15" fill="rgb(229,92,34)"/><text x="40.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="37" y="868" width="8" height="15" fill="rgb(233,135,36)"/><text x="40.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="884" width="8" height="15" fill="rgb(213,53,53)"/><text x="40.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.67%)</title><rect x="37" y="900" width="8" height="15" fill="rgb(225,26,34)"/><text x="40.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="916" width="8" height="15" fill="rgb(213,180,14)"/><text x="40.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="932" width="8" height="15" fill="rgb(226,171,20)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="948" width="8" height="15" fill="rgb(207,200,17)"/><text x="40.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="964" width="8" height="15" fill="rgb(216,93,42)"/><text x="40.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="980" width="8" height="15" fill="rgb(210,131,14)"/><text x="40.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="37" y="996" width="8" height="15" fill="rgb(221,127,14)"/><text x="40.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="37" y="1012" width="8" height="15" fill="rgb(234,91,32)"/><text x="40.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.33%)</title><rect x="41" y="1028" width="4" height="15" fill="rgb(236,84,4)"/><text x="44.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="41" y="1044" width="4" height="15" fill="rgb(235,79,8)"/><text x="44.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="41" y="1060" width="4" height="15" fill="rgb(240,215,9)"/><text x="44.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.33%)</title><rect x="41" y="1076" width="4" height="15" fill="rgb(252,163,40)"/><text x="44.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.33%)</title><rect x="41" y="1092" width="4" height="15" fill="rgb(217,6,52)"/><text x="44.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="41" y="1108" width="4" height="15" fill="rgb(207,7,14)"/><text x="44.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="41" y="1124" width="4" height="15" fill="rgb(206,158,11)"/><text x="44.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="41" y="1140" width="4" height="15" fill="rgb(245,42,47)"/><text x="44.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1124" width="4" height="15" fill="rgb(248,176,5)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1140" width="4" height="15" fill="rgb(232,207,48)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1156" width="4" height="15" fill="rgb(242,193,30)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1172" width="4" height="15" fill="rgb(206,208,39)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1188" width="4" height="15" fill="rgb(238,184,12)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.33%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(236,112,39)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1220" width="4" height="15" fill="rgb(225,194,43)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1236" width="4" height="15" fill="rgb(249,122,10)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1252" width="4" height="15" fill="rgb(249,199,21)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1268" width="4" height="15" fill="rgb(248,46,10)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1284" width="4" height="15" fill="rgb(214,9,18)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.33%)</title><rect x="45" y="1300" width="4" height="15" fill="rgb(234,152,1)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1316" width="4" height="15" fill="rgb(238,67,4)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1332" width="4" height="15" fill="rgb(227,157,28)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1348" width="4" height="15" fill="rgb(236,42,48)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1364" width="4" height="15" fill="rgb(251,197,11)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1380" width="4" height="15" fill="rgb(206,14,51)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_selection/__init__.py) (1 samples, 0.33%)</title><rect x="45" y="1396" width="4" height="15" fill="rgb(217,167,31)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1412" width="4" height="15" fill="rgb(223,8,38)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1428" width="4" height="15" fill="rgb(244,66,47)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1444" width="4" height="15" fill="rgb(250,166,3)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1460" width="4" height="15" fill="rgb(208,93,54)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1476" width="4" height="15" fill="rgb(240,38,53)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_selection/_univariate_selection.py) (1 samples, 0.33%)</title><rect x="45" y="1492" width="4" height="15" fill="rgb(238,63,36)"/><text x="48.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1508" width="4" height="15" fill="rgb(225,157,51)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1476" width="4" height="15" fill="rgb(217,73,29)"/><text x="52.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1492" width="4" height="15" fill="rgb(206,90,48)"/><text x="52.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1508" width="4" height="15" fill="rgb(246,94,2)"/><text x="52.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1524" width="4" height="15" fill="rgb(216,63,14)"/><text x="52.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1540" width="4" height="15" fill="rgb(206,26,1)"/><text x="52.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="49" y="1556" width="4" height="15" fill="rgb(218,111,13)"/><text x="52.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="49" y="1572" width="4" height="15" fill="rgb(253,1,53)"/><text x="52.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1588" width="4" height="15" fill="rgb(239,103,20)"/><text x="52.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1604" width="4" height="15" fill="rgb(205,164,0)"/><text x="52.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1620" width="4" height="15" fill="rgb(218,148,45)"/><text x="52.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1636" width="4" height="15" fill="rgb(213,82,25)"/><text x="52.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1652" width="4" height="15" fill="rgb(253,158,27)"/><text x="52.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.33%)</title><rect x="49" y="1668" width="4" height="15" fill="rgb(228,76,5)"/><text x="52.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1684" width="4" height="15" fill="rgb(210,3,18)"/><text x="52.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1700" width="4" height="15" fill="rgb(237,178,49)"/><text x="52.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1716" width="4" height="15" fill="rgb(208,161,21)"/><text x="52.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1732" width="4" height="15" fill="rgb(231,80,44)"/><text x="52.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1748" width="4" height="15" fill="rgb(235,225,31)"/><text x="52.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="49" y="1764" width="4" height="15" fill="rgb(215,91,11)"/><text x="52.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1780" width="4" height="15" fill="rgb(230,106,10)"/><text x="52.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1796" width="4" height="15" fill="rgb(250,214,30)"/><text x="52.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1812" width="4" height="15" fill="rgb(241,189,39)"/><text x="52.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1828" width="4" height="15" fill="rgb(231,116,2)"/><text x="52.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="49" y="1844" width="4" height="15" fill="rgb(249,204,27)"/><text x="52.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="49" y="1860" width="4" height="15" fill="rgb(206,222,7)"/><text x="52.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="484" width="12" height="15" fill="rgb(252,49,7)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="500" width="12" height="15" fill="rgb(216,216,21)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="516" width="12" height="15" fill="rgb(252,4,10)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="532" width="12" height="15" fill="rgb(239,0,44)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="548" width="12" height="15" fill="rgb(229,32,40)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="564" width="12" height="15" fill="rgb(252,175,37)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="580" width="12" height="15" fill="rgb(238,96,10)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="596" width="12" height="15" fill="rgb(235,7,37)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="612" width="12" height="15" fill="rgb(235,101,37)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="628" width="12" height="15" fill="rgb(245,115,29)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="644" width="12" height="15" fill="rgb(235,209,21)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="660" width="12" height="15" fill="rgb(239,115,37)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 1.00%)</title><rect x="45" y="676" width="12" height="15" fill="rgb(247,200,20)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="692" width="12" height="15" fill="rgb(230,34,1)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="708" width="12" height="15" fill="rgb(215,210,22)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="724" width="12" height="15" fill="rgb(205,51,21)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="740" width="12" height="15" fill="rgb(221,65,22)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="756" width="12" height="15" fill="rgb(232,6,30)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="772" width="12" height="15" fill="rgb(215,11,37)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="788" width="12" height="15" fill="rgb(233,143,48)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="804" width="12" height="15" fill="rgb(216,228,7)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="820" width="12" height="15" fill="rgb(245,110,43)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="836" width="12" height="15" fill="rgb(216,123,1)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="852" width="12" height="15" fill="rgb(253,172,34)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 1.00%)</title><rect x="45" y="868" width="12" height="15" fill="rgb(214,146,52)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="884" width="12" height="15" fill="rgb(242,53,9)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="900" width="12" height="15" fill="rgb(237,103,14)"/><text x="48.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="916" width="12" height="15" fill="rgb(230,79,26)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="932" width="12" height="15" fill="rgb(209,148,45)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="948" width="12" height="15" fill="rgb(223,204,1)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="964" width="12" height="15" fill="rgb(224,173,36)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="980" width="12" height="15" fill="rgb(253,216,20)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="996" width="12" height="15" fill="rgb(229,90,47)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 1.00%)</title><rect x="45" y="1012" width="12" height="15" fill="rgb(231,86,16)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1028" width="12" height="15" fill="rgb(223,221,6)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1044" width="12" height="15" fill="rgb(219,190,41)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1060" width="12" height="15" fill="rgb(235,98,42)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="45" y="1076" width="12" height="15" fill="rgb(213,4,49)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="45" y="1092" width="12" height="15" fill="rgb(212,164,37)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 1.00%)</title><rect x="45" y="1108" width="12" height="15" fill="rgb(222,13,15)"/><text x="48.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1124" width="8" height="15" fill="rgb(239,36,11)"/><text x="52.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1140" width="8" height="15" fill="rgb(206,93,39)"/><text x="52.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1156" width="8" height="15" fill="rgb(217,196,48)"/><text x="52.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1172" width="8" height="15" fill="rgb(206,53,7)"/><text x="52.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1188" width="8" height="15" fill="rgb(211,99,54)"/><text x="52.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="49" y="1204" width="8" height="15" fill="rgb(225,26,47)"/><text x="52.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1220" width="8" height="15" fill="rgb(215,204,3)"/><text x="52.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.67%)</title><rect x="49" y="1236" width="8" height="15" fill="rgb(244,226,52)"/><text x="52.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1252" width="8" height="15" fill="rgb(252,143,41)"/><text x="52.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1268" width="8" height="15" fill="rgb(242,183,37)"/><text x="52.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1284" width="8" height="15" fill="rgb(214,73,39)"/><text x="52.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1300" width="8" height="15" fill="rgb(244,26,36)"/><text x="52.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1316" width="8" height="15" fill="rgb(225,94,6)"/><text x="52.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="49" y="1332" width="8" height="15" fill="rgb(242,39,8)"/><text x="52.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1348" width="8" height="15" fill="rgb(223,139,5)"/><text x="52.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.67%)</title><rect x="49" y="1364" width="8" height="15" fill="rgb(229,58,50)"/><text x="52.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1380" width="8" height="15" fill="rgb(218,108,8)"/><text x="52.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1396" width="8" height="15" fill="rgb(233,81,4)"/><text x="52.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1412" width="8" height="15" fill="rgb(239,38,52)"/><text x="52.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="49" y="1428" width="8" height="15" fill="rgb(252,164,4)"/><text x="52.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="49" y="1444" width="8" height="15" fill="rgb(206,125,15)"/><text x="52.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.67%)</title><rect x="49" y="1460" width="8" height="15" fill="rgb(245,152,44)"/><text x="52.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="53" y="1476" width="4" height="15" fill="rgb(218,120,31)"/><text x="56.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="53" y="1492" width="4" height="15" fill="rgb(240,33,1)"/><text x="56.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="53" y="1508" width="4" height="15" fill="rgb(229,131,33)"/><text x="56.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.33%)</title><rect x="45" y="340" width="16" height="15" fill="rgb(210,64,54)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="45" y="356" width="16" height="15" fill="rgb(241,198,19)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="45" y="372" width="16" height="15" fill="rgb(225,202,2)"/><text x="48.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="45" y="388" width="16" height="15" fill="rgb(231,79,1)"/><text x="48.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="45" y="404" width="16" height="15" fill="rgb(222,131,8)"/><text x="48.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="45" y="420" width="16" height="15" fill="rgb(243,206,2)"/><text x="48.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.33%)</title><rect x="45" y="436" width="16" height="15" fill="rgb(234,175,9)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="45" y="452" width="16" height="15" fill="rgb(221,62,18)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="45" y="468" width="16" height="15" fill="rgb(231,222,13)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="484" width="4" height="15" fill="rgb(205,21,15)"/><text x="60.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="500" width="4" height="15" fill="rgb(238,103,10)"/><text x="60.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="516" width="4" height="15" fill="rgb(217,157,15)"/><text x="60.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="57" y="532" width="4" height="15" fill="rgb(235,104,46)"/><text x="60.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="548" width="4" height="15" fill="rgb(231,205,50)"/><text x="60.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="564" width="4" height="15" fill="rgb(207,171,10)"/><text x="60.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="580" width="4" height="15" fill="rgb(250,133,33)"/><text x="60.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="596" width="4" height="15" fill="rgb(210,177,19)"/><text x="60.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="612" width="4" height="15" fill="rgb(228,89,31)"/><text x="60.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="628" width="4" height="15" fill="rgb(248,228,31)"/><text x="60.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="644" width="4" height="15" fill="rgb(253,49,31)"/><text x="60.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="660" width="4" height="15" fill="rgb(234,95,12)"/><text x="60.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="676" width="4" height="15" fill="rgb(247,105,35)"/><text x="60.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="692" width="4" height="15" fill="rgb(212,126,15)"/><text x="60.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="708" width="4" height="15" fill="rgb(214,158,54)"/><text x="60.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.33%)</title><rect x="57" y="724" width="4" height="15" fill="rgb(233,40,12)"/><text x="60.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="740" width="4" height="15" fill="rgb(229,32,19)"/><text x="60.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="756" width="4" height="15" fill="rgb(231,135,19)"/><text x="60.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="772" width="4" height="15" fill="rgb(230,80,27)"/><text x="60.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="788" width="4" height="15" fill="rgb(243,83,43)"/><text x="60.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="804" width="4" height="15" fill="rgb(248,123,51)"/><text x="60.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="820" width="4" height="15" fill="rgb(248,159,5)"/><text x="60.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="836" width="4" height="15" fill="rgb(253,14,36)"/><text x="60.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="852" width="4" height="15" fill="rgb(226,180,47)"/><text x="60.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="868" width="4" height="15" fill="rgb(221,88,39)"/><text x="60.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="884" width="4" height="15" fill="rgb(249,120,14)"/><text x="60.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="900" width="4" height="15" fill="rgb(213,163,45)"/><text x="60.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.33%)</title><rect x="57" y="916" width="4" height="15" fill="rgb(224,156,18)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="932" width="4" height="15" fill="rgb(216,36,18)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="948" width="4" height="15" fill="rgb(227,24,45)"/><text x="60.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="964" width="4" height="15" fill="rgb(239,182,32)"/><text x="60.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="980" width="4" height="15" fill="rgb(216,218,32)"/><text x="60.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="996" width="4" height="15" fill="rgb(233,222,5)"/><text x="60.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.33%)</title><rect x="57" y="1012" width="4" height="15" fill="rgb(244,57,43)"/><text x="60.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1028" width="4" height="15" fill="rgb(231,193,22)"/><text x="60.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1044" width="4" height="15" fill="rgb(245,219,22)"/><text x="60.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1060" width="4" height="15" fill="rgb(250,25,27)"/><text x="60.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1076" width="4" height="15" fill="rgb(240,186,33)"/><text x="60.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1092" width="4" height="15" fill="rgb(208,102,52)"/><text x="60.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.33%)</title><rect x="57" y="1108" width="4" height="15" fill="rgb(244,40,47)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1124" width="4" height="15" fill="rgb(252,21,5)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1140" width="4" height="15" fill="rgb(245,91,4)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1156" width="4" height="15" fill="rgb(219,224,48)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1172" width="4" height="15" fill="rgb(238,172,22)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1188" width="4" height="15" fill="rgb(243,133,49)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.33%)</title><rect x="57" y="1204" width="4" height="15" fill="rgb(206,57,46)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1220" width="4" height="15" fill="rgb(248,37,26)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1236" width="4" height="15" fill="rgb(235,227,33)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1252" width="4" height="15" fill="rgb(213,187,18)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1268" width="4" height="15" fill="rgb(209,40,31)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1284" width="4" height="15" fill="rgb(250,77,2)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.33%)</title><rect x="57" y="1300" width="4" height="15" fill="rgb(247,185,42)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1316" width="4" height="15" fill="rgb(223,61,1)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1332" width="4" height="15" fill="rgb(247,135,41)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1348" width="4" height="15" fill="rgb(224,144,13)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1364" width="4" height="15" fill="rgb(248,175,26)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1380" width="4" height="15" fill="rgb(234,109,26)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.33%)</title><rect x="57" y="1396" width="4" height="15" fill="rgb(232,131,51)"/><text x="60.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1412" width="4" height="15" fill="rgb(240,202,10)"/><text x="60.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1428" width="4" height="15" fill="rgb(214,192,5)"/><text x="60.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1444" width="4" height="15" fill="rgb(207,219,32)"/><text x="60.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1460" width="4" height="15" fill="rgb(253,157,20)"/><text x="60.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1476" width="4" height="15" fill="rgb(247,149,10)"/><text x="60.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/multi.py) (1 samples, 0.33%)</title><rect x="57" y="1492" width="4" height="15" fill="rgb(215,224,3)"/><text x="60.00" y="1502.50"></text></g><g><title>_add_numeric_methods_disabled (pandas/core/indexes/base.py) (1 samples, 0.33%)</title><rect x="57" y="1508" width="4" height="15" fill="rgb(213,41,17)"/><text x="60.00" y="1518.50"></text></g><g><title>make_invalid_op (pandas/core/ops/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="1524" width="4" height="15" fill="rgb(242,159,38)"/><text x="60.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="788" width="4" height="15" fill="rgb(213,12,34)"/><text x="64.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="804" width="4" height="15" fill="rgb(216,150,51)"/><text x="64.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="820" width="4" height="15" fill="rgb(228,210,24)"/><text x="64.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="61" y="836" width="4" height="15" fill="rgb(225,170,7)"/><text x="64.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="852" width="4" height="15" fill="rgb(216,22,15)"/><text x="64.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.33%)</title><rect x="61" y="868" width="4" height="15" fill="rgb(219,173,48)"/><text x="64.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="884" width="4" height="15" fill="rgb(205,143,7)"/><text x="64.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="900" width="4" height="15" fill="rgb(219,112,28)"/><text x="64.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="916" width="4" height="15" fill="rgb(227,82,13)"/><text x="64.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="61" y="932" width="4" height="15" fill="rgb(231,40,14)"/><text x="64.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="948" width="4" height="15" fill="rgb(248,143,24)"/><text x="64.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.33%)</title><rect x="61" y="964" width="4" height="15" fill="rgb(227,50,5)"/><text x="64.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="980" width="4" height="15" fill="rgb(215,198,10)"/><text x="64.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="996" width="4" height="15" fill="rgb(251,168,42)"/><text x="64.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="1012" width="4" height="15" fill="rgb(212,148,50)"/><text x="64.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="61" y="1028" width="4" height="15" fill="rgb(229,200,1)"/><text x="64.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="61" y="1044" width="4" height="15" fill="rgb(248,30,22)"/><text x="64.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/exceptions.py) (1 samples, 0.33%)</title><rect x="61" y="1060" width="4" height="15" fill="rgb(231,16,2)"/><text x="64.00" y="1070.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.33%)</title><rect x="65" y="900" width="4" height="15" fill="rgb(234,49,19)"/><text x="68.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="916" width="4" height="15" fill="rgb(223,219,8)"/><text x="68.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="932" width="4" height="15" fill="rgb(241,48,28)"/><text x="68.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="948" width="4" height="15" fill="rgb(254,95,17)"/><text x="68.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="964" width="4" height="15" fill="rgb(235,157,3)"/><text x="68.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="980" width="4" height="15" fill="rgb(225,81,45)"/><text x="68.00" y="990.50"></text></g><g><title>&lt;module&gt; (idna/__init__.py) (1 samples, 0.33%)</title><rect x="65" y="996" width="4" height="15" fill="rgb(249,108,6)"/><text x="68.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1012" width="4" height="15" fill="rgb(222,163,34)"/><text x="68.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1028" width="4" height="15" fill="rgb(250,19,49)"/><text x="68.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1044" width="4" height="15" fill="rgb(220,181,54)"/><text x="68.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="65" y="1060" width="4" height="15" fill="rgb(225,188,29)"/><text x="68.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="65" y="1076" width="4" height="15" fill="rgb(229,50,53)"/><text x="68.00" y="1086.50"></text></g><g><title>&lt;module&gt; (idna/core.py) (1 samples, 0.33%)</title><rect x="65" y="1092" width="4" height="15" fill="rgb(210,151,13)"/><text x="68.00" y="1102.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="65" y="1108" width="4" height="15" fill="rgb(221,151,17)"/><text x="68.00" y="1118.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="65" y="1124" width="4" height="15" fill="rgb(245,195,20)"/><text x="68.00" y="1134.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="65" y="1140" width="4" height="15" fill="rgb(248,106,22)"/><text x="68.00" y="1150.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.33%)</title><rect x="65" y="1156" width="4" height="15" fill="rgb(213,222,32)"/><text x="68.00" y="1166.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="65" y="1172" width="4" height="15" fill="rgb(238,30,28)"/><text x="68.00" y="1182.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.33%)</title><rect x="65" y="1188" width="4" height="15" fill="rgb(231,0,14)"/><text x="68.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.33%)</title><rect x="45" y="244" width="27" height="15" fill="rgb(247,159,47)"/><text x="48.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="45" y="260" width="27" height="15" fill="rgb(229,39,29)"/><text x="48.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="45" y="276" width="27" height="15" fill="rgb(228,87,6)"/><text x="48.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="45" y="292" width="27" height="15" fill="rgb(206,9,50)"/><text x="48.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="45" y="308" width="27" height="15" fill="rgb(227,97,33)"/><text x="48.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="45" y="324" width="27" height="15" fill="rgb(221,201,37)"/><text x="48.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.00%)</title><rect x="61" y="340" width="11" height="15" fill="rgb(239,100,33)"/><text x="64.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="356" width="11" height="15" fill="rgb(230,104,23)"/><text x="64.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="372" width="11" height="15" fill="rgb(228,204,7)"/><text x="64.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="388" width="11" height="15" fill="rgb(249,205,20)"/><text x="64.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="404" width="11" height="15" fill="rgb(247,117,31)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="420" width="11" height="15" fill="rgb(226,131,18)"/><text x="64.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="436" width="11" height="15" fill="rgb(244,63,27)"/><text x="64.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="61" y="452" width="11" height="15" fill="rgb(212,112,2)"/><text x="64.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="468" width="11" height="15" fill="rgb(208,58,27)"/><text x="64.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 1.00%)</title><rect x="61" y="484" width="11" height="15" fill="rgb(219,44,8)"/><text x="64.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="500" width="11" height="15" fill="rgb(229,176,15)"/><text x="64.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="516" width="11" height="15" fill="rgb(238,67,43)"/><text x="64.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="532" width="11" height="15" fill="rgb(226,98,35)"/><text x="64.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="61" y="548" width="11" height="15" fill="rgb(222,187,43)"/><text x="64.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="564" width="11" height="15" fill="rgb(240,165,51)"/><text x="64.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 1.00%)</title><rect x="61" y="580" width="11" height="15" fill="rgb(232,3,19)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="596" width="11" height="15" fill="rgb(231,46,41)"/><text x="64.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="612" width="11" height="15" fill="rgb(209,134,30)"/><text x="64.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="628" width="11" height="15" fill="rgb(239,21,35)"/><text x="64.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="61" y="644" width="11" height="15" fill="rgb(254,152,51)"/><text x="64.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="660" width="11" height="15" fill="rgb(249,128,21)"/><text x="64.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 1.00%)</title><rect x="61" y="676" width="11" height="15" fill="rgb(205,48,5)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="692" width="11" height="15" fill="rgb(229,11,39)"/><text x="64.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="708" width="11" height="15" fill="rgb(242,88,21)"/><text x="64.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="724" width="11" height="15" fill="rgb(221,128,20)"/><text x="64.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="61" y="740" width="11" height="15" fill="rgb(237,80,50)"/><text x="64.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="61" y="756" width="11" height="15" fill="rgb(224,95,14)"/><text x="64.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 1.00%)</title><rect x="61" y="772" width="11" height="15" fill="rgb(242,9,27)"/><text x="64.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="65" y="788" width="7" height="15" fill="rgb(207,65,49)"/><text x="68.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="65" y="804" width="7" height="15" fill="rgb(214,157,20)"/><text x="68.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="65" y="820" width="7" height="15" fill="rgb(224,139,47)"/><text x="68.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="65" y="836" width="7" height="15" fill="rgb(236,197,51)"/><text x="68.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="65" y="852" width="7" height="15" fill="rgb(222,191,41)"/><text x="68.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="65" y="868" width="7" height="15" fill="rgb(234,78,8)"/><text x="68.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="65" y="884" width="7" height="15" fill="rgb(209,183,28)"/><text x="68.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.33%)</title><rect x="69" y="900" width="3" height="15" fill="rgb(244,90,1)"/><text x="72.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="916" width="3" height="15" fill="rgb(250,200,32)"/><text x="72.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="932" width="3" height="15" fill="rgb(224,100,47)"/><text x="72.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="948" width="3" height="15" fill="rgb(226,219,36)"/><text x="72.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="964" width="3" height="15" fill="rgb(208,220,15)"/><text x="72.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="980" width="3" height="15" fill="rgb(249,109,18)"/><text x="72.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="996" width="3" height="15" fill="rgb(232,202,53)"/><text x="72.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="1012" width="3" height="15" fill="rgb(218,122,34)"/><text x="72.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1028" width="3" height="15" fill="rgb(231,189,54)"/><text x="72.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.33%)</title><rect x="69" y="1044" width="3" height="15" fill="rgb(241,177,19)"/><text x="72.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1060" width="3" height="15" fill="rgb(215,150,49)"/><text x="72.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1076" width="3" height="15" fill="rgb(222,96,14)"/><text x="72.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1092" width="3" height="15" fill="rgb(213,179,45)"/><text x="72.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1108" width="3" height="15" fill="rgb(220,117,2)"/><text x="72.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1124" width="3" height="15" fill="rgb(236,44,32)"/><text x="72.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="1140" width="3" height="15" fill="rgb(215,132,29)"/><text x="72.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1156" width="3" height="15" fill="rgb(205,148,28)"/><text x="72.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.33%)</title><rect x="69" y="1172" width="3" height="15" fill="rgb(234,176,14)"/><text x="72.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1188" width="3" height="15" fill="rgb(244,71,23)"/><text x="72.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1204" width="3" height="15" fill="rgb(212,96,33)"/><text x="72.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1220" width="3" height="15" fill="rgb(229,131,53)"/><text x="72.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1236" width="3" height="15" fill="rgb(218,7,48)"/><text x="72.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1252" width="3" height="15" fill="rgb(209,137,17)"/><text x="72.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="1268" width="3" height="15" fill="rgb(205,186,28)"/><text x="72.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1284" width="3" height="15" fill="rgb(234,45,3)"/><text x="72.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.33%)</title><rect x="69" y="1300" width="3" height="15" fill="rgb(206,7,5)"/><text x="72.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1316" width="3" height="15" fill="rgb(248,151,9)"/><text x="72.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1332" width="3" height="15" fill="rgb(213,51,35)"/><text x="72.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1348" width="3" height="15" fill="rgb(242,172,24)"/><text x="72.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="1364" width="3" height="15" fill="rgb(214,195,49)"/><text x="72.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1380" width="3" height="15" fill="rgb(254,11,20)"/><text x="72.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.33%)</title><rect x="69" y="1396" width="3" height="15" fill="rgb(228,217,24)"/><text x="72.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1412" width="3" height="15" fill="rgb(247,184,51)"/><text x="72.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1428" width="3" height="15" fill="rgb(249,114,53)"/><text x="72.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1444" width="3" height="15" fill="rgb(218,212,52)"/><text x="72.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1460" width="3" height="15" fill="rgb(232,72,18)"/><text x="72.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1476" width="3" height="15" fill="rgb(209,95,24)"/><text x="72.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="69" y="1492" width="3" height="15" fill="rgb(239,215,29)"/><text x="72.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="69" y="1508" width="3" height="15" fill="rgb(220,97,18)"/><text x="72.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/ec.py) (1 samples, 0.33%)</title><rect x="69" y="1524" width="3" height="15" fill="rgb(250,129,8)"/><text x="72.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.67%)</title><rect x="10" y="68" width="66" height="15" fill="rgb(243,106,7)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.67%)</title><rect x="10" y="84" width="66" height="15" fill="rgb(244,73,6)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.67%)</title><rect x="10" y="100" width="66" height="15" fill="rgb(228,173,40)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 5.67%)</title><rect x="10" y="116" width="66" height="15" fill="rgb(240,120,47)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.67%)</title><rect x="10" y="132" width="66" height="15" fill="rgb(230,125,53)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py) (17 samples, 5.67%)</title><rect x="10" y="148" width="66" height="15" fill="rgb(214,101,11)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.67%)</title><rect x="10" y="164" width="66" height="15" fill="rgb(215,62,19)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.67%)</title><rect x="10" y="180" width="66" height="15" fill="rgb(227,59,45)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="45" y="196" width="31" height="15" fill="rgb(217,6,54)"/><text x="48.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.67%)</title><rect x="45" y="212" width="31" height="15" fill="rgb(218,154,46)"/><text x="48.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.67%)</title><rect x="45" y="228" width="31" height="15" fill="rgb(220,126,4)"/><text x="48.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="244" width="4" height="15" fill="rgb(250,52,27)"/><text x="75.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="260" width="4" height="15" fill="rgb(239,93,4)"/><text x="75.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="276" width="4" height="15" fill="rgb(237,13,28)"/><text x="75.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="292" width="4" height="15" fill="rgb(242,196,46)"/><text x="75.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="308" width="4" height="15" fill="rgb(243,37,25)"/><text x="75.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="324" width="4" height="15" fill="rgb(239,10,34)"/><text x="75.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="340" width="4" height="15" fill="rgb(211,150,38)"/><text x="75.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="356" width="4" height="15" fill="rgb(213,10,54)"/><text x="75.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="372" width="4" height="15" fill="rgb(207,184,52)"/><text x="75.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="388" width="4" height="15" fill="rgb(249,59,16)"/><text x="75.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="404" width="4" height="15" fill="rgb(231,104,8)"/><text x="75.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="420" width="4" height="15" fill="rgb(251,153,7)"/><text x="75.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="436" width="4" height="15" fill="rgb(222,162,25)"/><text x="75.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="452" width="4" height="15" fill="rgb(253,184,6)"/><text x="75.00" y="462.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.33%)</title><rect x="76" y="132" width="4" height="15" fill="rgb(245,178,29)"/><text x="79.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="148" width="4" height="15" fill="rgb(229,205,14)"/><text x="79.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="164" width="4" height="15" fill="rgb(241,207,31)"/><text x="79.00" y="174.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="76" y="180" width="4" height="15" fill="rgb(239,193,24)"/><text x="79.00" y="190.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="76" y="196" width="4" height="15" fill="rgb(231,113,41)"/><text x="79.00" y="206.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="76" y="212" width="4" height="15" fill="rgb(230,152,41)"/><text x="79.00" y="222.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="76" y="228" width="4" height="15" fill="rgb(220,97,32)"/><text x="79.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.33%)</title><rect x="76" y="244" width="4" height="15" fill="rgb(221,49,36)"/><text x="79.00" y="254.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (2 samples, 0.67%)</title><rect x="76" y="68" width="8" height="15" fill="rgb(253,143,32)"/><text x="79.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (2 samples, 0.67%)</title><rect x="76" y="84" width="8" height="15" fill="rgb(244,210,8)"/><text x="79.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.67%)</title><rect x="76" y="100" width="8" height="15" fill="rgb(253,106,2)"/><text x="79.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (2 samples, 0.67%)</title><rect x="76" y="116" width="8" height="15" fill="rgb(210,202,45)"/><text x="79.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.33%)</title><rect x="80" y="132" width="4" height="15" fill="rgb(248,129,11)"/><text x="83.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="148" width="4" height="15" fill="rgb(224,26,13)"/><text x="83.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="164" width="4" height="15" fill="rgb(212,219,46)"/><text x="83.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="180" width="4" height="15" fill="rgb(205,72,41)"/><text x="83.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="80" y="196" width="4" height="15" fill="rgb(241,191,31)"/><text x="83.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="212" width="4" height="15" fill="rgb(248,197,8)"/><text x="83.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.33%)</title><rect x="80" y="228" width="4" height="15" fill="rgb(250,92,39)"/><text x="83.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="244" width="4" height="15" fill="rgb(215,190,41)"/><text x="83.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="260" width="4" height="15" fill="rgb(219,140,0)"/><text x="83.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="276" width="4" height="15" fill="rgb(239,7,21)"/><text x="83.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="80" y="292" width="4" height="15" fill="rgb(253,164,21)"/><text x="83.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="80" y="308" width="4" height="15" fill="rgb(223,221,31)"/><text x="83.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py) (1 samples, 0.33%)</title><rect x="80" y="324" width="4" height="15" fill="rgb(249,3,21)"/><text x="83.00" y="334.50"></text></g><g><title>0x7fd973f80ff9 (?) (1 samples, 0.33%)</title><rect x="100" y="212" width="4" height="15" fill="rgb(215,220,21)"/><text x="103.00" y="222.50"></text></g><g><title>0x7fd973f7bef6 (?) (1 samples, 0.33%)</title><rect x="100" y="228" width="4" height="15" fill="rgb(209,56,5)"/><text x="103.00" y="238.50"></text></g><g><title>0x7fd973f70962 (?) (1 samples, 0.33%)</title><rect x="100" y="244" width="4" height="15" fill="rgb(250,39,1)"/><text x="103.00" y="254.50"></text></g><g><title>0x7fd973fa47a7 (?) (1 samples, 0.33%)</title><rect x="100" y="260" width="4" height="15" fill="rgb(215,79,26)"/><text x="103.00" y="270.50"></text></g><g><title>0x7fd973fa4379 (?) (1 samples, 0.33%)</title><rect x="100" y="276" width="4" height="15" fill="rgb(240,87,14)"/><text x="103.00" y="286.50"></text></g><g><title>0x7fd9744028b8 (?) (1 samples, 0.33%)</title><rect x="100" y="292" width="4" height="15" fill="rgb(222,28,42)"/><text x="103.00" y="302.50"></text></g><g><title>0x7fd974400c7f (?) (1 samples, 0.33%)</title><rect x="100" y="308" width="4" height="15" fill="rgb(229,166,7)"/><text x="103.00" y="318.50"></text></g><g><title>0x7fd97441399c (?) (1 samples, 0.33%)</title><rect x="100" y="324" width="4" height="15" fill="rgb(254,80,2)"/><text x="103.00" y="334.50"></text></g><g><title>0x7fd97407ee76 (?) (1 samples, 0.33%)</title><rect x="100" y="340" width="4" height="15" fill="rgb(216,29,32)"/><text x="103.00" y="350.50"></text></g><g><title>0x7fd97407da7f (?) (1 samples, 0.33%)</title><rect x="100" y="356" width="4" height="15" fill="rgb(234,28,8)"/><text x="103.00" y="366.50"></text></g><g><title>0x7fd97405fc14 (?) (1 samples, 0.33%)</title><rect x="100" y="372" width="4" height="15" fill="rgb(251,120,49)"/><text x="103.00" y="382.50"></text></g><g><title>0x7fd97405f4e5 (?) (1 samples, 0.33%)</title><rect x="100" y="388" width="4" height="15" fill="rgb(205,43,28)"/><text x="103.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.33%)</title><rect x="104" y="212" width="4" height="15" fill="rgb(246,166,27)"/><text x="107.00" y="222.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="108" y="228" width="4" height="15" fill="rgb(220,108,27)"/><text x="111.00" y="238.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="116" y="340" width="4" height="15" fill="rgb(237,82,10)"/><text x="119.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="116" y="356" width="4" height="15" fill="rgb(226,127,23)"/><text x="119.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="340" width="4" height="15" fill="rgb(214,216,6)"/><text x="123.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="356" width="4" height="15" fill="rgb(235,155,43)"/><text x="123.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="372" width="4" height="15" fill="rgb(254,96,17)"/><text x="123.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="388" width="4" height="15" fill="rgb(223,158,6)"/><text x="123.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="404" width="4" height="15" fill="rgb(213,49,49)"/><text x="123.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="420" width="4" height="15" fill="rgb(225,58,22)"/><text x="123.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="436" width="4" height="15" fill="rgb(253,144,17)"/><text x="123.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="452" width="4" height="15" fill="rgb(229,38,6)"/><text x="123.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="468" width="4" height="15" fill="rgb(219,95,25)"/><text x="123.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="484" width="4" height="15" fill="rgb(230,41,10)"/><text x="123.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="500" width="4" height="15" fill="rgb(233,151,29)"/><text x="123.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="516" width="4" height="15" fill="rgb(206,49,27)"/><text x="123.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="120" y="532" width="4" height="15" fill="rgb(249,16,1)"/><text x="123.00" y="542.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="120" y="548" width="4" height="15" fill="rgb(224,141,0)"/><text x="123.00" y="558.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="124" y="340" width="4" height="15" fill="rgb(230,195,14)"/><text x="127.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="124" y="356" width="4" height="15" fill="rgb(233,212,20)"/><text x="127.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="124" y="372" width="4" height="15" fill="rgb(214,93,43)"/><text x="127.00" y="382.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="128" y="340" width="3" height="15" fill="rgb(249,143,18)"/><text x="131.00" y="350.50"></text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="128" y="356" width="3" height="15" fill="rgb(253,100,11)"/><text x="131.00" y="366.50"></text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="128" y="372" width="3" height="15" fill="rgb(216,84,40)"/><text x="131.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="356" width="4" height="15" fill="rgb(233,42,30)"/><text x="142.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="372" width="4" height="15" fill="rgb(216,107,4)"/><text x="142.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="388" width="4" height="15" fill="rgb(205,32,13)"/><text x="142.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="404" width="4" height="15" fill="rgb(246,103,25)"/><text x="142.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="420" width="4" height="15" fill="rgb(239,222,13)"/><text x="142.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="436" width="4" height="15" fill="rgb(212,40,1)"/><text x="142.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="452" width="4" height="15" fill="rgb(230,154,5)"/><text x="142.00" y="462.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="112" y="244" width="35" height="15" fill="rgb(236,83,23)"/><text x="115.00" y="254.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="112" y="260" width="35" height="15" fill="rgb(253,91,50)"/><text x="115.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="112" y="276" width="35" height="15" fill="rgb(225,149,33)"/><text x="115.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="112" y="292" width="35" height="15" fill="rgb(232,198,6)"/><text x="115.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="112" y="308" width="35" height="15" fill="rgb(215,70,12)"/><text x="115.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.00%)</title><rect x="112" y="324" width="35" height="15" fill="rgb(216,109,6)"/><text x="115.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.33%)</title><rect x="131" y="340" width="16" height="15" fill="rgb(239,208,22)"/><text x="134.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="143" y="356" width="4" height="15" fill="rgb(230,42,53)"/><text x="146.00" y="366.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (17 samples, 5.67%)</title><rect x="84" y="68" width="67" height="15" fill="rgb(211,22,30)"/><text x="87.00" y="78.50">profile..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (17 samples, 5.67%)</title><rect x="84" y="84" width="67" height="15" fill="rgb(212,57,54)"/><text x="87.00" y="94.50">setup_p..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (17 samples, 5.67%)</title><rect x="84" y="100" width="67" height="15" fill="rgb(243,157,27)"/><text x="87.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (17 samples, 5.67%)</title><rect x="84" y="116" width="67" height="15" fill="rgb(242,144,52)"/><text x="87.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (15 samples, 5.00%)</title><rect x="92" y="132" width="59" height="15" fill="rgb(247,42,34)"/><text x="95.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (15 samples, 5.00%)</title><rect x="92" y="148" width="59" height="15" fill="rgb(218,110,44)"/><text x="95.00" y="158.50">run (m..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (14 samples, 4.67%)</title><rect x="96" y="164" width="55" height="15" fill="rgb(246,103,37)"/><text x="99.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (13 samples, 4.33%)</title><rect x="100" y="180" width="51" height="15" fill="rgb(239,153,45)"/><text x="103.00" y="190.50">run (..</text></g><g><title>run (onnxruntime/capi/session.py) (13 samples, 4.33%)</title><rect x="100" y="196" width="51" height="15" fill="rgb(219,50,26)"/><text x="103.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.67%)</title><rect x="108" y="212" width="43" height="15" fill="rgb(254,224,35)"/><text x="111.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.33%)</title><rect x="112" y="228" width="39" height="15" fill="rgb(229,105,37)"/><text x="115.00" y="238.50">voi..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="147" y="244" width="4" height="15" fill="rgb(233,44,0)"/><text x="150.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="147" y="260" width="4" height="15" fill="rgb(216,141,36)"/><text x="150.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="147" y="276" width="4" height="15" fill="rgb(214,175,27)"/><text x="150.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.33%)</title><rect x="242" y="244" width="4" height="15" fill="rgb(236,48,21)"/><text x="245.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="242" y="260" width="4" height="15" fill="rgb(206,186,40)"/><text x="245.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="242" y="276" width="4" height="15" fill="rgb(252,136,5)"/><text x="245.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.33%)</title><rect x="242" y="292" width="4" height="15" fill="rgb(212,44,50)"/><text x="245.00" y="302.50"></text></g><g><title>0x7fd9b3f62dae (libc-2.29.so) (1 samples, 0.33%)</title><rect x="242" y="308" width="4" height="15" fill="rgb(254,114,7)"/><text x="245.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="246" y="244" width="3" height="15" fill="rgb(230,22,39)"/><text x="249.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.33%)</title><rect x="246" y="260" width="3" height="15" fill="rgb(210,115,45)"/><text x="249.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.33%)</title><rect x="257" y="276" width="4" height="15" fill="rgb(213,131,17)"/><text x="260.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.33%)</title><rect x="257" y="292" width="4" height="15" fill="rgb(241,111,5)"/><text x="260.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.33%)</title><rect x="257" y="308" width="4" height="15" fill="rgb(225,153,18)"/><text x="260.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.33%)</title><rect x="257" y="324" width="4" height="15" fill="rgb(244,214,53)"/><text x="260.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 1.00%)</title><rect x="253" y="260" width="12" height="15" fill="rgb(249,186,9)"/><text x="256.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="261" y="276" width="4" height="15" fill="rgb(231,60,6)"/><text x="264.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="261" y="292" width="4" height="15" fill="rgb(244,21,3)"/><text x="264.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (8 samples, 2.67%)</title><rect x="238" y="212" width="31" height="15" fill="rgb(248,71,21)"/><text x="241.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (7 samples, 2.33%)</title><rect x="242" y="228" width="27" height="15" fill="rgb(234,176,4)"/><text x="245.00" y="238.50">a..</text></g><g><title>prepare_index (mapping.c) (5 samples, 1.67%)</title><rect x="249" y="244" width="20" height="15" fill="rgb(252,213,54)"/><text x="252.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="265" y="260" width="4" height="15" fill="rgb(208,216,20)"/><text x="268.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.33%)</title><rect x="265" y="276" width="4" height="15" fill="rgb(205,193,2)"/><text x="268.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.33%)</title><rect x="269" y="212" width="4" height="15" fill="rgb(244,91,46)"/><text x="272.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.33%)</title><rect x="269" y="228" width="4" height="15" fill="rgb(218,228,9)"/><text x="272.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.33%)</title><rect x="269" y="244" width="4" height="15" fill="rgb(206,48,18)"/><text x="272.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.33%)</title><rect x="269" y="260" width="4" height="15" fill="rgb(223,74,38)"/><text x="272.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="277" y="356" width="4" height="15" fill="rgb(250,199,33)"/><text x="280.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (5 samples, 1.67%)</title><rect x="273" y="212" width="20" height="15" fill="rgb(251,193,11)"/><text x="276.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (4 samples, 1.33%)</title><rect x="277" y="228" width="16" height="15" fill="rgb(226,195,4)"/><text x="280.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.33%)</title><rect x="277" y="244" width="16" height="15" fill="rgb(215,178,34)"/><text x="280.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (4 samples, 1.33%)</title><rect x="277" y="260" width="16" height="15" fill="rgb(250,169,9)"/><text x="280.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.33%)</title><rect x="277" y="276" width="16" height="15" fill="rgb(241,115,5)"/><text x="280.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (4 samples, 1.33%)</title><rect x="277" y="292" width="16" height="15" fill="rgb(210,204,52)"/><text x="280.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (4 samples, 1.33%)</title><rect x="277" y="308" width="16" height="15" fill="rgb(235,190,7)"/><text x="280.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (4 samples, 1.33%)</title><rect x="277" y="324" width="16" height="15" fill="rgb(239,91,47)"/><text x="280.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (4 samples, 1.33%)</title><rect x="277" y="340" width="16" height="15" fill="rgb(228,82,10)"/><text x="280.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.00%)</title><rect x="281" y="356" width="12" height="15" fill="rgb(234,181,29)"/><text x="284.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.33%)</title><rect x="289" y="372" width="4" height="15" fill="rgb(250,79,30)"/><text x="292.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="289" y="388" width="4" height="15" fill="rgb(214,80,26)"/><text x="292.00" y="398.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.33%)</title><rect x="289" y="404" width="4" height="15" fill="rgb(237,132,45)"/><text x="292.00" y="414.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="301" y="260" width="4" height="15" fill="rgb(225,215,48)"/><text x="304.00" y="270.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.33%)</title><rect x="301" y="276" width="4" height="15" fill="rgb(226,123,49)"/><text x="304.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.33%)</title><rect x="301" y="292" width="4" height="15" fill="rgb(221,73,12)"/><text x="304.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.33%)</title><rect x="301" y="308" width="4" height="15" fill="rgb(244,12,9)"/><text x="304.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (1 samples, 0.33%)</title><rect x="305" y="324" width="3" height="15" fill="rgb(241,79,28)"/><text x="308.00" y="334.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.33%)</title><rect x="305" y="340" width="3" height="15" fill="rgb(216,168,27)"/><text x="308.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.33%)</title><rect x="305" y="356" width="3" height="15" fill="rgb(216,94,17)"/><text x="308.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="305" y="372" width="3" height="15" fill="rgb(238,127,6)"/><text x="308.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="305" y="388" width="3" height="15" fill="rgb(223,56,30)"/><text x="308.00" y="398.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.33%)</title><rect x="305" y="404" width="3" height="15" fill="rgb(220,172,0)"/><text x="308.00" y="414.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.33%)</title><rect x="308" y="324" width="4" height="15" fill="rgb(217,190,26)"/><text x="311.00" y="334.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (4 samples, 1.33%)</title><rect x="301" y="228" width="15" height="15" fill="rgb(216,33,54)"/><text x="304.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.33%)</title><rect x="301" y="244" width="15" height="15" fill="rgb(210,135,24)"/><text x="304.00" y="254.50"></text></g><g><title>choose (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="305" y="260" width="11" height="15" fill="rgb(219,121,3)"/><text x="308.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="305" y="276" width="11" height="15" fill="rgb(222,104,22)"/><text x="308.00" y="286.50"></text></g><g><title>array_choose (methods.c) (3 samples, 1.00%)</title><rect x="305" y="292" width="11" height="15" fill="rgb(250,141,44)"/><text x="308.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c) (3 samples, 1.00%)</title><rect x="305" y="308" width="11" height="15" fill="rgb(253,189,40)"/><text x="308.00" y="318.50"></text></g><g><title>arraymultiter_dealloc (iterators.c) (1 samples, 0.33%)</title><rect x="312" y="324" width="4" height="15" fill="rgb(236,161,33)"/><text x="315.00" y="334.50"></text></g><g><title>arrayiter_dealloc (iterators.c) (1 samples, 0.33%)</title><rect x="312" y="340" width="4" height="15" fill="rgb(238,63,4)"/><text x="315.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (7 samples, 2.33%)</title><rect x="293" y="212" width="27" height="15" fill="rgb(205,148,22)"/><text x="296.00" y="222.50">_..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (1 samples, 0.33%)</title><rect x="316" y="228" width="4" height="15" fill="rgb(219,161,53)"/><text x="319.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="316" y="244" width="4" height="15" fill="rgb(233,129,29)"/><text x="319.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="316" y="260" width="4" height="15" fill="rgb(252,199,16)"/><text x="319.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="316" y="276" width="4" height="15" fill="rgb(247,183,38)"/><text x="319.00" y="286.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.33%)</title><rect x="328" y="260" width="4" height="15" fill="rgb(215,86,37)"/><text x="331.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="328" y="276" width="4" height="15" fill="rgb(245,85,26)"/><text x="331.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="328" y="292" width="4" height="15" fill="rgb(236,158,15)"/><text x="331.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="328" y="308" width="4" height="15" fill="rgb(210,163,13)"/><text x="331.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.33%)</title><rect x="328" y="324" width="4" height="15" fill="rgb(229,177,10)"/><text x="331.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.33%)</title><rect x="328" y="340" width="4" height="15" fill="rgb(250,24,50)"/><text x="331.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.33%)</title><rect x="328" y="356" width="4" height="15" fill="rgb(249,213,17)"/><text x="331.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (1 samples, 0.33%)</title><rect x="332" y="276" width="4" height="15" fill="rgb(227,223,46)"/><text x="335.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="332" y="292" width="4" height="15" fill="rgb(240,162,29)"/><text x="335.00" y="302.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.33%)</title><rect x="336" y="292" width="4" height="15" fill="rgb(222,179,44)"/><text x="339.00" y="302.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="340" y="292" width="4" height="15" fill="rgb(244,162,23)"/><text x="343.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="340" y="308" width="4" height="15" fill="rgb(212,181,11)"/><text x="343.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.33%)</title><rect x="340" y="324" width="4" height="15" fill="rgb(225,127,3)"/><text x="343.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.33%)</title><rect x="340" y="340" width="4" height="15" fill="rgb(218,134,11)"/><text x="343.00" y="350.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 1.33%)</title><rect x="332" y="260" width="16" height="15" fill="rgb(231,94,18)"/><text x="335.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 1.00%)</title><rect x="336" y="276" width="12" height="15" fill="rgb(242,96,31)"/><text x="339.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.33%)</title><rect x="344" y="292" width="4" height="15" fill="rgb(212,157,15)"/><text x="347.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 2.67%)</title><rect x="320" y="212" width="32" height="15" fill="rgb(251,121,43)"/><text x="323.00" y="222.50">_r..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 2.67%)</title><rect x="320" y="228" width="32" height="15" fill="rgb(218,173,29)"/><text x="323.00" y="238.50">_c..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 2.67%)</title><rect x="320" y="244" width="32" height="15" fill="rgb(253,184,12)"/><text x="323.00" y="254.50">to..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.33%)</title><rect x="348" y="260" width="4" height="15" fill="rgb(220,68,37)"/><text x="351.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="348" y="276" width="4" height="15" fill="rgb(234,201,40)"/><text x="351.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="348" y="292" width="4" height="15" fill="rgb(250,0,7)"/><text x="351.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="348" y="308" width="4" height="15" fill="rgb(254,210,29)"/><text x="351.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="348" y="324" width="4" height="15" fill="rgb(249,12,23)"/><text x="351.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="348" y="340" width="4" height="15" fill="rgb(239,224,42)"/><text x="351.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="348" y="356" width="4" height="15" fill="rgb(241,111,0)"/><text x="351.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.33%)</title><rect x="356" y="228" width="4" height="15" fill="rgb(226,203,51)"/><text x="359.00" y="238.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (2 samples, 0.67%)</title><rect x="371" y="276" width="8" height="15" fill="rgb(242,217,2)"/><text x="374.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.67%)</title><rect x="371" y="292" width="8" height="15" fill="rgb(229,76,14)"/><text x="374.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="371" y="308" width="8" height="15" fill="rgb(205,138,11)"/><text x="374.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="371" y="324" width="8" height="15" fill="rgb(218,216,27)"/><text x="374.00" y="334.50"></text></g><g><title>array_argmin (methods.c) (1 samples, 0.33%)</title><rect x="375" y="340" width="4" height="15" fill="rgb(243,150,27)"/><text x="378.00" y="350.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (4 samples, 1.33%)</title><rect x="367" y="260" width="16" height="15" fill="rgb(219,73,52)"/><text x="370.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.33%)</title><rect x="379" y="276" width="4" height="15" fill="rgb(237,221,48)"/><text x="382.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="379" y="292" width="4" height="15" fill="rgb(253,36,40)"/><text x="382.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.33%)</title><rect x="379" y="308" width="4" height="15" fill="rgb(226,186,44)"/><text x="382.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.33%)</title><rect x="379" y="324" width="4" height="15" fill="rgb(211,188,54)"/><text x="382.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (7 samples, 2.33%)</title><rect x="360" y="228" width="27" height="15" fill="rgb(234,51,30)"/><text x="363.00" y="238.50">_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (6 samples, 2.00%)</title><rect x="364" y="244" width="23" height="15" fill="rgb(222,207,41)"/><text x="367.00" y="254.50">_..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="383" y="260" width="4" height="15" fill="rgb(221,61,51)"/><text x="386.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="383" y="276" width="4" height="15" fill="rgb(228,172,46)"/><text x="386.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="383" y="292" width="4" height="15" fill="rgb(254,225,41)"/><text x="386.00" y="302.50"></text></g><g><title>0x7fd9749db54f (?) (1 samples, 0.33%)</title><rect x="387" y="244" width="4" height="15" fill="rgb(230,189,37)"/><text x="390.00" y="254.50"></text></g><g><title>0x7fd9749e165e (?) (1 samples, 0.33%)</title><rect x="387" y="260" width="4" height="15" fill="rgb(223,137,37)"/><text x="390.00" y="270.50"></text></g><g><title>0x7fd9749e150f (?) (1 samples, 0.33%)</title><rect x="387" y="276" width="4" height="15" fill="rgb(247,218,22)"/><text x="390.00" y="286.50"></text></g><g><title>0x7fd9749e7d6c (?) (1 samples, 0.33%)</title><rect x="387" y="292" width="4" height="15" fill="rgb(214,128,42)"/><text x="390.00" y="302.50"></text></g><g><title>0x7fd97df48ab9 (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="387" y="308" width="4" height="15" fill="rgb(206,159,46)"/><text x="390.00" y="318.50"></text></g><g><title>0x7fd97df49eab (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="387" y="324" width="4" height="15" fill="rgb(225,23,28)"/><text x="390.00" y="334.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.33%)</title><rect x="391" y="436" width="4" height="15" fill="rgb(249,117,4)"/><text x="394.00" y="446.50"></text></g><g><title>_mutable_unchecked1 (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.33%)</title><rect x="391" y="452" width="4" height="15" fill="rgb(208,1,27)"/><text x="394.00" y="462.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::mutable_unchecked&lt;(long)1&gt; &amp; (numpy.h) (1 samples, 0.33%)</title><rect x="391" y="468" width="4" height="15" fill="rgb(243,38,54)"/><text x="394.00" y="478.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="391" y="484" width="4" height="15" fill="rgb(251,139,12)"/><text x="394.00" y="494.50"></text></g><g><title>0x7fd97df49ea9 (libgomp.so.1.0.0) (13 samples, 4.33%)</title><rect x="395" y="484" width="51" height="15" fill="rgb(244,172,22)"/><text x="398.00" y="494.50">0x7fd..</text></g><g><title>0x7fd97df49eab (libgomp.so.1.0.0) (14 samples, 4.67%)</title><rect x="446" y="484" width="55" height="15" fill="rgb(219,167,7)"/><text x="449.00" y="494.50">0x7fd..</text></g><g><title>0x7fd97df48ab9 (libgomp.so.1.0.0) (38 samples, 12.67%)</title><rect x="395" y="468" width="149" height="15" fill="rgb(233,36,42)"/><text x="398.00" y="478.50">0x7fd97df48ab9 (lib..</text></g><g><title>0x7fd97df49ead (libgomp.so.1.0.0) (11 samples, 3.67%)</title><rect x="501" y="484" width="43" height="15" fill="rgb(212,54,52)"/><text x="504.00" y="494.50">0x7f..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (100 samples, 33.33%)</title><rect x="155" y="164" width="393" height="15" fill="rgb(205,66,27)"/><text x="158.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (98 samples, 32.67%)</title><rect x="163" y="180" width="385" height="15" fill="rgb(215,226,45)"/><text x="166.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (84 samples, 28.00%)</title><rect x="218" y="196" width="330" height="15" fill="rgb(250,228,44)"/><text x="221.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (50 samples, 16.67%)</title><rect x="352" y="212" width="196" height="15" fill="rgb(231,35,12)"/><text x="355.00" y="222.50">run (mlprodict/onnxrt/ops..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (41 samples, 13.67%)</title><rect x="387" y="228" width="161" height="15" fill="rgb(254,201,51)"/><text x="390.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (40 samples, 13.33%)</title><rect x="391" y="244" width="157" height="15" fill="rgb(216,80,30)"/><text x="394.00" y="254.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (40 samples, 13.33%)</title><rect x="391" y="260" width="157" height="15" fill="rgb(240,81,15)"/><text x="394.00" y="270.50">void pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (40 samples, 13.33%)</title><rect x="391" y="276" width="157" height="15" fill="rgb(213,8,25)"/><text x="394.00" y="286.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (40 samples, 13.33%)</title><rect x="391" y="292" width="157" height="15" fill="rgb(251,134,1)"/><text x="394.00" y="302.50">pybind11::detail::ar..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (40 samples, 13.33%)</title><rect x="391" y="308" width="157" height="15" fill="rgb(230,196,54)"/><text x="394.00" y="318.50">pybind11::detail::ar..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (40 samples, 13.33%)</title><rect x="391" y="324" width="157" height="15" fill="rgb(250,92,3)"/><text x="394.00" y="334.50">pybind11::cpp_functi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (40 samples, 13.33%)</title><rect x="391" y="340" width="157" height="15" fill="rgb(227,173,28)"/><text x="394.00" y="350.50">pybind11::array_t&lt;fl..</text></g><g><title>pybind11::array::~array (numpy.h) (40 samples, 13.33%)</title><rect x="391" y="356" width="157" height="15" fill="rgb(212,141,11)"/><text x="394.00" y="366.50">pybind11::array::~ar..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (40 samples, 13.33%)</title><rect x="391" y="372" width="157" height="15" fill="rgb(210,113,41)"/><text x="394.00" y="382.50">pybind11::buffer::~b..</text></g><g><title>pybind11::object::~object (pytypes.h) (40 samples, 13.33%)</title><rect x="391" y="388" width="157" height="15" fill="rgb(236,46,17)"/><text x="394.00" y="398.50">pybind11::object::~o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (40 samples, 13.33%)</title><rect x="391" y="404" width="157" height="15" fill="rgb(237,37,47)"/><text x="394.00" y="414.50">pybind11::handle::de..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (40 samples, 13.33%)</title><rect x="391" y="420" width="157" height="15" fill="rgb(241,171,8)"/><text x="394.00" y="430.50">RuntimeTreeEnsembleR..</text></g><g><title>pybind11::array::size (numpy.h) (39 samples, 13.00%)</title><rect x="395" y="436" width="153" height="15" fill="rgb(251,12,6)"/><text x="398.00" y="446.50">pybind11::array::si..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (39 samples, 13.00%)</title><rect x="395" y="452" width="153" height="15" fill="rgb(210,194,53)"/><text x="398.00" y="462.50">std::accumulate&lt;lon..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="544" y="468" width="4" height="15" fill="rgb(211,204,38)"/><text x="547.00" y="478.50"></text></g><g><title>0x7fd97df47daa (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="544" y="484" width="4" height="15" fill="rgb(220,9,1)"/><text x="547.00" y="494.50"></text></g><g><title>0x7fd97df49cf9 (libgomp.so.1.0.0) (1 samples, 0.33%)</title><rect x="544" y="500" width="4" height="15" fill="rgb(253,183,29)"/><text x="547.00" y="510.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="548" y="180" width="4" height="15" fill="rgb(251,79,47)"/><text x="551.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (104 samples, 34.67%)</title><rect x="151" y="100" width="409" height="15" fill="rgb(246,34,43)"/><text x="154.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_est..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (104 samples, 34.67%)</title><rect x="151" y="116" width="409" height="15" fill="rgb(215,151,19)"/><text x="154.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (104 samples, 34.67%)</title><rect x="151" y="132" width="409" height="15" fill="rgb(234,76,24)"/><text x="154.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (104 samples, 34.67%)</title><rect x="151" y="148" width="409" height="15" fill="rgb(223,69,21)"/><text x="154.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.00%)</title><rect x="548" y="164" width="12" height="15" fill="rgb(235,1,3)"/><text x="551.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c) (2 samples, 0.67%)</title><rect x="552" y="180" width="8" height="15" fill="rgb(242,164,30)"/><text x="555.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (2 samples, 0.67%)</title><rect x="552" y="196" width="8" height="15" fill="rgb(247,91,37)"/><text x="555.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.33%)</title><rect x="556" y="212" width="4" height="15" fill="rgb(220,40,26)"/><text x="559.00" y="222.50"></text></g><g><title>0x7fd9b3f429d9 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="556" y="228" width="4" height="15" fill="rgb(242,210,34)"/><text x="559.00" y="238.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (105 samples, 35.00%)</title><rect x="151" y="68" width="413" height="15" fill="rgb(217,165,30)"/><text x="154.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (105 samples, 35.00%)</title><rect x="151" y="84" width="413" height="15" fill="rgb(220,63,52)"/><text x="154.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="560" y="100" width="4" height="15" fill="rgb(210,76,12)"/><text x="563.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="560" y="116" width="4" height="15" fill="rgb(226,89,15)"/><text x="563.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="560" y="132" width="4" height="15" fill="rgb(207,158,2)"/><text x="563.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="560" y="148" width="4" height="15" fill="rgb(244,162,47)"/><text x="563.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="560" y="164" width="4" height="15" fill="rgb(232,13,42)"/><text x="563.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.33%)</title><rect x="560" y="180" width="4" height="15" fill="rgb(224,155,28)"/><text x="563.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.33%)</title><rect x="560" y="196" width="4" height="15" fill="rgb(241,105,8)"/><text x="563.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="212" width="4" height="15" fill="rgb(208,195,30)"/><text x="563.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="228" width="4" height="15" fill="rgb(244,208,51)"/><text x="563.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="244" width="4" height="15" fill="rgb(247,227,23)"/><text x="563.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="560" y="260" width="4" height="15" fill="rgb(230,166,36)"/><text x="563.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="276" width="4" height="15" fill="rgb(207,86,16)"/><text x="563.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.33%)</title><rect x="560" y="292" width="4" height="15" fill="rgb(233,162,36)"/><text x="563.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="308" width="4" height="15" fill="rgb(235,176,38)"/><text x="563.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="324" width="4" height="15" fill="rgb(216,211,1)"/><text x="563.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="340" width="4" height="15" fill="rgb(250,192,27)"/><text x="563.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="560" y="356" width="4" height="15" fill="rgb(240,161,21)"/><text x="563.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="372" width="4" height="15" fill="rgb(206,4,2)"/><text x="563.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.33%)</title><rect x="560" y="388" width="4" height="15" fill="rgb(229,106,11)"/><text x="563.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="404" width="4" height="15" fill="rgb(251,79,18)"/><text x="563.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="420" width="4" height="15" fill="rgb(254,130,41)"/><text x="563.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="436" width="4" height="15" fill="rgb(217,192,46)"/><text x="563.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="560" y="452" width="4" height="15" fill="rgb(229,11,26)"/><text x="563.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="560" y="468" width="4" height="15" fill="rgb(215,209,12)"/><text x="563.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.33%)</title><rect x="560" y="484" width="4" height="15" fill="rgb(241,155,16)"/><text x="563.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.33%)</title><rect x="560" y="500" width="4" height="15" fill="rgb(225,161,14)"/><text x="563.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="560" y="516" width="4" height="15" fill="rgb(211,207,4)"/><text x="563.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="560" y="532" width="4" height="15" fill="rgb(220,19,48)"/><text x="563.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="560" y="548" width="4" height="15" fill="rgb(247,21,13)"/><text x="563.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="560" y="564" width="4" height="15" fill="rgb(243,22,13)"/><text x="563.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="580" width="4" height="15" fill="rgb(234,120,41)"/><text x="563.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="596" width="4" height="15" fill="rgb(247,212,36)"/><text x="563.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="612" width="4" height="15" fill="rgb(225,187,35)"/><text x="563.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="628" width="4" height="15" fill="rgb(211,21,25)"/><text x="563.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="644" width="4" height="15" fill="rgb(226,123,39)"/><text x="563.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="660" width="4" height="15" fill="rgb(227,66,3)"/><text x="563.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="676" width="4" height="15" fill="rgb(242,171,21)"/><text x="563.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="692" width="4" height="15" fill="rgb(233,136,21)"/><text x="563.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="708" width="4" height="15" fill="rgb(250,63,54)"/><text x="563.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="724" width="4" height="15" fill="rgb(237,44,43)"/><text x="563.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="740" width="4" height="15" fill="rgb(248,199,19)"/><text x="563.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.33%)</title><rect x="560" y="756" width="4" height="15" fill="rgb(208,48,47)"/><text x="563.00" y="766.50"></text></g><g><title>analyze_node (jinja2/idtracking.py) (1 samples, 0.33%)</title><rect x="560" y="772" width="4" height="15" fill="rgb(223,100,50)"/><text x="563.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="788" width="4" height="15" fill="rgb(213,66,2)"/><text x="563.00" y="798.50"></text></g><g><title>visit_For (jinja2/idtracking.py) (1 samples, 0.33%)</title><rect x="560" y="804" width="4" height="15" fill="rgb(209,161,20)"/><text x="563.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="820" width="4" height="15" fill="rgb(234,9,40)"/><text x="563.00" y="830.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="836" width="4" height="15" fill="rgb(208,198,19)"/><text x="563.00" y="846.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="852" width="4" height="15" fill="rgb(227,50,12)"/><text x="563.00" y="862.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="868" width="4" height="15" fill="rgb(213,135,50)"/><text x="563.00" y="878.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.33%)</title><rect x="560" y="884" width="4" height="15" fill="rgb(246,115,4)"/><text x="563.00" y="894.50"></text></g><g><title>visit_Name (jinja2/idtracking.py) (1 samples, 0.33%)</title><rect x="560" y="900" width="4" height="15" fill="rgb(221,80,29)"/><text x="563.00" y="910.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="603" y="196" width="4" height="15" fill="rgb(239,89,1)"/><text x="606.00" y="206.50"></text></g><g><title>0x7fd98d986d2e (?) (1 samples, 0.33%)</title><rect x="619" y="212" width="4" height="15" fill="rgb(231,148,10)"/><text x="622.00" y="222.50"></text></g><g><title>0x7fd98d985fa6 (?) (1 samples, 0.33%)</title><rect x="619" y="228" width="4" height="15" fill="rgb(208,69,7)"/><text x="622.00" y="238.50"></text></g><g><title>0x7fd98d995380 (?) (1 samples, 0.33%)</title><rect x="619" y="244" width="4" height="15" fill="rgb(254,195,52)"/><text x="622.00" y="254.50"></text></g><g><title>0x7fd98d985f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="623" y="228" width="4" height="15" fill="rgb(210,137,30)"/><text x="626.00" y="238.50"></text></g><g><title>0x7fd98d975d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="623" y="244" width="4" height="15" fill="rgb(207,59,42)"/><text x="626.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.33%)</title><rect x="623" y="260" width="4" height="15" fill="rgb(213,31,3)"/><text x="626.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="623" y="276" width="4" height="15" fill="rgb(243,147,22)"/><text x="626.00" y="286.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.33%)</title><rect x="623" y="292" width="4" height="15" fill="rgb(223,152,40)"/><text x="626.00" y="302.50"></text></g><g><title>0x7fd98d994225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="627" y="260" width="8" height="15" fill="rgb(238,117,8)"/><text x="630.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.67%)</title><rect x="627" y="276" width="8" height="15" fill="rgb(227,74,32)"/><text x="630.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="631" y="292" width="4" height="15" fill="rgb(248,99,51)"/><text x="634.00" y="302.50"></text></g><g><title>0x7fd98d9942df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="635" y="260" width="4" height="15" fill="rgb(209,24,36)"/><text x="638.00" y="270.50"></text></g><g><title>0x7fd98d978d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="635" y="276" width="4" height="15" fill="rgb(219,74,3)"/><text x="638.00" y="286.50"></text></g><g><title>0x7fd98d978666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="635" y="292" width="4" height="15" fill="rgb(243,49,10)"/><text x="638.00" y="302.50"></text></g><g><title>0x7fd98d96e2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="635" y="308" width="4" height="15" fill="rgb(225,204,31)"/><text x="638.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="635" y="324" width="4" height="15" fill="rgb(248,159,34)"/><text x="638.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="635" y="340" width="4" height="15" fill="rgb(226,169,7)"/><text x="638.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.33%)</title><rect x="643" y="292" width="4" height="15" fill="rgb(209,218,43)"/><text x="646.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.33%)</title><rect x="643" y="308" width="4" height="15" fill="rgb(217,164,6)"/><text x="646.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="643" y="324" width="4" height="15" fill="rgb(242,154,29)"/><text x="646.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(236,81,44)"/><text x="646.00" y="350.50"></text></g><g><title>0x7fd98d994592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.00%)</title><rect x="639" y="260" width="12" height="15" fill="rgb(231,219,20)"/><text x="642.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 1.00%)</title><rect x="639" y="276" width="12" height="15" fill="rgb(229,109,41)"/><text x="642.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="647" y="292" width="4" height="15" fill="rgb(226,30,51)"/><text x="650.00" y="302.50"></text></g><g><title>0x7fd9b4020130 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="647" y="308" width="4" height="15" fill="rgb(217,29,34)"/><text x="650.00" y="318.50"></text></g><g><title>0x7fd98d9946fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="651" y="260" width="4" height="15" fill="rgb(233,224,41)"/><text x="654.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="651" y="276" width="4" height="15" fill="rgb(213,92,52)"/><text x="654.00" y="286.50"></text></g><g><title>0x7fd98d985fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.67%)</title><rect x="627" y="228" width="32" height="15" fill="rgb(248,142,44)"/><text x="630.00" y="238.50">0x..</text></g><g><title>0x7fd98d995405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.67%)</title><rect x="627" y="244" width="32" height="15" fill="rgb(247,223,9)"/><text x="630.00" y="254.50">0x..</text></g><g><title>0x7fd98d994c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="655" y="260" width="4" height="15" fill="rgb(245,217,31)"/><text x="658.00" y="270.50"></text></g><g><title>0x7fd98d96c529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="655" y="276" width="4" height="15" fill="rgb(221,172,27)"/><text x="658.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.33%)</title><rect x="655" y="292" width="4" height="15" fill="rgb(209,210,45)"/><text x="658.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.33%)</title><rect x="655" y="308" width="4" height="15" fill="rgb(207,13,46)"/><text x="658.00" y="318.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.67%)</title><rect x="659" y="260" width="7" height="15" fill="rgb(232,88,36)"/><text x="662.00" y="270.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.33%)</title><rect x="666" y="276" width="4" height="15" fill="rgb(237,115,41)"/><text x="669.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.33%)</title><rect x="666" y="292" width="4" height="15" fill="rgb(247,93,5)"/><text x="669.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.33%)</title><rect x="666" y="308" width="4" height="15" fill="rgb(219,229,1)"/><text x="669.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.33%)</title><rect x="666" y="324" width="4" height="15" fill="rgb(250,52,13)"/><text x="669.00" y="334.50"></text></g><g><title>0x7fd98d98605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.33%)</title><rect x="659" y="228" width="15" height="15" fill="rgb(206,55,17)"/><text x="662.00" y="238.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.33%)</title><rect x="659" y="244" width="15" height="15" fill="rgb(208,39,8)"/><text x="662.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.67%)</title><rect x="666" y="260" width="8" height="15" fill="rgb(217,144,21)"/><text x="669.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="670" y="276" width="4" height="15" fill="rgb(231,221,48)"/><text x="673.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="670" y="292" width="4" height="15" fill="rgb(252,199,41)"/><text x="673.00" y="302.50"></text></g><g><title>0x7fd98d986062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="674" y="228" width="4" height="15" fill="rgb(246,66,16)"/><text x="677.00" y="238.50"></text></g><g><title>0x7fd98d960d00 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="674" y="244" width="4" height="15" fill="rgb(254,180,3)"/><text x="677.00" y="254.50"></text></g><g><title>0x7fd98d986d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 5.00%)</title><rect x="623" y="212" width="59" height="15" fill="rgb(219,110,51)"/><text x="626.00" y="222.50">0x7fd9..</text></g><g><title>0x7fd98d98614f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="678" y="228" width="4" height="15" fill="rgb(241,7,3)"/><text x="681.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="678" y="244" width="4" height="15" fill="rgb(222,100,15)"/><text x="681.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="678" y="260" width="4" height="15" fill="rgb(222,220,41)"/><text x="681.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="682" y="212" width="4" height="15" fill="rgb(212,142,48)"/><text x="685.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.00%)</title><rect x="741" y="244" width="12" height="15" fill="rgb(216,131,44)"/><text x="744.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.33%)</title><rect x="753" y="244" width="4" height="15" fill="rgb(252,87,24)"/><text x="756.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.67%)</title><rect x="777" y="260" width="19" height="15" fill="rgb(219,7,41)"/><text x="780.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 3.67%)</title><rect x="757" y="244" width="43" height="15" fill="rgb(227,133,17)"/><text x="760.00" y="254.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="796" y="260" width="4" height="15" fill="rgb(226,122,23)"/><text x="799.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.67%)</title><rect x="800" y="244" width="8" height="15" fill="rgb(206,136,8)"/><text x="803.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="836" y="260" width="3" height="15" fill="rgb(251,209,20)"/><text x="839.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 3.33%)</title><rect x="808" y="244" width="39" height="15" fill="rgb(250,84,25)"/><text x="811.00" y="254.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.67%)</title><rect x="839" y="260" width="8" height="15" fill="rgb(205,4,34)"/><text x="842.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.67%)</title><rect x="847" y="244" width="8" height="15" fill="rgb(254,61,4)"/><text x="850.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 1.67%)</title><rect x="855" y="244" width="20" height="15" fill="rgb(241,182,14)"/><text x="858.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.67%)</title><rect x="867" y="260" width="8" height="15" fill="rgb(210,136,37)"/><text x="870.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.33%)</title><rect x="871" y="276" width="4" height="15" fill="rgb(221,193,13)"/><text x="874.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="871" y="292" width="4" height="15" fill="rgb(205,36,0)"/><text x="874.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (53 samples, 17.67%)</title><rect x="686" y="212" width="209" height="15" fill="rgb(252,56,52)"/><text x="689.00" y="222.50">_validate_X_predict (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py) (52 samples, 17.33%)</title><rect x="690" y="228" width="205" height="15" fill="rgb(205,172,0)"/><text x="693.00" y="238.50">check_array (sklearn/utils..</text></g><g><title>simplefilter (warnings.py) (5 samples, 1.67%)</title><rect x="875" y="244" width="20" height="15" fill="rgb(217,135,40)"/><text x="878.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 1.33%)</title><rect x="879" y="260" width="16" height="15" fill="rgb(207,13,36)"/><text x="882.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.33%)</title><rect x="895" y="212" width="3" height="15" fill="rgb(225,179,13)"/><text x="898.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.33%)</title><rect x="895" y="228" width="3" height="15" fill="rgb(252,30,38)"/><text x="898.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.67%)</title><rect x="946" y="244" width="8" height="15" fill="rgb(232,7,44)"/><text x="949.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 5.00%)</title><rect x="902" y="228" width="59" height="15" fill="rgb(242,65,11)"/><text x="905.00" y="238.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.67%)</title><rect x="954" y="244" width="7" height="15" fill="rgb(219,222,31)"/><text x="957.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (94 samples, 31.33%)</title><rect x="596" y="180" width="369" height="15" fill="rgb(213,177,25)"/><text x="599.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (91 samples, 30.33%)</title><rect x="607" y="196" width="358" height="15" fill="rgb(207,131,3)"/><text x="610.00" y="206.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 5.67%)</title><rect x="898" y="212" width="67" height="15" fill="rgb(228,188,32)"/><text x="901.00" y="222.50">check_i..</text></g><g><title>isclass (inspect.py) (1 samples, 0.33%)</title><rect x="961" y="228" width="4" height="15" fill="rgb(223,183,10)"/><text x="964.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.67%)</title><rect x="965" y="180" width="20" height="15" fill="rgb(245,220,28)"/><text x="968.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.33%)</title><rect x="981" y="196" width="4" height="15" fill="rgb(215,90,11)"/><text x="984.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.33%)</title><rect x="981" y="212" width="4" height="15" fill="rgb(209,179,5)"/><text x="984.00" y="222.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (2 samples, 0.67%)</title><rect x="985" y="180" width="8" height="15" fill="rgb(242,5,13)"/><text x="988.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.67%)</title><rect x="985" y="196" width="8" height="15" fill="rgb(237,110,41)"/><text x="988.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (2 samples, 0.67%)</title><rect x="985" y="212" width="8" height="15" fill="rgb(230,111,27)"/><text x="988.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="989" y="228" width="4" height="15" fill="rgb(205,153,21)"/><text x="992.00" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="993" y="180" width="4" height="15" fill="rgb(251,11,52)"/><text x="996.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (1 samples, 0.33%)</title><rect x="993" y="196" width="4" height="15" fill="rgb(235,147,30)"/><text x="996.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="993" y="212" width="4" height="15" fill="rgb(243,127,12)"/><text x="996.00" y="222.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="993" y="228" width="4" height="15" fill="rgb(247,22,12)"/><text x="996.00" y="238.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.33%)</title><rect x="997" y="180" width="4" height="15" fill="rgb(213,111,15)"/><text x="1000.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.33%)</title><rect x="997" y="196" width="4" height="15" fill="rgb(247,143,43)"/><text x="1000.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="997" y="212" width="4" height="15" fill="rgb(219,217,51)"/><text x="1000.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="997" y="228" width="4" height="15" fill="rgb(233,97,10)"/><text x="1000.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="1001" y="180" width="4" height="15" fill="rgb(227,148,24)"/><text x="1004.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="1001" y="196" width="4" height="15" fill="rgb(220,34,28)"/><text x="1004.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="1001" y="212" width="4" height="15" fill="rgb(249,11,45)"/><text x="1004.00" y="222.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.33%)</title><rect x="1005" y="180" width="4" height="15" fill="rgb(226,98,54)"/><text x="1008.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1005" y="196" width="4" height="15" fill="rgb(244,192,31)"/><text x="1008.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1005" y="212" width="4" height="15" fill="rgb(217,10,26)"/><text x="1008.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1005" y="228" width="4" height="15" fill="rgb(233,202,53)"/><text x="1008.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1005" y="244" width="4" height="15" fill="rgb(208,151,13)"/><text x="1008.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.67%)</title><rect x="1009" y="244" width="7" height="15" fill="rgb(252,137,3)"/><text x="1012.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 1.00%)</title><rect x="1009" y="196" width="11" height="15" fill="rgb(212,228,27)"/><text x="1012.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (3 samples, 1.00%)</title><rect x="1009" y="212" width="11" height="15" fill="rgb(226,188,1)"/><text x="1012.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.00%)</title><rect x="1009" y="228" width="11" height="15" fill="rgb(210,93,33)"/><text x="1012.00" y="238.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1016" y="244" width="4" height="15" fill="rgb(215,135,9)"/><text x="1019.00" y="254.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1016" y="260" width="4" height="15" fill="rgb(230,153,45)"/><text x="1019.00" y="270.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.33%)</title><rect x="1016" y="276" width="4" height="15" fill="rgb(248,98,8)"/><text x="1019.00" y="286.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.33%)</title><rect x="1016" y="292" width="4" height="15" fill="rgb(233,4,17)"/><text x="1019.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 1.33%)</title><rect x="1009" y="180" width="15" height="15" fill="rgb(211,136,11)"/><text x="1012.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="1020" y="196" width="4" height="15" fill="rgb(232,14,2)"/><text x="1023.00" y="206.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="1020" y="212" width="4" height="15" fill="rgb(219,205,32)"/><text x="1023.00" y="222.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="1032" y="196" width="12" height="15" fill="rgb(220,181,37)"/><text x="1035.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="1040" y="212" width="4" height="15" fill="rgb(254,32,39)"/><text x="1043.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="1040" y="228" width="4" height="15" fill="rgb(207,97,42)"/><text x="1043.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="1040" y="244" width="4" height="15" fill="rgb(253,100,31)"/><text x="1043.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.33%)</title><rect x="1048" y="356" width="4" height="15" fill="rgb(236,131,3)"/><text x="1051.00" y="366.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 1.00%)</title><rect x="1044" y="196" width="12" height="15" fill="rgb(215,205,50)"/><text x="1047.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.00%)</title><rect x="1044" y="212" width="12" height="15" fill="rgb(231,27,28)"/><text x="1047.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="1044" y="228" width="12" height="15" fill="rgb(214,14,1)"/><text x="1047.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.00%)</title><rect x="1044" y="244" width="12" height="15" fill="rgb(231,199,7)"/><text x="1047.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (3 samples, 1.00%)</title><rect x="1044" y="260" width="12" height="15" fill="rgb(212,63,45)"/><text x="1047.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (3 samples, 1.00%)</title><rect x="1044" y="276" width="12" height="15" fill="rgb(249,74,43)"/><text x="1047.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (3 samples, 1.00%)</title><rect x="1044" y="292" width="12" height="15" fill="rgb(230,191,23)"/><text x="1047.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1044" y="308" width="12" height="15" fill="rgb(229,58,16)"/><text x="1047.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1044" y="324" width="12" height="15" fill="rgb(252,34,48)"/><text x="1047.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1048" y="340" width="8" height="15" fill="rgb(226,184,38)"/><text x="1051.00" y="350.50"></text></g><g><title>get_binary_op_function (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1052" y="356" width="4" height="15" fill="rgb(252,102,5)"/><text x="1055.00" y="366.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c) (1 samples, 0.33%)</title><rect x="1052" y="372" width="4" height="15" fill="rgb(224,19,17)"/><text x="1055.00" y="382.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.33%)</title><rect x="1079" y="340" width="4" height="15" fill="rgb(214,49,38)"/><text x="1082.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="1079" y="356" width="4" height="15" fill="rgb(248,200,47)"/><text x="1082.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="1079" y="372" width="4" height="15" fill="rgb(254,1,54)"/><text x="1082.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="1079" y="388" width="4" height="15" fill="rgb(239,134,11)"/><text x="1082.00" y="398.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (6 samples, 2.00%)</title><rect x="1064" y="244" width="23" height="15" fill="rgb(246,160,28)"/><text x="1067.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.00%)</title><rect x="1064" y="260" width="23" height="15" fill="rgb(231,146,43)"/><text x="1067.00" y="270.50">a..</text></g><g><title>all (numpy/core/fromnumeric.py) (6 samples, 2.00%)</title><rect x="1064" y="276" width="23" height="15" fill="rgb(233,158,30)"/><text x="1067.00" y="286.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 1.67%)</title><rect x="1068" y="292" width="19" height="15" fill="rgb(215,1,49)"/><text x="1071.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 1.33%)</title><rect x="1072" y="308" width="15" height="15" fill="rgb(236,138,27)"/><text x="1075.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.33%)</title><rect x="1072" y="324" width="15" height="15" fill="rgb(244,169,28)"/><text x="1075.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1083" y="340" width="4" height="15" fill="rgb(239,51,2)"/><text x="1086.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.33%)</title><rect x="1083" y="356" width="4" height="15" fill="rgb(247,155,14)"/><text x="1086.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.33%)</title><rect x="1083" y="372" width="4" height="15" fill="rgb(211,192,13)"/><text x="1086.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.33%)</title><rect x="1083" y="388" width="4" height="15" fill="rgb(249,89,19)"/><text x="1086.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1083" y="404" width="4" height="15" fill="rgb(238,93,31)"/><text x="1086.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1083" y="420" width="4" height="15" fill="rgb(233,11,45)"/><text x="1086.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1087" y="244" width="4" height="15" fill="rgb(241,225,45)"/><text x="1090.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="1087" y="260" width="4" height="15" fill="rgb(211,52,26)"/><text x="1090.00" y="270.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (2 samples, 0.67%)</title><rect x="1099" y="260" width="8" height="15" fill="rgb(221,207,38)"/><text x="1102.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.67%)</title><rect x="1099" y="276" width="8" height="15" fill="rgb(232,89,25)"/><text x="1102.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (2 samples, 0.67%)</title><rect x="1099" y="292" width="8" height="15" fill="rgb(254,105,33)"/><text x="1102.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (4 samples, 1.33%)</title><rect x="1107" y="260" width="16" height="15" fill="rgb(211,65,21)"/><text x="1110.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.67%)</title><rect x="1115" y="276" width="8" height="15" fill="rgb(243,208,32)"/><text x="1118.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.33%)</title><rect x="1119" y="292" width="4" height="15" fill="rgb(221,118,15)"/><text x="1122.00" y="302.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py) (1 samples, 0.33%)</title><rect x="1123" y="260" width="4" height="15" fill="rgb(209,212,8)"/><text x="1126.00" y="270.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (19 samples, 6.33%)</title><rect x="1056" y="196" width="75" height="15" fill="rgb(221,228,8)"/><text x="1059.00" y="206.50">isclose ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (19 samples, 6.33%)</title><rect x="1056" y="212" width="75" height="15" fill="rgb(246,95,3)"/><text x="1059.00" y="222.50">array_im..</text></g><g><title>isclose (numpy/core/numeric.py) (19 samples, 6.33%)</title><rect x="1056" y="228" width="75" height="15" fill="rgb(227,177,30)"/><text x="1059.00" y="238.50">isclose ..</text></g><g><title>within_tol (numpy/core/numeric.py) (10 samples, 3.33%)</title><rect x="1091" y="244" width="40" height="15" fill="rgb(244,15,15)"/><text x="1094.00" y="254.50">wit..</text></g><g><title>array_multiply (number.c) (1 samples, 0.33%)</title><rect x="1127" y="260" width="4" height="15" fill="rgb(238,168,52)"/><text x="1130.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1127" y="276" width="4" height="15" fill="rgb(230,210,17)"/><text x="1130.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1127" y="292" width="4" height="15" fill="rgb(244,1,34)"/><text x="1130.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1127" y="308" width="4" height="15" fill="rgb(231,84,51)"/><text x="1130.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1127" y="324" width="4" height="15" fill="rgb(211,131,25)"/><text x="1130.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.33%)</title><rect x="1138" y="340" width="4" height="15" fill="rgb(206,218,32)"/><text x="1141.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.67%)</title><rect x="1138" y="308" width="8" height="15" fill="rgb(243,105,4)"/><text x="1141.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.67%)</title><rect x="1138" y="324" width="8" height="15" fill="rgb(217,78,9)"/><text x="1141.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1142" y="340" width="4" height="15" fill="rgb(248,164,47)"/><text x="1145.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (147 samples, 49.00%)</title><rect x="572" y="164" width="578" height="15" fill="rgb(225,43,7)"/><text x="575.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (32 samples, 10.67%)</title><rect x="1024" y="180" width="126" height="15" fill="rgb(222,201,7)"/><text x="1027.00" y="190.50">stable_cumsum (..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (5 samples, 1.67%)</title><rect x="1131" y="196" width="19" height="15" fill="rgb(237,181,28)"/><text x="1134.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.67%)</title><rect x="1131" y="212" width="19" height="15" fill="rgb(209,21,5)"/><text x="1134.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (5 samples, 1.67%)</title><rect x="1131" y="228" width="19" height="15" fill="rgb(238,156,24)"/><text x="1134.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 1.33%)</title><rect x="1134" y="244" width="16" height="15" fill="rgb(220,185,1)"/><text x="1137.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1138" y="260" width="12" height="15" fill="rgb(205,40,33)"/><text x="1141.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1138" y="276" width="12" height="15" fill="rgb(210,30,9)"/><text x="1141.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.00%)</title><rect x="1138" y="292" width="12" height="15" fill="rgb(217,37,19)"/><text x="1141.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1146" y="308" width="4" height="15" fill="rgb(249,195,18)"/><text x="1149.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1146" y="324" width="4" height="15" fill="rgb(208,139,24)"/><text x="1149.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1146" y="340" width="4" height="15" fill="rgb(224,210,27)"/><text x="1149.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1146" y="356" width="4" height="15" fill="rgb(248,63,0)"/><text x="1149.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.33%)</title><rect x="1146" y="372" width="4" height="15" fill="rgb(205,175,25)"/><text x="1149.00" y="382.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.33%)</title><rect x="1158" y="196" width="4" height="15" fill="rgb(217,70,12)"/><text x="1161.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.67%)</title><rect x="1162" y="196" width="8" height="15" fill="rgb(237,116,53)"/><text x="1165.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (8 samples, 2.67%)</title><rect x="1150" y="164" width="32" height="15" fill="rgb(248,176,40)"/><text x="1153.00" y="174.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py) (8 samples, 2.67%)</title><rect x="1150" y="180" width="32" height="15" fill="rgb(240,53,7)"/><text x="1153.00" y="190.50">ch..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.00%)</title><rect x="1170" y="196" width="12" height="15" fill="rgb(211,73,22)"/><text x="1173.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 1.00%)</title><rect x="1170" y="212" width="12" height="15" fill="rgb(206,140,28)"/><text x="1173.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.33%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(230,76,18)"/><text x="1185.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(236,60,25)"/><text x="1185.00" y="206.50"></text></g><g><title>all (300 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(227,222,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (300 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(247,118,54)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (159 samples, 53.00%)</title><rect x="564" y="68" width="626" height="15" fill="rgb(227,144,45)"/><text x="567.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (159 samples, 53.00%)</title><rect x="564" y="84" width="626" height="15" fill="rgb(251,40,17)"/><text x="567.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py)</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (159 samples, 53.00%)</title><rect x="564" y="100" width="626" height="15" fill="rgb(219,152,24)"/><text x="567.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (159 samples, 53.00%)</title><rect x="564" y="116" width="626" height="15" fill="rgb(227,7,23)"/><text x="567.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (157 samples, 52.33%)</title><rect x="572" y="132" width="618" height="15" fill="rgb(244,63,22)"/><text x="575.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (157 samples, 52.33%)</title><rect x="572" y="148" width="618" height="15" fill="rgb(249,181,37)"/><text x="575.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.67%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(222,10,53)"/><text x="1185.00" y="174.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.33%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(216,109,11)"/><text x="1189.00" y="190.50"></text></g></g></svg>