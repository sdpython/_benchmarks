<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1574" onload="init(evt)" viewBox="0 0 1200 1574" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1574" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1557.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1557.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(234,153,41)"/><text x="13.00" y="910.50"></text></g><g><title>get_metadata_lines (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(254,44,22)"/><text x="13.00" y="926.50"></text></g><g><title>get_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(213,141,29)"/><text x="13.00" y="942.50"></text></g><g><title>_get (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(220,79,36)"/><text x="13.00" y="958.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(241,196,26)"/><text x="13.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="868" width="9" height="15" fill="rgb(246,151,0)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="10" y="884" width="9" height="15" fill="rgb(248,220,51)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.52%)</title><rect x="13" y="900" width="6" height="15" fill="rgb(224,94,51)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.52%)</title><rect x="13" y="916" width="6" height="15" fill="rgb(214,21,3)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="13" y="932" width="6" height="15" fill="rgb(208,57,24)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="13" y="948" width="6" height="15" fill="rgb(219,24,17)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(238,227,32)"/><text x="19.00" y="974.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.26%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(211,140,8)"/><text x="19.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(226,61,42)"/><text x="22.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(237,219,33)"/><text x="22.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(208,223,1)"/><text x="22.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(216,204,28)"/><text x="22.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(222,227,29)"/><text x="22.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(205,3,7)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(212,137,48)"/><text x="22.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(209,170,43)"/><text x="22.00" y="990.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(239,179,27)"/><text x="25.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(222,196,39)"/><text x="25.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(240,160,40)"/><text x="25.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.26%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(224,136,43)"/><text x="25.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="22" y="980" width="3" height="15" fill="rgb(228,7,39)"/><text x="25.00" y="990.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(215,175,28)"/><text x="28.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 1.80%)</title><rect x="10" y="836" width="21" height="15" fill="rgb(207,52,5)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 1.80%)</title><rect x="10" y="852" width="21" height="15" fill="rgb(222,108,7)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="22" y="868" width="9" height="15" fill="rgb(231,207,10)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="22" y="884" width="9" height="15" fill="rgb(225,208,34)"/><text x="25.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.77%)</title><rect x="22" y="900" width="9" height="15" fill="rgb(218,163,43)"/><text x="25.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (2 samples, 0.52%)</title><rect x="25" y="916" width="6" height="15" fill="rgb(228,70,11)"/><text x="28.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(251,147,46)"/><text x="31.00" y="942.50"></text></g><g><title>0x7fdbc96b1237 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(248,89,17)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 2.06%)</title><rect x="10" y="292" width="24" height="15" fill="rgb(212,159,6)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="308" width="24" height="15" fill="rgb(209,33,0)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="324" width="24" height="15" fill="rgb(251,131,53)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="340" width="24" height="15" fill="rgb(233,7,18)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.06%)</title><rect x="10" y="356" width="24" height="15" fill="rgb(218,199,18)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="372" width="24" height="15" fill="rgb(230,103,25)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 2.06%)</title><rect x="10" y="388" width="24" height="15" fill="rgb(209,105,39)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="404" width="24" height="15" fill="rgb(243,5,31)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="420" width="24" height="15" fill="rgb(206,88,11)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="436" width="24" height="15" fill="rgb(223,74,1)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.06%)</title><rect x="10" y="452" width="24" height="15" fill="rgb(215,123,14)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="468" width="24" height="15" fill="rgb(244,206,14)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 2.06%)</title><rect x="10" y="484" width="24" height="15" fill="rgb(240,53,42)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="500" width="24" height="15" fill="rgb(249,176,26)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="516" width="24" height="15" fill="rgb(221,166,2)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="532" width="24" height="15" fill="rgb(238,173,52)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.06%)</title><rect x="10" y="548" width="24" height="15" fill="rgb(208,113,13)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="564" width="24" height="15" fill="rgb(235,98,37)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 2.06%)</title><rect x="10" y="580" width="24" height="15" fill="rgb(210,68,53)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="596" width="24" height="15" fill="rgb(212,29,25)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="612" width="24" height="15" fill="rgb(228,112,34)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="628" width="24" height="15" fill="rgb(208,168,34)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="644" width="24" height="15" fill="rgb(209,18,31)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="660" width="24" height="15" fill="rgb(235,203,43)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="676" width="24" height="15" fill="rgb(224,134,53)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.06%)</title><rect x="10" y="692" width="24" height="15" fill="rgb(239,182,41)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="708" width="24" height="15" fill="rgb(210,217,47)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 2.06%)</title><rect x="10" y="724" width="24" height="15" fill="rgb(254,194,4)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="740" width="24" height="15" fill="rgb(223,133,11)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="756" width="24" height="15" fill="rgb(231,97,31)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="772" width="24" height="15" fill="rgb(222,220,40)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.06%)</title><rect x="10" y="788" width="24" height="15" fill="rgb(244,176,33)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.06%)</title><rect x="10" y="804" width="24" height="15" fill="rgb(252,145,52)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 2.06%)</title><rect x="10" y="820" width="24" height="15" fill="rgb(207,215,46)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(215,151,13)"/><text x="34.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(231,108,6)"/><text x="34.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="868" width="3" height="15" fill="rgb(251,183,18)"/><text x="34.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="884" width="3" height="15" fill="rgb(224,224,32)"/><text x="34.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(235,122,54)"/><text x="34.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.26%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(213,80,21)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="932" width="3" height="15" fill="rgb(247,67,0)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="948" width="3" height="15" fill="rgb(214,32,16)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="964" width="3" height="15" fill="rgb(254,156,45)"/><text x="34.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="980" width="3" height="15" fill="rgb(220,114,33)"/><text x="34.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.26%)</title><rect x="31" y="996" width="3" height="15" fill="rgb(223,3,14)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1012" width="3" height="15" fill="rgb(212,116,36)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1028" width="3" height="15" fill="rgb(215,52,29)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1044" width="3" height="15" fill="rgb(239,188,20)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="1060" width="3" height="15" fill="rgb(232,58,11)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1076" width="3" height="15" fill="rgb(238,103,3)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1092" width="3" height="15" fill="rgb(246,3,19)"/><text x="34.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1108" width="3" height="15" fill="rgb(213,91,18)"/><text x="34.00" y="1118.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1124" width="3" height="15" fill="rgb(221,22,37)"/><text x="34.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1140" width="3" height="15" fill="rgb(235,47,3)"/><text x="34.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1156" width="3" height="15" fill="rgb(222,70,11)"/><text x="34.00" y="1166.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1172" width="3" height="15" fill="rgb(252,117,9)"/><text x="34.00" y="1182.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1188" width="3" height="15" fill="rgb(214,101,23)"/><text x="34.00" y="1198.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1204" width="3" height="15" fill="rgb(209,91,21)"/><text x="34.00" y="1214.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="31" y="1220" width="3" height="15" fill="rgb(243,124,40)"/><text x="34.00" y="1230.50"></text></g><g><title>copy (copy.py) (1 samples, 0.26%)</title><rect x="31" y="1236" width="3" height="15" fill="rgb(244,190,9)"/><text x="34.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.32%)</title><rect x="10" y="196" width="27" height="15" fill="rgb(226,103,28)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.32%)</title><rect x="10" y="212" width="27" height="15" fill="rgb(253,3,11)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.32%)</title><rect x="10" y="228" width="27" height="15" fill="rgb(209,105,32)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.32%)</title><rect x="10" y="244" width="27" height="15" fill="rgb(235,125,6)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.32%)</title><rect x="10" y="260" width="27" height="15" fill="rgb(221,134,30)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.32%)</title><rect x="10" y="276" width="27" height="15" fill="rgb(231,173,49)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="292" width="3" height="15" fill="rgb(228,14,51)"/><text x="37.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="308" width="3" height="15" fill="rgb(242,199,19)"/><text x="37.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="324" width="3" height="15" fill="rgb(241,138,17)"/><text x="37.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="340" width="3" height="15" fill="rgb(208,94,2)"/><text x="37.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="356" width="3" height="15" fill="rgb(241,112,21)"/><text x="37.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="372" width="3" height="15" fill="rgb(232,199,41)"/><text x="37.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.26%)</title><rect x="34" y="388" width="3" height="15" fill="rgb(209,118,2)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="404" width="3" height="15" fill="rgb(227,106,29)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="420" width="3" height="15" fill="rgb(238,229,4)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="436" width="3" height="15" fill="rgb(223,203,9)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="452" width="3" height="15" fill="rgb(248,193,54)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="468" width="3" height="15" fill="rgb(224,0,10)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="484" width="3" height="15" fill="rgb(205,49,18)"/><text x="37.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="500" width="3" height="15" fill="rgb(242,67,22)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="516" width="3" height="15" fill="rgb(230,171,10)"/><text x="37.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="532" width="3" height="15" fill="rgb(237,149,32)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="548" width="3" height="15" fill="rgb(230,186,6)"/><text x="37.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="564" width="3" height="15" fill="rgb(212,26,40)"/><text x="37.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="580" width="3" height="15" fill="rgb(229,222,11)"/><text x="37.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="596" width="3" height="15" fill="rgb(252,217,13)"/><text x="37.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.26%)</title><rect x="34" y="612" width="3" height="15" fill="rgb(244,86,31)"/><text x="37.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="628" width="3" height="15" fill="rgb(245,41,39)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="644" width="3" height="15" fill="rgb(225,41,53)"/><text x="37.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="660" width="3" height="15" fill="rgb(229,180,14)"/><text x="37.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="676" width="3" height="15" fill="rgb(231,150,41)"/><text x="37.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="692" width="3" height="15" fill="rgb(242,140,54)"/><text x="37.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="708" width="3" height="15" fill="rgb(225,215,8)"/><text x="37.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="724" width="3" height="15" fill="rgb(222,157,40)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="740" width="3" height="15" fill="rgb(211,190,8)"/><text x="37.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="756" width="3" height="15" fill="rgb(250,127,24)"/><text x="37.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="772" width="3" height="15" fill="rgb(246,84,32)"/><text x="37.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="788" width="3" height="15" fill="rgb(212,198,35)"/><text x="37.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.26%)</title><rect x="34" y="804" width="3" height="15" fill="rgb(220,143,37)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="820" width="3" height="15" fill="rgb(249,172,42)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="836" width="3" height="15" fill="rgb(250,173,5)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="852" width="3" height="15" fill="rgb(209,123,19)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="868" width="3" height="15" fill="rgb(227,46,42)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="884" width="3" height="15" fill="rgb(217,30,7)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.26%)</title><rect x="34" y="900" width="3" height="15" fill="rgb(228,180,46)"/><text x="37.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="916" width="3" height="15" fill="rgb(228,93,49)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="932" width="3" height="15" fill="rgb(209,76,3)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="948" width="3" height="15" fill="rgb(228,206,13)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="964" width="3" height="15" fill="rgb(241,159,32)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="980" width="3" height="15" fill="rgb(240,174,5)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="996" width="3" height="15" fill="rgb(249,195,23)"/><text x="37.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1012" width="3" height="15" fill="rgb(233,182,29)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1028" width="3" height="15" fill="rgb(215,133,48)"/><text x="37.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1044" width="3" height="15" fill="rgb(215,49,6)"/><text x="37.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(249,183,32)"/><text x="37.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(239,45,34)"/><text x="37.00" y="1086.50"></text></g><g><title>&lt;module&gt; (json/decoder.py) (1 samples, 0.26%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(227,57,29)"/><text x="37.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1108" width="3" height="15" fill="rgb(210,47,0)"/><text x="37.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1124" width="3" height="15" fill="rgb(209,63,37)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1140" width="3" height="15" fill="rgb(216,166,19)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1156" width="3" height="15" fill="rgb(225,5,4)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1172" width="3" height="15" fill="rgb(219,34,4)"/><text x="37.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1188" width="3" height="15" fill="rgb(247,114,28)"/><text x="37.00" y="1198.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1204" width="3" height="15" fill="rgb(205,191,22)"/><text x="37.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1220" width="3" height="15" fill="rgb(244,224,9)"/><text x="37.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="484" width="3" height="15" fill="rgb(246,127,29)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="500" width="3" height="15" fill="rgb(233,219,46)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="516" width="3" height="15" fill="rgb(210,8,3)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="532" width="3" height="15" fill="rgb(241,174,5)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="548" width="3" height="15" fill="rgb(245,32,53)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="564" width="3" height="15" fill="rgb(206,21,44)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.26%)</title><rect x="37" y="580" width="3" height="15" fill="rgb(229,167,24)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="596" width="3" height="15" fill="rgb(225,98,42)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="612" width="3" height="15" fill="rgb(246,106,51)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="628" width="3" height="15" fill="rgb(220,219,1)"/><text x="40.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="644" width="3" height="15" fill="rgb(217,208,22)"/><text x="40.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="660" width="3" height="15" fill="rgb(246,215,52)"/><text x="40.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.26%)</title><rect x="37" y="676" width="3" height="15" fill="rgb(242,37,54)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="692" width="3" height="15" fill="rgb(216,196,54)"/><text x="40.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="708" width="3" height="15" fill="rgb(214,18,36)"/><text x="40.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="724" width="3" height="15" fill="rgb(221,107,48)"/><text x="40.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="740" width="3" height="15" fill="rgb(205,137,22)"/><text x="40.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="756" width="3" height="15" fill="rgb(241,113,48)"/><text x="40.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.26%)</title><rect x="37" y="772" width="3" height="15" fill="rgb(223,58,39)"/><text x="40.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="788" width="3" height="15" fill="rgb(253,214,44)"/><text x="40.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="804" width="3" height="15" fill="rgb(249,145,8)"/><text x="40.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="820" width="3" height="15" fill="rgb(207,144,14)"/><text x="40.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="836" width="3" height="15" fill="rgb(217,175,50)"/><text x="40.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="852" width="3" height="15" fill="rgb(232,46,23)"/><text x="40.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.26%)</title><rect x="37" y="868" width="3" height="15" fill="rgb(219,37,29)"/><text x="40.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="884" width="3" height="15" fill="rgb(221,93,17)"/><text x="40.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="900" width="3" height="15" fill="rgb(227,59,17)"/><text x="40.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="916" width="3" height="15" fill="rgb(221,129,44)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="932" width="3" height="15" fill="rgb(230,215,50)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="948" width="3" height="15" fill="rgb(205,174,48)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="964" width="3" height="15" fill="rgb(253,229,49)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="980" width="3" height="15" fill="rgb(254,217,52)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="996" width="3" height="15" fill="rgb(251,137,54)"/><text x="40.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.26%)</title><rect x="37" y="1012" width="3" height="15" fill="rgb(219,133,9)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1028" width="3" height="15" fill="rgb(233,86,17)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1044" width="3" height="15" fill="rgb(249,186,31)"/><text x="40.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1060" width="3" height="15" fill="rgb(228,223,49)"/><text x="40.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1076" width="3" height="15" fill="rgb(249,7,49)"/><text x="40.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1092" width="3" height="15" fill="rgb(231,72,10)"/><text x="40.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.26%)</title><rect x="37" y="1108" width="3" height="15" fill="rgb(254,41,40)"/><text x="40.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1124" width="3" height="15" fill="rgb(236,153,23)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1140" width="3" height="15" fill="rgb(214,145,29)"/><text x="40.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1156" width="3" height="15" fill="rgb(228,45,17)"/><text x="40.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1172" width="3" height="15" fill="rgb(215,90,1)"/><text x="40.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1188" width="3" height="15" fill="rgb(210,31,40)"/><text x="40.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.26%)</title><rect x="37" y="1204" width="3" height="15" fill="rgb(247,44,46)"/><text x="40.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1220" width="3" height="15" fill="rgb(221,196,4)"/><text x="40.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1236" width="3" height="15" fill="rgb(249,11,34)"/><text x="40.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1252" width="3" height="15" fill="rgb(250,113,7)"/><text x="40.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1268" width="3" height="15" fill="rgb(207,213,12)"/><text x="40.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1284" width="3" height="15" fill="rgb(208,88,40)"/><text x="40.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.26%)</title><rect x="37" y="1300" width="3" height="15" fill="rgb(241,149,33)"/><text x="40.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1316" width="3" height="15" fill="rgb(241,142,21)"/><text x="40.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1332" width="3" height="15" fill="rgb(240,180,31)"/><text x="40.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1348" width="3" height="15" fill="rgb(251,8,13)"/><text x="40.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1364" width="3" height="15" fill="rgb(205,36,52)"/><text x="40.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1380" width="3" height="15" fill="rgb(242,156,51)"/><text x="40.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.26%)</title><rect x="37" y="1396" width="3" height="15" fill="rgb(242,3,22)"/><text x="40.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1412" width="3" height="15" fill="rgb(213,159,49)"/><text x="40.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1428" width="3" height="15" fill="rgb(229,40,37)"/><text x="40.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="37" y="1444" width="3" height="15" fill="rgb(214,198,31)"/><text x="40.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1460" width="3" height="15" fill="rgb(248,41,45)"/><text x="40.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1476" width="3" height="15" fill="rgb(235,197,52)"/><text x="40.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="37" y="1492" width="3" height="15" fill="rgb(237,204,14)"/><text x="40.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="772" width="6" height="15" fill="rgb(209,163,39)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="788" width="6" height="15" fill="rgb(245,207,17)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="804" width="6" height="15" fill="rgb(214,170,0)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="820" width="6" height="15" fill="rgb(219,178,30)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="836" width="6" height="15" fill="rgb(217,136,29)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="852" width="6" height="15" fill="rgb(242,210,27)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.52%)</title><rect x="40" y="868" width="6" height="15" fill="rgb(253,145,35)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="884" width="6" height="15" fill="rgb(248,136,12)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="900" width="6" height="15" fill="rgb(207,158,8)"/><text x="43.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="916" width="6" height="15" fill="rgb(242,10,21)"/><text x="43.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="932" width="6" height="15" fill="rgb(245,42,34)"/><text x="43.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="948" width="6" height="15" fill="rgb(228,15,33)"/><text x="43.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py) (2 samples, 0.52%)</title><rect x="40" y="964" width="6" height="15" fill="rgb(210,106,35)"/><text x="43.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="980" width="6" height="15" fill="rgb(237,168,54)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="996" width="6" height="15" fill="rgb(220,98,29)"/><text x="43.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1012" width="6" height="15" fill="rgb(245,188,45)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1028" width="6" height="15" fill="rgb(243,117,9)"/><text x="43.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1044" width="6" height="15" fill="rgb(244,177,11)"/><text x="43.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="1060" width="6" height="15" fill="rgb(242,78,9)"/><text x="43.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1076" width="6" height="15" fill="rgb(240,152,15)"/><text x="43.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py) (2 samples, 0.52%)</title><rect x="40" y="1092" width="6" height="15" fill="rgb(206,76,11)"/><text x="43.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1108" width="6" height="15" fill="rgb(253,61,52)"/><text x="43.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1124" width="6" height="15" fill="rgb(208,161,26)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1140" width="6" height="15" fill="rgb(245,198,26)"/><text x="43.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1156" width="6" height="15" fill="rgb(227,187,18)"/><text x="43.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1172" width="6" height="15" fill="rgb(226,62,17)"/><text x="43.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="1188" width="6" height="15" fill="rgb(218,187,20)"/><text x="43.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1204" width="6" height="15" fill="rgb(242,125,26)"/><text x="43.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py) (2 samples, 0.52%)</title><rect x="40" y="1220" width="6" height="15" fill="rgb(248,184,36)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1236" width="6" height="15" fill="rgb(237,14,46)"/><text x="43.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1252" width="6" height="15" fill="rgb(224,134,21)"/><text x="43.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1268" width="6" height="15" fill="rgb(206,114,45)"/><text x="43.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="1284" width="6" height="15" fill="rgb(229,188,1)"/><text x="43.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1300" width="6" height="15" fill="rgb(217,200,45)"/><text x="43.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/offsets.py) (2 samples, 0.52%)</title><rect x="40" y="1316" width="6" height="15" fill="rgb(243,63,13)"/><text x="43.00" y="1326.50"></text></g><g><title>BusinessHourMixin (pandas/tseries/offsets.py) (1 samples, 0.26%)</title><rect x="43" y="1332" width="3" height="15" fill="rgb(220,112,13)"/><text x="46.00" y="1342.50"></text></g><g><title>apply_wraps (pandas/tseries/offsets.py) (1 samples, 0.26%)</title><rect x="43" y="1348" width="3" height="15" fill="rgb(241,134,44)"/><text x="46.00" y="1358.50"></text></g><g><title>wraps (functools.py) (1 samples, 0.26%)</title><rect x="43" y="1364" width="3" height="15" fill="rgb(246,219,2)"/><text x="46.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="40" y="644" width="9" height="15" fill="rgb(229,167,42)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="40" y="660" width="9" height="15" fill="rgb(254,158,32)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="40" y="676" width="9" height="15" fill="rgb(208,99,14)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="40" y="692" width="9" height="15" fill="rgb(208,191,36)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="40" y="708" width="9" height="15" fill="rgb(245,36,51)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.77%)</title><rect x="40" y="724" width="9" height="15" fill="rgb(207,173,29)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="40" y="740" width="9" height="15" fill="rgb(213,120,18)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="40" y="756" width="9" height="15" fill="rgb(253,197,54)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="772" width="3" height="15" fill="rgb(244,8,3)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="788" width="3" height="15" fill="rgb(235,40,41)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="804" width="3" height="15" fill="rgb(225,141,19)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.26%)</title><rect x="46" y="820" width="3" height="15" fill="rgb(206,198,31)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="836" width="3" height="15" fill="rgb(254,24,27)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="852" width="3" height="15" fill="rgb(226,108,28)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="868" width="3" height="15" fill="rgb(231,206,14)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="884" width="3" height="15" fill="rgb(210,83,21)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="900" width="3" height="15" fill="rgb(209,42,41)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.26%)</title><rect x="46" y="916" width="3" height="15" fill="rgb(244,179,41)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="932" width="3" height="15" fill="rgb(206,65,5)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="948" width="3" height="15" fill="rgb(245,183,8)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="964" width="3" height="15" fill="rgb(230,203,46)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="980" width="3" height="15" fill="rgb(229,184,41)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="996" width="3" height="15" fill="rgb(236,157,6)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.26%)</title><rect x="46" y="1012" width="3" height="15" fill="rgb(209,87,0)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1028" width="3" height="15" fill="rgb(238,204,34)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1044" width="3" height="15" fill="rgb(211,219,2)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1060" width="3" height="15" fill="rgb(233,70,27)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1076" width="3" height="15" fill="rgb(244,25,20)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1092" width="3" height="15" fill="rgb(206,194,48)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.26%)</title><rect x="46" y="1108" width="3" height="15" fill="rgb(254,48,26)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1124" width="3" height="15" fill="rgb(209,208,36)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1140" width="3" height="15" fill="rgb(225,20,53)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1156" width="3" height="15" fill="rgb(214,3,12)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1172" width="3" height="15" fill="rgb(240,121,18)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1188" width="3" height="15" fill="rgb(218,0,16)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.26%)</title><rect x="46" y="1204" width="3" height="15" fill="rgb(221,146,18)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1220" width="3" height="15" fill="rgb(232,82,8)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1236" width="3" height="15" fill="rgb(252,193,37)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1252" width="3" height="15" fill="rgb(246,16,10)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1268" width="3" height="15" fill="rgb(230,57,15)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1284" width="3" height="15" fill="rgb(228,211,40)"/><text x="49.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.26%)</title><rect x="46" y="1300" width="3" height="15" fill="rgb(228,144,40)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1316" width="3" height="15" fill="rgb(227,137,5)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1332" width="3" height="15" fill="rgb(206,146,21)"/><text x="49.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1348" width="3" height="15" fill="rgb(254,99,35)"/><text x="49.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1364" width="3" height="15" fill="rgb(209,227,28)"/><text x="49.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1380" width="3" height="15" fill="rgb(209,224,3)"/><text x="49.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (1 samples, 0.26%)</title><rect x="46" y="1396" width="3" height="15" fill="rgb(240,107,4)"/><text x="49.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1412" width="3" height="15" fill="rgb(219,19,47)"/><text x="49.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1428" width="3" height="15" fill="rgb(231,57,22)"/><text x="49.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1444" width="3" height="15" fill="rgb(219,72,40)"/><text x="49.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1460" width="3" height="15" fill="rgb(209,177,26)"/><text x="49.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1476" width="3" height="15" fill="rgb(248,211,41)"/><text x="49.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/numeric.py) (1 samples, 0.26%)</title><rect x="46" y="1492" width="3" height="15" fill="rgb(230,99,30)"/><text x="49.00" y="1502.50"></text></g><g><title>_add_numeric_methods (pandas/core/indexes/base.py) (1 samples, 0.26%)</title><rect x="46" y="1508" width="3" height="15" fill="rgb(213,125,20)"/><text x="49.00" y="1518.50"></text></g><g><title>_add_numeric_methods_unary (pandas/core/indexes/base.py) (1 samples, 0.26%)</title><rect x="46" y="1524" width="3" height="15" fill="rgb(216,121,50)"/><text x="49.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.29%)</title><rect x="37" y="436" width="15" height="15" fill="rgb(232,104,10)"/><text x="40.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.29%)</title><rect x="37" y="452" width="15" height="15" fill="rgb(215,95,7)"/><text x="40.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.29%)</title><rect x="37" y="468" width="15" height="15" fill="rgb(237,47,45)"/><text x="40.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="40" y="484" width="12" height="15" fill="rgb(233,97,48)"/><text x="43.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.03%)</title><rect x="40" y="500" width="12" height="15" fill="rgb(240,61,23)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="40" y="516" width="12" height="15" fill="rgb(238,219,42)"/><text x="43.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.03%)</title><rect x="40" y="532" width="12" height="15" fill="rgb(246,25,22)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="40" y="548" width="12" height="15" fill="rgb(253,205,1)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="40" y="564" width="12" height="15" fill="rgb(206,188,26)"/><text x="43.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="40" y="580" width="12" height="15" fill="rgb(210,189,53)"/><text x="43.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.03%)</title><rect x="40" y="596" width="12" height="15" fill="rgb(210,77,15)"/><text x="43.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="40" y="612" width="12" height="15" fill="rgb(229,146,21)"/><text x="43.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.03%)</title><rect x="40" y="628" width="12" height="15" fill="rgb(233,92,54)"/><text x="43.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="644" width="3" height="15" fill="rgb(221,219,36)"/><text x="52.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="660" width="3" height="15" fill="rgb(216,16,49)"/><text x="52.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="676" width="3" height="15" fill="rgb(207,125,11)"/><text x="52.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="692" width="3" height="15" fill="rgb(251,113,33)"/><text x="52.00" y="702.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="708" width="3" height="15" fill="rgb(217,62,45)"/><text x="52.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="724" width="3" height="15" fill="rgb(207,151,14)"/><text x="52.00" y="734.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="740" width="3" height="15" fill="rgb(247,185,22)"/><text x="52.00" y="750.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="756" width="3" height="15" fill="rgb(211,57,5)"/><text x="52.00" y="766.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="772" width="3" height="15" fill="rgb(209,7,42)"/><text x="52.00" y="782.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="788" width="3" height="15" fill="rgb(205,55,16)"/><text x="52.00" y="798.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="804" width="3" height="15" fill="rgb(245,40,20)"/><text x="52.00" y="814.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.26%)</title><rect x="49" y="820" width="3" height="15" fill="rgb(231,37,25)"/><text x="52.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.55%)</title><rect x="37" y="340" width="18" height="15" fill="rgb(209,62,34)"/><text x="40.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.55%)</title><rect x="37" y="356" width="18" height="15" fill="rgb(206,2,22)"/><text x="40.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.55%)</title><rect x="37" y="372" width="18" height="15" fill="rgb(242,155,5)"/><text x="40.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.55%)</title><rect x="37" y="388" width="18" height="15" fill="rgb(208,94,25)"/><text x="40.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.55%)</title><rect x="37" y="404" width="18" height="15" fill="rgb(245,220,6)"/><text x="40.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.55%)</title><rect x="37" y="420" width="18" height="15" fill="rgb(209,158,46)"/><text x="40.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.26%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(229,175,54)"/><text x="55.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(232,177,33)"/><text x="55.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(229,212,42)"/><text x="55.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(210,216,17)"/><text x="55.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(217,155,41)"/><text x="55.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(220,119,23)"/><text x="55.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="52" y="532" width="3" height="15" fill="rgb(213,120,50)"/><text x="55.00" y="542.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.26%)</title><rect x="55" y="580" width="3" height="15" fill="rgb(236,73,29)"/><text x="58.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="596" width="3" height="15" fill="rgb(234,190,18)"/><text x="58.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="612" width="3" height="15" fill="rgb(233,216,29)"/><text x="58.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="628" width="3" height="15" fill="rgb(211,39,39)"/><text x="58.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="55" y="644" width="3" height="15" fill="rgb(223,156,22)"/><text x="58.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="660" width="3" height="15" fill="rgb(247,189,27)"/><text x="58.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.26%)</title><rect x="55" y="676" width="3" height="15" fill="rgb(215,176,29)"/><text x="58.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="692" width="3" height="15" fill="rgb(235,221,39)"/><text x="58.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="708" width="3" height="15" fill="rgb(238,35,18)"/><text x="58.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="724" width="3" height="15" fill="rgb(213,198,23)"/><text x="58.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="55" y="740" width="3" height="15" fill="rgb(228,43,14)"/><text x="58.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="55" y="756" width="3" height="15" fill="rgb(248,136,47)"/><text x="58.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.26%)</title><rect x="55" y="772" width="3" height="15" fill="rgb(205,187,36)"/><text x="58.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.26%)</title><rect x="55" y="788" width="3" height="15" fill="rgb(223,148,11)"/><text x="58.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.26%)</title><rect x="55" y="804" width="3" height="15" fill="rgb(246,120,9)"/><text x="58.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.26%)</title><rect x="55" y="820" width="3" height="15" fill="rgb(249,96,38)"/><text x="58.00" y="830.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.26%)</title><rect x="55" y="836" width="3" height="15" fill="rgb(224,158,10)"/><text x="58.00" y="846.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.26%)</title><rect x="55" y="852" width="3" height="15" fill="rgb(206,68,44)"/><text x="58.00" y="862.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.26%)</title><rect x="55" y="868" width="3" height="15" fill="rgb(224,147,35)"/><text x="58.00" y="878.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.26%)</title><rect x="55" y="884" width="3" height="15" fill="rgb(245,186,54)"/><text x="58.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 2.58%)</title><rect x="37" y="244" width="30" height="15" fill="rgb(222,220,52)"/><text x="40.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.58%)</title><rect x="37" y="260" width="30" height="15" fill="rgb(230,158,38)"/><text x="40.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.58%)</title><rect x="37" y="276" width="30" height="15" fill="rgb(233,61,45)"/><text x="40.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.58%)</title><rect x="37" y="292" width="30" height="15" fill="rgb(232,58,12)"/><text x="40.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.58%)</title><rect x="37" y="308" width="30" height="15" fill="rgb(246,20,50)"/><text x="40.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.58%)</title><rect x="37" y="324" width="30" height="15" fill="rgb(231,140,39)"/><text x="40.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.03%)</title><rect x="55" y="340" width="12" height="15" fill="rgb(215,109,1)"/><text x="58.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="356" width="12" height="15" fill="rgb(240,177,18)"/><text x="58.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="372" width="12" height="15" fill="rgb(211,10,13)"/><text x="58.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="388" width="12" height="15" fill="rgb(211,193,0)"/><text x="58.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="404" width="12" height="15" fill="rgb(207,83,14)"/><text x="58.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="420" width="12" height="15" fill="rgb(254,214,24)"/><text x="58.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="436" width="12" height="15" fill="rgb(208,174,23)"/><text x="58.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.03%)</title><rect x="55" y="452" width="12" height="15" fill="rgb(240,113,11)"/><text x="58.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="468" width="12" height="15" fill="rgb(250,28,45)"/><text x="58.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.03%)</title><rect x="55" y="484" width="12" height="15" fill="rgb(241,64,44)"/><text x="58.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="500" width="12" height="15" fill="rgb(224,9,21)"/><text x="58.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="516" width="12" height="15" fill="rgb(219,102,11)"/><text x="58.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="532" width="12" height="15" fill="rgb(213,199,5)"/><text x="58.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.03%)</title><rect x="55" y="548" width="12" height="15" fill="rgb(234,45,27)"/><text x="58.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.03%)</title><rect x="55" y="564" width="12" height="15" fill="rgb(246,20,45)"/><text x="58.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.77%)</title><rect x="58" y="580" width="9" height="15" fill="rgb(209,77,9)"/><text x="61.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="596" width="9" height="15" fill="rgb(214,30,11)"/><text x="61.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="612" width="9" height="15" fill="rgb(246,58,13)"/><text x="61.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="628" width="9" height="15" fill="rgb(251,141,51)"/><text x="61.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="58" y="644" width="9" height="15" fill="rgb(238,146,11)"/><text x="61.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="660" width="9" height="15" fill="rgb(220,126,11)"/><text x="61.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.77%)</title><rect x="58" y="676" width="9" height="15" fill="rgb(214,156,12)"/><text x="61.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="692" width="9" height="15" fill="rgb(228,195,47)"/><text x="61.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="708" width="9" height="15" fill="rgb(236,132,23)"/><text x="61.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="724" width="9" height="15" fill="rgb(238,58,22)"/><text x="61.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="58" y="740" width="9" height="15" fill="rgb(254,128,47)"/><text x="61.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="756" width="9" height="15" fill="rgb(220,7,36)"/><text x="61.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.77%)</title><rect x="58" y="772" width="9" height="15" fill="rgb(230,93,50)"/><text x="61.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="788" width="9" height="15" fill="rgb(221,15,37)"/><text x="61.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="804" width="9" height="15" fill="rgb(218,116,52)"/><text x="61.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="820" width="9" height="15" fill="rgb(241,14,22)"/><text x="61.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="58" y="836" width="9" height="15" fill="rgb(210,174,24)"/><text x="61.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="852" width="9" height="15" fill="rgb(227,170,23)"/><text x="61.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (3 samples, 0.77%)</title><rect x="58" y="868" width="9" height="15" fill="rgb(253,80,22)"/><text x="61.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="884" width="9" height="15" fill="rgb(242,101,51)"/><text x="61.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="900" width="9" height="15" fill="rgb(246,224,13)"/><text x="61.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="916" width="9" height="15" fill="rgb(227,177,54)"/><text x="61.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="58" y="932" width="9" height="15" fill="rgb(209,170,44)"/><text x="61.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="948" width="9" height="15" fill="rgb(222,176,45)"/><text x="61.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (3 samples, 0.77%)</title><rect x="58" y="964" width="9" height="15" fill="rgb(218,192,26)"/><text x="61.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="980" width="9" height="15" fill="rgb(205,34,15)"/><text x="61.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="996" width="9" height="15" fill="rgb(210,140,38)"/><text x="61.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="1012" width="9" height="15" fill="rgb(217,206,26)"/><text x="61.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.77%)</title><rect x="58" y="1028" width="9" height="15" fill="rgb(206,220,43)"/><text x="61.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="58" y="1044" width="9" height="15" fill="rgb(209,3,0)"/><text x="61.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/exceptions.py) (3 samples, 0.77%)</title><rect x="58" y="1060" width="9" height="15" fill="rgb(217,24,34)"/><text x="61.00" y="1070.50"></text></g><g><title>0x7fdbc9687e7a (libc-2.29.so) (1 samples, 0.26%)</title><rect x="64" y="1076" width="3" height="15" fill="rgb(209,168,28)"/><text x="67.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.15%)</title><rect x="10" y="68" width="60" height="15" fill="rgb(208,208,36)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.15%)</title><rect x="10" y="84" width="60" height="15" fill="rgb(239,26,46)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.15%)</title><rect x="10" y="100" width="60" height="15" fill="rgb(247,188,19)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 5.15%)</title><rect x="10" y="116" width="60" height="15" fill="rgb(223,70,1)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.15%)</title><rect x="10" y="132" width="60" height="15" fill="rgb(208,55,45)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py) (20 samples, 5.15%)</title><rect x="10" y="148" width="60" height="15" fill="rgb(226,220,23)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.15%)</title><rect x="10" y="164" width="60" height="15" fill="rgb(210,44,38)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 5.15%)</title><rect x="10" y="180" width="60" height="15" fill="rgb(253,69,37)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.84%)</title><rect x="37" y="196" width="33" height="15" fill="rgb(224,91,50)"/><text x="40.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.84%)</title><rect x="37" y="212" width="33" height="15" fill="rgb(244,167,32)"/><text x="40.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.84%)</title><rect x="37" y="228" width="33" height="15" fill="rgb(253,224,54)"/><text x="40.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.26%)</title><rect x="67" y="244" width="3" height="15" fill="rgb(223,189,54)"/><text x="70.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="260" width="3" height="15" fill="rgb(208,111,43)"/><text x="70.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="276" width="3" height="15" fill="rgb(233,46,0)"/><text x="70.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="292" width="3" height="15" fill="rgb(224,42,50)"/><text x="70.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="308" width="3" height="15" fill="rgb(237,8,8)"/><text x="70.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="324" width="3" height="15" fill="rgb(224,183,35)"/><text x="70.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.26%)</title><rect x="67" y="340" width="3" height="15" fill="rgb(228,24,7)"/><text x="70.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="356" width="3" height="15" fill="rgb(213,200,12)"/><text x="70.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="372" width="3" height="15" fill="rgb(240,157,10)"/><text x="70.00" y="382.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="67" y="388" width="3" height="15" fill="rgb(208,2,5)"/><text x="70.00" y="398.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="404" width="3" height="15" fill="rgb(245,74,15)"/><text x="70.00" y="414.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="420" width="3" height="15" fill="rgb(210,2,44)"/><text x="70.00" y="430.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="436" width="3" height="15" fill="rgb(246,104,14)"/><text x="70.00" y="446.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="452" width="3" height="15" fill="rgb(228,93,33)"/><text x="70.00" y="462.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="67" y="468" width="3" height="15" fill="rgb(227,111,30)"/><text x="70.00" y="478.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (1 samples, 0.26%)</title><rect x="70" y="68" width="3" height="15" fill="rgb(232,162,7)"/><text x="73.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (1 samples, 0.26%)</title><rect x="70" y="84" width="3" height="15" fill="rgb(215,226,21)"/><text x="73.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (1 samples, 0.26%)</title><rect x="70" y="100" width="3" height="15" fill="rgb(215,166,16)"/><text x="73.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="70" y="116" width="3" height="15" fill="rgb(237,161,24)"/><text x="73.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="70" y="132" width="3" height="15" fill="rgb(235,156,34)"/><text x="73.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.26%)</title><rect x="70" y="148" width="3" height="15" fill="rgb(219,185,43)"/><text x="73.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.26%)</title><rect x="70" y="164" width="3" height="15" fill="rgb(206,209,19)"/><text x="73.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.26%)</title><rect x="70" y="180" width="3" height="15" fill="rgb(209,111,32)"/><text x="73.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (1 samples, 0.26%)</title><rect x="70" y="196" width="3" height="15" fill="rgb(236,56,35)"/><text x="73.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.26%)</title><rect x="70" y="212" width="3" height="15" fill="rgb(214,167,49)"/><text x="73.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.26%)</title><rect x="70" y="228" width="3" height="15" fill="rgb(249,184,53)"/><text x="73.00" y="238.50"></text></g><g><title>0x7fdb896afff9 (?) (1 samples, 0.26%)</title><rect x="79" y="212" width="3" height="15" fill="rgb(224,96,30)"/><text x="82.00" y="222.50"></text></g><g><title>0x7fdb896aaef6 (?) (1 samples, 0.26%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(213,28,44)"/><text x="82.00" y="238.50"></text></g><g><title>0x7fdb896a02cc (?) (1 samples, 0.26%)</title><rect x="79" y="244" width="3" height="15" fill="rgb(235,210,40)"/><text x="82.00" y="254.50"></text></g><g><title>0x7fdb896bd274 (?) (1 samples, 0.26%)</title><rect x="79" y="260" width="3" height="15" fill="rgb(212,99,18)"/><text x="82.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.26%)</title><rect x="79" y="276" width="3" height="15" fill="rgb(234,61,39)"/><text x="82.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="79" y="292" width="3" height="15" fill="rgb(219,12,45)"/><text x="82.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="79" y="308" width="3" height="15" fill="rgb(228,175,6)"/><text x="82.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.26%)</title><rect x="79" y="324" width="3" height="15" fill="rgb(224,79,11)"/><text x="82.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.26%)</title><rect x="79" y="340" width="3" height="15" fill="rgb(212,154,13)"/><text x="82.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.26%)</title><rect x="82" y="212" width="4" height="15" fill="rgb(230,204,52)"/><text x="85.00" y="222.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="86" y="292" width="3" height="15" fill="rgb(228,227,8)"/><text x="89.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="86" y="308" width="3" height="15" fill="rgb(205,178,41)"/><text x="89.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="86" y="324" width="3" height="15" fill="rgb(250,191,52)"/><text x="89.00" y="334.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="92" y="356" width="3" height="15" fill="rgb(207,101,42)"/><text x="95.00" y="366.50"></text></g><g><title>onnxruntime::SliceIterator&lt;float&gt;::SliceIterator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="92" y="372" width="3" height="15" fill="rgb(252,196,26)"/><text x="95.00" y="382.50"></text></g><g><title>0x7fdbc9671d07 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="95" y="356" width="3" height="15" fill="rgb(246,38,12)"/><text x="98.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="92" y="340" width="9" height="15" fill="rgb(210,106,2)"/><text x="95.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::Data&lt;int&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="98" y="356" width="3" height="15" fill="rgb(205,228,28)"/><text x="101.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="101" y="340" width="3" height="15" fill="rgb(222,160,9)"/><text x="104.00" y="350.50"></text></g><g><title>0x7fdbc969214e (libc-2.29.so) (1 samples, 0.26%)</title><rect x="101" y="356" width="3" height="15" fill="rgb(210,138,7)"/><text x="104.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="104" y="340" width="3" height="15" fill="rgb(221,87,48)"/><text x="107.00" y="350.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="340" width="3" height="15" fill="rgb(216,121,9)"/><text x="110.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="356" width="3" height="15" fill="rgb(254,55,17)"/><text x="110.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="372" width="3" height="15" fill="rgb(241,26,1)"/><text x="110.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="388" width="3" height="15" fill="rgb(230,19,12)"/><text x="110.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="404" width="3" height="15" fill="rgb(248,43,7)"/><text x="110.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="420" width="3" height="15" fill="rgb(223,55,15)"/><text x="110.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="436" width="3" height="15" fill="rgb(251,112,30)"/><text x="110.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="452" width="3" height="15" fill="rgb(213,120,0)"/><text x="110.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="468" width="3" height="15" fill="rgb(218,10,10)"/><text x="110.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="484" width="3" height="15" fill="rgb(209,194,28)"/><text x="110.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="107" y="500" width="3" height="15" fill="rgb(211,186,34)"/><text x="110.00" y="510.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="110" y="340" width="3" height="15" fill="rgb(205,52,7)"/><text x="113.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="110" y="356" width="3" height="15" fill="rgb(216,61,4)"/><text x="113.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="110" y="372" width="3" height="15" fill="rgb(212,38,18)"/><text x="113.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="110" y="388" width="3" height="15" fill="rgb(208,168,11)"/><text x="113.00" y="398.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="113" y="340" width="3" height="15" fill="rgb(242,39,36)"/><text x="116.00" y="350.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="113" y="356" width="3" height="15" fill="rgb(216,89,22)"/><text x="116.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.09%)</title><rect x="89" y="292" width="36" height="15" fill="rgb(237,55,11)"/><text x="92.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.09%)</title><rect x="89" y="308" width="36" height="15" fill="rgb(229,179,20)"/><text x="92.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.09%)</title><rect x="89" y="324" width="36" height="15" fill="rgb(224,180,46)"/><text x="92.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="116" y="340" width="9" height="15" fill="rgb(205,171,42)"/><text x="119.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="116" y="356" width="9" height="15" fill="rgb(252,134,21)"/><text x="119.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="116" y="372" width="9" height="15" fill="rgb(221,39,51)"/><text x="119.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="116" y="388" width="9" height="15" fill="rgb(250,12,54)"/><text x="119.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="116" y="404" width="9" height="15" fill="rgb(248,52,18)"/><text x="119.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.52%)</title><rect x="119" y="420" width="6" height="15" fill="rgb(248,186,44)"/><text x="122.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.52%)</title><rect x="119" y="436" width="6" height="15" fill="rgb(223,132,36)"/><text x="122.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="122" y="452" width="3" height="15" fill="rgb(252,71,42)"/><text x="125.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="122" y="468" width="3" height="15" fill="rgb(215,100,20)"/><text x="125.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="122" y="484" width="3" height="15" fill="rgb(217,104,38)"/><text x="125.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.61%)</title><rect x="86" y="260" width="42" height="15" fill="rgb(211,75,29)"/><text x="89.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.61%)</title><rect x="86" y="276" width="42" height="15" fill="rgb(230,71,20)"/><text x="89.00" y="286.50">onn..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="125" y="292" width="3" height="15" fill="rgb(205,212,3)"/><text x="128.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.26%)</title><rect x="125" y="308" width="3" height="15" fill="rgb(219,55,14)"/><text x="128.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="128" y="260" width="3" height="15" fill="rgb(252,131,45)"/><text x="131.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.12%)</title><rect x="86" y="244" width="48" height="15" fill="rgb(214,221,18)"/><text x="89.00" y="254.50">onnx..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="131" y="260" width="3" height="15" fill="rgb(233,66,26)"/><text x="134.00" y="270.50"></text></g><g><title>0x7fdbb913e7a0 (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="131" y="276" width="3" height="15" fill="rgb(247,42,12)"/><text x="134.00" y="286.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (21 samples, 5.41%)</title><rect x="73" y="68" width="64" height="15" fill="rgb(213,209,40)"/><text x="76.00" y="78.50">profile..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (21 samples, 5.41%)</title><rect x="73" y="84" width="64" height="15" fill="rgb(219,211,22)"/><text x="76.00" y="94.50">setup_p..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (21 samples, 5.41%)</title><rect x="73" y="100" width="64" height="15" fill="rgb(207,156,4)"/><text x="76.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (21 samples, 5.41%)</title><rect x="73" y="116" width="64" height="15" fill="rgb(216,48,13)"/><text x="76.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (21 samples, 5.41%)</title><rect x="73" y="132" width="64" height="15" fill="rgb(224,211,41)"/><text x="76.00" y="142.50">&lt;lambda..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (20 samples, 5.15%)</title><rect x="76" y="148" width="61" height="15" fill="rgb(209,170,22)"/><text x="79.00" y="158.50">run (m..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (20 samples, 5.15%)</title><rect x="76" y="164" width="61" height="15" fill="rgb(237,183,10)"/><text x="79.00" y="174.50">_run_w..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (20 samples, 5.15%)</title><rect x="76" y="180" width="61" height="15" fill="rgb(235,229,19)"/><text x="79.00" y="190.50">run (m..</text></g><g><title>run (onnxruntime/capi/session.py) (20 samples, 5.15%)</title><rect x="76" y="196" width="61" height="15" fill="rgb(218,90,24)"/><text x="79.00" y="206.50">run (o..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.38%)</title><rect x="86" y="212" width="51" height="15" fill="rgb(207,130,10)"/><text x="89.00" y="222.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.38%)</title><rect x="86" y="228" width="51" height="15" fill="rgb(246,119,7)"/><text x="89.00" y="238.50">void ..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="134" y="244" width="3" height="15" fill="rgb(221,112,34)"/><text x="137.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="134" y="260" width="3" height="15" fill="rgb(234,208,48)"/><text x="137.00" y="270.50"></text></g><g><title>std::type_info::hash_code (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="134" y="276" width="3" height="15" fill="rgb(229,99,17)"/><text x="137.00" y="286.50"></text></g><g><title>0x7fdbc9687e9d (libc-2.29.so) (1 samples, 0.26%)</title><rect x="134" y="292" width="3" height="15" fill="rgb(211,37,20)"/><text x="137.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.26%)</title><rect x="201" y="196" width="3" height="15" fill="rgb(226,201,49)"/><text x="204.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="225" y="228" width="3" height="15" fill="rgb(210,195,17)"/><text x="228.00" y="238.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.26%)</title><rect x="228" y="228" width="4" height="15" fill="rgb(225,121,48)"/><text x="231.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.26%)</title><rect x="228" y="244" width="4" height="15" fill="rgb(214,174,4)"/><text x="231.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.26%)</title><rect x="235" y="244" width="3" height="15" fill="rgb(219,0,1)"/><text x="238.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="235" y="260" width="3" height="15" fill="rgb(233,104,8)"/><text x="238.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="235" y="276" width="3" height="15" fill="rgb(249,200,7)"/><text x="238.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="235" y="292" width="3" height="15" fill="rgb(205,1,38)"/><text x="238.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="235" y="308" width="3" height="15" fill="rgb(220,167,28)"/><text x="238.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (7 samples, 1.80%)</title><rect x="219" y="212" width="22" height="15" fill="rgb(231,92,43)"/><text x="222.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c) (3 samples, 0.77%)</title><rect x="232" y="228" width="9" height="15" fill="rgb(235,46,7)"/><text x="235.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.26%)</title><rect x="238" y="244" width="3" height="15" fill="rgb(248,193,17)"/><text x="241.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="238" y="260" width="3" height="15" fill="rgb(243,66,26)"/><text x="241.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.26%)</title><rect x="238" y="276" width="3" height="15" fill="rgb(226,49,28)"/><text x="241.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.26%)</title><rect x="241" y="212" width="3" height="15" fill="rgb(237,105,12)"/><text x="244.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.26%)</title><rect x="241" y="228" width="3" height="15" fill="rgb(217,33,5)"/><text x="244.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.26%)</title><rect x="241" y="244" width="3" height="15" fill="rgb(227,56,30)"/><text x="244.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.26%)</title><rect x="241" y="260" width="3" height="15" fill="rgb(214,2,39)"/><text x="244.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (4 samples, 1.03%)</title><rect x="244" y="212" width="12" height="15" fill="rgb(237,3,4)"/><text x="247.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 0.77%)</title><rect x="247" y="228" width="9" height="15" fill="rgb(213,103,28)"/><text x="250.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.77%)</title><rect x="247" y="244" width="9" height="15" fill="rgb(217,229,2)"/><text x="250.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (2 samples, 0.52%)</title><rect x="250" y="260" width="6" height="15" fill="rgb(250,159,38)"/><text x="253.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.52%)</title><rect x="250" y="276" width="6" height="15" fill="rgb(218,10,32)"/><text x="253.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (2 samples, 0.52%)</title><rect x="250" y="292" width="6" height="15" fill="rgb(216,18,10)"/><text x="253.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (2 samples, 0.52%)</title><rect x="250" y="308" width="6" height="15" fill="rgb(218,73,52)"/><text x="253.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (2 samples, 0.52%)</title><rect x="250" y="324" width="6" height="15" fill="rgb(243,127,19)"/><text x="253.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (2 samples, 0.52%)</title><rect x="250" y="340" width="6" height="15" fill="rgb(243,144,38)"/><text x="253.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.52%)</title><rect x="250" y="356" width="6" height="15" fill="rgb(251,219,6)"/><text x="253.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.26%)</title><rect x="253" y="372" width="3" height="15" fill="rgb(237,190,42)"/><text x="256.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="253" y="388" width="3" height="15" fill="rgb(205,202,11)"/><text x="256.00" y="398.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.26%)</title><rect x="253" y="404" width="3" height="15" fill="rgb(234,39,47)"/><text x="256.00" y="414.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (3 samples, 0.77%)</title><rect x="274" y="260" width="9" height="15" fill="rgb(246,177,40)"/><text x="277.00" y="270.50"></text></g><g><title>array_item (mapping.c) (3 samples, 0.77%)</title><rect x="274" y="276" width="9" height="15" fill="rgb(211,190,39)"/><text x="277.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c) (3 samples, 0.77%)</title><rect x="274" y="292" width="9" height="15" fill="rgb(219,122,30)"/><text x="277.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.77%)</title><rect x="274" y="308" width="9" height="15" fill="rgb(221,81,2)"/><text x="277.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.26%)</title><rect x="280" y="324" width="3" height="15" fill="rgb(240,185,5)"/><text x="283.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="280" y="340" width="3" height="15" fill="rgb(207,197,24)"/><text x="283.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (2 samples, 0.52%)</title><rect x="289" y="308" width="6" height="15" fill="rgb(208,107,8)"/><text x="292.00" y="318.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="292" y="324" width="3" height="15" fill="rgb(233,88,53)"/><text x="295.00" y="334.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="292" y="340" width="3" height="15" fill="rgb(218,196,52)"/><text x="295.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.26%)</title><rect x="301" y="340" width="4" height="15" fill="rgb(234,148,35)"/><text x="304.00" y="350.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (3 samples, 0.77%)</title><rect x="298" y="324" width="10" height="15" fill="rgb(240,128,33)"/><text x="301.00" y="334.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.26%)</title><rect x="305" y="340" width="3" height="15" fill="rgb(251,16,54)"/><text x="308.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.26%)</title><rect x="305" y="356" width="3" height="15" fill="rgb(227,19,41)"/><text x="308.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.26%)</title><rect x="305" y="372" width="3" height="15" fill="rgb(233,228,17)"/><text x="308.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="305" y="388" width="3" height="15" fill="rgb(215,224,11)"/><text x="308.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="305" y="404" width="3" height="15" fill="rgb(209,134,44)"/><text x="308.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="305" y="420" width="3" height="15" fill="rgb(232,135,21)"/><text x="308.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="305" y="436" width="3" height="15" fill="rgb(212,183,51)"/><text x="308.00" y="446.50"></text></g><g><title>0x7fdbc9672b12 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="305" y="452" width="3" height="15" fill="rgb(238,165,44)"/><text x="308.00" y="462.50"></text></g><g><title>0x7fdbc9691def (libc-2.29.so) (1 samples, 0.26%)</title><rect x="308" y="340" width="3" height="15" fill="rgb(234,25,33)"/><text x="311.00" y="350.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c) (2 samples, 0.52%)</title><rect x="308" y="324" width="6" height="15" fill="rgb(206,52,9)"/><text x="311.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c) (1 samples, 0.26%)</title><rect x="311" y="340" width="3" height="15" fill="rgb(254,69,46)"/><text x="314.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.26%)</title><rect x="311" y="356" width="3" height="15" fill="rgb(250,218,10)"/><text x="314.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="311" y="372" width="3" height="15" fill="rgb(239,138,22)"/><text x="314.00" y="382.50"></text></g><g><title>0x7fdbc9673514 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="311" y="388" width="3" height="15" fill="rgb(230,25,49)"/><text x="314.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.52%)</title><rect x="314" y="324" width="6" height="15" fill="rgb(233,150,6)"/><text x="317.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.52%)</title><rect x="314" y="340" width="6" height="15" fill="rgb(247,198,38)"/><text x="317.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.52%)</title><rect x="314" y="356" width="6" height="15" fill="rgb(249,222,42)"/><text x="317.00" y="366.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (21 samples, 5.41%)</title><rect x="262" y="228" width="64" height="15" fill="rgb(206,212,48)"/><text x="265.00" y="238.50">choose ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (21 samples, 5.41%)</title><rect x="262" y="244" width="64" height="15" fill="rgb(228,169,49)"/><text x="265.00" y="254.50">array_i..</text></g><g><title>choose (numpy/core/fromnumeric.py) (14 samples, 3.61%)</title><rect x="283" y="260" width="43" height="15" fill="rgb(245,116,27)"/><text x="286.00" y="270.50">choo..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (12 samples, 3.09%)</title><rect x="289" y="276" width="37" height="15" fill="rgb(249,189,48)"/><text x="292.00" y="286.50">_wr..</text></g><g><title>array_choose (methods.c) (12 samples, 3.09%)</title><rect x="289" y="292" width="37" height="15" fill="rgb(207,134,31)"/><text x="292.00" y="302.50">arr..</text></g><g><title>PyArray_Choose (item_selection.c) (10 samples, 2.58%)</title><rect x="295" y="308" width="31" height="15" fill="rgb(233,105,43)"/><text x="298.00" y="318.50">Py..</text></g><g><title>arraymultiter_dealloc (iterators.c) (2 samples, 0.52%)</title><rect x="320" y="324" width="6" height="15" fill="rgb(215,45,51)"/><text x="323.00" y="334.50"></text></g><g><title>0x7fdbc9671dfb (libc-2.29.so) (1 samples, 0.26%)</title><rect x="323" y="340" width="3" height="15" fill="rgb(243,22,31)"/><text x="326.00" y="350.50"></text></g><g><title>0x7fdbc9670aab (libc-2.29.so) (1 samples, 0.26%)</title><rect x="323" y="356" width="3" height="15" fill="rgb(220,90,52)"/><text x="326.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (31 samples, 7.99%)</title><rect x="256" y="212" width="94" height="15" fill="rgb(230,90,14)"/><text x="259.00" y="222.50">_run (mlpro..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (8 samples, 2.06%)</title><rect x="326" y="228" width="24" height="15" fill="rgb(213,16,6)"/><text x="329.00" y="238.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.80%)</title><rect x="329" y="244" width="21" height="15" fill="rgb(249,183,7)"/><text x="332.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (7 samples, 1.80%)</title><rect x="329" y="260" width="21" height="15" fill="rgb(227,210,46)"/><text x="332.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 1.29%)</title><rect x="335" y="276" width="15" height="15" fill="rgb(206,115,17)"/><text x="338.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c) (2 samples, 0.52%)</title><rect x="344" y="292" width="6" height="15" fill="rgb(240,104,20)"/><text x="347.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c) (1 samples, 0.26%)</title><rect x="347" y="308" width="3" height="15" fill="rgb(216,201,46)"/><text x="350.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.26%)</title><rect x="347" y="324" width="3" height="15" fill="rgb(211,32,6)"/><text x="350.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.26%)</title><rect x="347" y="340" width="3" height="15" fill="rgb(254,37,28)"/><text x="350.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="347" y="356" width="3" height="15" fill="rgb(219,54,5)"/><text x="350.00" y="366.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.26%)</title><rect x="347" y="372" width="3" height="15" fill="rgb(214,55,2)"/><text x="350.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py) (2 samples, 0.52%)</title><rect x="350" y="212" width="6" height="15" fill="rgb(226,154,40)"/><text x="353.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.52%)</title><rect x="350" y="228" width="6" height="15" fill="rgb(205,142,18)"/><text x="353.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.52%)</title><rect x="350" y="244" width="6" height="15" fill="rgb(232,168,6)"/><text x="353.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.52%)</title><rect x="350" y="260" width="6" height="15" fill="rgb(227,20,36)"/><text x="353.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.52%)</title><rect x="350" y="276" width="6" height="15" fill="rgb(245,200,52)"/><text x="353.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.52%)</title><rect x="350" y="292" width="6" height="15" fill="rgb(236,207,27)"/><text x="353.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="353" y="308" width="3" height="15" fill="rgb(235,134,16)"/><text x="356.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.26%)</title><rect x="353" y="324" width="3" height="15" fill="rgb(218,137,39)"/><text x="356.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="353" y="340" width="3" height="15" fill="rgb(251,73,47)"/><text x="356.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="353" y="356" width="3" height="15" fill="rgb(227,21,48)"/><text x="356.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="353" y="372" width="3" height="15" fill="rgb(210,133,22)"/><text x="356.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="353" y="388" width="3" height="15" fill="rgb(232,68,22)"/><text x="356.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.26%)</title><rect x="359" y="260" width="3" height="15" fill="rgb(253,98,27)"/><text x="362.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.26%)</title><rect x="359" y="276" width="3" height="15" fill="rgb(248,177,52)"/><text x="362.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.26%)</title><rect x="359" y="292" width="3" height="15" fill="rgb(218,37,38)"/><text x="362.00" y="302.50"></text></g><g><title>array_astype (methods.c) (3 samples, 0.77%)</title><rect x="359" y="244" width="9" height="15" fill="rgb(225,126,10)"/><text x="362.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (2 samples, 0.52%)</title><rect x="362" y="260" width="6" height="15" fill="rgb(212,212,15)"/><text x="365.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.52%)</title><rect x="362" y="276" width="6" height="15" fill="rgb(235,54,4)"/><text x="365.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.52%)</title><rect x="362" y="292" width="6" height="15" fill="rgb(219,222,3)"/><text x="365.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.52%)</title><rect x="362" y="308" width="6" height="15" fill="rgb(205,9,34)"/><text x="365.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (2 samples, 0.52%)</title><rect x="368" y="260" width="6" height="15" fill="rgb(205,69,5)"/><text x="371.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.52%)</title><rect x="368" y="276" width="6" height="15" fill="rgb(236,49,6)"/><text x="371.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (2 samples, 0.52%)</title><rect x="368" y="292" width="6" height="15" fill="rgb(239,137,10)"/><text x="371.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.52%)</title><rect x="368" y="308" width="6" height="15" fill="rgb(231,151,35)"/><text x="371.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (2 samples, 0.52%)</title><rect x="368" y="324" width="6" height="15" fill="rgb(228,181,36)"/><text x="371.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.26%)</title><rect x="371" y="340" width="3" height="15" fill="rgb(218,116,25)"/><text x="374.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.26%)</title><rect x="371" y="356" width="3" height="15" fill="rgb(224,144,9)"/><text x="374.00" y="366.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c) (1 samples, 0.26%)</title><rect x="371" y="372" width="3" height="15" fill="rgb(222,135,45)"/><text x="374.00" y="382.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.26%)</title><rect x="374" y="292" width="3" height="15" fill="rgb(209,141,34)"/><text x="377.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.26%)</title><rect x="374" y="308" width="3" height="15" fill="rgb(240,204,48)"/><text x="377.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="374" y="324" width="3" height="15" fill="rgb(208,136,12)"/><text x="377.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.52%)</title><rect x="374" y="276" width="7" height="15" fill="rgb(252,12,26)"/><text x="377.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="377" y="292" width="4" height="15" fill="rgb(240,79,10)"/><text x="380.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="377" y="308" width="4" height="15" fill="rgb(240,147,5)"/><text x="380.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.26%)</title><rect x="377" y="324" width="4" height="15" fill="rgb(234,52,50)"/><text x="380.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 2.32%)</title><rect x="356" y="212" width="28" height="15" fill="rgb(251,198,10)"/><text x="359.00" y="222.50">_..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 2.32%)</title><rect x="356" y="228" width="28" height="15" fill="rgb(241,171,30)"/><text x="359.00" y="238.50">_..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (5 samples, 1.29%)</title><rect x="368" y="244" width="16" height="15" fill="rgb(217,50,46)"/><text x="371.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.77%)</title><rect x="374" y="260" width="10" height="15" fill="rgb(218,186,8)"/><text x="377.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.26%)</title><rect x="381" y="276" width="3" height="15" fill="rgb(217,110,13)"/><text x="384.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="381" y="292" width="3" height="15" fill="rgb(236,80,39)"/><text x="384.00" y="302.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.26%)</title><rect x="384" y="212" width="3" height="15" fill="rgb(212,35,40)"/><text x="387.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="384" y="228" width="3" height="15" fill="rgb(227,48,33)"/><text x="387.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="384" y="244" width="3" height="15" fill="rgb(230,76,12)"/><text x="387.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="387" y="308" width="3" height="15" fill="rgb(236,27,50)"/><text x="390.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.52%)</title><rect x="387" y="276" width="6" height="15" fill="rgb(240,222,31)"/><text x="390.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.52%)</title><rect x="387" y="292" width="6" height="15" fill="rgb(216,204,40)"/><text x="390.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="390" y="308" width="3" height="15" fill="rgb(245,21,32)"/><text x="393.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.52%)</title><rect x="393" y="276" width="6" height="15" fill="rgb(213,148,46)"/><text x="396.00" y="286.50"></text></g><g><title>0x7fdbc9692120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="396" y="292" width="3" height="15" fill="rgb(246,0,39)"/><text x="399.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.29%)</title><rect x="387" y="260" width="15" height="15" fill="rgb(249,75,40)"/><text x="390.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="399" y="276" width="3" height="15" fill="rgb(209,155,40)"/><text x="402.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="399" y="292" width="3" height="15" fill="rgb(237,6,7)"/><text x="402.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="399" y="308" width="3" height="15" fill="rgb(241,142,41)"/><text x="402.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (6 samples, 1.55%)</title><rect x="387" y="228" width="18" height="15" fill="rgb(219,115,36)"/><text x="390.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.55%)</title><rect x="387" y="244" width="18" height="15" fill="rgb(236,164,41)"/><text x="390.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="402" y="260" width="3" height="15" fill="rgb(248,186,31)"/><text x="405.00" y="270.50"></text></g><g><title>0x7fdbc9692120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="402" y="276" width="3" height="15" fill="rgb(212,162,8)"/><text x="405.00" y="286.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (3 samples, 0.77%)</title><rect x="411" y="276" width="9" height="15" fill="rgb(243,87,30)"/><text x="414.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.52%)</title><rect x="414" y="292" width="6" height="15" fill="rgb(216,209,1)"/><text x="417.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (1 samples, 0.26%)</title><rect x="417" y="308" width="3" height="15" fill="rgb(252,68,48)"/><text x="420.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.26%)</title><rect x="417" y="324" width="3" height="15" fill="rgb(249,197,20)"/><text x="420.00" y="334.50"></text></g><g><title>array_argmin (methods.c) (1 samples, 0.26%)</title><rect x="417" y="340" width="3" height="15" fill="rgb(252,172,11)"/><text x="420.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c) (1 samples, 0.26%)</title><rect x="417" y="356" width="3" height="15" fill="rgb(250,177,37)"/><text x="420.00" y="366.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="417" y="372" width="3" height="15" fill="rgb(209,169,26)"/><text x="420.00" y="382.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.26%)</title><rect x="420" y="276" width="3" height="15" fill="rgb(234,124,41)"/><text x="423.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.26%)</title><rect x="420" y="292" width="3" height="15" fill="rgb(212,87,12)"/><text x="423.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.26%)</title><rect x="420" y="308" width="3" height="15" fill="rgb(237,16,23)"/><text x="423.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.26%)</title><rect x="420" y="324" width="3" height="15" fill="rgb(212,69,29)"/><text x="423.00" y="334.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.26%)</title><rect x="420" y="340" width="3" height="15" fill="rgb(247,170,45)"/><text x="423.00" y="350.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.26%)</title><rect x="420" y="356" width="3" height="15" fill="rgb(240,189,5)"/><text x="423.00" y="366.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.26%)</title><rect x="426" y="324" width="3" height="15" fill="rgb(232,119,26)"/><text x="429.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.26%)</title><rect x="426" y="340" width="3" height="15" fill="rgb(251,33,37)"/><text x="429.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.26%)</title><rect x="426" y="356" width="3" height="15" fill="rgb(230,35,17)"/><text x="429.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (9 samples, 2.32%)</title><rect x="405" y="228" width="27" height="15" fill="rgb(207,168,13)"/><text x="408.00" y="238.50">_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (9 samples, 2.32%)</title><rect x="405" y="244" width="27" height="15" fill="rgb(237,139,24)"/><text x="408.00" y="254.50">_..</text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (9 samples, 2.32%)</title><rect x="405" y="260" width="27" height="15" fill="rgb(215,25,34)"/><text x="408.00" y="270.50">_..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (3 samples, 0.77%)</title><rect x="423" y="276" width="9" height="15" fill="rgb(242,215,54)"/><text x="426.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.52%)</title><rect x="426" y="292" width="6" height="15" fill="rgb(231,76,14)"/><text x="429.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (2 samples, 0.52%)</title><rect x="426" y="308" width="6" height="15" fill="rgb(211,187,20)"/><text x="429.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.26%)</title><rect x="429" y="324" width="3" height="15" fill="rgb(253,31,51)"/><text x="432.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="429" y="340" width="3" height="15" fill="rgb(229,27,47)"/><text x="432.00" y="350.50"></text></g><g><title>0x7fdb8a10a54f (?) (1 samples, 0.26%)</title><rect x="435" y="244" width="3" height="15" fill="rgb(247,97,11)"/><text x="438.00" y="254.50"></text></g><g><title>0x7fdb8a11065e (?) (1 samples, 0.26%)</title><rect x="435" y="260" width="3" height="15" fill="rgb(228,54,41)"/><text x="438.00" y="270.50"></text></g><g><title>0x7fdb8a11050f (?) (1 samples, 0.26%)</title><rect x="435" y="276" width="3" height="15" fill="rgb(218,118,18)"/><text x="438.00" y="286.50"></text></g><g><title>0x7fdb8a116d6c (?) (1 samples, 0.26%)</title><rect x="435" y="292" width="3" height="15" fill="rgb(232,143,12)"/><text x="438.00" y="302.50"></text></g><g><title>0x7fdb93677ab9 (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="435" y="308" width="3" height="15" fill="rgb(243,133,34)"/><text x="438.00" y="318.50"></text></g><g><title>0x7fdb93678ead (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="435" y="324" width="3" height="15" fill="rgb(248,145,15)"/><text x="438.00" y="334.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (1 samples, 0.26%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(214,163,54)"/><text x="441.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (1 samples, 0.26%)</title><rect x="438" y="308" width="3" height="15" fill="rgb(250,170,24)"/><text x="441.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (1 samples, 0.26%)</title><rect x="438" y="324" width="3" height="15" fill="rgb(212,157,27)"/><text x="441.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, false&gt;::_Head_base (tuple) (1 samples, 0.26%)</title><rect x="438" y="340" width="3" height="15" fill="rgb(247,161,34)"/><text x="441.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;::type_caster (cast.h) (1 samples, 0.26%)</title><rect x="438" y="356" width="3" height="15" fill="rgb(212,25,20)"/><text x="441.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.26%)</title><rect x="438" y="372" width="3" height="15" fill="rgb(213,162,17)"/><text x="441.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.26%)</title><rect x="438" y="388" width="3" height="15" fill="rgb(234,144,50)"/><text x="441.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.26%)</title><rect x="438" y="404" width="3" height="15" fill="rgb(243,186,6)"/><text x="441.00" y="414.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.26%)</title><rect x="438" y="420" width="3" height="15" fill="rgb(237,37,11)"/><text x="441.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.26%)</title><rect x="438" y="436" width="3" height="15" fill="rgb(244,221,2)"/><text x="441.00" y="446.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.26%)</title><rect x="438" y="452" width="3" height="15" fill="rgb(249,37,0)"/><text x="441.00" y="462.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.26%)</title><rect x="438" y="468" width="3" height="15" fill="rgb(231,4,23)"/><text x="441.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.26%)</title><rect x="438" y="484" width="3" height="15" fill="rgb(217,38,28)"/><text x="441.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.26%)</title><rect x="438" y="500" width="3" height="15" fill="rgb(213,7,20)"/><text x="441.00" y="510.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.26%)</title><rect x="438" y="516" width="3" height="15" fill="rgb(252,134,2)"/><text x="441.00" y="526.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="438" y="532" width="3" height="15" fill="rgb(246,165,3)"/><text x="441.00" y="542.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="438" y="548" width="3" height="15" fill="rgb(205,204,34)"/><text x="441.00" y="558.50"></text></g><g><title>0x7fdb93678e5b (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="441" y="484" width="3" height="15" fill="rgb(216,51,50)"/><text x="444.00" y="494.50"></text></g><g><title>0x7fdb93678ea0 (libgomp.so.1.0.0) (7 samples, 1.80%)</title><rect x="444" y="484" width="22" height="15" fill="rgb(215,21,47)"/><text x="447.00" y="494.50">0..</text></g><g><title>0x7fdb93678ea9 (libgomp.so.1.0.0) (13 samples, 3.35%)</title><rect x="466" y="484" width="39" height="15" fill="rgb(219,203,34)"/><text x="469.00" y="494.50">0x7..</text></g><g><title>0x7fdb93678eab (libgomp.so.1.0.0) (21 samples, 5.41%)</title><rect x="505" y="484" width="64" height="15" fill="rgb(237,197,44)"/><text x="508.00" y="494.50">0x7fdb9..</text></g><g><title>0x7fdb93677ab9 (libgomp.so.1.0.0) (56 samples, 14.43%)</title><rect x="441" y="468" width="171" height="15" fill="rgb(237,42,40)"/><text x="444.00" y="478.50">0x7fdb93677ab9 (libgom..</text></g><g><title>0x7fdb93678ead (libgomp.so.1.0.0) (14 samples, 3.61%)</title><rect x="569" y="484" width="43" height="15" fill="rgb(252,85,22)"/><text x="572.00" y="494.50">0x7f..</text></g><g><title>0x7fdb936766fd (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="612" y="484" width="3" height="15" fill="rgb(228,72,32)"/><text x="615.00" y="494.50"></text></g><g><title>0x7fdb93678cf9 (libgomp.so.1.0.0) (2 samples, 0.52%)</title><rect x="615" y="500" width="6" height="15" fill="rgb(225,66,8)"/><text x="618.00" y="510.50"></text></g><g><title>0x7fdb93678cfb (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="621" y="500" width="3" height="15" fill="rgb(211,116,25)"/><text x="624.00" y="510.50"></text></g><g><title>0x7fdb93678cfd (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="624" y="500" width="3" height="15" fill="rgb(218,23,1)"/><text x="627.00" y="510.50"></text></g><g><title>0x7fdb93676daa (libgomp.so.1.0.0) (5 samples, 1.29%)</title><rect x="615" y="484" width="15" height="15" fill="rgb(215,190,35)"/><text x="618.00" y="494.50"></text></g><g><title>0x7fdb93678d6d (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="627" y="500" width="3" height="15" fill="rgb(214,114,2)"/><text x="630.00" y="510.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (63 samples, 16.24%)</title><rect x="441" y="292" width="192" height="15" fill="rgb(243,112,50)"/><text x="444.00" y="302.50">pybind11::detail::argumen..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (63 samples, 16.24%)</title><rect x="441" y="308" width="192" height="15" fill="rgb(217,184,50)"/><text x="444.00" y="318.50">pybind11::detail::argumen..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (63 samples, 16.24%)</title><rect x="441" y="324" width="192" height="15" fill="rgb(208,71,43)"/><text x="444.00" y="334.50">pybind11::cpp_function::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (63 samples, 16.24%)</title><rect x="441" y="340" width="192" height="15" fill="rgb(241,204,4)"/><text x="444.00" y="350.50">pybind11::array_t&lt;float, ..</text></g><g><title>pybind11::array::~array (numpy.h) (63 samples, 16.24%)</title><rect x="441" y="356" width="192" height="15" fill="rgb(207,61,9)"/><text x="444.00" y="366.50">pybind11::array::~array (..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (63 samples, 16.24%)</title><rect x="441" y="372" width="192" height="15" fill="rgb(243,76,19)"/><text x="444.00" y="382.50">pybind11::buffer::~buffer..</text></g><g><title>pybind11::object::~object (pytypes.h) (63 samples, 16.24%)</title><rect x="441" y="388" width="192" height="15" fill="rgb(248,24,30)"/><text x="444.00" y="398.50">pybind11::object::~object..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (63 samples, 16.24%)</title><rect x="441" y="404" width="192" height="15" fill="rgb(230,5,19)"/><text x="444.00" y="414.50">pybind11::handle::dec_ref..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (63 samples, 16.24%)</title><rect x="441" y="420" width="192" height="15" fill="rgb(241,152,29)"/><text x="444.00" y="430.50">RuntimeTreeEnsembleRegres..</text></g><g><title>pybind11::array::size (numpy.h) (63 samples, 16.24%)</title><rect x="441" y="436" width="192" height="15" fill="rgb(218,45,37)"/><text x="444.00" y="446.50">pybind11::array::size (nu..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (63 samples, 16.24%)</title><rect x="441" y="452" width="192" height="15" fill="rgb(236,213,18)"/><text x="444.00" y="462.50">std::accumulate&lt;long cons..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (7 samples, 1.80%)</title><rect x="612" y="468" width="21" height="15" fill="rgb(253,173,31)"/><text x="615.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.26%)</title><rect x="630" y="484" width="3" height="15" fill="rgb(222,145,9)"/><text x="633.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (1 samples, 0.26%)</title><rect x="630" y="500" width="3" height="15" fill="rgb(211,112,47)"/><text x="633.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.26%)</title><rect x="630" y="516" width="3" height="15" fill="rgb(223,18,2)"/><text x="633.00" y="526.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="633" y="436" width="3" height="15" fill="rgb(249,96,54)"/><text x="636.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="633" y="452" width="3" height="15" fill="rgb(241,36,20)"/><text x="636.00" y="462.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (163 samples, 42.01%)</title><rect x="143" y="164" width="496" height="15" fill="rgb(234,140,41)"/><text x="146.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (160 samples, 41.24%)</title><rect x="152" y="180" width="487" height="15" fill="rgb(238,25,44)"/><text x="155.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (143 samples, 36.86%)</title><rect x="204" y="196" width="435" height="15" fill="rgb(228,105,24)"/><text x="207.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (83 samples, 21.39%)</title><rect x="387" y="212" width="252" height="15" fill="rgb(211,44,24)"/><text x="390.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (68 samples, 17.53%)</title><rect x="432" y="228" width="207" height="15" fill="rgb(254,75,37)"/><text x="435.00" y="238.50">_run (mlprodict/onnxrt/ops_..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (66 samples, 17.01%)</title><rect x="438" y="244" width="201" height="15" fill="rgb(228,9,51)"/><text x="441.00" y="254.50">pybind11::cpp_function::di..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (66 samples, 17.01%)</title><rect x="438" y="260" width="201" height="15" fill="rgb(221,53,25)"/><text x="441.00" y="270.50">void pybind11::cpp_functio..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (66 samples, 17.01%)</title><rect x="438" y="276" width="201" height="15" fill="rgb(213,61,16)"/><text x="441.00" y="286.50">void pybind11::cpp_functio..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (2 samples, 0.52%)</title><rect x="633" y="292" width="6" height="15" fill="rgb(243,45,38)"/><text x="636.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (2 samples, 0.52%)</title><rect x="633" y="308" width="6" height="15" fill="rgb(239,121,4)"/><text x="636.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (2 samples, 0.52%)</title><rect x="633" y="324" width="6" height="15" fill="rgb(209,212,44)"/><text x="636.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h) (2 samples, 0.52%)</title><rect x="633" y="340" width="6" height="15" fill="rgb(228,177,10)"/><text x="636.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h) (2 samples, 0.52%)</title><rect x="633" y="356" width="6" height="15" fill="rgb(209,108,2)"/><text x="636.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h) (2 samples, 0.52%)</title><rect x="633" y="372" width="6" height="15" fill="rgb(227,11,21)"/><text x="636.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h) (2 samples, 0.52%)</title><rect x="633" y="388" width="6" height="15" fill="rgb(209,79,29)"/><text x="636.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (2 samples, 0.52%)</title><rect x="633" y="404" width="6" height="15" fill="rgb(220,183,6)"/><text x="636.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.52%)</title><rect x="633" y="420" width="6" height="15" fill="rgb(235,182,42)"/><text x="636.00" y="430.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.26%)</title><rect x="636" y="436" width="3" height="15" fill="rgb(238,48,16)"/><text x="639.00" y="446.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.26%)</title><rect x="636" y="452" width="3" height="15" fill="rgb(215,46,45)"/><text x="639.00" y="462.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (166 samples, 42.78%)</title><rect x="137" y="132" width="505" height="15" fill="rgb(205,123,28)"/><text x="140.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (165 samples, 42.53%)</title><rect x="140" y="148" width="502" height="15" fill="rgb(233,219,27)"/><text x="143.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="639" y="164" width="3" height="15" fill="rgb(210,86,54)"/><text x="642.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="639" y="180" width="3" height="15" fill="rgb(244,31,22)"/><text x="642.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.26%)</title><rect x="642" y="132" width="3" height="15" fill="rgb(241,190,8)"/><text x="645.00" y="142.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (168 samples, 43.30%)</title><rect x="137" y="68" width="511" height="15" fill="rgb(234,96,10)"/><text x="140.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (168 samples, 43.30%)</title><rect x="137" y="84" width="511" height="15" fill="rgb(211,187,27)"/><text x="140.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (168 samples, 43.30%)</title><rect x="137" y="100" width="511" height="15" fill="rgb(210,8,38)"/><text x="140.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (168 samples, 43.30%)</title><rect x="137" y="116" width="511" height="15" fill="rgb(251,219,50)"/><text x="140.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="645" y="132" width="3" height="15" fill="rgb(230,121,8)"/><text x="648.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="666" y="196" width="3" height="15" fill="rgb(245,116,25)"/><text x="669.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="666" y="212" width="3" height="15" fill="rgb(208,114,15)"/><text x="669.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="666" y="228" width="3" height="15" fill="rgb(247,127,16)"/><text x="669.00" y="238.50"></text></g><g><title>0x7fdba30b5d2e (?) (1 samples, 0.26%)</title><rect x="691" y="212" width="3" height="15" fill="rgb(241,178,46)"/><text x="694.00" y="222.50"></text></g><g><title>0x7fdba30b513a (?) (1 samples, 0.26%)</title><rect x="691" y="228" width="3" height="15" fill="rgb(235,200,18)"/><text x="694.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="691" y="244" width="3" height="15" fill="rgb(233,67,33)"/><text x="694.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="691" y="260" width="3" height="15" fill="rgb(245,67,8)"/><text x="694.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="691" y="276" width="3" height="15" fill="rgb(213,6,8)"/><text x="694.00" y="286.50"></text></g><g><title>0x7fdba30b4f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="694" y="228" width="3" height="15" fill="rgb(206,51,13)"/><text x="697.00" y="238.50"></text></g><g><title>0x7fdba30a4d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="694" y="244" width="3" height="15" fill="rgb(205,73,1)"/><text x="697.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.26%)</title><rect x="694" y="260" width="3" height="15" fill="rgb(218,142,22)"/><text x="697.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="694" y="276" width="3" height="15" fill="rgb(207,85,47)"/><text x="697.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="694" y="292" width="3" height="15" fill="rgb(243,31,7)"/><text x="697.00" y="302.50"></text></g><g><title>0x7fdba30b4f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="697" y="228" width="3" height="15" fill="rgb(237,171,32)"/><text x="700.00" y="238.50"></text></g><g><title>0x7fdba30c3225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="700" y="260" width="3" height="15" fill="rgb(236,88,47)"/><text x="703.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.26%)</title><rect x="700" y="276" width="3" height="15" fill="rgb(223,139,25)"/><text x="703.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.26%)</title><rect x="700" y="292" width="3" height="15" fill="rgb(218,94,9)"/><text x="703.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.26%)</title><rect x="700" y="308" width="3" height="15" fill="rgb(209,19,25)"/><text x="703.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="700" y="324" width="3" height="15" fill="rgb(206,67,2)"/><text x="703.00" y="334.50"></text></g><g><title>0x7fdba30c32df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="703" y="260" width="3" height="15" fill="rgb(228,2,54)"/><text x="706.00" y="270.50"></text></g><g><title>0x7fdba30a7d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="703" y="276" width="3" height="15" fill="rgb(213,55,20)"/><text x="706.00" y="286.50"></text></g><g><title>0x7fdba30a7666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="703" y="292" width="3" height="15" fill="rgb(243,127,3)"/><text x="706.00" y="302.50"></text></g><g><title>0x7fdba309d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="703" y="308" width="3" height="15" fill="rgb(221,125,5)"/><text x="706.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.26%)</title><rect x="703" y="324" width="3" height="15" fill="rgb(219,193,26)"/><text x="706.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.26%)</title><rect x="703" y="340" width="3" height="15" fill="rgb(253,209,40)"/><text x="706.00" y="350.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.26%)</title><rect x="703" y="356" width="3" height="15" fill="rgb(222,210,24)"/><text x="706.00" y="366.50"></text></g><g><title>0x7fdba30c3456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="706" y="260" width="3" height="15" fill="rgb(248,49,42)"/><text x="709.00" y="270.50"></text></g><g><title>0x7fdba30c3511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="709" y="260" width="3" height="15" fill="rgb(247,118,52)"/><text x="712.00" y="270.50"></text></g><g><title>0x7fdbc974fd24 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="709" y="276" width="3" height="15" fill="rgb(253,80,32)"/><text x="712.00" y="286.50"></text></g><g><title>0x7fdba30c353e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="712" y="260" width="3" height="15" fill="rgb(243,55,1)"/><text x="715.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="718" y="292" width="3" height="15" fill="rgb(239,155,51)"/><text x="721.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="718" y="308" width="3" height="15" fill="rgb(244,56,29)"/><text x="721.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="718" y="324" width="3" height="15" fill="rgb(221,68,9)"/><text x="721.00" y="334.50"></text></g><g><title>0x7fdba30c3592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.77%)</title><rect x="715" y="260" width="9" height="15" fill="rgb(244,90,15)"/><text x="718.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.52%)</title><rect x="718" y="276" width="6" height="15" fill="rgb(233,50,14)"/><text x="721.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.26%)</title><rect x="721" y="292" width="3" height="15" fill="rgb(233,123,19)"/><text x="724.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.26%)</title><rect x="721" y="308" width="3" height="15" fill="rgb(251,202,1)"/><text x="724.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="721" y="324" width="3" height="15" fill="rgb(215,155,9)"/><text x="724.00" y="334.50"></text></g><g><title>0x7fdbc9691dbb (libc-2.29.so) (1 samples, 0.26%)</title><rect x="721" y="340" width="3" height="15" fill="rgb(229,204,19)"/><text x="724.00" y="350.50"></text></g><g><title>0x7fdba30c3698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="724" y="260" width="3" height="15" fill="rgb(225,155,16)"/><text x="727.00" y="270.50"></text></g><g><title>0x7fdba30c36fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="727" y="260" width="3" height="15" fill="rgb(205,21,0)"/><text x="730.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="727" y="276" width="3" height="15" fill="rgb(247,103,11)"/><text x="730.00" y="286.50"></text></g><g><title>0x7fdba30b4fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.84%)</title><rect x="700" y="228" width="33" height="15" fill="rgb(254,72,25)"/><text x="703.00" y="238.50">0x..</text></g><g><title>0x7fdba30c4405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.84%)</title><rect x="700" y="244" width="33" height="15" fill="rgb(239,18,43)"/><text x="703.00" y="254.50">0x..</text></g><g><title>0x7fdba30c392f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="730" y="260" width="3" height="15" fill="rgb(207,103,0)"/><text x="733.00" y="270.50"></text></g><g><title>0x7fdba3098881 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="730" y="276" width="3" height="15" fill="rgb(226,33,36)"/><text x="733.00" y="286.50"></text></g><g><title>0x7fdbc9687786 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="733" y="260" width="3" height="15" fill="rgb(225,62,21)"/><text x="736.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="736" y="260" width="3" height="15" fill="rgb(239,217,7)"/><text x="739.00" y="270.50"></text></g><g><title>0x7fdba30b505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.03%)</title><rect x="733" y="228" width="12" height="15" fill="rgb(214,56,37)"/><text x="736.00" y="238.50"></text></g><g><title>array_take (methods.c) (4 samples, 1.03%)</title><rect x="733" y="244" width="12" height="15" fill="rgb(233,166,31)"/><text x="736.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.52%)</title><rect x="739" y="260" width="6" height="15" fill="rgb(213,69,14)"/><text x="742.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.52%)</title><rect x="739" y="276" width="6" height="15" fill="rgb(216,30,45)"/><text x="742.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="742" y="292" width="3" height="15" fill="rgb(234,164,50)"/><text x="745.00" y="302.50"></text></g><g><title>0x7fdba30b513a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.77%)</title><rect x="745" y="228" width="10" height="15" fill="rgb(245,107,42)"/><text x="748.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.52%)</title><rect x="749" y="244" width="6" height="15" fill="rgb(228,2,32)"/><text x="752.00" y="254.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="752" y="260" width="3" height="15" fill="rgb(233,137,37)"/><text x="755.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.26%)</title><rect x="752" y="276" width="3" height="15" fill="rgb(248,37,51)"/><text x="755.00" y="286.50"></text></g><g><title>0x7fdba30b514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="755" y="228" width="3" height="15" fill="rgb(206,31,21)"/><text x="758.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="755" y="244" width="3" height="15" fill="rgb(253,106,48)"/><text x="758.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="755" y="260" width="3" height="15" fill="rgb(231,138,4)"/><text x="758.00" y="270.50"></text></g><g><title>0x7fdba30b5d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (22 samples, 5.67%)</title><rect x="694" y="212" width="67" height="15" fill="rgb(239,109,5)"/><text x="697.00" y="222.50">0x7fdba..</text></g><g><title>0x7fdba30b5328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="758" y="228" width="3" height="15" fill="rgb(221,54,54)"/><text x="761.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.26%)</title><rect x="758" y="244" width="3" height="15" fill="rgb(230,133,6)"/><text x="761.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.26%)</title><rect x="758" y="260" width="3" height="15" fill="rgb(244,148,35)"/><text x="761.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.26%)</title><rect x="758" y="276" width="3" height="15" fill="rgb(251,131,52)"/><text x="761.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="758" y="292" width="3" height="15" fill="rgb(207,92,9)"/><text x="761.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.26%)</title><rect x="758" y="308" width="3" height="15" fill="rgb(242,85,39)"/><text x="761.00" y="318.50"></text></g><g><title>__exit__ (warnings.py) (6 samples, 1.55%)</title><rect x="797" y="244" width="18" height="15" fill="rgb(236,119,18)"/><text x="800.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.52%)</title><rect x="815" y="244" width="7" height="15" fill="rgb(233,222,26)"/><text x="818.00" y="254.50"></text></g><g><title>0x7fdbc974f130 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="843" y="260" width="3" height="15" fill="rgb(234,167,42)"/><text x="846.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="846" y="260" width="9" height="15" fill="rgb(233,22,2)"/><text x="849.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.26%)</title><rect x="855" y="260" width="3" height="15" fill="rgb(219,24,9)"/><text x="858.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (15 samples, 3.87%)</title><rect x="822" y="244" width="45" height="15" fill="rgb(237,29,24)"/><text x="825.00" y="254.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.77%)</title><rect x="858" y="260" width="9" height="15" fill="rgb(241,133,13)"/><text x="861.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="895" y="260" width="3" height="15" fill="rgb(215,207,34)"/><text x="898.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 3.09%)</title><rect x="867" y="244" width="37" height="15" fill="rgb(213,60,27)"/><text x="870.00" y="254.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.52%)</title><rect x="898" y="260" width="6" height="15" fill="rgb(208,190,36)"/><text x="901.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.26%)</title><rect x="904" y="244" width="3" height="15" fill="rgb(248,58,26)"/><text x="907.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.26%)</title><rect x="907" y="244" width="3" height="15" fill="rgb(216,21,4)"/><text x="910.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="907" y="260" width="3" height="15" fill="rgb(236,121,18)"/><text x="910.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.26%)</title><rect x="907" y="276" width="3" height="15" fill="rgb(230,128,19)"/><text x="910.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.26%)</title><rect x="907" y="292" width="3" height="15" fill="rgb(254,51,4)"/><text x="910.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.26%)</title><rect x="907" y="308" width="3" height="15" fill="rgb(230,24,18)"/><text x="910.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.26%)</title><rect x="907" y="324" width="3" height="15" fill="rgb(237,139,1)"/><text x="910.00" y="334.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.26%)</title><rect x="910" y="244" width="3" height="15" fill="rgb(248,92,51)"/><text x="913.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (54 samples, 13.92%)</title><rect x="761" y="212" width="164" height="15" fill="rgb(232,31,7)"/><text x="764.00" y="222.50">_validate_X_predict (..</text></g><g><title>check_array (sklearn/utils/validation.py) (53 samples, 13.66%)</title><rect x="764" y="228" width="161" height="15" fill="rgb(218,64,20)"/><text x="767.00" y="238.50">check_array (sklearn..</text></g><g><title>simplefilter (warnings.py) (4 samples, 1.03%)</title><rect x="913" y="244" width="12" height="15" fill="rgb(213,138,47)"/><text x="916.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 1.03%)</title><rect x="913" y="260" width="12" height="15" fill="rgb(228,143,13)"/><text x="916.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 1.03%)</title><rect x="925" y="212" width="12" height="15" fill="rgb(227,119,5)"/><text x="928.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.52%)</title><rect x="931" y="228" width="6" height="15" fill="rgb(232,153,12)"/><text x="934.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.26%)</title><rect x="934" y="244" width="3" height="15" fill="rgb(234,168,42)"/><text x="937.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="934" y="260" width="3" height="15" fill="rgb(215,90,4)"/><text x="937.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="934" y="276" width="3" height="15" fill="rgb(221,96,20)"/><text x="937.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (100 samples, 25.77%)</title><rect x="660" y="180" width="304" height="15" fill="rgb(246,127,54)"/><text x="663.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boo..</text></g><g><title>predict (sklearn/tree/_classes.py) (97 samples, 25.00%)</title><rect x="669" y="196" width="295" height="15" fill="rgb(225,227,49)"/><text x="672.00" y="206.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 2.32%)</title><rect x="937" y="212" width="27" height="15" fill="rgb(209,22,31)"/><text x="940.00" y="222.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 1.55%)</title><rect x="946" y="228" width="18" height="15" fill="rgb(218,1,39)"/><text x="949.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.03%)</title><rect x="952" y="244" width="12" height="15" fill="rgb(214,132,46)"/><text x="955.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="964" y="260" width="3" height="15" fill="rgb(227,94,18)"/><text x="967.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="964" y="276" width="3" height="15" fill="rgb(251,117,46)"/><text x="967.00" y="286.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (2 samples, 0.52%)</title><rect x="964" y="228" width="7" height="15" fill="rgb(222,85,43)"/><text x="967.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.52%)</title><rect x="964" y="244" width="7" height="15" fill="rgb(207,123,7)"/><text x="967.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.26%)</title><rect x="967" y="260" width="4" height="15" fill="rgb(254,188,25)"/><text x="970.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.26%)</title><rect x="967" y="276" width="4" height="15" fill="rgb(206,11,6)"/><text x="970.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.77%)</title><rect x="964" y="180" width="10" height="15" fill="rgb(224,49,22)"/><text x="967.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.77%)</title><rect x="964" y="196" width="10" height="15" fill="rgb(214,152,9)"/><text x="967.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.77%)</title><rect x="964" y="212" width="10" height="15" fill="rgb(246,80,3)"/><text x="967.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.26%)</title><rect x="971" y="228" width="3" height="15" fill="rgb(232,34,22)"/><text x="974.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 1.03%)</title><rect x="974" y="180" width="12" height="15" fill="rgb(209,116,15)"/><text x="977.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.77%)</title><rect x="977" y="196" width="9" height="15" fill="rgb(233,98,26)"/><text x="980.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.26%)</title><rect x="983" y="212" width="3" height="15" fill="rgb(253,173,19)"/><text x="986.00" y="222.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="986" y="180" width="3" height="15" fill="rgb(244,67,8)"/><text x="989.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (1 samples, 0.26%)</title><rect x="986" y="196" width="3" height="15" fill="rgb(212,172,23)"/><text x="989.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="986" y="212" width="3" height="15" fill="rgb(238,8,54)"/><text x="989.00" y="222.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="986" y="228" width="3" height="15" fill="rgb(219,26,48)"/><text x="989.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="986" y="244" width="3" height="15" fill="rgb(222,176,20)"/><text x="989.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.52%)</title><rect x="989" y="180" width="6" height="15" fill="rgb(238,27,2)"/><text x="992.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="992" y="196" width="3" height="15" fill="rgb(253,153,34)"/><text x="995.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="992" y="212" width="3" height="15" fill="rgb(211,39,53)"/><text x="995.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="995" y="212" width="3" height="15" fill="rgb(253,94,47)"/><text x="998.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="995" y="228" width="3" height="15" fill="rgb(216,191,1)"/><text x="998.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="995" y="244" width="3" height="15" fill="rgb(254,163,45)"/><text x="998.00" y="254.50"></text></g><g><title>array_multiply (number.c) (2 samples, 0.52%)</title><rect x="995" y="180" width="6" height="15" fill="rgb(252,115,11)"/><text x="998.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.52%)</title><rect x="995" y="196" width="6" height="15" fill="rgb(244,163,19)"/><text x="998.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="998" y="212" width="3" height="15" fill="rgb(213,186,26)"/><text x="1001.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1004" y="260" width="3" height="15" fill="rgb(247,175,32)"/><text x="1007.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1004" y="276" width="3" height="15" fill="rgb(241,36,20)"/><text x="1007.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1004" y="292" width="3" height="15" fill="rgb(246,177,52)"/><text x="1007.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1007" y="260" width="3" height="15" fill="rgb(230,105,50)"/><text x="1010.00" y="270.50"></text></g><g><title>array_richcompare (arrayobject.c) (4 samples, 1.03%)</title><rect x="1001" y="180" width="12" height="15" fill="rgb(222,68,39)"/><text x="1004.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.03%)</title><rect x="1001" y="196" width="12" height="15" fill="rgb(215,162,32)"/><text x="1004.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.77%)</title><rect x="1004" y="212" width="9" height="15" fill="rgb(215,133,15)"/><text x="1007.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.77%)</title><rect x="1004" y="228" width="9" height="15" fill="rgb(249,110,9)"/><text x="1007.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.77%)</title><rect x="1004" y="244" width="9" height="15" fill="rgb(211,141,10)"/><text x="1007.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.26%)</title><rect x="1010" y="260" width="3" height="15" fill="rgb(242,187,40)"/><text x="1013.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.26%)</title><rect x="1010" y="276" width="3" height="15" fill="rgb(236,116,8)"/><text x="1013.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1013" y="212" width="3" height="15" fill="rgb(210,16,40)"/><text x="1016.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1013" y="228" width="3" height="15" fill="rgb(230,222,29)"/><text x="1016.00" y="238.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1013" y="244" width="3" height="15" fill="rgb(244,68,5)"/><text x="1016.00" y="254.50"></text></g><g><title>0x7fdbc9672b12 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1016" y="228" width="3" height="15" fill="rgb(219,12,21)"/><text x="1019.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.52%)</title><rect x="1016" y="212" width="6" height="15" fill="rgb(225,11,49)"/><text x="1019.00" y="222.50"></text></g><g><title>0x7fdbc96732f0 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1019" y="228" width="3" height="15" fill="rgb(235,54,33)"/><text x="1022.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (4 samples, 1.03%)</title><rect x="1013" y="196" width="12" height="15" fill="rgb(206,63,2)"/><text x="1016.00" y="206.50"></text></g><g><title>mapiter_fill_info (mapping.c) (1 samples, 0.26%)</title><rect x="1022" y="212" width="3" height="15" fill="rgb(253,217,24)"/><text x="1025.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.26%)</title><rect x="1025" y="196" width="3" height="15" fill="rgb(239,95,11)"/><text x="1028.00" y="206.50"></text></g><g><title>array_subscript (mapping.c) (6 samples, 1.55%)</title><rect x="1013" y="180" width="18" height="15" fill="rgb(244,179,52)"/><text x="1016.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.26%)</title><rect x="1028" y="196" width="3" height="15" fill="rgb(228,141,4)"/><text x="1031.00" y="206.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (2 samples, 0.52%)</title><rect x="1031" y="196" width="6" height="15" fill="rgb(236,172,47)"/><text x="1034.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.26%)</title><rect x="1034" y="212" width="3" height="15" fill="rgb(231,154,25)"/><text x="1037.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (1 samples, 0.26%)</title><rect x="1034" y="228" width="3" height="15" fill="rgb(208,160,30)"/><text x="1037.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.26%)</title><rect x="1034" y="244" width="3" height="15" fill="rgb(214,173,2)"/><text x="1037.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1034" y="260" width="3" height="15" fill="rgb(253,213,40)"/><text x="1037.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1034" y="276" width="3" height="15" fill="rgb(209,48,42)"/><text x="1037.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1034" y="292" width="3" height="15" fill="rgb(233,46,47)"/><text x="1037.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.26%)</title><rect x="1034" y="308" width="3" height="15" fill="rgb(225,164,13)"/><text x="1037.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1034" y="324" width="3" height="15" fill="rgb(206,11,15)"/><text x="1037.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1034" y="340" width="3" height="15" fill="rgb(253,109,51)"/><text x="1037.00" y="350.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.52%)</title><rect x="1037" y="196" width="7" height="15" fill="rgb(230,49,44)"/><text x="1040.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.52%)</title><rect x="1037" y="212" width="7" height="15" fill="rgb(238,56,23)"/><text x="1040.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.52%)</title><rect x="1037" y="228" width="7" height="15" fill="rgb(254,50,50)"/><text x="1040.00" y="238.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.26%)</title><rect x="1040" y="244" width="4" height="15" fill="rgb(253,159,19)"/><text x="1043.00" y="254.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="1040" y="260" width="4" height="15" fill="rgb(250,180,53)"/><text x="1043.00" y="270.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="1040" y="276" width="4" height="15" fill="rgb(216,130,37)"/><text x="1043.00" y="286.50"></text></g><g><title>0x7fdbc975074e (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1044" y="244" width="3" height="15" fill="rgb(247,165,51)"/><text x="1047.00" y="254.50"></text></g><g><title>_get_keywords (number.c) (1 samples, 0.26%)</title><rect x="1047" y="308" width="3" height="15" fill="rgb(236,8,9)"/><text x="1050.00" y="318.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 0.77%)</title><rect x="1044" y="196" width="9" height="15" fill="rgb(212,122,4)"/><text x="1047.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.77%)</title><rect x="1044" y="212" width="9" height="15" fill="rgb(250,229,37)"/><text x="1047.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (3 samples, 0.77%)</title><rect x="1044" y="228" width="9" height="15" fill="rgb(237,6,44)"/><text x="1047.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.52%)</title><rect x="1047" y="244" width="6" height="15" fill="rgb(253,8,31)"/><text x="1050.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (2 samples, 0.52%)</title><rect x="1047" y="260" width="6" height="15" fill="rgb(252,10,51)"/><text x="1050.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (2 samples, 0.52%)</title><rect x="1047" y="276" width="6" height="15" fill="rgb(213,112,7)"/><text x="1050.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (2 samples, 0.52%)</title><rect x="1047" y="292" width="6" height="15" fill="rgb(248,208,47)"/><text x="1050.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1050" y="308" width="3" height="15" fill="rgb(251,139,18)"/><text x="1053.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1050" y="324" width="3" height="15" fill="rgb(215,12,24)"/><text x="1053.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1050" y="340" width="3" height="15" fill="rgb(253,12,30)"/><text x="1053.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1050" y="356" width="3" height="15" fill="rgb(240,32,46)"/><text x="1053.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1062" y="372" width="3" height="15" fill="rgb(228,216,52)"/><text x="1065.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1062" y="388" width="3" height="15" fill="rgb(225,217,3)"/><text x="1065.00" y="398.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (4 samples, 1.03%)</title><rect x="1056" y="244" width="12" height="15" fill="rgb(230,67,25)"/><text x="1059.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.03%)</title><rect x="1056" y="260" width="12" height="15" fill="rgb(231,150,8)"/><text x="1059.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (4 samples, 1.03%)</title><rect x="1056" y="276" width="12" height="15" fill="rgb(229,138,42)"/><text x="1059.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 0.77%)</title><rect x="1059" y="292" width="9" height="15" fill="rgb(215,51,36)"/><text x="1062.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.52%)</title><rect x="1062" y="308" width="6" height="15" fill="rgb(215,113,54)"/><text x="1065.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.52%)</title><rect x="1062" y="324" width="6" height="15" fill="rgb(251,191,54)"/><text x="1065.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.52%)</title><rect x="1062" y="340" width="6" height="15" fill="rgb(237,76,35)"/><text x="1065.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.52%)</title><rect x="1062" y="356" width="6" height="15" fill="rgb(245,81,40)"/><text x="1065.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.26%)</title><rect x="1065" y="372" width="3" height="15" fill="rgb(215,191,31)"/><text x="1068.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.26%)</title><rect x="1065" y="388" width="3" height="15" fill="rgb(238,180,21)"/><text x="1068.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.26%)</title><rect x="1065" y="404" width="3" height="15" fill="rgb(244,222,45)"/><text x="1068.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.26%)</title><rect x="1065" y="420" width="3" height="15" fill="rgb(251,198,38)"/><text x="1068.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1068" y="276" width="3" height="15" fill="rgb(238,83,54)"/><text x="1071.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1068" y="292" width="3" height="15" fill="rgb(217,123,10)"/><text x="1071.00" y="302.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src) (1 samples, 0.26%)</title><rect x="1068" y="308" width="3" height="15" fill="rgb(228,58,6)"/><text x="1071.00" y="318.50"></text></g><g><title>run_isfinite_simd_DOUBLE (simd.inc.src) (1 samples, 0.26%)</title><rect x="1068" y="324" width="3" height="15" fill="rgb(212,131,36)"/><text x="1071.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.03%)</title><rect x="1068" y="244" width="12" height="15" fill="rgb(241,21,53)"/><text x="1071.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.03%)</title><rect x="1068" y="260" width="12" height="15" fill="rgb(246,126,32)"/><text x="1071.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.77%)</title><rect x="1071" y="276" width="9" height="15" fill="rgb(236,172,45)"/><text x="1074.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.52%)</title><rect x="1074" y="292" width="6" height="15" fill="rgb(216,151,26)"/><text x="1077.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1077" y="308" width="3" height="15" fill="rgb(205,155,24)"/><text x="1080.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1077" y="324" width="3" height="15" fill="rgb(205,80,10)"/><text x="1080.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1077" y="340" width="3" height="15" fill="rgb(254,182,12)"/><text x="1080.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1077" y="356" width="3" height="15" fill="rgb(238,187,0)"/><text x="1080.00" y="366.50"></text></g><g><title>ufunc_geterr (ufunc_object.c) (2 samples, 0.52%)</title><rect x="1089" y="292" width="6" height="15" fill="rgb(218,6,39)"/><text x="1092.00" y="302.50"></text></g><g><title>0x7fdbc88950d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1095" y="308" width="3" height="15" fill="rgb(239,150,35)"/><text x="1098.00" y="318.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (6 samples, 1.55%)</title><rect x="1083" y="260" width="18" height="15" fill="rgb(241,117,19)"/><text x="1086.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (5 samples, 1.29%)</title><rect x="1086" y="276" width="15" height="15" fill="rgb(250,64,44)"/><text x="1089.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (2 samples, 0.52%)</title><rect x="1095" y="292" width="6" height="15" fill="rgb(219,27,6)"/><text x="1098.00" y="302.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c) (1 samples, 0.26%)</title><rect x="1098" y="308" width="3" height="15" fill="rgb(248,178,10)"/><text x="1101.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c) (1 samples, 0.26%)</title><rect x="1098" y="324" width="3" height="15" fill="rgb(209,95,4)"/><text x="1101.00" y="334.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (1 samples, 0.26%)</title><rect x="1101" y="260" width="3" height="15" fill="rgb(208,188,46)"/><text x="1104.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.26%)</title><rect x="1101" y="276" width="3" height="15" fill="rgb(252,38,20)"/><text x="1104.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.26%)</title><rect x="1101" y="292" width="3" height="15" fill="rgb(234,83,32)"/><text x="1104.00" y="302.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py) (1 samples, 0.26%)</title><rect x="1104" y="260" width="3" height="15" fill="rgb(246,56,13)"/><text x="1107.00" y="270.50"></text></g><g><title>array_add (number.c) (1 samples, 0.26%)</title><rect x="1107" y="260" width="3" height="15" fill="rgb(251,211,45)"/><text x="1110.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1107" y="276" width="3" height="15" fill="rgb(253,0,2)"/><text x="1110.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1107" y="292" width="3" height="15" fill="rgb(226,73,43)"/><text x="1110.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1107" y="308" width="3" height="15" fill="rgb(239,109,47)"/><text x="1110.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1107" y="324" width="3" height="15" fill="rgb(242,196,25)"/><text x="1110.00" y="334.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.26%)</title><rect x="1110" y="308" width="3" height="15" fill="rgb(218,118,45)"/><text x="1113.00" y="318.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.26%)</title><rect x="1110" y="324" width="3" height="15" fill="rgb(208,209,27)"/><text x="1113.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1113" y="308" width="4" height="15" fill="rgb(207,131,3)"/><text x="1116.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1113" y="324" width="4" height="15" fill="rgb(213,188,24)"/><text x="1116.00" y="334.50"></text></g><g><title>array_subtract (number.c) (3 samples, 0.77%)</title><rect x="1110" y="260" width="10" height="15" fill="rgb(206,33,52)"/><text x="1113.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.77%)</title><rect x="1110" y="276" width="10" height="15" fill="rgb(246,165,7)"/><text x="1113.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.77%)</title><rect x="1110" y="292" width="10" height="15" fill="rgb(229,60,1)"/><text x="1113.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1117" y="308" width="3" height="15" fill="rgb(235,119,3)"/><text x="1120.00" y="318.50"></text></g><g><title>0x7fdbc9692120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1117" y="324" width="3" height="15" fill="rgb(210,171,37)"/><text x="1120.00" y="334.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (23 samples, 5.93%)</title><rect x="1053" y="196" width="70" height="15" fill="rgb(249,32,7)"/><text x="1056.00" y="206.50">isclose..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (23 samples, 5.93%)</title><rect x="1053" y="212" width="70" height="15" fill="rgb(236,178,32)"/><text x="1056.00" y="222.50">array_i..</text></g><g><title>isclose (numpy/core/numeric.py) (23 samples, 5.93%)</title><rect x="1053" y="228" width="70" height="15" fill="rgb(243,124,32)"/><text x="1056.00" y="238.50">isclose..</text></g><g><title>within_tol (numpy/core/numeric.py) (14 samples, 3.61%)</title><rect x="1080" y="244" width="43" height="15" fill="rgb(243,66,49)"/><text x="1083.00" y="254.50">with..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1120" y="260" width="3" height="15" fill="rgb(213,144,32)"/><text x="1123.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1120" y="276" width="3" height="15" fill="rgb(221,187,24)"/><text x="1123.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1120" y="292" width="3" height="15" fill="rgb(245,11,13)"/><text x="1123.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1120" y="308" width="3" height="15" fill="rgb(236,215,11)"/><text x="1123.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.26%)</title><rect x="1129" y="276" width="3" height="15" fill="rgb(252,154,38)"/><text x="1132.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.26%)</title><rect x="1129" y="292" width="3" height="15" fill="rgb(253,202,28)"/><text x="1132.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.26%)</title><rect x="1129" y="308" width="3" height="15" fill="rgb(212,199,28)"/><text x="1132.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1132" y="324" width="3" height="15" fill="rgb(232,98,34)"/><text x="1135.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1132" y="340" width="3" height="15" fill="rgb(242,218,52)"/><text x="1135.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.26%)</title><rect x="1135" y="324" width="3" height="15" fill="rgb(250,72,9)"/><text x="1138.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.26%)</title><rect x="1135" y="340" width="3" height="15" fill="rgb(219,16,36)"/><text x="1138.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1135" y="356" width="3" height="15" fill="rgb(223,34,23)"/><text x="1138.00" y="366.50"></text></g><g><title>0x7fdbc9629a19 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1135" y="372" width="3" height="15" fill="rgb(236,136,35)"/><text x="1138.00" y="382.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.26%)</title><rect x="1135" y="388" width="3" height="15" fill="rgb(243,50,50)"/><text x="1138.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.77%)</title><rect x="1132" y="308" width="9" height="15" fill="rgb(244,216,2)"/><text x="1135.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.26%)</title><rect x="1138" y="324" width="3" height="15" fill="rgb(245,107,11)"/><text x="1141.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.26%)</title><rect x="1138" y="340" width="3" height="15" fill="rgb(230,16,51)"/><text x="1141.00" y="350.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1138" y="356" width="3" height="15" fill="rgb(212,51,46)"/><text x="1141.00" y="366.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (160 samples, 41.24%)</title><rect x="657" y="164" width="487" height="15" fill="rgb(206,158,31)"/><text x="660.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (37 samples, 9.54%)</title><rect x="1031" y="180" width="113" height="15" fill="rgb(235,19,53)"/><text x="1034.00" y="190.50">stable_cumsum..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (7 samples, 1.80%)</title><rect x="1123" y="196" width="21" height="15" fill="rgb(250,53,22)"/><text x="1126.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.80%)</title><rect x="1123" y="212" width="21" height="15" fill="rgb(215,93,34)"/><text x="1126.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (7 samples, 1.80%)</title><rect x="1123" y="228" width="21" height="15" fill="rgb(205,143,28)"/><text x="1126.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (6 samples, 1.55%)</title><rect x="1126" y="244" width="18" height="15" fill="rgb(250,222,23)"/><text x="1129.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 1.29%)</title><rect x="1129" y="260" width="15" height="15" fill="rgb(239,79,33)"/><text x="1132.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.03%)</title><rect x="1132" y="276" width="12" height="15" fill="rgb(206,96,49)"/><text x="1135.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 1.03%)</title><rect x="1132" y="292" width="12" height="15" fill="rgb(247,162,50)"/><text x="1135.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1141" y="308" width="3" height="15" fill="rgb(245,60,49)"/><text x="1144.00" y="318.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.26%)</title><rect x="1159" y="196" width="3" height="15" fill="rgb(250,27,26)"/><text x="1162.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.77%)</title><rect x="1162" y="196" width="9" height="15" fill="rgb(210,66,14)"/><text x="1165.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="1168" y="212" width="3" height="15" fill="rgb(250,31,25)"/><text x="1171.00" y="222.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (12 samples, 3.09%)</title><rect x="1144" y="164" width="36" height="15" fill="rgb(236,38,37)"/><text x="1147.00" y="174.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py) (12 samples, 3.09%)</title><rect x="1144" y="180" width="36" height="15" fill="rgb(213,212,16)"/><text x="1147.00" y="190.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.77%)</title><rect x="1171" y="196" width="9" height="15" fill="rgb(243,158,36)"/><text x="1174.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (176 samples, 45.36%)</title><rect x="651" y="132" width="535" height="15" fill="rgb(254,100,21)"/><text x="654.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (176 samples, 45.36%)</title><rect x="651" y="148" width="535" height="15" fill="rgb(217,181,24)"/><text x="654.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.52%)</title><rect x="1180" y="164" width="6" height="15" fill="rgb(238,46,29)"/><text x="1183.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.26%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(240,86,48)"/><text x="1186.00" y="190.50"></text></g><g><title>all (388 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(230,150,17)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (388 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,113,41)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (178 samples, 45.88%)</title><rect x="648" y="68" width="542" height="15" fill="rgb(238,91,32)"/><text x="651.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (178 samples, 45.88%)</title><rect x="648" y="84" width="542" height="15" fill="rgb(215,227,17)"/><text x="651.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py) (178 samples, 45.88%)</title><rect x="648" y="100" width="542" height="15" fill="rgb(248,65,5)"/><text x="651.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (178 samples, 45.88%)</title><rect x="648" y="116" width="542" height="15" fill="rgb(244,34,47)"/><text x="651.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(243,132,14)"/><text x="1189.00" y="142.50"></text></g><g><title>0x7fdbc974f151 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(233,224,10)"/><text x="1189.00" y="158.50"></text></g></g></svg>